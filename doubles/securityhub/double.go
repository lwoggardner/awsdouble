// Code generated by go doublegen; DO NOT EDIT.
// This file was generated at 2020-02-14T22:14:55+11:00

// Package securityhubdouble provides a TestDouble implementation of securityhubiface.SecurityHubAPI
package securityhubdouble

import (
	"context"

	"github.com/aws/aws-sdk-go/aws/awserr"
	"github.com/aws/aws-sdk-go/aws/request"
	"github.com/aws/aws-sdk-go/service/securityhub"
	"github.com/aws/aws-sdk-go/service/securityhub/securityhubiface"
	"github.com/lwoggardner/awsdouble"
	"github.com/lwoggardner/godouble/godouble"
)

// SecurityHubDouble is TestDouble for securityhubiface.SecurityHubAPI
type SecurityHubDouble struct {
	securityhubiface.SecurityHubAPI
	*awsdouble.AWSTestDouble
}

// Constructor for SecurityHubDouble
// Default configuration will ensure
//   * API operations not explicitly stubbed will return an empty output struct pointer, and nil error.
//     To simulate long polling, "Poll" operations will return these values after a random delay of up to 100ms.
//   * WithContext methods implement a 'Fake' method that returns a cancellation error if the context is cancelled
//      before the method is called.
//   * Pages and PagesWithContext methods similarly implement a 'Fake' method that paginates over the underlying method.
//
//    This allows tests to only stub the simple api methods and be generally unconcerned whether the SUT is using the
//      Context or Pagination forms of the API.
//
func NewDouble(t godouble.T, configurators ...func(*awsdouble.AWSTestDouble)) *SecurityHubDouble {
	result := &SecurityHubDouble{}

	configurators = append([]func(configurator *awsdouble.AWSTestDouble){func(d *awsdouble.AWSTestDouble) {
		d.SetDefaultCall(result.defaultMethodCall)
		d.SetDefaultReturnValues(result.defaultReturnValues)
	}}, configurators...)

	result.AWSTestDouble = awsdouble.NewDouble(t, (*securityhubiface.SecurityHubAPI)(nil), configurators...)
	return result
}

func (d *SecurityHubDouble) defaultReturnValues(m godouble.Method) godouble.ReturnValues {
	return d.DefaultReturnValues(m)
}

func (d *SecurityHubDouble) defaultMethodCall(m godouble.Method) godouble.MethodCall {
	switch m.Reflect().Name {

	case "AcceptInvitationWithContext":
		return m.Fake(d.fakeAcceptInvitationWithContext)

	case "BatchDisableStandardsWithContext":
		return m.Fake(d.fakeBatchDisableStandardsWithContext)

	case "BatchEnableStandardsWithContext":
		return m.Fake(d.fakeBatchEnableStandardsWithContext)

	case "BatchImportFindingsWithContext":
		return m.Fake(d.fakeBatchImportFindingsWithContext)

	case "CreateActionTargetWithContext":
		return m.Fake(d.fakeCreateActionTargetWithContext)

	case "CreateInsightWithContext":
		return m.Fake(d.fakeCreateInsightWithContext)

	case "CreateMembersWithContext":
		return m.Fake(d.fakeCreateMembersWithContext)

	case "DeclineInvitationsWithContext":
		return m.Fake(d.fakeDeclineInvitationsWithContext)

	case "DeleteActionTargetWithContext":
		return m.Fake(d.fakeDeleteActionTargetWithContext)

	case "DeleteInsightWithContext":
		return m.Fake(d.fakeDeleteInsightWithContext)

	case "DeleteInvitationsWithContext":
		return m.Fake(d.fakeDeleteInvitationsWithContext)

	case "DeleteMembersWithContext":
		return m.Fake(d.fakeDeleteMembersWithContext)

	case "DescribeActionTargetsPages":
		return m.Fake(d.fakeDescribeActionTargetsPages)

	case "DescribeActionTargetsPagesWithContext":
		return m.Fake(d.fakeDescribeActionTargetsPagesWithContext)

	case "DescribeActionTargetsWithContext":
		return m.Fake(d.fakeDescribeActionTargetsWithContext)

	case "DescribeHubWithContext":
		return m.Fake(d.fakeDescribeHubWithContext)

	case "DescribeProductsPages":
		return m.Fake(d.fakeDescribeProductsPages)

	case "DescribeProductsPagesWithContext":
		return m.Fake(d.fakeDescribeProductsPagesWithContext)

	case "DescribeProductsWithContext":
		return m.Fake(d.fakeDescribeProductsWithContext)

	case "DescribeStandardsControlsWithContext":
		return m.Fake(d.fakeDescribeStandardsControlsWithContext)

	case "DisableImportFindingsForProductWithContext":
		return m.Fake(d.fakeDisableImportFindingsForProductWithContext)

	case "DisableSecurityHubWithContext":
		return m.Fake(d.fakeDisableSecurityHubWithContext)

	case "DisassociateFromMasterAccountWithContext":
		return m.Fake(d.fakeDisassociateFromMasterAccountWithContext)

	case "DisassociateMembersWithContext":
		return m.Fake(d.fakeDisassociateMembersWithContext)

	case "EnableImportFindingsForProductWithContext":
		return m.Fake(d.fakeEnableImportFindingsForProductWithContext)

	case "EnableSecurityHubWithContext":
		return m.Fake(d.fakeEnableSecurityHubWithContext)

	case "GetEnabledStandardsWithContext":
		return m.Fake(d.fakeGetEnabledStandardsWithContext)

	case "GetFindingsPages":
		return m.Fake(d.fakeGetFindingsPages)

	case "GetFindingsPagesWithContext":
		return m.Fake(d.fakeGetFindingsPagesWithContext)

	case "GetFindingsWithContext":
		return m.Fake(d.fakeGetFindingsWithContext)

	case "GetInsightResultsWithContext":
		return m.Fake(d.fakeGetInsightResultsWithContext)

	case "GetInsightsPages":
		return m.Fake(d.fakeGetInsightsPages)

	case "GetInsightsPagesWithContext":
		return m.Fake(d.fakeGetInsightsPagesWithContext)

	case "GetInsightsWithContext":
		return m.Fake(d.fakeGetInsightsWithContext)

	case "GetInvitationsCountWithContext":
		return m.Fake(d.fakeGetInvitationsCountWithContext)

	case "GetMasterAccountWithContext":
		return m.Fake(d.fakeGetMasterAccountWithContext)

	case "GetMembersWithContext":
		return m.Fake(d.fakeGetMembersWithContext)

	case "InviteMembersWithContext":
		return m.Fake(d.fakeInviteMembersWithContext)

	case "ListEnabledProductsForImportPages":
		return m.Fake(d.fakeListEnabledProductsForImportPages)

	case "ListEnabledProductsForImportPagesWithContext":
		return m.Fake(d.fakeListEnabledProductsForImportPagesWithContext)

	case "ListEnabledProductsForImportWithContext":
		return m.Fake(d.fakeListEnabledProductsForImportWithContext)

	case "ListInvitationsWithContext":
		return m.Fake(d.fakeListInvitationsWithContext)

	case "ListMembersWithContext":
		return m.Fake(d.fakeListMembersWithContext)

	case "ListTagsForResourceWithContext":
		return m.Fake(d.fakeListTagsForResourceWithContext)

	case "TagResourceWithContext":
		return m.Fake(d.fakeTagResourceWithContext)

	case "UntagResourceWithContext":
		return m.Fake(d.fakeUntagResourceWithContext)

	case "UpdateActionTargetWithContext":
		return m.Fake(d.fakeUpdateActionTargetWithContext)

	case "UpdateFindingsWithContext":
		return m.Fake(d.fakeUpdateFindingsWithContext)

	case "UpdateInsightWithContext":
		return m.Fake(d.fakeUpdateInsightWithContext)

	case "UpdateStandardsControlWithContext":
		return m.Fake(d.fakeUpdateStandardsControlWithContext)

	default:
		return nil
	}
}

func (d *SecurityHubDouble) AcceptInvitation(i0 *securityhub.AcceptInvitationInput) (r0 *securityhub.AcceptInvitationOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("AcceptInvitation", i0)
	r0, _ = returns[0].(*securityhub.AcceptInvitationOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SecurityHubDouble) AcceptInvitationRequest(i0 *securityhub.AcceptInvitationInput) (r0 *request.Request, r1 *securityhub.AcceptInvitationOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("AcceptInvitationRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*securityhub.AcceptInvitationOutput)
	return
}

func (d *SecurityHubDouble) AcceptInvitationWithContext(i0 context.Context, i1 *securityhub.AcceptInvitationInput, i2 ...request.Option) (r0 *securityhub.AcceptInvitationOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("AcceptInvitationWithContext", i0, i1, i2)
	r0, _ = returns[0].(*securityhub.AcceptInvitationOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SecurityHubDouble) fakeAcceptInvitationWithContext(ctx context.Context, in *securityhub.AcceptInvitationInput, _ ...request.Option) (*securityhub.AcceptInvitationOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "AcceptInvitation cancelled", ctx.Err())
	default:
		return d.AcceptInvitation(in)
	}
}

func (d *SecurityHubDouble) BatchDisableStandards(i0 *securityhub.BatchDisableStandardsInput) (r0 *securityhub.BatchDisableStandardsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("BatchDisableStandards", i0)
	r0, _ = returns[0].(*securityhub.BatchDisableStandardsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SecurityHubDouble) BatchDisableStandardsRequest(i0 *securityhub.BatchDisableStandardsInput) (r0 *request.Request, r1 *securityhub.BatchDisableStandardsOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("BatchDisableStandardsRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*securityhub.BatchDisableStandardsOutput)
	return
}

func (d *SecurityHubDouble) BatchDisableStandardsWithContext(i0 context.Context, i1 *securityhub.BatchDisableStandardsInput, i2 ...request.Option) (r0 *securityhub.BatchDisableStandardsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("BatchDisableStandardsWithContext", i0, i1, i2)
	r0, _ = returns[0].(*securityhub.BatchDisableStandardsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SecurityHubDouble) fakeBatchDisableStandardsWithContext(ctx context.Context, in *securityhub.BatchDisableStandardsInput, _ ...request.Option) (*securityhub.BatchDisableStandardsOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "BatchDisableStandards cancelled", ctx.Err())
	default:
		return d.BatchDisableStandards(in)
	}
}

func (d *SecurityHubDouble) BatchEnableStandards(i0 *securityhub.BatchEnableStandardsInput) (r0 *securityhub.BatchEnableStandardsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("BatchEnableStandards", i0)
	r0, _ = returns[0].(*securityhub.BatchEnableStandardsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SecurityHubDouble) BatchEnableStandardsRequest(i0 *securityhub.BatchEnableStandardsInput) (r0 *request.Request, r1 *securityhub.BatchEnableStandardsOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("BatchEnableStandardsRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*securityhub.BatchEnableStandardsOutput)
	return
}

func (d *SecurityHubDouble) BatchEnableStandardsWithContext(i0 context.Context, i1 *securityhub.BatchEnableStandardsInput, i2 ...request.Option) (r0 *securityhub.BatchEnableStandardsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("BatchEnableStandardsWithContext", i0, i1, i2)
	r0, _ = returns[0].(*securityhub.BatchEnableStandardsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SecurityHubDouble) fakeBatchEnableStandardsWithContext(ctx context.Context, in *securityhub.BatchEnableStandardsInput, _ ...request.Option) (*securityhub.BatchEnableStandardsOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "BatchEnableStandards cancelled", ctx.Err())
	default:
		return d.BatchEnableStandards(in)
	}
}

func (d *SecurityHubDouble) BatchImportFindings(i0 *securityhub.BatchImportFindingsInput) (r0 *securityhub.BatchImportFindingsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("BatchImportFindings", i0)
	r0, _ = returns[0].(*securityhub.BatchImportFindingsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SecurityHubDouble) BatchImportFindingsRequest(i0 *securityhub.BatchImportFindingsInput) (r0 *request.Request, r1 *securityhub.BatchImportFindingsOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("BatchImportFindingsRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*securityhub.BatchImportFindingsOutput)
	return
}

func (d *SecurityHubDouble) BatchImportFindingsWithContext(i0 context.Context, i1 *securityhub.BatchImportFindingsInput, i2 ...request.Option) (r0 *securityhub.BatchImportFindingsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("BatchImportFindingsWithContext", i0, i1, i2)
	r0, _ = returns[0].(*securityhub.BatchImportFindingsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SecurityHubDouble) fakeBatchImportFindingsWithContext(ctx context.Context, in *securityhub.BatchImportFindingsInput, _ ...request.Option) (*securityhub.BatchImportFindingsOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "BatchImportFindings cancelled", ctx.Err())
	default:
		return d.BatchImportFindings(in)
	}
}

func (d *SecurityHubDouble) CreateActionTarget(i0 *securityhub.CreateActionTargetInput) (r0 *securityhub.CreateActionTargetOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreateActionTarget", i0)
	r0, _ = returns[0].(*securityhub.CreateActionTargetOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SecurityHubDouble) CreateActionTargetRequest(i0 *securityhub.CreateActionTargetInput) (r0 *request.Request, r1 *securityhub.CreateActionTargetOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreateActionTargetRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*securityhub.CreateActionTargetOutput)
	return
}

func (d *SecurityHubDouble) CreateActionTargetWithContext(i0 context.Context, i1 *securityhub.CreateActionTargetInput, i2 ...request.Option) (r0 *securityhub.CreateActionTargetOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreateActionTargetWithContext", i0, i1, i2)
	r0, _ = returns[0].(*securityhub.CreateActionTargetOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SecurityHubDouble) fakeCreateActionTargetWithContext(ctx context.Context, in *securityhub.CreateActionTargetInput, _ ...request.Option) (*securityhub.CreateActionTargetOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "CreateActionTarget cancelled", ctx.Err())
	default:
		return d.CreateActionTarget(in)
	}
}

func (d *SecurityHubDouble) CreateInsight(i0 *securityhub.CreateInsightInput) (r0 *securityhub.CreateInsightOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreateInsight", i0)
	r0, _ = returns[0].(*securityhub.CreateInsightOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SecurityHubDouble) CreateInsightRequest(i0 *securityhub.CreateInsightInput) (r0 *request.Request, r1 *securityhub.CreateInsightOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreateInsightRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*securityhub.CreateInsightOutput)
	return
}

func (d *SecurityHubDouble) CreateInsightWithContext(i0 context.Context, i1 *securityhub.CreateInsightInput, i2 ...request.Option) (r0 *securityhub.CreateInsightOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreateInsightWithContext", i0, i1, i2)
	r0, _ = returns[0].(*securityhub.CreateInsightOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SecurityHubDouble) fakeCreateInsightWithContext(ctx context.Context, in *securityhub.CreateInsightInput, _ ...request.Option) (*securityhub.CreateInsightOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "CreateInsight cancelled", ctx.Err())
	default:
		return d.CreateInsight(in)
	}
}

func (d *SecurityHubDouble) CreateMembers(i0 *securityhub.CreateMembersInput) (r0 *securityhub.CreateMembersOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreateMembers", i0)
	r0, _ = returns[0].(*securityhub.CreateMembersOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SecurityHubDouble) CreateMembersRequest(i0 *securityhub.CreateMembersInput) (r0 *request.Request, r1 *securityhub.CreateMembersOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreateMembersRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*securityhub.CreateMembersOutput)
	return
}

func (d *SecurityHubDouble) CreateMembersWithContext(i0 context.Context, i1 *securityhub.CreateMembersInput, i2 ...request.Option) (r0 *securityhub.CreateMembersOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreateMembersWithContext", i0, i1, i2)
	r0, _ = returns[0].(*securityhub.CreateMembersOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SecurityHubDouble) fakeCreateMembersWithContext(ctx context.Context, in *securityhub.CreateMembersInput, _ ...request.Option) (*securityhub.CreateMembersOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "CreateMembers cancelled", ctx.Err())
	default:
		return d.CreateMembers(in)
	}
}

func (d *SecurityHubDouble) DeclineInvitations(i0 *securityhub.DeclineInvitationsInput) (r0 *securityhub.DeclineInvitationsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeclineInvitations", i0)
	r0, _ = returns[0].(*securityhub.DeclineInvitationsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SecurityHubDouble) DeclineInvitationsRequest(i0 *securityhub.DeclineInvitationsInput) (r0 *request.Request, r1 *securityhub.DeclineInvitationsOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeclineInvitationsRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*securityhub.DeclineInvitationsOutput)
	return
}

func (d *SecurityHubDouble) DeclineInvitationsWithContext(i0 context.Context, i1 *securityhub.DeclineInvitationsInput, i2 ...request.Option) (r0 *securityhub.DeclineInvitationsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeclineInvitationsWithContext", i0, i1, i2)
	r0, _ = returns[0].(*securityhub.DeclineInvitationsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SecurityHubDouble) fakeDeclineInvitationsWithContext(ctx context.Context, in *securityhub.DeclineInvitationsInput, _ ...request.Option) (*securityhub.DeclineInvitationsOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "DeclineInvitations cancelled", ctx.Err())
	default:
		return d.DeclineInvitations(in)
	}
}

func (d *SecurityHubDouble) DeleteActionTarget(i0 *securityhub.DeleteActionTargetInput) (r0 *securityhub.DeleteActionTargetOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteActionTarget", i0)
	r0, _ = returns[0].(*securityhub.DeleteActionTargetOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SecurityHubDouble) DeleteActionTargetRequest(i0 *securityhub.DeleteActionTargetInput) (r0 *request.Request, r1 *securityhub.DeleteActionTargetOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteActionTargetRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*securityhub.DeleteActionTargetOutput)
	return
}

func (d *SecurityHubDouble) DeleteActionTargetWithContext(i0 context.Context, i1 *securityhub.DeleteActionTargetInput, i2 ...request.Option) (r0 *securityhub.DeleteActionTargetOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteActionTargetWithContext", i0, i1, i2)
	r0, _ = returns[0].(*securityhub.DeleteActionTargetOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SecurityHubDouble) fakeDeleteActionTargetWithContext(ctx context.Context, in *securityhub.DeleteActionTargetInput, _ ...request.Option) (*securityhub.DeleteActionTargetOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "DeleteActionTarget cancelled", ctx.Err())
	default:
		return d.DeleteActionTarget(in)
	}
}

func (d *SecurityHubDouble) DeleteInsight(i0 *securityhub.DeleteInsightInput) (r0 *securityhub.DeleteInsightOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteInsight", i0)
	r0, _ = returns[0].(*securityhub.DeleteInsightOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SecurityHubDouble) DeleteInsightRequest(i0 *securityhub.DeleteInsightInput) (r0 *request.Request, r1 *securityhub.DeleteInsightOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteInsightRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*securityhub.DeleteInsightOutput)
	return
}

func (d *SecurityHubDouble) DeleteInsightWithContext(i0 context.Context, i1 *securityhub.DeleteInsightInput, i2 ...request.Option) (r0 *securityhub.DeleteInsightOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteInsightWithContext", i0, i1, i2)
	r0, _ = returns[0].(*securityhub.DeleteInsightOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SecurityHubDouble) fakeDeleteInsightWithContext(ctx context.Context, in *securityhub.DeleteInsightInput, _ ...request.Option) (*securityhub.DeleteInsightOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "DeleteInsight cancelled", ctx.Err())
	default:
		return d.DeleteInsight(in)
	}
}

func (d *SecurityHubDouble) DeleteInvitations(i0 *securityhub.DeleteInvitationsInput) (r0 *securityhub.DeleteInvitationsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteInvitations", i0)
	r0, _ = returns[0].(*securityhub.DeleteInvitationsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SecurityHubDouble) DeleteInvitationsRequest(i0 *securityhub.DeleteInvitationsInput) (r0 *request.Request, r1 *securityhub.DeleteInvitationsOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteInvitationsRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*securityhub.DeleteInvitationsOutput)
	return
}

func (d *SecurityHubDouble) DeleteInvitationsWithContext(i0 context.Context, i1 *securityhub.DeleteInvitationsInput, i2 ...request.Option) (r0 *securityhub.DeleteInvitationsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteInvitationsWithContext", i0, i1, i2)
	r0, _ = returns[0].(*securityhub.DeleteInvitationsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SecurityHubDouble) fakeDeleteInvitationsWithContext(ctx context.Context, in *securityhub.DeleteInvitationsInput, _ ...request.Option) (*securityhub.DeleteInvitationsOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "DeleteInvitations cancelled", ctx.Err())
	default:
		return d.DeleteInvitations(in)
	}
}

func (d *SecurityHubDouble) DeleteMembers(i0 *securityhub.DeleteMembersInput) (r0 *securityhub.DeleteMembersOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteMembers", i0)
	r0, _ = returns[0].(*securityhub.DeleteMembersOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SecurityHubDouble) DeleteMembersRequest(i0 *securityhub.DeleteMembersInput) (r0 *request.Request, r1 *securityhub.DeleteMembersOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteMembersRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*securityhub.DeleteMembersOutput)
	return
}

func (d *SecurityHubDouble) DeleteMembersWithContext(i0 context.Context, i1 *securityhub.DeleteMembersInput, i2 ...request.Option) (r0 *securityhub.DeleteMembersOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteMembersWithContext", i0, i1, i2)
	r0, _ = returns[0].(*securityhub.DeleteMembersOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SecurityHubDouble) fakeDeleteMembersWithContext(ctx context.Context, in *securityhub.DeleteMembersInput, _ ...request.Option) (*securityhub.DeleteMembersOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "DeleteMembers cancelled", ctx.Err())
	default:
		return d.DeleteMembers(in)
	}
}

func (d *SecurityHubDouble) DescribeActionTargets(i0 *securityhub.DescribeActionTargetsInput) (r0 *securityhub.DescribeActionTargetsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DescribeActionTargets", i0)
	r0, _ = returns[0].(*securityhub.DescribeActionTargetsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SecurityHubDouble) DescribeActionTargetsPages(i0 *securityhub.DescribeActionTargetsInput, i1 func(*securityhub.DescribeActionTargetsOutput, bool) bool) (r0 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DescribeActionTargetsPages", i0, i1)
	r0, _ = returns[0].(error)
	return
}

func (d *SecurityHubDouble) fakeDescribeActionTargetsPages(in *securityhub.DescribeActionTargetsInput, pager func(*securityhub.DescribeActionTargetsOutput, bool) (shouldContinue bool)) error {
	return d.Paginate("DescribeActionTargets", paginators, in, pager)
}

func (d *SecurityHubDouble) DescribeActionTargetsPagesWithContext(i0 context.Context, i1 *securityhub.DescribeActionTargetsInput, i2 func(*securityhub.DescribeActionTargetsOutput, bool) bool, i3 ...request.Option) (r0 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DescribeActionTargetsPagesWithContext", i0, i1, i2, i3)
	r0, _ = returns[0].(error)
	return
}

func (d *SecurityHubDouble) fakeDescribeActionTargetsPagesWithContext(ctx context.Context, in *securityhub.DescribeActionTargetsInput, pager func(*securityhub.DescribeActionTargetsOutput, bool) (shouldContinue bool), options ...request.Option) error {
	return d.PaginateWithContext("DescribeActionTargets", paginators, ctx, in, pager, options...)
}

func (d *SecurityHubDouble) DescribeActionTargetsRequest(i0 *securityhub.DescribeActionTargetsInput) (r0 *request.Request, r1 *securityhub.DescribeActionTargetsOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DescribeActionTargetsRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*securityhub.DescribeActionTargetsOutput)
	return
}

func (d *SecurityHubDouble) DescribeActionTargetsWithContext(i0 context.Context, i1 *securityhub.DescribeActionTargetsInput, i2 ...request.Option) (r0 *securityhub.DescribeActionTargetsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DescribeActionTargetsWithContext", i0, i1, i2)
	r0, _ = returns[0].(*securityhub.DescribeActionTargetsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SecurityHubDouble) fakeDescribeActionTargetsWithContext(ctx context.Context, in *securityhub.DescribeActionTargetsInput, _ ...request.Option) (*securityhub.DescribeActionTargetsOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "DescribeActionTargets cancelled", ctx.Err())
	default:
		return d.DescribeActionTargets(in)
	}
}

func (d *SecurityHubDouble) DescribeHub(i0 *securityhub.DescribeHubInput) (r0 *securityhub.DescribeHubOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DescribeHub", i0)
	r0, _ = returns[0].(*securityhub.DescribeHubOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SecurityHubDouble) DescribeHubRequest(i0 *securityhub.DescribeHubInput) (r0 *request.Request, r1 *securityhub.DescribeHubOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DescribeHubRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*securityhub.DescribeHubOutput)
	return
}

func (d *SecurityHubDouble) DescribeHubWithContext(i0 context.Context, i1 *securityhub.DescribeHubInput, i2 ...request.Option) (r0 *securityhub.DescribeHubOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DescribeHubWithContext", i0, i1, i2)
	r0, _ = returns[0].(*securityhub.DescribeHubOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SecurityHubDouble) fakeDescribeHubWithContext(ctx context.Context, in *securityhub.DescribeHubInput, _ ...request.Option) (*securityhub.DescribeHubOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "DescribeHub cancelled", ctx.Err())
	default:
		return d.DescribeHub(in)
	}
}

func (d *SecurityHubDouble) DescribeProducts(i0 *securityhub.DescribeProductsInput) (r0 *securityhub.DescribeProductsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DescribeProducts", i0)
	r0, _ = returns[0].(*securityhub.DescribeProductsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SecurityHubDouble) DescribeProductsPages(i0 *securityhub.DescribeProductsInput, i1 func(*securityhub.DescribeProductsOutput, bool) bool) (r0 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DescribeProductsPages", i0, i1)
	r0, _ = returns[0].(error)
	return
}

func (d *SecurityHubDouble) fakeDescribeProductsPages(in *securityhub.DescribeProductsInput, pager func(*securityhub.DescribeProductsOutput, bool) (shouldContinue bool)) error {
	return d.Paginate("DescribeProducts", paginators, in, pager)
}

func (d *SecurityHubDouble) DescribeProductsPagesWithContext(i0 context.Context, i1 *securityhub.DescribeProductsInput, i2 func(*securityhub.DescribeProductsOutput, bool) bool, i3 ...request.Option) (r0 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DescribeProductsPagesWithContext", i0, i1, i2, i3)
	r0, _ = returns[0].(error)
	return
}

func (d *SecurityHubDouble) fakeDescribeProductsPagesWithContext(ctx context.Context, in *securityhub.DescribeProductsInput, pager func(*securityhub.DescribeProductsOutput, bool) (shouldContinue bool), options ...request.Option) error {
	return d.PaginateWithContext("DescribeProducts", paginators, ctx, in, pager, options...)
}

func (d *SecurityHubDouble) DescribeProductsRequest(i0 *securityhub.DescribeProductsInput) (r0 *request.Request, r1 *securityhub.DescribeProductsOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DescribeProductsRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*securityhub.DescribeProductsOutput)
	return
}

func (d *SecurityHubDouble) DescribeProductsWithContext(i0 context.Context, i1 *securityhub.DescribeProductsInput, i2 ...request.Option) (r0 *securityhub.DescribeProductsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DescribeProductsWithContext", i0, i1, i2)
	r0, _ = returns[0].(*securityhub.DescribeProductsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SecurityHubDouble) fakeDescribeProductsWithContext(ctx context.Context, in *securityhub.DescribeProductsInput, _ ...request.Option) (*securityhub.DescribeProductsOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "DescribeProducts cancelled", ctx.Err())
	default:
		return d.DescribeProducts(in)
	}
}

func (d *SecurityHubDouble) DescribeStandardsControls(i0 *securityhub.DescribeStandardsControlsInput) (r0 *securityhub.DescribeStandardsControlsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DescribeStandardsControls", i0)
	r0, _ = returns[0].(*securityhub.DescribeStandardsControlsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SecurityHubDouble) DescribeStandardsControlsRequest(i0 *securityhub.DescribeStandardsControlsInput) (r0 *request.Request, r1 *securityhub.DescribeStandardsControlsOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DescribeStandardsControlsRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*securityhub.DescribeStandardsControlsOutput)
	return
}

func (d *SecurityHubDouble) DescribeStandardsControlsWithContext(i0 context.Context, i1 *securityhub.DescribeStandardsControlsInput, i2 ...request.Option) (r0 *securityhub.DescribeStandardsControlsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DescribeStandardsControlsWithContext", i0, i1, i2)
	r0, _ = returns[0].(*securityhub.DescribeStandardsControlsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SecurityHubDouble) fakeDescribeStandardsControlsWithContext(ctx context.Context, in *securityhub.DescribeStandardsControlsInput, _ ...request.Option) (*securityhub.DescribeStandardsControlsOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "DescribeStandardsControls cancelled", ctx.Err())
	default:
		return d.DescribeStandardsControls(in)
	}
}

func (d *SecurityHubDouble) DisableImportFindingsForProduct(i0 *securityhub.DisableImportFindingsForProductInput) (r0 *securityhub.DisableImportFindingsForProductOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DisableImportFindingsForProduct", i0)
	r0, _ = returns[0].(*securityhub.DisableImportFindingsForProductOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SecurityHubDouble) DisableImportFindingsForProductRequest(i0 *securityhub.DisableImportFindingsForProductInput) (r0 *request.Request, r1 *securityhub.DisableImportFindingsForProductOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DisableImportFindingsForProductRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*securityhub.DisableImportFindingsForProductOutput)
	return
}

func (d *SecurityHubDouble) DisableImportFindingsForProductWithContext(i0 context.Context, i1 *securityhub.DisableImportFindingsForProductInput, i2 ...request.Option) (r0 *securityhub.DisableImportFindingsForProductOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DisableImportFindingsForProductWithContext", i0, i1, i2)
	r0, _ = returns[0].(*securityhub.DisableImportFindingsForProductOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SecurityHubDouble) fakeDisableImportFindingsForProductWithContext(ctx context.Context, in *securityhub.DisableImportFindingsForProductInput, _ ...request.Option) (*securityhub.DisableImportFindingsForProductOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "DisableImportFindingsForProduct cancelled", ctx.Err())
	default:
		return d.DisableImportFindingsForProduct(in)
	}
}

func (d *SecurityHubDouble) DisableSecurityHub(i0 *securityhub.DisableSecurityHubInput) (r0 *securityhub.DisableSecurityHubOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DisableSecurityHub", i0)
	r0, _ = returns[0].(*securityhub.DisableSecurityHubOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SecurityHubDouble) DisableSecurityHubRequest(i0 *securityhub.DisableSecurityHubInput) (r0 *request.Request, r1 *securityhub.DisableSecurityHubOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DisableSecurityHubRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*securityhub.DisableSecurityHubOutput)
	return
}

func (d *SecurityHubDouble) DisableSecurityHubWithContext(i0 context.Context, i1 *securityhub.DisableSecurityHubInput, i2 ...request.Option) (r0 *securityhub.DisableSecurityHubOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DisableSecurityHubWithContext", i0, i1, i2)
	r0, _ = returns[0].(*securityhub.DisableSecurityHubOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SecurityHubDouble) fakeDisableSecurityHubWithContext(ctx context.Context, in *securityhub.DisableSecurityHubInput, _ ...request.Option) (*securityhub.DisableSecurityHubOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "DisableSecurityHub cancelled", ctx.Err())
	default:
		return d.DisableSecurityHub(in)
	}
}

func (d *SecurityHubDouble) DisassociateFromMasterAccount(i0 *securityhub.DisassociateFromMasterAccountInput) (r0 *securityhub.DisassociateFromMasterAccountOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DisassociateFromMasterAccount", i0)
	r0, _ = returns[0].(*securityhub.DisassociateFromMasterAccountOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SecurityHubDouble) DisassociateFromMasterAccountRequest(i0 *securityhub.DisassociateFromMasterAccountInput) (r0 *request.Request, r1 *securityhub.DisassociateFromMasterAccountOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DisassociateFromMasterAccountRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*securityhub.DisassociateFromMasterAccountOutput)
	return
}

func (d *SecurityHubDouble) DisassociateFromMasterAccountWithContext(i0 context.Context, i1 *securityhub.DisassociateFromMasterAccountInput, i2 ...request.Option) (r0 *securityhub.DisassociateFromMasterAccountOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DisassociateFromMasterAccountWithContext", i0, i1, i2)
	r0, _ = returns[0].(*securityhub.DisassociateFromMasterAccountOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SecurityHubDouble) fakeDisassociateFromMasterAccountWithContext(ctx context.Context, in *securityhub.DisassociateFromMasterAccountInput, _ ...request.Option) (*securityhub.DisassociateFromMasterAccountOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "DisassociateFromMasterAccount cancelled", ctx.Err())
	default:
		return d.DisassociateFromMasterAccount(in)
	}
}

func (d *SecurityHubDouble) DisassociateMembers(i0 *securityhub.DisassociateMembersInput) (r0 *securityhub.DisassociateMembersOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DisassociateMembers", i0)
	r0, _ = returns[0].(*securityhub.DisassociateMembersOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SecurityHubDouble) DisassociateMembersRequest(i0 *securityhub.DisassociateMembersInput) (r0 *request.Request, r1 *securityhub.DisassociateMembersOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DisassociateMembersRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*securityhub.DisassociateMembersOutput)
	return
}

func (d *SecurityHubDouble) DisassociateMembersWithContext(i0 context.Context, i1 *securityhub.DisassociateMembersInput, i2 ...request.Option) (r0 *securityhub.DisassociateMembersOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DisassociateMembersWithContext", i0, i1, i2)
	r0, _ = returns[0].(*securityhub.DisassociateMembersOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SecurityHubDouble) fakeDisassociateMembersWithContext(ctx context.Context, in *securityhub.DisassociateMembersInput, _ ...request.Option) (*securityhub.DisassociateMembersOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "DisassociateMembers cancelled", ctx.Err())
	default:
		return d.DisassociateMembers(in)
	}
}

func (d *SecurityHubDouble) EnableImportFindingsForProduct(i0 *securityhub.EnableImportFindingsForProductInput) (r0 *securityhub.EnableImportFindingsForProductOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("EnableImportFindingsForProduct", i0)
	r0, _ = returns[0].(*securityhub.EnableImportFindingsForProductOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SecurityHubDouble) EnableImportFindingsForProductRequest(i0 *securityhub.EnableImportFindingsForProductInput) (r0 *request.Request, r1 *securityhub.EnableImportFindingsForProductOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("EnableImportFindingsForProductRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*securityhub.EnableImportFindingsForProductOutput)
	return
}

func (d *SecurityHubDouble) EnableImportFindingsForProductWithContext(i0 context.Context, i1 *securityhub.EnableImportFindingsForProductInput, i2 ...request.Option) (r0 *securityhub.EnableImportFindingsForProductOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("EnableImportFindingsForProductWithContext", i0, i1, i2)
	r0, _ = returns[0].(*securityhub.EnableImportFindingsForProductOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SecurityHubDouble) fakeEnableImportFindingsForProductWithContext(ctx context.Context, in *securityhub.EnableImportFindingsForProductInput, _ ...request.Option) (*securityhub.EnableImportFindingsForProductOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "EnableImportFindingsForProduct cancelled", ctx.Err())
	default:
		return d.EnableImportFindingsForProduct(in)
	}
}

func (d *SecurityHubDouble) EnableSecurityHub(i0 *securityhub.EnableSecurityHubInput) (r0 *securityhub.EnableSecurityHubOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("EnableSecurityHub", i0)
	r0, _ = returns[0].(*securityhub.EnableSecurityHubOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SecurityHubDouble) EnableSecurityHubRequest(i0 *securityhub.EnableSecurityHubInput) (r0 *request.Request, r1 *securityhub.EnableSecurityHubOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("EnableSecurityHubRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*securityhub.EnableSecurityHubOutput)
	return
}

func (d *SecurityHubDouble) EnableSecurityHubWithContext(i0 context.Context, i1 *securityhub.EnableSecurityHubInput, i2 ...request.Option) (r0 *securityhub.EnableSecurityHubOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("EnableSecurityHubWithContext", i0, i1, i2)
	r0, _ = returns[0].(*securityhub.EnableSecurityHubOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SecurityHubDouble) fakeEnableSecurityHubWithContext(ctx context.Context, in *securityhub.EnableSecurityHubInput, _ ...request.Option) (*securityhub.EnableSecurityHubOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "EnableSecurityHub cancelled", ctx.Err())
	default:
		return d.EnableSecurityHub(in)
	}
}

func (d *SecurityHubDouble) GetEnabledStandards(i0 *securityhub.GetEnabledStandardsInput) (r0 *securityhub.GetEnabledStandardsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetEnabledStandards", i0)
	r0, _ = returns[0].(*securityhub.GetEnabledStandardsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SecurityHubDouble) GetEnabledStandardsRequest(i0 *securityhub.GetEnabledStandardsInput) (r0 *request.Request, r1 *securityhub.GetEnabledStandardsOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetEnabledStandardsRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*securityhub.GetEnabledStandardsOutput)
	return
}

func (d *SecurityHubDouble) GetEnabledStandardsWithContext(i0 context.Context, i1 *securityhub.GetEnabledStandardsInput, i2 ...request.Option) (r0 *securityhub.GetEnabledStandardsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetEnabledStandardsWithContext", i0, i1, i2)
	r0, _ = returns[0].(*securityhub.GetEnabledStandardsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SecurityHubDouble) fakeGetEnabledStandardsWithContext(ctx context.Context, in *securityhub.GetEnabledStandardsInput, _ ...request.Option) (*securityhub.GetEnabledStandardsOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "GetEnabledStandards cancelled", ctx.Err())
	default:
		return d.GetEnabledStandards(in)
	}
}

func (d *SecurityHubDouble) GetFindings(i0 *securityhub.GetFindingsInput) (r0 *securityhub.GetFindingsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetFindings", i0)
	r0, _ = returns[0].(*securityhub.GetFindingsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SecurityHubDouble) GetFindingsPages(i0 *securityhub.GetFindingsInput, i1 func(*securityhub.GetFindingsOutput, bool) bool) (r0 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetFindingsPages", i0, i1)
	r0, _ = returns[0].(error)
	return
}

func (d *SecurityHubDouble) fakeGetFindingsPages(in *securityhub.GetFindingsInput, pager func(*securityhub.GetFindingsOutput, bool) (shouldContinue bool)) error {
	return d.Paginate("GetFindings", paginators, in, pager)
}

func (d *SecurityHubDouble) GetFindingsPagesWithContext(i0 context.Context, i1 *securityhub.GetFindingsInput, i2 func(*securityhub.GetFindingsOutput, bool) bool, i3 ...request.Option) (r0 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetFindingsPagesWithContext", i0, i1, i2, i3)
	r0, _ = returns[0].(error)
	return
}

func (d *SecurityHubDouble) fakeGetFindingsPagesWithContext(ctx context.Context, in *securityhub.GetFindingsInput, pager func(*securityhub.GetFindingsOutput, bool) (shouldContinue bool), options ...request.Option) error {
	return d.PaginateWithContext("GetFindings", paginators, ctx, in, pager, options...)
}

func (d *SecurityHubDouble) GetFindingsRequest(i0 *securityhub.GetFindingsInput) (r0 *request.Request, r1 *securityhub.GetFindingsOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetFindingsRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*securityhub.GetFindingsOutput)
	return
}

func (d *SecurityHubDouble) GetFindingsWithContext(i0 context.Context, i1 *securityhub.GetFindingsInput, i2 ...request.Option) (r0 *securityhub.GetFindingsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetFindingsWithContext", i0, i1, i2)
	r0, _ = returns[0].(*securityhub.GetFindingsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SecurityHubDouble) fakeGetFindingsWithContext(ctx context.Context, in *securityhub.GetFindingsInput, _ ...request.Option) (*securityhub.GetFindingsOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "GetFindings cancelled", ctx.Err())
	default:
		return d.GetFindings(in)
	}
}

func (d *SecurityHubDouble) GetInsightResults(i0 *securityhub.GetInsightResultsInput) (r0 *securityhub.GetInsightResultsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetInsightResults", i0)
	r0, _ = returns[0].(*securityhub.GetInsightResultsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SecurityHubDouble) GetInsightResultsRequest(i0 *securityhub.GetInsightResultsInput) (r0 *request.Request, r1 *securityhub.GetInsightResultsOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetInsightResultsRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*securityhub.GetInsightResultsOutput)
	return
}

func (d *SecurityHubDouble) GetInsightResultsWithContext(i0 context.Context, i1 *securityhub.GetInsightResultsInput, i2 ...request.Option) (r0 *securityhub.GetInsightResultsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetInsightResultsWithContext", i0, i1, i2)
	r0, _ = returns[0].(*securityhub.GetInsightResultsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SecurityHubDouble) fakeGetInsightResultsWithContext(ctx context.Context, in *securityhub.GetInsightResultsInput, _ ...request.Option) (*securityhub.GetInsightResultsOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "GetInsightResults cancelled", ctx.Err())
	default:
		return d.GetInsightResults(in)
	}
}

func (d *SecurityHubDouble) GetInsights(i0 *securityhub.GetInsightsInput) (r0 *securityhub.GetInsightsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetInsights", i0)
	r0, _ = returns[0].(*securityhub.GetInsightsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SecurityHubDouble) GetInsightsPages(i0 *securityhub.GetInsightsInput, i1 func(*securityhub.GetInsightsOutput, bool) bool) (r0 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetInsightsPages", i0, i1)
	r0, _ = returns[0].(error)
	return
}

func (d *SecurityHubDouble) fakeGetInsightsPages(in *securityhub.GetInsightsInput, pager func(*securityhub.GetInsightsOutput, bool) (shouldContinue bool)) error {
	return d.Paginate("GetInsights", paginators, in, pager)
}

func (d *SecurityHubDouble) GetInsightsPagesWithContext(i0 context.Context, i1 *securityhub.GetInsightsInput, i2 func(*securityhub.GetInsightsOutput, bool) bool, i3 ...request.Option) (r0 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetInsightsPagesWithContext", i0, i1, i2, i3)
	r0, _ = returns[0].(error)
	return
}

func (d *SecurityHubDouble) fakeGetInsightsPagesWithContext(ctx context.Context, in *securityhub.GetInsightsInput, pager func(*securityhub.GetInsightsOutput, bool) (shouldContinue bool), options ...request.Option) error {
	return d.PaginateWithContext("GetInsights", paginators, ctx, in, pager, options...)
}

func (d *SecurityHubDouble) GetInsightsRequest(i0 *securityhub.GetInsightsInput) (r0 *request.Request, r1 *securityhub.GetInsightsOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetInsightsRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*securityhub.GetInsightsOutput)
	return
}

func (d *SecurityHubDouble) GetInsightsWithContext(i0 context.Context, i1 *securityhub.GetInsightsInput, i2 ...request.Option) (r0 *securityhub.GetInsightsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetInsightsWithContext", i0, i1, i2)
	r0, _ = returns[0].(*securityhub.GetInsightsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SecurityHubDouble) fakeGetInsightsWithContext(ctx context.Context, in *securityhub.GetInsightsInput, _ ...request.Option) (*securityhub.GetInsightsOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "GetInsights cancelled", ctx.Err())
	default:
		return d.GetInsights(in)
	}
}

func (d *SecurityHubDouble) GetInvitationsCount(i0 *securityhub.GetInvitationsCountInput) (r0 *securityhub.GetInvitationsCountOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetInvitationsCount", i0)
	r0, _ = returns[0].(*securityhub.GetInvitationsCountOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SecurityHubDouble) GetInvitationsCountRequest(i0 *securityhub.GetInvitationsCountInput) (r0 *request.Request, r1 *securityhub.GetInvitationsCountOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetInvitationsCountRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*securityhub.GetInvitationsCountOutput)
	return
}

func (d *SecurityHubDouble) GetInvitationsCountWithContext(i0 context.Context, i1 *securityhub.GetInvitationsCountInput, i2 ...request.Option) (r0 *securityhub.GetInvitationsCountOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetInvitationsCountWithContext", i0, i1, i2)
	r0, _ = returns[0].(*securityhub.GetInvitationsCountOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SecurityHubDouble) fakeGetInvitationsCountWithContext(ctx context.Context, in *securityhub.GetInvitationsCountInput, _ ...request.Option) (*securityhub.GetInvitationsCountOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "GetInvitationsCount cancelled", ctx.Err())
	default:
		return d.GetInvitationsCount(in)
	}
}

func (d *SecurityHubDouble) GetMasterAccount(i0 *securityhub.GetMasterAccountInput) (r0 *securityhub.GetMasterAccountOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetMasterAccount", i0)
	r0, _ = returns[0].(*securityhub.GetMasterAccountOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SecurityHubDouble) GetMasterAccountRequest(i0 *securityhub.GetMasterAccountInput) (r0 *request.Request, r1 *securityhub.GetMasterAccountOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetMasterAccountRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*securityhub.GetMasterAccountOutput)
	return
}

func (d *SecurityHubDouble) GetMasterAccountWithContext(i0 context.Context, i1 *securityhub.GetMasterAccountInput, i2 ...request.Option) (r0 *securityhub.GetMasterAccountOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetMasterAccountWithContext", i0, i1, i2)
	r0, _ = returns[0].(*securityhub.GetMasterAccountOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SecurityHubDouble) fakeGetMasterAccountWithContext(ctx context.Context, in *securityhub.GetMasterAccountInput, _ ...request.Option) (*securityhub.GetMasterAccountOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "GetMasterAccount cancelled", ctx.Err())
	default:
		return d.GetMasterAccount(in)
	}
}

func (d *SecurityHubDouble) GetMembers(i0 *securityhub.GetMembersInput) (r0 *securityhub.GetMembersOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetMembers", i0)
	r0, _ = returns[0].(*securityhub.GetMembersOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SecurityHubDouble) GetMembersRequest(i0 *securityhub.GetMembersInput) (r0 *request.Request, r1 *securityhub.GetMembersOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetMembersRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*securityhub.GetMembersOutput)
	return
}

func (d *SecurityHubDouble) GetMembersWithContext(i0 context.Context, i1 *securityhub.GetMembersInput, i2 ...request.Option) (r0 *securityhub.GetMembersOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetMembersWithContext", i0, i1, i2)
	r0, _ = returns[0].(*securityhub.GetMembersOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SecurityHubDouble) fakeGetMembersWithContext(ctx context.Context, in *securityhub.GetMembersInput, _ ...request.Option) (*securityhub.GetMembersOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "GetMembers cancelled", ctx.Err())
	default:
		return d.GetMembers(in)
	}
}

func (d *SecurityHubDouble) InviteMembers(i0 *securityhub.InviteMembersInput) (r0 *securityhub.InviteMembersOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("InviteMembers", i0)
	r0, _ = returns[0].(*securityhub.InviteMembersOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SecurityHubDouble) InviteMembersRequest(i0 *securityhub.InviteMembersInput) (r0 *request.Request, r1 *securityhub.InviteMembersOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("InviteMembersRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*securityhub.InviteMembersOutput)
	return
}

func (d *SecurityHubDouble) InviteMembersWithContext(i0 context.Context, i1 *securityhub.InviteMembersInput, i2 ...request.Option) (r0 *securityhub.InviteMembersOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("InviteMembersWithContext", i0, i1, i2)
	r0, _ = returns[0].(*securityhub.InviteMembersOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SecurityHubDouble) fakeInviteMembersWithContext(ctx context.Context, in *securityhub.InviteMembersInput, _ ...request.Option) (*securityhub.InviteMembersOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "InviteMembers cancelled", ctx.Err())
	default:
		return d.InviteMembers(in)
	}
}

func (d *SecurityHubDouble) ListEnabledProductsForImport(i0 *securityhub.ListEnabledProductsForImportInput) (r0 *securityhub.ListEnabledProductsForImportOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListEnabledProductsForImport", i0)
	r0, _ = returns[0].(*securityhub.ListEnabledProductsForImportOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SecurityHubDouble) ListEnabledProductsForImportPages(i0 *securityhub.ListEnabledProductsForImportInput, i1 func(*securityhub.ListEnabledProductsForImportOutput, bool) bool) (r0 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListEnabledProductsForImportPages", i0, i1)
	r0, _ = returns[0].(error)
	return
}

func (d *SecurityHubDouble) fakeListEnabledProductsForImportPages(in *securityhub.ListEnabledProductsForImportInput, pager func(*securityhub.ListEnabledProductsForImportOutput, bool) (shouldContinue bool)) error {
	return d.Paginate("ListEnabledProductsForImport", paginators, in, pager)
}

func (d *SecurityHubDouble) ListEnabledProductsForImportPagesWithContext(i0 context.Context, i1 *securityhub.ListEnabledProductsForImportInput, i2 func(*securityhub.ListEnabledProductsForImportOutput, bool) bool, i3 ...request.Option) (r0 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListEnabledProductsForImportPagesWithContext", i0, i1, i2, i3)
	r0, _ = returns[0].(error)
	return
}

func (d *SecurityHubDouble) fakeListEnabledProductsForImportPagesWithContext(ctx context.Context, in *securityhub.ListEnabledProductsForImportInput, pager func(*securityhub.ListEnabledProductsForImportOutput, bool) (shouldContinue bool), options ...request.Option) error {
	return d.PaginateWithContext("ListEnabledProductsForImport", paginators, ctx, in, pager, options...)
}

func (d *SecurityHubDouble) ListEnabledProductsForImportRequest(i0 *securityhub.ListEnabledProductsForImportInput) (r0 *request.Request, r1 *securityhub.ListEnabledProductsForImportOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListEnabledProductsForImportRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*securityhub.ListEnabledProductsForImportOutput)
	return
}

func (d *SecurityHubDouble) ListEnabledProductsForImportWithContext(i0 context.Context, i1 *securityhub.ListEnabledProductsForImportInput, i2 ...request.Option) (r0 *securityhub.ListEnabledProductsForImportOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListEnabledProductsForImportWithContext", i0, i1, i2)
	r0, _ = returns[0].(*securityhub.ListEnabledProductsForImportOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SecurityHubDouble) fakeListEnabledProductsForImportWithContext(ctx context.Context, in *securityhub.ListEnabledProductsForImportInput, _ ...request.Option) (*securityhub.ListEnabledProductsForImportOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "ListEnabledProductsForImport cancelled", ctx.Err())
	default:
		return d.ListEnabledProductsForImport(in)
	}
}

func (d *SecurityHubDouble) ListInvitations(i0 *securityhub.ListInvitationsInput) (r0 *securityhub.ListInvitationsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListInvitations", i0)
	r0, _ = returns[0].(*securityhub.ListInvitationsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SecurityHubDouble) ListInvitationsRequest(i0 *securityhub.ListInvitationsInput) (r0 *request.Request, r1 *securityhub.ListInvitationsOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListInvitationsRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*securityhub.ListInvitationsOutput)
	return
}

func (d *SecurityHubDouble) ListInvitationsWithContext(i0 context.Context, i1 *securityhub.ListInvitationsInput, i2 ...request.Option) (r0 *securityhub.ListInvitationsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListInvitationsWithContext", i0, i1, i2)
	r0, _ = returns[0].(*securityhub.ListInvitationsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SecurityHubDouble) fakeListInvitationsWithContext(ctx context.Context, in *securityhub.ListInvitationsInput, _ ...request.Option) (*securityhub.ListInvitationsOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "ListInvitations cancelled", ctx.Err())
	default:
		return d.ListInvitations(in)
	}
}

func (d *SecurityHubDouble) ListMembers(i0 *securityhub.ListMembersInput) (r0 *securityhub.ListMembersOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListMembers", i0)
	r0, _ = returns[0].(*securityhub.ListMembersOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SecurityHubDouble) ListMembersRequest(i0 *securityhub.ListMembersInput) (r0 *request.Request, r1 *securityhub.ListMembersOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListMembersRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*securityhub.ListMembersOutput)
	return
}

func (d *SecurityHubDouble) ListMembersWithContext(i0 context.Context, i1 *securityhub.ListMembersInput, i2 ...request.Option) (r0 *securityhub.ListMembersOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListMembersWithContext", i0, i1, i2)
	r0, _ = returns[0].(*securityhub.ListMembersOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SecurityHubDouble) fakeListMembersWithContext(ctx context.Context, in *securityhub.ListMembersInput, _ ...request.Option) (*securityhub.ListMembersOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "ListMembers cancelled", ctx.Err())
	default:
		return d.ListMembers(in)
	}
}

func (d *SecurityHubDouble) ListTagsForResource(i0 *securityhub.ListTagsForResourceInput) (r0 *securityhub.ListTagsForResourceOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListTagsForResource", i0)
	r0, _ = returns[0].(*securityhub.ListTagsForResourceOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SecurityHubDouble) ListTagsForResourceRequest(i0 *securityhub.ListTagsForResourceInput) (r0 *request.Request, r1 *securityhub.ListTagsForResourceOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListTagsForResourceRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*securityhub.ListTagsForResourceOutput)
	return
}

func (d *SecurityHubDouble) ListTagsForResourceWithContext(i0 context.Context, i1 *securityhub.ListTagsForResourceInput, i2 ...request.Option) (r0 *securityhub.ListTagsForResourceOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListTagsForResourceWithContext", i0, i1, i2)
	r0, _ = returns[0].(*securityhub.ListTagsForResourceOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SecurityHubDouble) fakeListTagsForResourceWithContext(ctx context.Context, in *securityhub.ListTagsForResourceInput, _ ...request.Option) (*securityhub.ListTagsForResourceOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "ListTagsForResource cancelled", ctx.Err())
	default:
		return d.ListTagsForResource(in)
	}
}

func (d *SecurityHubDouble) TagResource(i0 *securityhub.TagResourceInput) (r0 *securityhub.TagResourceOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("TagResource", i0)
	r0, _ = returns[0].(*securityhub.TagResourceOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SecurityHubDouble) TagResourceRequest(i0 *securityhub.TagResourceInput) (r0 *request.Request, r1 *securityhub.TagResourceOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("TagResourceRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*securityhub.TagResourceOutput)
	return
}

func (d *SecurityHubDouble) TagResourceWithContext(i0 context.Context, i1 *securityhub.TagResourceInput, i2 ...request.Option) (r0 *securityhub.TagResourceOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("TagResourceWithContext", i0, i1, i2)
	r0, _ = returns[0].(*securityhub.TagResourceOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SecurityHubDouble) fakeTagResourceWithContext(ctx context.Context, in *securityhub.TagResourceInput, _ ...request.Option) (*securityhub.TagResourceOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "TagResource cancelled", ctx.Err())
	default:
		return d.TagResource(in)
	}
}

func (d *SecurityHubDouble) UntagResource(i0 *securityhub.UntagResourceInput) (r0 *securityhub.UntagResourceOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UntagResource", i0)
	r0, _ = returns[0].(*securityhub.UntagResourceOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SecurityHubDouble) UntagResourceRequest(i0 *securityhub.UntagResourceInput) (r0 *request.Request, r1 *securityhub.UntagResourceOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UntagResourceRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*securityhub.UntagResourceOutput)
	return
}

func (d *SecurityHubDouble) UntagResourceWithContext(i0 context.Context, i1 *securityhub.UntagResourceInput, i2 ...request.Option) (r0 *securityhub.UntagResourceOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UntagResourceWithContext", i0, i1, i2)
	r0, _ = returns[0].(*securityhub.UntagResourceOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SecurityHubDouble) fakeUntagResourceWithContext(ctx context.Context, in *securityhub.UntagResourceInput, _ ...request.Option) (*securityhub.UntagResourceOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "UntagResource cancelled", ctx.Err())
	default:
		return d.UntagResource(in)
	}
}

func (d *SecurityHubDouble) UpdateActionTarget(i0 *securityhub.UpdateActionTargetInput) (r0 *securityhub.UpdateActionTargetOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UpdateActionTarget", i0)
	r0, _ = returns[0].(*securityhub.UpdateActionTargetOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SecurityHubDouble) UpdateActionTargetRequest(i0 *securityhub.UpdateActionTargetInput) (r0 *request.Request, r1 *securityhub.UpdateActionTargetOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UpdateActionTargetRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*securityhub.UpdateActionTargetOutput)
	return
}

func (d *SecurityHubDouble) UpdateActionTargetWithContext(i0 context.Context, i1 *securityhub.UpdateActionTargetInput, i2 ...request.Option) (r0 *securityhub.UpdateActionTargetOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UpdateActionTargetWithContext", i0, i1, i2)
	r0, _ = returns[0].(*securityhub.UpdateActionTargetOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SecurityHubDouble) fakeUpdateActionTargetWithContext(ctx context.Context, in *securityhub.UpdateActionTargetInput, _ ...request.Option) (*securityhub.UpdateActionTargetOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "UpdateActionTarget cancelled", ctx.Err())
	default:
		return d.UpdateActionTarget(in)
	}
}

func (d *SecurityHubDouble) UpdateFindings(i0 *securityhub.UpdateFindingsInput) (r0 *securityhub.UpdateFindingsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UpdateFindings", i0)
	r0, _ = returns[0].(*securityhub.UpdateFindingsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SecurityHubDouble) UpdateFindingsRequest(i0 *securityhub.UpdateFindingsInput) (r0 *request.Request, r1 *securityhub.UpdateFindingsOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UpdateFindingsRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*securityhub.UpdateFindingsOutput)
	return
}

func (d *SecurityHubDouble) UpdateFindingsWithContext(i0 context.Context, i1 *securityhub.UpdateFindingsInput, i2 ...request.Option) (r0 *securityhub.UpdateFindingsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UpdateFindingsWithContext", i0, i1, i2)
	r0, _ = returns[0].(*securityhub.UpdateFindingsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SecurityHubDouble) fakeUpdateFindingsWithContext(ctx context.Context, in *securityhub.UpdateFindingsInput, _ ...request.Option) (*securityhub.UpdateFindingsOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "UpdateFindings cancelled", ctx.Err())
	default:
		return d.UpdateFindings(in)
	}
}

func (d *SecurityHubDouble) UpdateInsight(i0 *securityhub.UpdateInsightInput) (r0 *securityhub.UpdateInsightOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UpdateInsight", i0)
	r0, _ = returns[0].(*securityhub.UpdateInsightOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SecurityHubDouble) UpdateInsightRequest(i0 *securityhub.UpdateInsightInput) (r0 *request.Request, r1 *securityhub.UpdateInsightOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UpdateInsightRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*securityhub.UpdateInsightOutput)
	return
}

func (d *SecurityHubDouble) UpdateInsightWithContext(i0 context.Context, i1 *securityhub.UpdateInsightInput, i2 ...request.Option) (r0 *securityhub.UpdateInsightOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UpdateInsightWithContext", i0, i1, i2)
	r0, _ = returns[0].(*securityhub.UpdateInsightOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SecurityHubDouble) fakeUpdateInsightWithContext(ctx context.Context, in *securityhub.UpdateInsightInput, _ ...request.Option) (*securityhub.UpdateInsightOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "UpdateInsight cancelled", ctx.Err())
	default:
		return d.UpdateInsight(in)
	}
}

func (d *SecurityHubDouble) UpdateStandardsControl(i0 *securityhub.UpdateStandardsControlInput) (r0 *securityhub.UpdateStandardsControlOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UpdateStandardsControl", i0)
	r0, _ = returns[0].(*securityhub.UpdateStandardsControlOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SecurityHubDouble) UpdateStandardsControlRequest(i0 *securityhub.UpdateStandardsControlInput) (r0 *request.Request, r1 *securityhub.UpdateStandardsControlOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UpdateStandardsControlRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*securityhub.UpdateStandardsControlOutput)
	return
}

func (d *SecurityHubDouble) UpdateStandardsControlWithContext(i0 context.Context, i1 *securityhub.UpdateStandardsControlInput, i2 ...request.Option) (r0 *securityhub.UpdateStandardsControlOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UpdateStandardsControlWithContext", i0, i1, i2)
	r0, _ = returns[0].(*securityhub.UpdateStandardsControlOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SecurityHubDouble) fakeUpdateStandardsControlWithContext(ctx context.Context, in *securityhub.UpdateStandardsControlInput, _ ...request.Option) (*securityhub.UpdateStandardsControlOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "UpdateStandardsControl cancelled", ctx.Err())
	default:
		return d.UpdateStandardsControl(in)
	}
}
