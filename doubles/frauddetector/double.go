// Code generated by go doublegen; DO NOT EDIT.
// This file was generated at 2020-02-14T22:12:53+11:00

// Package frauddetectordouble provides a TestDouble implementation of frauddetectoriface.FraudDetectorAPI
package frauddetectordouble

import (
	"context"

	"github.com/aws/aws-sdk-go/aws/awserr"
	"github.com/aws/aws-sdk-go/aws/request"
	"github.com/aws/aws-sdk-go/service/frauddetector"
	"github.com/aws/aws-sdk-go/service/frauddetector/frauddetectoriface"
	"github.com/lwoggardner/awsdouble"
	"github.com/lwoggardner/godouble/godouble"
)

// FraudDetectorDouble is TestDouble for frauddetectoriface.FraudDetectorAPI
type FraudDetectorDouble struct {
	frauddetectoriface.FraudDetectorAPI
	*awsdouble.AWSTestDouble
}

// Constructor for FraudDetectorDouble
// Default configuration will ensure
//   * API operations not explicitly stubbed will return an empty output struct pointer, and nil error.
//     To simulate long polling, "Poll" operations will return these values after a random delay of up to 100ms.
//   * WithContext methods implement a 'Fake' method that returns a cancellation error if the context is cancelled
//      before the method is called.
//   * Pages and PagesWithContext methods similarly implement a 'Fake' method that paginates over the underlying method.
//
//    This allows tests to only stub the simple api methods and be generally unconcerned whether the SUT is using the
//      Context or Pagination forms of the API.
//
func NewDouble(t godouble.T, configurators ...func(*awsdouble.AWSTestDouble)) *FraudDetectorDouble {
	result := &FraudDetectorDouble{}

	configurators = append([]func(configurator *awsdouble.AWSTestDouble){func(d *awsdouble.AWSTestDouble) {
		d.SetDefaultCall(result.defaultMethodCall)
		d.SetDefaultReturnValues(result.defaultReturnValues)
	}}, configurators...)

	result.AWSTestDouble = awsdouble.NewDouble(t, (*frauddetectoriface.FraudDetectorAPI)(nil), configurators...)
	return result
}

func (d *FraudDetectorDouble) defaultReturnValues(m godouble.Method) godouble.ReturnValues {
	return d.DefaultReturnValues(m)
}

func (d *FraudDetectorDouble) defaultMethodCall(m godouble.Method) godouble.MethodCall {
	switch m.Reflect().Name {

	case "BatchCreateVariableWithContext":
		return m.Fake(d.fakeBatchCreateVariableWithContext)

	case "BatchGetVariableWithContext":
		return m.Fake(d.fakeBatchGetVariableWithContext)

	case "CreateDetectorVersionWithContext":
		return m.Fake(d.fakeCreateDetectorVersionWithContext)

	case "CreateModelVersionWithContext":
		return m.Fake(d.fakeCreateModelVersionWithContext)

	case "CreateRuleWithContext":
		return m.Fake(d.fakeCreateRuleWithContext)

	case "CreateVariableWithContext":
		return m.Fake(d.fakeCreateVariableWithContext)

	case "DeleteDetectorVersionWithContext":
		return m.Fake(d.fakeDeleteDetectorVersionWithContext)

	case "DeleteEventWithContext":
		return m.Fake(d.fakeDeleteEventWithContext)

	case "DescribeDetectorWithContext":
		return m.Fake(d.fakeDescribeDetectorWithContext)

	case "DescribeModelVersionsPages":
		return m.Fake(d.fakeDescribeModelVersionsPages)

	case "DescribeModelVersionsPagesWithContext":
		return m.Fake(d.fakeDescribeModelVersionsPagesWithContext)

	case "DescribeModelVersionsWithContext":
		return m.Fake(d.fakeDescribeModelVersionsWithContext)

	case "GetDetectorVersionWithContext":
		return m.Fake(d.fakeGetDetectorVersionWithContext)

	case "GetDetectorsPages":
		return m.Fake(d.fakeGetDetectorsPages)

	case "GetDetectorsPagesWithContext":
		return m.Fake(d.fakeGetDetectorsPagesWithContext)

	case "GetDetectorsWithContext":
		return m.Fake(d.fakeGetDetectorsWithContext)

	case "GetExternalModelsPages":
		return m.Fake(d.fakeGetExternalModelsPages)

	case "GetExternalModelsPagesWithContext":
		return m.Fake(d.fakeGetExternalModelsPagesWithContext)

	case "GetExternalModelsWithContext":
		return m.Fake(d.fakeGetExternalModelsWithContext)

	case "GetModelVersionWithContext":
		return m.Fake(d.fakeGetModelVersionWithContext)

	case "GetModelsPages":
		return m.Fake(d.fakeGetModelsPages)

	case "GetModelsPagesWithContext":
		return m.Fake(d.fakeGetModelsPagesWithContext)

	case "GetModelsWithContext":
		return m.Fake(d.fakeGetModelsWithContext)

	case "GetOutcomesPages":
		return m.Fake(d.fakeGetOutcomesPages)

	case "GetOutcomesPagesWithContext":
		return m.Fake(d.fakeGetOutcomesPagesWithContext)

	case "GetOutcomesWithContext":
		return m.Fake(d.fakeGetOutcomesWithContext)

	case "GetPredictionWithContext":
		return m.Fake(d.fakeGetPredictionWithContext)

	case "GetRulesPages":
		return m.Fake(d.fakeGetRulesPages)

	case "GetRulesPagesWithContext":
		return m.Fake(d.fakeGetRulesPagesWithContext)

	case "GetRulesWithContext":
		return m.Fake(d.fakeGetRulesWithContext)

	case "GetVariablesPages":
		return m.Fake(d.fakeGetVariablesPages)

	case "GetVariablesPagesWithContext":
		return m.Fake(d.fakeGetVariablesPagesWithContext)

	case "GetVariablesWithContext":
		return m.Fake(d.fakeGetVariablesWithContext)

	case "PutDetectorWithContext":
		return m.Fake(d.fakePutDetectorWithContext)

	case "PutExternalModelWithContext":
		return m.Fake(d.fakePutExternalModelWithContext)

	case "PutModelWithContext":
		return m.Fake(d.fakePutModelWithContext)

	case "PutOutcomeWithContext":
		return m.Fake(d.fakePutOutcomeWithContext)

	case "UpdateDetectorVersionMetadataWithContext":
		return m.Fake(d.fakeUpdateDetectorVersionMetadataWithContext)

	case "UpdateDetectorVersionStatusWithContext":
		return m.Fake(d.fakeUpdateDetectorVersionStatusWithContext)

	case "UpdateDetectorVersionWithContext":
		return m.Fake(d.fakeUpdateDetectorVersionWithContext)

	case "UpdateModelVersionWithContext":
		return m.Fake(d.fakeUpdateModelVersionWithContext)

	case "UpdateRuleMetadataWithContext":
		return m.Fake(d.fakeUpdateRuleMetadataWithContext)

	case "UpdateRuleVersionWithContext":
		return m.Fake(d.fakeUpdateRuleVersionWithContext)

	case "UpdateVariableWithContext":
		return m.Fake(d.fakeUpdateVariableWithContext)

	default:
		return nil
	}
}

func (d *FraudDetectorDouble) BatchCreateVariable(i0 *frauddetector.BatchCreateVariableInput) (r0 *frauddetector.BatchCreateVariableOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("BatchCreateVariable", i0)
	r0, _ = returns[0].(*frauddetector.BatchCreateVariableOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *FraudDetectorDouble) BatchCreateVariableRequest(i0 *frauddetector.BatchCreateVariableInput) (r0 *request.Request, r1 *frauddetector.BatchCreateVariableOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("BatchCreateVariableRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*frauddetector.BatchCreateVariableOutput)
	return
}

func (d *FraudDetectorDouble) BatchCreateVariableWithContext(i0 context.Context, i1 *frauddetector.BatchCreateVariableInput, i2 ...request.Option) (r0 *frauddetector.BatchCreateVariableOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("BatchCreateVariableWithContext", i0, i1, i2)
	r0, _ = returns[0].(*frauddetector.BatchCreateVariableOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *FraudDetectorDouble) fakeBatchCreateVariableWithContext(ctx context.Context, in *frauddetector.BatchCreateVariableInput, _ ...request.Option) (*frauddetector.BatchCreateVariableOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "BatchCreateVariable cancelled", ctx.Err())
	default:
		return d.BatchCreateVariable(in)
	}
}

func (d *FraudDetectorDouble) BatchGetVariable(i0 *frauddetector.BatchGetVariableInput) (r0 *frauddetector.BatchGetVariableOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("BatchGetVariable", i0)
	r0, _ = returns[0].(*frauddetector.BatchGetVariableOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *FraudDetectorDouble) BatchGetVariableRequest(i0 *frauddetector.BatchGetVariableInput) (r0 *request.Request, r1 *frauddetector.BatchGetVariableOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("BatchGetVariableRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*frauddetector.BatchGetVariableOutput)
	return
}

func (d *FraudDetectorDouble) BatchGetVariableWithContext(i0 context.Context, i1 *frauddetector.BatchGetVariableInput, i2 ...request.Option) (r0 *frauddetector.BatchGetVariableOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("BatchGetVariableWithContext", i0, i1, i2)
	r0, _ = returns[0].(*frauddetector.BatchGetVariableOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *FraudDetectorDouble) fakeBatchGetVariableWithContext(ctx context.Context, in *frauddetector.BatchGetVariableInput, _ ...request.Option) (*frauddetector.BatchGetVariableOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "BatchGetVariable cancelled", ctx.Err())
	default:
		return d.BatchGetVariable(in)
	}
}

func (d *FraudDetectorDouble) CreateDetectorVersion(i0 *frauddetector.CreateDetectorVersionInput) (r0 *frauddetector.CreateDetectorVersionOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreateDetectorVersion", i0)
	r0, _ = returns[0].(*frauddetector.CreateDetectorVersionOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *FraudDetectorDouble) CreateDetectorVersionRequest(i0 *frauddetector.CreateDetectorVersionInput) (r0 *request.Request, r1 *frauddetector.CreateDetectorVersionOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreateDetectorVersionRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*frauddetector.CreateDetectorVersionOutput)
	return
}

func (d *FraudDetectorDouble) CreateDetectorVersionWithContext(i0 context.Context, i1 *frauddetector.CreateDetectorVersionInput, i2 ...request.Option) (r0 *frauddetector.CreateDetectorVersionOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreateDetectorVersionWithContext", i0, i1, i2)
	r0, _ = returns[0].(*frauddetector.CreateDetectorVersionOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *FraudDetectorDouble) fakeCreateDetectorVersionWithContext(ctx context.Context, in *frauddetector.CreateDetectorVersionInput, _ ...request.Option) (*frauddetector.CreateDetectorVersionOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "CreateDetectorVersion cancelled", ctx.Err())
	default:
		return d.CreateDetectorVersion(in)
	}
}

func (d *FraudDetectorDouble) CreateModelVersion(i0 *frauddetector.CreateModelVersionInput) (r0 *frauddetector.CreateModelVersionOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreateModelVersion", i0)
	r0, _ = returns[0].(*frauddetector.CreateModelVersionOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *FraudDetectorDouble) CreateModelVersionRequest(i0 *frauddetector.CreateModelVersionInput) (r0 *request.Request, r1 *frauddetector.CreateModelVersionOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreateModelVersionRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*frauddetector.CreateModelVersionOutput)
	return
}

func (d *FraudDetectorDouble) CreateModelVersionWithContext(i0 context.Context, i1 *frauddetector.CreateModelVersionInput, i2 ...request.Option) (r0 *frauddetector.CreateModelVersionOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreateModelVersionWithContext", i0, i1, i2)
	r0, _ = returns[0].(*frauddetector.CreateModelVersionOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *FraudDetectorDouble) fakeCreateModelVersionWithContext(ctx context.Context, in *frauddetector.CreateModelVersionInput, _ ...request.Option) (*frauddetector.CreateModelVersionOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "CreateModelVersion cancelled", ctx.Err())
	default:
		return d.CreateModelVersion(in)
	}
}

func (d *FraudDetectorDouble) CreateRule(i0 *frauddetector.CreateRuleInput) (r0 *frauddetector.CreateRuleOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreateRule", i0)
	r0, _ = returns[0].(*frauddetector.CreateRuleOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *FraudDetectorDouble) CreateRuleRequest(i0 *frauddetector.CreateRuleInput) (r0 *request.Request, r1 *frauddetector.CreateRuleOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreateRuleRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*frauddetector.CreateRuleOutput)
	return
}

func (d *FraudDetectorDouble) CreateRuleWithContext(i0 context.Context, i1 *frauddetector.CreateRuleInput, i2 ...request.Option) (r0 *frauddetector.CreateRuleOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreateRuleWithContext", i0, i1, i2)
	r0, _ = returns[0].(*frauddetector.CreateRuleOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *FraudDetectorDouble) fakeCreateRuleWithContext(ctx context.Context, in *frauddetector.CreateRuleInput, _ ...request.Option) (*frauddetector.CreateRuleOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "CreateRule cancelled", ctx.Err())
	default:
		return d.CreateRule(in)
	}
}

func (d *FraudDetectorDouble) CreateVariable(i0 *frauddetector.CreateVariableInput) (r0 *frauddetector.CreateVariableOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreateVariable", i0)
	r0, _ = returns[0].(*frauddetector.CreateVariableOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *FraudDetectorDouble) CreateVariableRequest(i0 *frauddetector.CreateVariableInput) (r0 *request.Request, r1 *frauddetector.CreateVariableOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreateVariableRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*frauddetector.CreateVariableOutput)
	return
}

func (d *FraudDetectorDouble) CreateVariableWithContext(i0 context.Context, i1 *frauddetector.CreateVariableInput, i2 ...request.Option) (r0 *frauddetector.CreateVariableOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreateVariableWithContext", i0, i1, i2)
	r0, _ = returns[0].(*frauddetector.CreateVariableOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *FraudDetectorDouble) fakeCreateVariableWithContext(ctx context.Context, in *frauddetector.CreateVariableInput, _ ...request.Option) (*frauddetector.CreateVariableOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "CreateVariable cancelled", ctx.Err())
	default:
		return d.CreateVariable(in)
	}
}

func (d *FraudDetectorDouble) DeleteDetectorVersion(i0 *frauddetector.DeleteDetectorVersionInput) (r0 *frauddetector.DeleteDetectorVersionOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteDetectorVersion", i0)
	r0, _ = returns[0].(*frauddetector.DeleteDetectorVersionOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *FraudDetectorDouble) DeleteDetectorVersionRequest(i0 *frauddetector.DeleteDetectorVersionInput) (r0 *request.Request, r1 *frauddetector.DeleteDetectorVersionOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteDetectorVersionRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*frauddetector.DeleteDetectorVersionOutput)
	return
}

func (d *FraudDetectorDouble) DeleteDetectorVersionWithContext(i0 context.Context, i1 *frauddetector.DeleteDetectorVersionInput, i2 ...request.Option) (r0 *frauddetector.DeleteDetectorVersionOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteDetectorVersionWithContext", i0, i1, i2)
	r0, _ = returns[0].(*frauddetector.DeleteDetectorVersionOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *FraudDetectorDouble) fakeDeleteDetectorVersionWithContext(ctx context.Context, in *frauddetector.DeleteDetectorVersionInput, _ ...request.Option) (*frauddetector.DeleteDetectorVersionOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "DeleteDetectorVersion cancelled", ctx.Err())
	default:
		return d.DeleteDetectorVersion(in)
	}
}

func (d *FraudDetectorDouble) DeleteEvent(i0 *frauddetector.DeleteEventInput) (r0 *frauddetector.DeleteEventOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteEvent", i0)
	r0, _ = returns[0].(*frauddetector.DeleteEventOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *FraudDetectorDouble) DeleteEventRequest(i0 *frauddetector.DeleteEventInput) (r0 *request.Request, r1 *frauddetector.DeleteEventOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteEventRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*frauddetector.DeleteEventOutput)
	return
}

func (d *FraudDetectorDouble) DeleteEventWithContext(i0 context.Context, i1 *frauddetector.DeleteEventInput, i2 ...request.Option) (r0 *frauddetector.DeleteEventOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteEventWithContext", i0, i1, i2)
	r0, _ = returns[0].(*frauddetector.DeleteEventOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *FraudDetectorDouble) fakeDeleteEventWithContext(ctx context.Context, in *frauddetector.DeleteEventInput, _ ...request.Option) (*frauddetector.DeleteEventOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "DeleteEvent cancelled", ctx.Err())
	default:
		return d.DeleteEvent(in)
	}
}

func (d *FraudDetectorDouble) DescribeDetector(i0 *frauddetector.DescribeDetectorInput) (r0 *frauddetector.DescribeDetectorOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DescribeDetector", i0)
	r0, _ = returns[0].(*frauddetector.DescribeDetectorOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *FraudDetectorDouble) DescribeDetectorRequest(i0 *frauddetector.DescribeDetectorInput) (r0 *request.Request, r1 *frauddetector.DescribeDetectorOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DescribeDetectorRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*frauddetector.DescribeDetectorOutput)
	return
}

func (d *FraudDetectorDouble) DescribeDetectorWithContext(i0 context.Context, i1 *frauddetector.DescribeDetectorInput, i2 ...request.Option) (r0 *frauddetector.DescribeDetectorOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DescribeDetectorWithContext", i0, i1, i2)
	r0, _ = returns[0].(*frauddetector.DescribeDetectorOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *FraudDetectorDouble) fakeDescribeDetectorWithContext(ctx context.Context, in *frauddetector.DescribeDetectorInput, _ ...request.Option) (*frauddetector.DescribeDetectorOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "DescribeDetector cancelled", ctx.Err())
	default:
		return d.DescribeDetector(in)
	}
}

func (d *FraudDetectorDouble) DescribeModelVersions(i0 *frauddetector.DescribeModelVersionsInput) (r0 *frauddetector.DescribeModelVersionsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DescribeModelVersions", i0)
	r0, _ = returns[0].(*frauddetector.DescribeModelVersionsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *FraudDetectorDouble) DescribeModelVersionsPages(i0 *frauddetector.DescribeModelVersionsInput, i1 func(*frauddetector.DescribeModelVersionsOutput, bool) bool) (r0 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DescribeModelVersionsPages", i0, i1)
	r0, _ = returns[0].(error)
	return
}

func (d *FraudDetectorDouble) fakeDescribeModelVersionsPages(in *frauddetector.DescribeModelVersionsInput, pager func(*frauddetector.DescribeModelVersionsOutput, bool) (shouldContinue bool)) error {
	return d.Paginate("DescribeModelVersions", paginators, in, pager)
}

func (d *FraudDetectorDouble) DescribeModelVersionsPagesWithContext(i0 context.Context, i1 *frauddetector.DescribeModelVersionsInput, i2 func(*frauddetector.DescribeModelVersionsOutput, bool) bool, i3 ...request.Option) (r0 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DescribeModelVersionsPagesWithContext", i0, i1, i2, i3)
	r0, _ = returns[0].(error)
	return
}

func (d *FraudDetectorDouble) fakeDescribeModelVersionsPagesWithContext(ctx context.Context, in *frauddetector.DescribeModelVersionsInput, pager func(*frauddetector.DescribeModelVersionsOutput, bool) (shouldContinue bool), options ...request.Option) error {
	return d.PaginateWithContext("DescribeModelVersions", paginators, ctx, in, pager, options...)
}

func (d *FraudDetectorDouble) DescribeModelVersionsRequest(i0 *frauddetector.DescribeModelVersionsInput) (r0 *request.Request, r1 *frauddetector.DescribeModelVersionsOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DescribeModelVersionsRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*frauddetector.DescribeModelVersionsOutput)
	return
}

func (d *FraudDetectorDouble) DescribeModelVersionsWithContext(i0 context.Context, i1 *frauddetector.DescribeModelVersionsInput, i2 ...request.Option) (r0 *frauddetector.DescribeModelVersionsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DescribeModelVersionsWithContext", i0, i1, i2)
	r0, _ = returns[0].(*frauddetector.DescribeModelVersionsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *FraudDetectorDouble) fakeDescribeModelVersionsWithContext(ctx context.Context, in *frauddetector.DescribeModelVersionsInput, _ ...request.Option) (*frauddetector.DescribeModelVersionsOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "DescribeModelVersions cancelled", ctx.Err())
	default:
		return d.DescribeModelVersions(in)
	}
}

func (d *FraudDetectorDouble) GetDetectorVersion(i0 *frauddetector.GetDetectorVersionInput) (r0 *frauddetector.GetDetectorVersionOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetDetectorVersion", i0)
	r0, _ = returns[0].(*frauddetector.GetDetectorVersionOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *FraudDetectorDouble) GetDetectorVersionRequest(i0 *frauddetector.GetDetectorVersionInput) (r0 *request.Request, r1 *frauddetector.GetDetectorVersionOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetDetectorVersionRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*frauddetector.GetDetectorVersionOutput)
	return
}

func (d *FraudDetectorDouble) GetDetectorVersionWithContext(i0 context.Context, i1 *frauddetector.GetDetectorVersionInput, i2 ...request.Option) (r0 *frauddetector.GetDetectorVersionOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetDetectorVersionWithContext", i0, i1, i2)
	r0, _ = returns[0].(*frauddetector.GetDetectorVersionOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *FraudDetectorDouble) fakeGetDetectorVersionWithContext(ctx context.Context, in *frauddetector.GetDetectorVersionInput, _ ...request.Option) (*frauddetector.GetDetectorVersionOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "GetDetectorVersion cancelled", ctx.Err())
	default:
		return d.GetDetectorVersion(in)
	}
}

func (d *FraudDetectorDouble) GetDetectors(i0 *frauddetector.GetDetectorsInput) (r0 *frauddetector.GetDetectorsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetDetectors", i0)
	r0, _ = returns[0].(*frauddetector.GetDetectorsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *FraudDetectorDouble) GetDetectorsPages(i0 *frauddetector.GetDetectorsInput, i1 func(*frauddetector.GetDetectorsOutput, bool) bool) (r0 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetDetectorsPages", i0, i1)
	r0, _ = returns[0].(error)
	return
}

func (d *FraudDetectorDouble) fakeGetDetectorsPages(in *frauddetector.GetDetectorsInput, pager func(*frauddetector.GetDetectorsOutput, bool) (shouldContinue bool)) error {
	return d.Paginate("GetDetectors", paginators, in, pager)
}

func (d *FraudDetectorDouble) GetDetectorsPagesWithContext(i0 context.Context, i1 *frauddetector.GetDetectorsInput, i2 func(*frauddetector.GetDetectorsOutput, bool) bool, i3 ...request.Option) (r0 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetDetectorsPagesWithContext", i0, i1, i2, i3)
	r0, _ = returns[0].(error)
	return
}

func (d *FraudDetectorDouble) fakeGetDetectorsPagesWithContext(ctx context.Context, in *frauddetector.GetDetectorsInput, pager func(*frauddetector.GetDetectorsOutput, bool) (shouldContinue bool), options ...request.Option) error {
	return d.PaginateWithContext("GetDetectors", paginators, ctx, in, pager, options...)
}

func (d *FraudDetectorDouble) GetDetectorsRequest(i0 *frauddetector.GetDetectorsInput) (r0 *request.Request, r1 *frauddetector.GetDetectorsOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetDetectorsRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*frauddetector.GetDetectorsOutput)
	return
}

func (d *FraudDetectorDouble) GetDetectorsWithContext(i0 context.Context, i1 *frauddetector.GetDetectorsInput, i2 ...request.Option) (r0 *frauddetector.GetDetectorsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetDetectorsWithContext", i0, i1, i2)
	r0, _ = returns[0].(*frauddetector.GetDetectorsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *FraudDetectorDouble) fakeGetDetectorsWithContext(ctx context.Context, in *frauddetector.GetDetectorsInput, _ ...request.Option) (*frauddetector.GetDetectorsOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "GetDetectors cancelled", ctx.Err())
	default:
		return d.GetDetectors(in)
	}
}

func (d *FraudDetectorDouble) GetExternalModels(i0 *frauddetector.GetExternalModelsInput) (r0 *frauddetector.GetExternalModelsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetExternalModels", i0)
	r0, _ = returns[0].(*frauddetector.GetExternalModelsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *FraudDetectorDouble) GetExternalModelsPages(i0 *frauddetector.GetExternalModelsInput, i1 func(*frauddetector.GetExternalModelsOutput, bool) bool) (r0 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetExternalModelsPages", i0, i1)
	r0, _ = returns[0].(error)
	return
}

func (d *FraudDetectorDouble) fakeGetExternalModelsPages(in *frauddetector.GetExternalModelsInput, pager func(*frauddetector.GetExternalModelsOutput, bool) (shouldContinue bool)) error {
	return d.Paginate("GetExternalModels", paginators, in, pager)
}

func (d *FraudDetectorDouble) GetExternalModelsPagesWithContext(i0 context.Context, i1 *frauddetector.GetExternalModelsInput, i2 func(*frauddetector.GetExternalModelsOutput, bool) bool, i3 ...request.Option) (r0 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetExternalModelsPagesWithContext", i0, i1, i2, i3)
	r0, _ = returns[0].(error)
	return
}

func (d *FraudDetectorDouble) fakeGetExternalModelsPagesWithContext(ctx context.Context, in *frauddetector.GetExternalModelsInput, pager func(*frauddetector.GetExternalModelsOutput, bool) (shouldContinue bool), options ...request.Option) error {
	return d.PaginateWithContext("GetExternalModels", paginators, ctx, in, pager, options...)
}

func (d *FraudDetectorDouble) GetExternalModelsRequest(i0 *frauddetector.GetExternalModelsInput) (r0 *request.Request, r1 *frauddetector.GetExternalModelsOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetExternalModelsRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*frauddetector.GetExternalModelsOutput)
	return
}

func (d *FraudDetectorDouble) GetExternalModelsWithContext(i0 context.Context, i1 *frauddetector.GetExternalModelsInput, i2 ...request.Option) (r0 *frauddetector.GetExternalModelsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetExternalModelsWithContext", i0, i1, i2)
	r0, _ = returns[0].(*frauddetector.GetExternalModelsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *FraudDetectorDouble) fakeGetExternalModelsWithContext(ctx context.Context, in *frauddetector.GetExternalModelsInput, _ ...request.Option) (*frauddetector.GetExternalModelsOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "GetExternalModels cancelled", ctx.Err())
	default:
		return d.GetExternalModels(in)
	}
}

func (d *FraudDetectorDouble) GetModelVersion(i0 *frauddetector.GetModelVersionInput) (r0 *frauddetector.GetModelVersionOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetModelVersion", i0)
	r0, _ = returns[0].(*frauddetector.GetModelVersionOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *FraudDetectorDouble) GetModelVersionRequest(i0 *frauddetector.GetModelVersionInput) (r0 *request.Request, r1 *frauddetector.GetModelVersionOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetModelVersionRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*frauddetector.GetModelVersionOutput)
	return
}

func (d *FraudDetectorDouble) GetModelVersionWithContext(i0 context.Context, i1 *frauddetector.GetModelVersionInput, i2 ...request.Option) (r0 *frauddetector.GetModelVersionOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetModelVersionWithContext", i0, i1, i2)
	r0, _ = returns[0].(*frauddetector.GetModelVersionOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *FraudDetectorDouble) fakeGetModelVersionWithContext(ctx context.Context, in *frauddetector.GetModelVersionInput, _ ...request.Option) (*frauddetector.GetModelVersionOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "GetModelVersion cancelled", ctx.Err())
	default:
		return d.GetModelVersion(in)
	}
}

func (d *FraudDetectorDouble) GetModels(i0 *frauddetector.GetModelsInput) (r0 *frauddetector.GetModelsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetModels", i0)
	r0, _ = returns[0].(*frauddetector.GetModelsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *FraudDetectorDouble) GetModelsPages(i0 *frauddetector.GetModelsInput, i1 func(*frauddetector.GetModelsOutput, bool) bool) (r0 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetModelsPages", i0, i1)
	r0, _ = returns[0].(error)
	return
}

func (d *FraudDetectorDouble) fakeGetModelsPages(in *frauddetector.GetModelsInput, pager func(*frauddetector.GetModelsOutput, bool) (shouldContinue bool)) error {
	return d.Paginate("GetModels", paginators, in, pager)
}

func (d *FraudDetectorDouble) GetModelsPagesWithContext(i0 context.Context, i1 *frauddetector.GetModelsInput, i2 func(*frauddetector.GetModelsOutput, bool) bool, i3 ...request.Option) (r0 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetModelsPagesWithContext", i0, i1, i2, i3)
	r0, _ = returns[0].(error)
	return
}

func (d *FraudDetectorDouble) fakeGetModelsPagesWithContext(ctx context.Context, in *frauddetector.GetModelsInput, pager func(*frauddetector.GetModelsOutput, bool) (shouldContinue bool), options ...request.Option) error {
	return d.PaginateWithContext("GetModels", paginators, ctx, in, pager, options...)
}

func (d *FraudDetectorDouble) GetModelsRequest(i0 *frauddetector.GetModelsInput) (r0 *request.Request, r1 *frauddetector.GetModelsOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetModelsRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*frauddetector.GetModelsOutput)
	return
}

func (d *FraudDetectorDouble) GetModelsWithContext(i0 context.Context, i1 *frauddetector.GetModelsInput, i2 ...request.Option) (r0 *frauddetector.GetModelsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetModelsWithContext", i0, i1, i2)
	r0, _ = returns[0].(*frauddetector.GetModelsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *FraudDetectorDouble) fakeGetModelsWithContext(ctx context.Context, in *frauddetector.GetModelsInput, _ ...request.Option) (*frauddetector.GetModelsOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "GetModels cancelled", ctx.Err())
	default:
		return d.GetModels(in)
	}
}

func (d *FraudDetectorDouble) GetOutcomes(i0 *frauddetector.GetOutcomesInput) (r0 *frauddetector.GetOutcomesOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetOutcomes", i0)
	r0, _ = returns[0].(*frauddetector.GetOutcomesOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *FraudDetectorDouble) GetOutcomesPages(i0 *frauddetector.GetOutcomesInput, i1 func(*frauddetector.GetOutcomesOutput, bool) bool) (r0 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetOutcomesPages", i0, i1)
	r0, _ = returns[0].(error)
	return
}

func (d *FraudDetectorDouble) fakeGetOutcomesPages(in *frauddetector.GetOutcomesInput, pager func(*frauddetector.GetOutcomesOutput, bool) (shouldContinue bool)) error {
	return d.Paginate("GetOutcomes", paginators, in, pager)
}

func (d *FraudDetectorDouble) GetOutcomesPagesWithContext(i0 context.Context, i1 *frauddetector.GetOutcomesInput, i2 func(*frauddetector.GetOutcomesOutput, bool) bool, i3 ...request.Option) (r0 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetOutcomesPagesWithContext", i0, i1, i2, i3)
	r0, _ = returns[0].(error)
	return
}

func (d *FraudDetectorDouble) fakeGetOutcomesPagesWithContext(ctx context.Context, in *frauddetector.GetOutcomesInput, pager func(*frauddetector.GetOutcomesOutput, bool) (shouldContinue bool), options ...request.Option) error {
	return d.PaginateWithContext("GetOutcomes", paginators, ctx, in, pager, options...)
}

func (d *FraudDetectorDouble) GetOutcomesRequest(i0 *frauddetector.GetOutcomesInput) (r0 *request.Request, r1 *frauddetector.GetOutcomesOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetOutcomesRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*frauddetector.GetOutcomesOutput)
	return
}

func (d *FraudDetectorDouble) GetOutcomesWithContext(i0 context.Context, i1 *frauddetector.GetOutcomesInput, i2 ...request.Option) (r0 *frauddetector.GetOutcomesOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetOutcomesWithContext", i0, i1, i2)
	r0, _ = returns[0].(*frauddetector.GetOutcomesOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *FraudDetectorDouble) fakeGetOutcomesWithContext(ctx context.Context, in *frauddetector.GetOutcomesInput, _ ...request.Option) (*frauddetector.GetOutcomesOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "GetOutcomes cancelled", ctx.Err())
	default:
		return d.GetOutcomes(in)
	}
}

func (d *FraudDetectorDouble) GetPrediction(i0 *frauddetector.GetPredictionInput) (r0 *frauddetector.GetPredictionOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetPrediction", i0)
	r0, _ = returns[0].(*frauddetector.GetPredictionOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *FraudDetectorDouble) GetPredictionRequest(i0 *frauddetector.GetPredictionInput) (r0 *request.Request, r1 *frauddetector.GetPredictionOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetPredictionRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*frauddetector.GetPredictionOutput)
	return
}

func (d *FraudDetectorDouble) GetPredictionWithContext(i0 context.Context, i1 *frauddetector.GetPredictionInput, i2 ...request.Option) (r0 *frauddetector.GetPredictionOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetPredictionWithContext", i0, i1, i2)
	r0, _ = returns[0].(*frauddetector.GetPredictionOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *FraudDetectorDouble) fakeGetPredictionWithContext(ctx context.Context, in *frauddetector.GetPredictionInput, _ ...request.Option) (*frauddetector.GetPredictionOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "GetPrediction cancelled", ctx.Err())
	default:
		return d.GetPrediction(in)
	}
}

func (d *FraudDetectorDouble) GetRules(i0 *frauddetector.GetRulesInput) (r0 *frauddetector.GetRulesOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetRules", i0)
	r0, _ = returns[0].(*frauddetector.GetRulesOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *FraudDetectorDouble) GetRulesPages(i0 *frauddetector.GetRulesInput, i1 func(*frauddetector.GetRulesOutput, bool) bool) (r0 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetRulesPages", i0, i1)
	r0, _ = returns[0].(error)
	return
}

func (d *FraudDetectorDouble) fakeGetRulesPages(in *frauddetector.GetRulesInput, pager func(*frauddetector.GetRulesOutput, bool) (shouldContinue bool)) error {
	return d.Paginate("GetRules", paginators, in, pager)
}

func (d *FraudDetectorDouble) GetRulesPagesWithContext(i0 context.Context, i1 *frauddetector.GetRulesInput, i2 func(*frauddetector.GetRulesOutput, bool) bool, i3 ...request.Option) (r0 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetRulesPagesWithContext", i0, i1, i2, i3)
	r0, _ = returns[0].(error)
	return
}

func (d *FraudDetectorDouble) fakeGetRulesPagesWithContext(ctx context.Context, in *frauddetector.GetRulesInput, pager func(*frauddetector.GetRulesOutput, bool) (shouldContinue bool), options ...request.Option) error {
	return d.PaginateWithContext("GetRules", paginators, ctx, in, pager, options...)
}

func (d *FraudDetectorDouble) GetRulesRequest(i0 *frauddetector.GetRulesInput) (r0 *request.Request, r1 *frauddetector.GetRulesOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetRulesRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*frauddetector.GetRulesOutput)
	return
}

func (d *FraudDetectorDouble) GetRulesWithContext(i0 context.Context, i1 *frauddetector.GetRulesInput, i2 ...request.Option) (r0 *frauddetector.GetRulesOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetRulesWithContext", i0, i1, i2)
	r0, _ = returns[0].(*frauddetector.GetRulesOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *FraudDetectorDouble) fakeGetRulesWithContext(ctx context.Context, in *frauddetector.GetRulesInput, _ ...request.Option) (*frauddetector.GetRulesOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "GetRules cancelled", ctx.Err())
	default:
		return d.GetRules(in)
	}
}

func (d *FraudDetectorDouble) GetVariables(i0 *frauddetector.GetVariablesInput) (r0 *frauddetector.GetVariablesOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetVariables", i0)
	r0, _ = returns[0].(*frauddetector.GetVariablesOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *FraudDetectorDouble) GetVariablesPages(i0 *frauddetector.GetVariablesInput, i1 func(*frauddetector.GetVariablesOutput, bool) bool) (r0 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetVariablesPages", i0, i1)
	r0, _ = returns[0].(error)
	return
}

func (d *FraudDetectorDouble) fakeGetVariablesPages(in *frauddetector.GetVariablesInput, pager func(*frauddetector.GetVariablesOutput, bool) (shouldContinue bool)) error {
	return d.Paginate("GetVariables", paginators, in, pager)
}

func (d *FraudDetectorDouble) GetVariablesPagesWithContext(i0 context.Context, i1 *frauddetector.GetVariablesInput, i2 func(*frauddetector.GetVariablesOutput, bool) bool, i3 ...request.Option) (r0 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetVariablesPagesWithContext", i0, i1, i2, i3)
	r0, _ = returns[0].(error)
	return
}

func (d *FraudDetectorDouble) fakeGetVariablesPagesWithContext(ctx context.Context, in *frauddetector.GetVariablesInput, pager func(*frauddetector.GetVariablesOutput, bool) (shouldContinue bool), options ...request.Option) error {
	return d.PaginateWithContext("GetVariables", paginators, ctx, in, pager, options...)
}

func (d *FraudDetectorDouble) GetVariablesRequest(i0 *frauddetector.GetVariablesInput) (r0 *request.Request, r1 *frauddetector.GetVariablesOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetVariablesRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*frauddetector.GetVariablesOutput)
	return
}

func (d *FraudDetectorDouble) GetVariablesWithContext(i0 context.Context, i1 *frauddetector.GetVariablesInput, i2 ...request.Option) (r0 *frauddetector.GetVariablesOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetVariablesWithContext", i0, i1, i2)
	r0, _ = returns[0].(*frauddetector.GetVariablesOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *FraudDetectorDouble) fakeGetVariablesWithContext(ctx context.Context, in *frauddetector.GetVariablesInput, _ ...request.Option) (*frauddetector.GetVariablesOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "GetVariables cancelled", ctx.Err())
	default:
		return d.GetVariables(in)
	}
}

func (d *FraudDetectorDouble) PutDetector(i0 *frauddetector.PutDetectorInput) (r0 *frauddetector.PutDetectorOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("PutDetector", i0)
	r0, _ = returns[0].(*frauddetector.PutDetectorOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *FraudDetectorDouble) PutDetectorRequest(i0 *frauddetector.PutDetectorInput) (r0 *request.Request, r1 *frauddetector.PutDetectorOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("PutDetectorRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*frauddetector.PutDetectorOutput)
	return
}

func (d *FraudDetectorDouble) PutDetectorWithContext(i0 context.Context, i1 *frauddetector.PutDetectorInput, i2 ...request.Option) (r0 *frauddetector.PutDetectorOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("PutDetectorWithContext", i0, i1, i2)
	r0, _ = returns[0].(*frauddetector.PutDetectorOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *FraudDetectorDouble) fakePutDetectorWithContext(ctx context.Context, in *frauddetector.PutDetectorInput, _ ...request.Option) (*frauddetector.PutDetectorOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "PutDetector cancelled", ctx.Err())
	default:
		return d.PutDetector(in)
	}
}

func (d *FraudDetectorDouble) PutExternalModel(i0 *frauddetector.PutExternalModelInput) (r0 *frauddetector.PutExternalModelOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("PutExternalModel", i0)
	r0, _ = returns[0].(*frauddetector.PutExternalModelOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *FraudDetectorDouble) PutExternalModelRequest(i0 *frauddetector.PutExternalModelInput) (r0 *request.Request, r1 *frauddetector.PutExternalModelOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("PutExternalModelRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*frauddetector.PutExternalModelOutput)
	return
}

func (d *FraudDetectorDouble) PutExternalModelWithContext(i0 context.Context, i1 *frauddetector.PutExternalModelInput, i2 ...request.Option) (r0 *frauddetector.PutExternalModelOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("PutExternalModelWithContext", i0, i1, i2)
	r0, _ = returns[0].(*frauddetector.PutExternalModelOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *FraudDetectorDouble) fakePutExternalModelWithContext(ctx context.Context, in *frauddetector.PutExternalModelInput, _ ...request.Option) (*frauddetector.PutExternalModelOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "PutExternalModel cancelled", ctx.Err())
	default:
		return d.PutExternalModel(in)
	}
}

func (d *FraudDetectorDouble) PutModel(i0 *frauddetector.PutModelInput) (r0 *frauddetector.PutModelOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("PutModel", i0)
	r0, _ = returns[0].(*frauddetector.PutModelOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *FraudDetectorDouble) PutModelRequest(i0 *frauddetector.PutModelInput) (r0 *request.Request, r1 *frauddetector.PutModelOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("PutModelRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*frauddetector.PutModelOutput)
	return
}

func (d *FraudDetectorDouble) PutModelWithContext(i0 context.Context, i1 *frauddetector.PutModelInput, i2 ...request.Option) (r0 *frauddetector.PutModelOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("PutModelWithContext", i0, i1, i2)
	r0, _ = returns[0].(*frauddetector.PutModelOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *FraudDetectorDouble) fakePutModelWithContext(ctx context.Context, in *frauddetector.PutModelInput, _ ...request.Option) (*frauddetector.PutModelOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "PutModel cancelled", ctx.Err())
	default:
		return d.PutModel(in)
	}
}

func (d *FraudDetectorDouble) PutOutcome(i0 *frauddetector.PutOutcomeInput) (r0 *frauddetector.PutOutcomeOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("PutOutcome", i0)
	r0, _ = returns[0].(*frauddetector.PutOutcomeOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *FraudDetectorDouble) PutOutcomeRequest(i0 *frauddetector.PutOutcomeInput) (r0 *request.Request, r1 *frauddetector.PutOutcomeOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("PutOutcomeRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*frauddetector.PutOutcomeOutput)
	return
}

func (d *FraudDetectorDouble) PutOutcomeWithContext(i0 context.Context, i1 *frauddetector.PutOutcomeInput, i2 ...request.Option) (r0 *frauddetector.PutOutcomeOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("PutOutcomeWithContext", i0, i1, i2)
	r0, _ = returns[0].(*frauddetector.PutOutcomeOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *FraudDetectorDouble) fakePutOutcomeWithContext(ctx context.Context, in *frauddetector.PutOutcomeInput, _ ...request.Option) (*frauddetector.PutOutcomeOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "PutOutcome cancelled", ctx.Err())
	default:
		return d.PutOutcome(in)
	}
}

func (d *FraudDetectorDouble) UpdateDetectorVersion(i0 *frauddetector.UpdateDetectorVersionInput) (r0 *frauddetector.UpdateDetectorVersionOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UpdateDetectorVersion", i0)
	r0, _ = returns[0].(*frauddetector.UpdateDetectorVersionOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *FraudDetectorDouble) UpdateDetectorVersionMetadata(i0 *frauddetector.UpdateDetectorVersionMetadataInput) (r0 *frauddetector.UpdateDetectorVersionMetadataOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UpdateDetectorVersionMetadata", i0)
	r0, _ = returns[0].(*frauddetector.UpdateDetectorVersionMetadataOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *FraudDetectorDouble) UpdateDetectorVersionMetadataRequest(i0 *frauddetector.UpdateDetectorVersionMetadataInput) (r0 *request.Request, r1 *frauddetector.UpdateDetectorVersionMetadataOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UpdateDetectorVersionMetadataRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*frauddetector.UpdateDetectorVersionMetadataOutput)
	return
}

func (d *FraudDetectorDouble) UpdateDetectorVersionMetadataWithContext(i0 context.Context, i1 *frauddetector.UpdateDetectorVersionMetadataInput, i2 ...request.Option) (r0 *frauddetector.UpdateDetectorVersionMetadataOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UpdateDetectorVersionMetadataWithContext", i0, i1, i2)
	r0, _ = returns[0].(*frauddetector.UpdateDetectorVersionMetadataOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *FraudDetectorDouble) fakeUpdateDetectorVersionMetadataWithContext(ctx context.Context, in *frauddetector.UpdateDetectorVersionMetadataInput, _ ...request.Option) (*frauddetector.UpdateDetectorVersionMetadataOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "UpdateDetectorVersionMetadata cancelled", ctx.Err())
	default:
		return d.UpdateDetectorVersionMetadata(in)
	}
}

func (d *FraudDetectorDouble) UpdateDetectorVersionRequest(i0 *frauddetector.UpdateDetectorVersionInput) (r0 *request.Request, r1 *frauddetector.UpdateDetectorVersionOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UpdateDetectorVersionRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*frauddetector.UpdateDetectorVersionOutput)
	return
}

func (d *FraudDetectorDouble) UpdateDetectorVersionStatus(i0 *frauddetector.UpdateDetectorVersionStatusInput) (r0 *frauddetector.UpdateDetectorVersionStatusOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UpdateDetectorVersionStatus", i0)
	r0, _ = returns[0].(*frauddetector.UpdateDetectorVersionStatusOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *FraudDetectorDouble) UpdateDetectorVersionStatusRequest(i0 *frauddetector.UpdateDetectorVersionStatusInput) (r0 *request.Request, r1 *frauddetector.UpdateDetectorVersionStatusOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UpdateDetectorVersionStatusRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*frauddetector.UpdateDetectorVersionStatusOutput)
	return
}

func (d *FraudDetectorDouble) UpdateDetectorVersionStatusWithContext(i0 context.Context, i1 *frauddetector.UpdateDetectorVersionStatusInput, i2 ...request.Option) (r0 *frauddetector.UpdateDetectorVersionStatusOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UpdateDetectorVersionStatusWithContext", i0, i1, i2)
	r0, _ = returns[0].(*frauddetector.UpdateDetectorVersionStatusOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *FraudDetectorDouble) fakeUpdateDetectorVersionStatusWithContext(ctx context.Context, in *frauddetector.UpdateDetectorVersionStatusInput, _ ...request.Option) (*frauddetector.UpdateDetectorVersionStatusOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "UpdateDetectorVersionStatus cancelled", ctx.Err())
	default:
		return d.UpdateDetectorVersionStatus(in)
	}
}

func (d *FraudDetectorDouble) UpdateDetectorVersionWithContext(i0 context.Context, i1 *frauddetector.UpdateDetectorVersionInput, i2 ...request.Option) (r0 *frauddetector.UpdateDetectorVersionOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UpdateDetectorVersionWithContext", i0, i1, i2)
	r0, _ = returns[0].(*frauddetector.UpdateDetectorVersionOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *FraudDetectorDouble) fakeUpdateDetectorVersionWithContext(ctx context.Context, in *frauddetector.UpdateDetectorVersionInput, _ ...request.Option) (*frauddetector.UpdateDetectorVersionOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "UpdateDetectorVersion cancelled", ctx.Err())
	default:
		return d.UpdateDetectorVersion(in)
	}
}

func (d *FraudDetectorDouble) UpdateModelVersion(i0 *frauddetector.UpdateModelVersionInput) (r0 *frauddetector.UpdateModelVersionOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UpdateModelVersion", i0)
	r0, _ = returns[0].(*frauddetector.UpdateModelVersionOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *FraudDetectorDouble) UpdateModelVersionRequest(i0 *frauddetector.UpdateModelVersionInput) (r0 *request.Request, r1 *frauddetector.UpdateModelVersionOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UpdateModelVersionRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*frauddetector.UpdateModelVersionOutput)
	return
}

func (d *FraudDetectorDouble) UpdateModelVersionWithContext(i0 context.Context, i1 *frauddetector.UpdateModelVersionInput, i2 ...request.Option) (r0 *frauddetector.UpdateModelVersionOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UpdateModelVersionWithContext", i0, i1, i2)
	r0, _ = returns[0].(*frauddetector.UpdateModelVersionOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *FraudDetectorDouble) fakeUpdateModelVersionWithContext(ctx context.Context, in *frauddetector.UpdateModelVersionInput, _ ...request.Option) (*frauddetector.UpdateModelVersionOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "UpdateModelVersion cancelled", ctx.Err())
	default:
		return d.UpdateModelVersion(in)
	}
}

func (d *FraudDetectorDouble) UpdateRuleMetadata(i0 *frauddetector.UpdateRuleMetadataInput) (r0 *frauddetector.UpdateRuleMetadataOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UpdateRuleMetadata", i0)
	r0, _ = returns[0].(*frauddetector.UpdateRuleMetadataOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *FraudDetectorDouble) UpdateRuleMetadataRequest(i0 *frauddetector.UpdateRuleMetadataInput) (r0 *request.Request, r1 *frauddetector.UpdateRuleMetadataOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UpdateRuleMetadataRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*frauddetector.UpdateRuleMetadataOutput)
	return
}

func (d *FraudDetectorDouble) UpdateRuleMetadataWithContext(i0 context.Context, i1 *frauddetector.UpdateRuleMetadataInput, i2 ...request.Option) (r0 *frauddetector.UpdateRuleMetadataOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UpdateRuleMetadataWithContext", i0, i1, i2)
	r0, _ = returns[0].(*frauddetector.UpdateRuleMetadataOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *FraudDetectorDouble) fakeUpdateRuleMetadataWithContext(ctx context.Context, in *frauddetector.UpdateRuleMetadataInput, _ ...request.Option) (*frauddetector.UpdateRuleMetadataOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "UpdateRuleMetadata cancelled", ctx.Err())
	default:
		return d.UpdateRuleMetadata(in)
	}
}

func (d *FraudDetectorDouble) UpdateRuleVersion(i0 *frauddetector.UpdateRuleVersionInput) (r0 *frauddetector.UpdateRuleVersionOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UpdateRuleVersion", i0)
	r0, _ = returns[0].(*frauddetector.UpdateRuleVersionOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *FraudDetectorDouble) UpdateRuleVersionRequest(i0 *frauddetector.UpdateRuleVersionInput) (r0 *request.Request, r1 *frauddetector.UpdateRuleVersionOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UpdateRuleVersionRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*frauddetector.UpdateRuleVersionOutput)
	return
}

func (d *FraudDetectorDouble) UpdateRuleVersionWithContext(i0 context.Context, i1 *frauddetector.UpdateRuleVersionInput, i2 ...request.Option) (r0 *frauddetector.UpdateRuleVersionOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UpdateRuleVersionWithContext", i0, i1, i2)
	r0, _ = returns[0].(*frauddetector.UpdateRuleVersionOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *FraudDetectorDouble) fakeUpdateRuleVersionWithContext(ctx context.Context, in *frauddetector.UpdateRuleVersionInput, _ ...request.Option) (*frauddetector.UpdateRuleVersionOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "UpdateRuleVersion cancelled", ctx.Err())
	default:
		return d.UpdateRuleVersion(in)
	}
}

func (d *FraudDetectorDouble) UpdateVariable(i0 *frauddetector.UpdateVariableInput) (r0 *frauddetector.UpdateVariableOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UpdateVariable", i0)
	r0, _ = returns[0].(*frauddetector.UpdateVariableOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *FraudDetectorDouble) UpdateVariableRequest(i0 *frauddetector.UpdateVariableInput) (r0 *request.Request, r1 *frauddetector.UpdateVariableOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UpdateVariableRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*frauddetector.UpdateVariableOutput)
	return
}

func (d *FraudDetectorDouble) UpdateVariableWithContext(i0 context.Context, i1 *frauddetector.UpdateVariableInput, i2 ...request.Option) (r0 *frauddetector.UpdateVariableOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UpdateVariableWithContext", i0, i1, i2)
	r0, _ = returns[0].(*frauddetector.UpdateVariableOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *FraudDetectorDouble) fakeUpdateVariableWithContext(ctx context.Context, in *frauddetector.UpdateVariableInput, _ ...request.Option) (*frauddetector.UpdateVariableOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "UpdateVariable cancelled", ctx.Err())
	default:
		return d.UpdateVariable(in)
	}
}
