// Code generated by go doublegen; DO NOT EDIT.
// This file was generated at 2020-02-14T22:14:21+11:00

// Package pinpointdouble provides a TestDouble implementation of pinpointiface.PinpointAPI
package pinpointdouble

import (
	"context"

	"github.com/aws/aws-sdk-go/aws/awserr"
	"github.com/aws/aws-sdk-go/aws/request"
	"github.com/aws/aws-sdk-go/service/pinpoint"
	"github.com/aws/aws-sdk-go/service/pinpoint/pinpointiface"
	"github.com/lwoggardner/awsdouble"
	"github.com/lwoggardner/godouble/godouble"
)

// PinpointDouble is TestDouble for pinpointiface.PinpointAPI
type PinpointDouble struct {
	pinpointiface.PinpointAPI
	*awsdouble.AWSTestDouble
}

// Constructor for PinpointDouble
// Default configuration will ensure
//   * API operations not explicitly stubbed will return an empty output struct pointer, and nil error.
//     To simulate long polling, "Poll" operations will return these values after a random delay of up to 100ms.
//   * WithContext methods implement a 'Fake' method that returns a cancellation error if the context is cancelled
//      before the method is called.
//   * Pages and PagesWithContext methods similarly implement a 'Fake' method that paginates over the underlying method.
//
//    This allows tests to only stub the simple api methods and be generally unconcerned whether the SUT is using the
//      Context or Pagination forms of the API.
//
func NewDouble(t godouble.T, configurators ...func(*awsdouble.AWSTestDouble)) *PinpointDouble {
	result := &PinpointDouble{}

	configurators = append([]func(configurator *awsdouble.AWSTestDouble){func(d *awsdouble.AWSTestDouble) {
		d.SetDefaultCall(result.defaultMethodCall)
		d.SetDefaultReturnValues(result.defaultReturnValues)
	}}, configurators...)

	result.AWSTestDouble = awsdouble.NewDouble(t, (*pinpointiface.PinpointAPI)(nil), configurators...)
	return result
}

func (d *PinpointDouble) defaultReturnValues(m godouble.Method) godouble.ReturnValues {
	return d.DefaultReturnValues(m)
}

func (d *PinpointDouble) defaultMethodCall(m godouble.Method) godouble.MethodCall {
	switch m.Reflect().Name {

	case "CreateAppWithContext":
		return m.Fake(d.fakeCreateAppWithContext)

	case "CreateCampaignWithContext":
		return m.Fake(d.fakeCreateCampaignWithContext)

	case "CreateEmailTemplateWithContext":
		return m.Fake(d.fakeCreateEmailTemplateWithContext)

	case "CreateExportJobWithContext":
		return m.Fake(d.fakeCreateExportJobWithContext)

	case "CreateImportJobWithContext":
		return m.Fake(d.fakeCreateImportJobWithContext)

	case "CreateJourneyWithContext":
		return m.Fake(d.fakeCreateJourneyWithContext)

	case "CreatePushTemplateWithContext":
		return m.Fake(d.fakeCreatePushTemplateWithContext)

	case "CreateSegmentWithContext":
		return m.Fake(d.fakeCreateSegmentWithContext)

	case "CreateSmsTemplateWithContext":
		return m.Fake(d.fakeCreateSmsTemplateWithContext)

	case "CreateVoiceTemplateWithContext":
		return m.Fake(d.fakeCreateVoiceTemplateWithContext)

	case "DeleteAdmChannelWithContext":
		return m.Fake(d.fakeDeleteAdmChannelWithContext)

	case "DeleteApnsChannelWithContext":
		return m.Fake(d.fakeDeleteApnsChannelWithContext)

	case "DeleteApnsSandboxChannelWithContext":
		return m.Fake(d.fakeDeleteApnsSandboxChannelWithContext)

	case "DeleteApnsVoipChannelWithContext":
		return m.Fake(d.fakeDeleteApnsVoipChannelWithContext)

	case "DeleteApnsVoipSandboxChannelWithContext":
		return m.Fake(d.fakeDeleteApnsVoipSandboxChannelWithContext)

	case "DeleteAppWithContext":
		return m.Fake(d.fakeDeleteAppWithContext)

	case "DeleteBaiduChannelWithContext":
		return m.Fake(d.fakeDeleteBaiduChannelWithContext)

	case "DeleteCampaignWithContext":
		return m.Fake(d.fakeDeleteCampaignWithContext)

	case "DeleteEmailChannelWithContext":
		return m.Fake(d.fakeDeleteEmailChannelWithContext)

	case "DeleteEmailTemplateWithContext":
		return m.Fake(d.fakeDeleteEmailTemplateWithContext)

	case "DeleteEndpointWithContext":
		return m.Fake(d.fakeDeleteEndpointWithContext)

	case "DeleteEventStreamWithContext":
		return m.Fake(d.fakeDeleteEventStreamWithContext)

	case "DeleteGcmChannelWithContext":
		return m.Fake(d.fakeDeleteGcmChannelWithContext)

	case "DeleteJourneyWithContext":
		return m.Fake(d.fakeDeleteJourneyWithContext)

	case "DeletePushTemplateWithContext":
		return m.Fake(d.fakeDeletePushTemplateWithContext)

	case "DeleteSegmentWithContext":
		return m.Fake(d.fakeDeleteSegmentWithContext)

	case "DeleteSmsChannelWithContext":
		return m.Fake(d.fakeDeleteSmsChannelWithContext)

	case "DeleteSmsTemplateWithContext":
		return m.Fake(d.fakeDeleteSmsTemplateWithContext)

	case "DeleteUserEndpointsWithContext":
		return m.Fake(d.fakeDeleteUserEndpointsWithContext)

	case "DeleteVoiceChannelWithContext":
		return m.Fake(d.fakeDeleteVoiceChannelWithContext)

	case "DeleteVoiceTemplateWithContext":
		return m.Fake(d.fakeDeleteVoiceTemplateWithContext)

	case "GetAdmChannelWithContext":
		return m.Fake(d.fakeGetAdmChannelWithContext)

	case "GetApnsChannelWithContext":
		return m.Fake(d.fakeGetApnsChannelWithContext)

	case "GetApnsSandboxChannelWithContext":
		return m.Fake(d.fakeGetApnsSandboxChannelWithContext)

	case "GetApnsVoipChannelWithContext":
		return m.Fake(d.fakeGetApnsVoipChannelWithContext)

	case "GetApnsVoipSandboxChannelWithContext":
		return m.Fake(d.fakeGetApnsVoipSandboxChannelWithContext)

	case "GetAppWithContext":
		return m.Fake(d.fakeGetAppWithContext)

	case "GetApplicationDateRangeKpiWithContext":
		return m.Fake(d.fakeGetApplicationDateRangeKpiWithContext)

	case "GetApplicationSettingsWithContext":
		return m.Fake(d.fakeGetApplicationSettingsWithContext)

	case "GetAppsWithContext":
		return m.Fake(d.fakeGetAppsWithContext)

	case "GetBaiduChannelWithContext":
		return m.Fake(d.fakeGetBaiduChannelWithContext)

	case "GetCampaignActivitiesWithContext":
		return m.Fake(d.fakeGetCampaignActivitiesWithContext)

	case "GetCampaignDateRangeKpiWithContext":
		return m.Fake(d.fakeGetCampaignDateRangeKpiWithContext)

	case "GetCampaignVersionWithContext":
		return m.Fake(d.fakeGetCampaignVersionWithContext)

	case "GetCampaignVersionsWithContext":
		return m.Fake(d.fakeGetCampaignVersionsWithContext)

	case "GetCampaignWithContext":
		return m.Fake(d.fakeGetCampaignWithContext)

	case "GetCampaignsWithContext":
		return m.Fake(d.fakeGetCampaignsWithContext)

	case "GetChannelsWithContext":
		return m.Fake(d.fakeGetChannelsWithContext)

	case "GetEmailChannelWithContext":
		return m.Fake(d.fakeGetEmailChannelWithContext)

	case "GetEmailTemplateWithContext":
		return m.Fake(d.fakeGetEmailTemplateWithContext)

	case "GetEndpointWithContext":
		return m.Fake(d.fakeGetEndpointWithContext)

	case "GetEventStreamWithContext":
		return m.Fake(d.fakeGetEventStreamWithContext)

	case "GetExportJobWithContext":
		return m.Fake(d.fakeGetExportJobWithContext)

	case "GetExportJobsWithContext":
		return m.Fake(d.fakeGetExportJobsWithContext)

	case "GetGcmChannelWithContext":
		return m.Fake(d.fakeGetGcmChannelWithContext)

	case "GetImportJobWithContext":
		return m.Fake(d.fakeGetImportJobWithContext)

	case "GetImportJobsWithContext":
		return m.Fake(d.fakeGetImportJobsWithContext)

	case "GetJourneyDateRangeKpiWithContext":
		return m.Fake(d.fakeGetJourneyDateRangeKpiWithContext)

	case "GetJourneyExecutionActivityMetricsWithContext":
		return m.Fake(d.fakeGetJourneyExecutionActivityMetricsWithContext)

	case "GetJourneyExecutionMetricsWithContext":
		return m.Fake(d.fakeGetJourneyExecutionMetricsWithContext)

	case "GetJourneyWithContext":
		return m.Fake(d.fakeGetJourneyWithContext)

	case "GetPushTemplateWithContext":
		return m.Fake(d.fakeGetPushTemplateWithContext)

	case "GetSegmentExportJobsWithContext":
		return m.Fake(d.fakeGetSegmentExportJobsWithContext)

	case "GetSegmentImportJobsWithContext":
		return m.Fake(d.fakeGetSegmentImportJobsWithContext)

	case "GetSegmentVersionWithContext":
		return m.Fake(d.fakeGetSegmentVersionWithContext)

	case "GetSegmentVersionsWithContext":
		return m.Fake(d.fakeGetSegmentVersionsWithContext)

	case "GetSegmentWithContext":
		return m.Fake(d.fakeGetSegmentWithContext)

	case "GetSegmentsWithContext":
		return m.Fake(d.fakeGetSegmentsWithContext)

	case "GetSmsChannelWithContext":
		return m.Fake(d.fakeGetSmsChannelWithContext)

	case "GetSmsTemplateWithContext":
		return m.Fake(d.fakeGetSmsTemplateWithContext)

	case "GetUserEndpointsWithContext":
		return m.Fake(d.fakeGetUserEndpointsWithContext)

	case "GetVoiceChannelWithContext":
		return m.Fake(d.fakeGetVoiceChannelWithContext)

	case "GetVoiceTemplateWithContext":
		return m.Fake(d.fakeGetVoiceTemplateWithContext)

	case "ListJourneysWithContext":
		return m.Fake(d.fakeListJourneysWithContext)

	case "ListTagsForResourceWithContext":
		return m.Fake(d.fakeListTagsForResourceWithContext)

	case "ListTemplateVersionsWithContext":
		return m.Fake(d.fakeListTemplateVersionsWithContext)

	case "ListTemplatesWithContext":
		return m.Fake(d.fakeListTemplatesWithContext)

	case "PhoneNumberValidateWithContext":
		return m.Fake(d.fakePhoneNumberValidateWithContext)

	case "PutEventStreamWithContext":
		return m.Fake(d.fakePutEventStreamWithContext)

	case "PutEventsWithContext":
		return m.Fake(d.fakePutEventsWithContext)

	case "RemoveAttributesWithContext":
		return m.Fake(d.fakeRemoveAttributesWithContext)

	case "SendMessagesWithContext":
		return m.Fake(d.fakeSendMessagesWithContext)

	case "SendUsersMessagesWithContext":
		return m.Fake(d.fakeSendUsersMessagesWithContext)

	case "TagResourceWithContext":
		return m.Fake(d.fakeTagResourceWithContext)

	case "UntagResourceWithContext":
		return m.Fake(d.fakeUntagResourceWithContext)

	case "UpdateAdmChannelWithContext":
		return m.Fake(d.fakeUpdateAdmChannelWithContext)

	case "UpdateApnsChannelWithContext":
		return m.Fake(d.fakeUpdateApnsChannelWithContext)

	case "UpdateApnsSandboxChannelWithContext":
		return m.Fake(d.fakeUpdateApnsSandboxChannelWithContext)

	case "UpdateApnsVoipChannelWithContext":
		return m.Fake(d.fakeUpdateApnsVoipChannelWithContext)

	case "UpdateApnsVoipSandboxChannelWithContext":
		return m.Fake(d.fakeUpdateApnsVoipSandboxChannelWithContext)

	case "UpdateApplicationSettingsWithContext":
		return m.Fake(d.fakeUpdateApplicationSettingsWithContext)

	case "UpdateBaiduChannelWithContext":
		return m.Fake(d.fakeUpdateBaiduChannelWithContext)

	case "UpdateCampaignWithContext":
		return m.Fake(d.fakeUpdateCampaignWithContext)

	case "UpdateEmailChannelWithContext":
		return m.Fake(d.fakeUpdateEmailChannelWithContext)

	case "UpdateEmailTemplateWithContext":
		return m.Fake(d.fakeUpdateEmailTemplateWithContext)

	case "UpdateEndpointWithContext":
		return m.Fake(d.fakeUpdateEndpointWithContext)

	case "UpdateEndpointsBatchWithContext":
		return m.Fake(d.fakeUpdateEndpointsBatchWithContext)

	case "UpdateGcmChannelWithContext":
		return m.Fake(d.fakeUpdateGcmChannelWithContext)

	case "UpdateJourneyStateWithContext":
		return m.Fake(d.fakeUpdateJourneyStateWithContext)

	case "UpdateJourneyWithContext":
		return m.Fake(d.fakeUpdateJourneyWithContext)

	case "UpdatePushTemplateWithContext":
		return m.Fake(d.fakeUpdatePushTemplateWithContext)

	case "UpdateSegmentWithContext":
		return m.Fake(d.fakeUpdateSegmentWithContext)

	case "UpdateSmsChannelWithContext":
		return m.Fake(d.fakeUpdateSmsChannelWithContext)

	case "UpdateSmsTemplateWithContext":
		return m.Fake(d.fakeUpdateSmsTemplateWithContext)

	case "UpdateTemplateActiveVersionWithContext":
		return m.Fake(d.fakeUpdateTemplateActiveVersionWithContext)

	case "UpdateVoiceChannelWithContext":
		return m.Fake(d.fakeUpdateVoiceChannelWithContext)

	case "UpdateVoiceTemplateWithContext":
		return m.Fake(d.fakeUpdateVoiceTemplateWithContext)

	default:
		return nil
	}
}

func (d *PinpointDouble) CreateApp(i0 *pinpoint.CreateAppInput) (r0 *pinpoint.CreateAppOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreateApp", i0)
	r0, _ = returns[0].(*pinpoint.CreateAppOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointDouble) CreateAppRequest(i0 *pinpoint.CreateAppInput) (r0 *request.Request, r1 *pinpoint.CreateAppOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreateAppRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*pinpoint.CreateAppOutput)
	return
}

func (d *PinpointDouble) CreateAppWithContext(i0 context.Context, i1 *pinpoint.CreateAppInput, i2 ...request.Option) (r0 *pinpoint.CreateAppOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreateAppWithContext", i0, i1, i2)
	r0, _ = returns[0].(*pinpoint.CreateAppOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointDouble) fakeCreateAppWithContext(ctx context.Context, in *pinpoint.CreateAppInput, _ ...request.Option) (*pinpoint.CreateAppOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "CreateApp cancelled", ctx.Err())
	default:
		return d.CreateApp(in)
	}
}

func (d *PinpointDouble) CreateCampaign(i0 *pinpoint.CreateCampaignInput) (r0 *pinpoint.CreateCampaignOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreateCampaign", i0)
	r0, _ = returns[0].(*pinpoint.CreateCampaignOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointDouble) CreateCampaignRequest(i0 *pinpoint.CreateCampaignInput) (r0 *request.Request, r1 *pinpoint.CreateCampaignOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreateCampaignRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*pinpoint.CreateCampaignOutput)
	return
}

func (d *PinpointDouble) CreateCampaignWithContext(i0 context.Context, i1 *pinpoint.CreateCampaignInput, i2 ...request.Option) (r0 *pinpoint.CreateCampaignOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreateCampaignWithContext", i0, i1, i2)
	r0, _ = returns[0].(*pinpoint.CreateCampaignOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointDouble) fakeCreateCampaignWithContext(ctx context.Context, in *pinpoint.CreateCampaignInput, _ ...request.Option) (*pinpoint.CreateCampaignOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "CreateCampaign cancelled", ctx.Err())
	default:
		return d.CreateCampaign(in)
	}
}

func (d *PinpointDouble) CreateEmailTemplate(i0 *pinpoint.CreateEmailTemplateInput) (r0 *pinpoint.CreateEmailTemplateOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreateEmailTemplate", i0)
	r0, _ = returns[0].(*pinpoint.CreateEmailTemplateOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointDouble) CreateEmailTemplateRequest(i0 *pinpoint.CreateEmailTemplateInput) (r0 *request.Request, r1 *pinpoint.CreateEmailTemplateOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreateEmailTemplateRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*pinpoint.CreateEmailTemplateOutput)
	return
}

func (d *PinpointDouble) CreateEmailTemplateWithContext(i0 context.Context, i1 *pinpoint.CreateEmailTemplateInput, i2 ...request.Option) (r0 *pinpoint.CreateEmailTemplateOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreateEmailTemplateWithContext", i0, i1, i2)
	r0, _ = returns[0].(*pinpoint.CreateEmailTemplateOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointDouble) fakeCreateEmailTemplateWithContext(ctx context.Context, in *pinpoint.CreateEmailTemplateInput, _ ...request.Option) (*pinpoint.CreateEmailTemplateOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "CreateEmailTemplate cancelled", ctx.Err())
	default:
		return d.CreateEmailTemplate(in)
	}
}

func (d *PinpointDouble) CreateExportJob(i0 *pinpoint.CreateExportJobInput) (r0 *pinpoint.CreateExportJobOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreateExportJob", i0)
	r0, _ = returns[0].(*pinpoint.CreateExportJobOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointDouble) CreateExportJobRequest(i0 *pinpoint.CreateExportJobInput) (r0 *request.Request, r1 *pinpoint.CreateExportJobOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreateExportJobRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*pinpoint.CreateExportJobOutput)
	return
}

func (d *PinpointDouble) CreateExportJobWithContext(i0 context.Context, i1 *pinpoint.CreateExportJobInput, i2 ...request.Option) (r0 *pinpoint.CreateExportJobOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreateExportJobWithContext", i0, i1, i2)
	r0, _ = returns[0].(*pinpoint.CreateExportJobOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointDouble) fakeCreateExportJobWithContext(ctx context.Context, in *pinpoint.CreateExportJobInput, _ ...request.Option) (*pinpoint.CreateExportJobOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "CreateExportJob cancelled", ctx.Err())
	default:
		return d.CreateExportJob(in)
	}
}

func (d *PinpointDouble) CreateImportJob(i0 *pinpoint.CreateImportJobInput) (r0 *pinpoint.CreateImportJobOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreateImportJob", i0)
	r0, _ = returns[0].(*pinpoint.CreateImportJobOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointDouble) CreateImportJobRequest(i0 *pinpoint.CreateImportJobInput) (r0 *request.Request, r1 *pinpoint.CreateImportJobOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreateImportJobRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*pinpoint.CreateImportJobOutput)
	return
}

func (d *PinpointDouble) CreateImportJobWithContext(i0 context.Context, i1 *pinpoint.CreateImportJobInput, i2 ...request.Option) (r0 *pinpoint.CreateImportJobOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreateImportJobWithContext", i0, i1, i2)
	r0, _ = returns[0].(*pinpoint.CreateImportJobOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointDouble) fakeCreateImportJobWithContext(ctx context.Context, in *pinpoint.CreateImportJobInput, _ ...request.Option) (*pinpoint.CreateImportJobOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "CreateImportJob cancelled", ctx.Err())
	default:
		return d.CreateImportJob(in)
	}
}

func (d *PinpointDouble) CreateJourney(i0 *pinpoint.CreateJourneyInput) (r0 *pinpoint.CreateJourneyOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreateJourney", i0)
	r0, _ = returns[0].(*pinpoint.CreateJourneyOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointDouble) CreateJourneyRequest(i0 *pinpoint.CreateJourneyInput) (r0 *request.Request, r1 *pinpoint.CreateJourneyOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreateJourneyRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*pinpoint.CreateJourneyOutput)
	return
}

func (d *PinpointDouble) CreateJourneyWithContext(i0 context.Context, i1 *pinpoint.CreateJourneyInput, i2 ...request.Option) (r0 *pinpoint.CreateJourneyOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreateJourneyWithContext", i0, i1, i2)
	r0, _ = returns[0].(*pinpoint.CreateJourneyOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointDouble) fakeCreateJourneyWithContext(ctx context.Context, in *pinpoint.CreateJourneyInput, _ ...request.Option) (*pinpoint.CreateJourneyOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "CreateJourney cancelled", ctx.Err())
	default:
		return d.CreateJourney(in)
	}
}

func (d *PinpointDouble) CreatePushTemplate(i0 *pinpoint.CreatePushTemplateInput) (r0 *pinpoint.CreatePushTemplateOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreatePushTemplate", i0)
	r0, _ = returns[0].(*pinpoint.CreatePushTemplateOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointDouble) CreatePushTemplateRequest(i0 *pinpoint.CreatePushTemplateInput) (r0 *request.Request, r1 *pinpoint.CreatePushTemplateOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreatePushTemplateRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*pinpoint.CreatePushTemplateOutput)
	return
}

func (d *PinpointDouble) CreatePushTemplateWithContext(i0 context.Context, i1 *pinpoint.CreatePushTemplateInput, i2 ...request.Option) (r0 *pinpoint.CreatePushTemplateOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreatePushTemplateWithContext", i0, i1, i2)
	r0, _ = returns[0].(*pinpoint.CreatePushTemplateOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointDouble) fakeCreatePushTemplateWithContext(ctx context.Context, in *pinpoint.CreatePushTemplateInput, _ ...request.Option) (*pinpoint.CreatePushTemplateOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "CreatePushTemplate cancelled", ctx.Err())
	default:
		return d.CreatePushTemplate(in)
	}
}

func (d *PinpointDouble) CreateSegment(i0 *pinpoint.CreateSegmentInput) (r0 *pinpoint.CreateSegmentOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreateSegment", i0)
	r0, _ = returns[0].(*pinpoint.CreateSegmentOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointDouble) CreateSegmentRequest(i0 *pinpoint.CreateSegmentInput) (r0 *request.Request, r1 *pinpoint.CreateSegmentOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreateSegmentRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*pinpoint.CreateSegmentOutput)
	return
}

func (d *PinpointDouble) CreateSegmentWithContext(i0 context.Context, i1 *pinpoint.CreateSegmentInput, i2 ...request.Option) (r0 *pinpoint.CreateSegmentOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreateSegmentWithContext", i0, i1, i2)
	r0, _ = returns[0].(*pinpoint.CreateSegmentOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointDouble) fakeCreateSegmentWithContext(ctx context.Context, in *pinpoint.CreateSegmentInput, _ ...request.Option) (*pinpoint.CreateSegmentOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "CreateSegment cancelled", ctx.Err())
	default:
		return d.CreateSegment(in)
	}
}

func (d *PinpointDouble) CreateSmsTemplate(i0 *pinpoint.CreateSmsTemplateInput) (r0 *pinpoint.CreateSmsTemplateOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreateSmsTemplate", i0)
	r0, _ = returns[0].(*pinpoint.CreateSmsTemplateOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointDouble) CreateSmsTemplateRequest(i0 *pinpoint.CreateSmsTemplateInput) (r0 *request.Request, r1 *pinpoint.CreateSmsTemplateOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreateSmsTemplateRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*pinpoint.CreateSmsTemplateOutput)
	return
}

func (d *PinpointDouble) CreateSmsTemplateWithContext(i0 context.Context, i1 *pinpoint.CreateSmsTemplateInput, i2 ...request.Option) (r0 *pinpoint.CreateSmsTemplateOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreateSmsTemplateWithContext", i0, i1, i2)
	r0, _ = returns[0].(*pinpoint.CreateSmsTemplateOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointDouble) fakeCreateSmsTemplateWithContext(ctx context.Context, in *pinpoint.CreateSmsTemplateInput, _ ...request.Option) (*pinpoint.CreateSmsTemplateOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "CreateSmsTemplate cancelled", ctx.Err())
	default:
		return d.CreateSmsTemplate(in)
	}
}

func (d *PinpointDouble) CreateVoiceTemplate(i0 *pinpoint.CreateVoiceTemplateInput) (r0 *pinpoint.CreateVoiceTemplateOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreateVoiceTemplate", i0)
	r0, _ = returns[0].(*pinpoint.CreateVoiceTemplateOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointDouble) CreateVoiceTemplateRequest(i0 *pinpoint.CreateVoiceTemplateInput) (r0 *request.Request, r1 *pinpoint.CreateVoiceTemplateOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreateVoiceTemplateRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*pinpoint.CreateVoiceTemplateOutput)
	return
}

func (d *PinpointDouble) CreateVoiceTemplateWithContext(i0 context.Context, i1 *pinpoint.CreateVoiceTemplateInput, i2 ...request.Option) (r0 *pinpoint.CreateVoiceTemplateOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreateVoiceTemplateWithContext", i0, i1, i2)
	r0, _ = returns[0].(*pinpoint.CreateVoiceTemplateOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointDouble) fakeCreateVoiceTemplateWithContext(ctx context.Context, in *pinpoint.CreateVoiceTemplateInput, _ ...request.Option) (*pinpoint.CreateVoiceTemplateOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "CreateVoiceTemplate cancelled", ctx.Err())
	default:
		return d.CreateVoiceTemplate(in)
	}
}

func (d *PinpointDouble) DeleteAdmChannel(i0 *pinpoint.DeleteAdmChannelInput) (r0 *pinpoint.DeleteAdmChannelOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteAdmChannel", i0)
	r0, _ = returns[0].(*pinpoint.DeleteAdmChannelOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointDouble) DeleteAdmChannelRequest(i0 *pinpoint.DeleteAdmChannelInput) (r0 *request.Request, r1 *pinpoint.DeleteAdmChannelOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteAdmChannelRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*pinpoint.DeleteAdmChannelOutput)
	return
}

func (d *PinpointDouble) DeleteAdmChannelWithContext(i0 context.Context, i1 *pinpoint.DeleteAdmChannelInput, i2 ...request.Option) (r0 *pinpoint.DeleteAdmChannelOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteAdmChannelWithContext", i0, i1, i2)
	r0, _ = returns[0].(*pinpoint.DeleteAdmChannelOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointDouble) fakeDeleteAdmChannelWithContext(ctx context.Context, in *pinpoint.DeleteAdmChannelInput, _ ...request.Option) (*pinpoint.DeleteAdmChannelOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "DeleteAdmChannel cancelled", ctx.Err())
	default:
		return d.DeleteAdmChannel(in)
	}
}

func (d *PinpointDouble) DeleteApnsChannel(i0 *pinpoint.DeleteApnsChannelInput) (r0 *pinpoint.DeleteApnsChannelOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteApnsChannel", i0)
	r0, _ = returns[0].(*pinpoint.DeleteApnsChannelOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointDouble) DeleteApnsChannelRequest(i0 *pinpoint.DeleteApnsChannelInput) (r0 *request.Request, r1 *pinpoint.DeleteApnsChannelOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteApnsChannelRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*pinpoint.DeleteApnsChannelOutput)
	return
}

func (d *PinpointDouble) DeleteApnsChannelWithContext(i0 context.Context, i1 *pinpoint.DeleteApnsChannelInput, i2 ...request.Option) (r0 *pinpoint.DeleteApnsChannelOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteApnsChannelWithContext", i0, i1, i2)
	r0, _ = returns[0].(*pinpoint.DeleteApnsChannelOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointDouble) fakeDeleteApnsChannelWithContext(ctx context.Context, in *pinpoint.DeleteApnsChannelInput, _ ...request.Option) (*pinpoint.DeleteApnsChannelOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "DeleteApnsChannel cancelled", ctx.Err())
	default:
		return d.DeleteApnsChannel(in)
	}
}

func (d *PinpointDouble) DeleteApnsSandboxChannel(i0 *pinpoint.DeleteApnsSandboxChannelInput) (r0 *pinpoint.DeleteApnsSandboxChannelOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteApnsSandboxChannel", i0)
	r0, _ = returns[0].(*pinpoint.DeleteApnsSandboxChannelOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointDouble) DeleteApnsSandboxChannelRequest(i0 *pinpoint.DeleteApnsSandboxChannelInput) (r0 *request.Request, r1 *pinpoint.DeleteApnsSandboxChannelOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteApnsSandboxChannelRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*pinpoint.DeleteApnsSandboxChannelOutput)
	return
}

func (d *PinpointDouble) DeleteApnsSandboxChannelWithContext(i0 context.Context, i1 *pinpoint.DeleteApnsSandboxChannelInput, i2 ...request.Option) (r0 *pinpoint.DeleteApnsSandboxChannelOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteApnsSandboxChannelWithContext", i0, i1, i2)
	r0, _ = returns[0].(*pinpoint.DeleteApnsSandboxChannelOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointDouble) fakeDeleteApnsSandboxChannelWithContext(ctx context.Context, in *pinpoint.DeleteApnsSandboxChannelInput, _ ...request.Option) (*pinpoint.DeleteApnsSandboxChannelOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "DeleteApnsSandboxChannel cancelled", ctx.Err())
	default:
		return d.DeleteApnsSandboxChannel(in)
	}
}

func (d *PinpointDouble) DeleteApnsVoipChannel(i0 *pinpoint.DeleteApnsVoipChannelInput) (r0 *pinpoint.DeleteApnsVoipChannelOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteApnsVoipChannel", i0)
	r0, _ = returns[0].(*pinpoint.DeleteApnsVoipChannelOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointDouble) DeleteApnsVoipChannelRequest(i0 *pinpoint.DeleteApnsVoipChannelInput) (r0 *request.Request, r1 *pinpoint.DeleteApnsVoipChannelOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteApnsVoipChannelRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*pinpoint.DeleteApnsVoipChannelOutput)
	return
}

func (d *PinpointDouble) DeleteApnsVoipChannelWithContext(i0 context.Context, i1 *pinpoint.DeleteApnsVoipChannelInput, i2 ...request.Option) (r0 *pinpoint.DeleteApnsVoipChannelOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteApnsVoipChannelWithContext", i0, i1, i2)
	r0, _ = returns[0].(*pinpoint.DeleteApnsVoipChannelOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointDouble) fakeDeleteApnsVoipChannelWithContext(ctx context.Context, in *pinpoint.DeleteApnsVoipChannelInput, _ ...request.Option) (*pinpoint.DeleteApnsVoipChannelOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "DeleteApnsVoipChannel cancelled", ctx.Err())
	default:
		return d.DeleteApnsVoipChannel(in)
	}
}

func (d *PinpointDouble) DeleteApnsVoipSandboxChannel(i0 *pinpoint.DeleteApnsVoipSandboxChannelInput) (r0 *pinpoint.DeleteApnsVoipSandboxChannelOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteApnsVoipSandboxChannel", i0)
	r0, _ = returns[0].(*pinpoint.DeleteApnsVoipSandboxChannelOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointDouble) DeleteApnsVoipSandboxChannelRequest(i0 *pinpoint.DeleteApnsVoipSandboxChannelInput) (r0 *request.Request, r1 *pinpoint.DeleteApnsVoipSandboxChannelOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteApnsVoipSandboxChannelRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*pinpoint.DeleteApnsVoipSandboxChannelOutput)
	return
}

func (d *PinpointDouble) DeleteApnsVoipSandboxChannelWithContext(i0 context.Context, i1 *pinpoint.DeleteApnsVoipSandboxChannelInput, i2 ...request.Option) (r0 *pinpoint.DeleteApnsVoipSandboxChannelOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteApnsVoipSandboxChannelWithContext", i0, i1, i2)
	r0, _ = returns[0].(*pinpoint.DeleteApnsVoipSandboxChannelOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointDouble) fakeDeleteApnsVoipSandboxChannelWithContext(ctx context.Context, in *pinpoint.DeleteApnsVoipSandboxChannelInput, _ ...request.Option) (*pinpoint.DeleteApnsVoipSandboxChannelOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "DeleteApnsVoipSandboxChannel cancelled", ctx.Err())
	default:
		return d.DeleteApnsVoipSandboxChannel(in)
	}
}

func (d *PinpointDouble) DeleteApp(i0 *pinpoint.DeleteAppInput) (r0 *pinpoint.DeleteAppOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteApp", i0)
	r0, _ = returns[0].(*pinpoint.DeleteAppOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointDouble) DeleteAppRequest(i0 *pinpoint.DeleteAppInput) (r0 *request.Request, r1 *pinpoint.DeleteAppOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteAppRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*pinpoint.DeleteAppOutput)
	return
}

func (d *PinpointDouble) DeleteAppWithContext(i0 context.Context, i1 *pinpoint.DeleteAppInput, i2 ...request.Option) (r0 *pinpoint.DeleteAppOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteAppWithContext", i0, i1, i2)
	r0, _ = returns[0].(*pinpoint.DeleteAppOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointDouble) fakeDeleteAppWithContext(ctx context.Context, in *pinpoint.DeleteAppInput, _ ...request.Option) (*pinpoint.DeleteAppOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "DeleteApp cancelled", ctx.Err())
	default:
		return d.DeleteApp(in)
	}
}

func (d *PinpointDouble) DeleteBaiduChannel(i0 *pinpoint.DeleteBaiduChannelInput) (r0 *pinpoint.DeleteBaiduChannelOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteBaiduChannel", i0)
	r0, _ = returns[0].(*pinpoint.DeleteBaiduChannelOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointDouble) DeleteBaiduChannelRequest(i0 *pinpoint.DeleteBaiduChannelInput) (r0 *request.Request, r1 *pinpoint.DeleteBaiduChannelOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteBaiduChannelRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*pinpoint.DeleteBaiduChannelOutput)
	return
}

func (d *PinpointDouble) DeleteBaiduChannelWithContext(i0 context.Context, i1 *pinpoint.DeleteBaiduChannelInput, i2 ...request.Option) (r0 *pinpoint.DeleteBaiduChannelOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteBaiduChannelWithContext", i0, i1, i2)
	r0, _ = returns[0].(*pinpoint.DeleteBaiduChannelOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointDouble) fakeDeleteBaiduChannelWithContext(ctx context.Context, in *pinpoint.DeleteBaiduChannelInput, _ ...request.Option) (*pinpoint.DeleteBaiduChannelOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "DeleteBaiduChannel cancelled", ctx.Err())
	default:
		return d.DeleteBaiduChannel(in)
	}
}

func (d *PinpointDouble) DeleteCampaign(i0 *pinpoint.DeleteCampaignInput) (r0 *pinpoint.DeleteCampaignOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteCampaign", i0)
	r0, _ = returns[0].(*pinpoint.DeleteCampaignOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointDouble) DeleteCampaignRequest(i0 *pinpoint.DeleteCampaignInput) (r0 *request.Request, r1 *pinpoint.DeleteCampaignOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteCampaignRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*pinpoint.DeleteCampaignOutput)
	return
}

func (d *PinpointDouble) DeleteCampaignWithContext(i0 context.Context, i1 *pinpoint.DeleteCampaignInput, i2 ...request.Option) (r0 *pinpoint.DeleteCampaignOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteCampaignWithContext", i0, i1, i2)
	r0, _ = returns[0].(*pinpoint.DeleteCampaignOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointDouble) fakeDeleteCampaignWithContext(ctx context.Context, in *pinpoint.DeleteCampaignInput, _ ...request.Option) (*pinpoint.DeleteCampaignOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "DeleteCampaign cancelled", ctx.Err())
	default:
		return d.DeleteCampaign(in)
	}
}

func (d *PinpointDouble) DeleteEmailChannel(i0 *pinpoint.DeleteEmailChannelInput) (r0 *pinpoint.DeleteEmailChannelOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteEmailChannel", i0)
	r0, _ = returns[0].(*pinpoint.DeleteEmailChannelOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointDouble) DeleteEmailChannelRequest(i0 *pinpoint.DeleteEmailChannelInput) (r0 *request.Request, r1 *pinpoint.DeleteEmailChannelOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteEmailChannelRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*pinpoint.DeleteEmailChannelOutput)
	return
}

func (d *PinpointDouble) DeleteEmailChannelWithContext(i0 context.Context, i1 *pinpoint.DeleteEmailChannelInput, i2 ...request.Option) (r0 *pinpoint.DeleteEmailChannelOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteEmailChannelWithContext", i0, i1, i2)
	r0, _ = returns[0].(*pinpoint.DeleteEmailChannelOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointDouble) fakeDeleteEmailChannelWithContext(ctx context.Context, in *pinpoint.DeleteEmailChannelInput, _ ...request.Option) (*pinpoint.DeleteEmailChannelOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "DeleteEmailChannel cancelled", ctx.Err())
	default:
		return d.DeleteEmailChannel(in)
	}
}

func (d *PinpointDouble) DeleteEmailTemplate(i0 *pinpoint.DeleteEmailTemplateInput) (r0 *pinpoint.DeleteEmailTemplateOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteEmailTemplate", i0)
	r0, _ = returns[0].(*pinpoint.DeleteEmailTemplateOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointDouble) DeleteEmailTemplateRequest(i0 *pinpoint.DeleteEmailTemplateInput) (r0 *request.Request, r1 *pinpoint.DeleteEmailTemplateOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteEmailTemplateRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*pinpoint.DeleteEmailTemplateOutput)
	return
}

func (d *PinpointDouble) DeleteEmailTemplateWithContext(i0 context.Context, i1 *pinpoint.DeleteEmailTemplateInput, i2 ...request.Option) (r0 *pinpoint.DeleteEmailTemplateOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteEmailTemplateWithContext", i0, i1, i2)
	r0, _ = returns[0].(*pinpoint.DeleteEmailTemplateOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointDouble) fakeDeleteEmailTemplateWithContext(ctx context.Context, in *pinpoint.DeleteEmailTemplateInput, _ ...request.Option) (*pinpoint.DeleteEmailTemplateOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "DeleteEmailTemplate cancelled", ctx.Err())
	default:
		return d.DeleteEmailTemplate(in)
	}
}

func (d *PinpointDouble) DeleteEndpoint(i0 *pinpoint.DeleteEndpointInput) (r0 *pinpoint.DeleteEndpointOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteEndpoint", i0)
	r0, _ = returns[0].(*pinpoint.DeleteEndpointOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointDouble) DeleteEndpointRequest(i0 *pinpoint.DeleteEndpointInput) (r0 *request.Request, r1 *pinpoint.DeleteEndpointOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteEndpointRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*pinpoint.DeleteEndpointOutput)
	return
}

func (d *PinpointDouble) DeleteEndpointWithContext(i0 context.Context, i1 *pinpoint.DeleteEndpointInput, i2 ...request.Option) (r0 *pinpoint.DeleteEndpointOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteEndpointWithContext", i0, i1, i2)
	r0, _ = returns[0].(*pinpoint.DeleteEndpointOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointDouble) fakeDeleteEndpointWithContext(ctx context.Context, in *pinpoint.DeleteEndpointInput, _ ...request.Option) (*pinpoint.DeleteEndpointOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "DeleteEndpoint cancelled", ctx.Err())
	default:
		return d.DeleteEndpoint(in)
	}
}

func (d *PinpointDouble) DeleteEventStream(i0 *pinpoint.DeleteEventStreamInput) (r0 *pinpoint.DeleteEventStreamOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteEventStream", i0)
	r0, _ = returns[0].(*pinpoint.DeleteEventStreamOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointDouble) DeleteEventStreamRequest(i0 *pinpoint.DeleteEventStreamInput) (r0 *request.Request, r1 *pinpoint.DeleteEventStreamOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteEventStreamRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*pinpoint.DeleteEventStreamOutput)
	return
}

func (d *PinpointDouble) DeleteEventStreamWithContext(i0 context.Context, i1 *pinpoint.DeleteEventStreamInput, i2 ...request.Option) (r0 *pinpoint.DeleteEventStreamOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteEventStreamWithContext", i0, i1, i2)
	r0, _ = returns[0].(*pinpoint.DeleteEventStreamOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointDouble) fakeDeleteEventStreamWithContext(ctx context.Context, in *pinpoint.DeleteEventStreamInput, _ ...request.Option) (*pinpoint.DeleteEventStreamOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "DeleteEventStream cancelled", ctx.Err())
	default:
		return d.DeleteEventStream(in)
	}
}

func (d *PinpointDouble) DeleteGcmChannel(i0 *pinpoint.DeleteGcmChannelInput) (r0 *pinpoint.DeleteGcmChannelOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteGcmChannel", i0)
	r0, _ = returns[0].(*pinpoint.DeleteGcmChannelOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointDouble) DeleteGcmChannelRequest(i0 *pinpoint.DeleteGcmChannelInput) (r0 *request.Request, r1 *pinpoint.DeleteGcmChannelOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteGcmChannelRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*pinpoint.DeleteGcmChannelOutput)
	return
}

func (d *PinpointDouble) DeleteGcmChannelWithContext(i0 context.Context, i1 *pinpoint.DeleteGcmChannelInput, i2 ...request.Option) (r0 *pinpoint.DeleteGcmChannelOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteGcmChannelWithContext", i0, i1, i2)
	r0, _ = returns[0].(*pinpoint.DeleteGcmChannelOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointDouble) fakeDeleteGcmChannelWithContext(ctx context.Context, in *pinpoint.DeleteGcmChannelInput, _ ...request.Option) (*pinpoint.DeleteGcmChannelOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "DeleteGcmChannel cancelled", ctx.Err())
	default:
		return d.DeleteGcmChannel(in)
	}
}

func (d *PinpointDouble) DeleteJourney(i0 *pinpoint.DeleteJourneyInput) (r0 *pinpoint.DeleteJourneyOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteJourney", i0)
	r0, _ = returns[0].(*pinpoint.DeleteJourneyOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointDouble) DeleteJourneyRequest(i0 *pinpoint.DeleteJourneyInput) (r0 *request.Request, r1 *pinpoint.DeleteJourneyOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteJourneyRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*pinpoint.DeleteJourneyOutput)
	return
}

func (d *PinpointDouble) DeleteJourneyWithContext(i0 context.Context, i1 *pinpoint.DeleteJourneyInput, i2 ...request.Option) (r0 *pinpoint.DeleteJourneyOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteJourneyWithContext", i0, i1, i2)
	r0, _ = returns[0].(*pinpoint.DeleteJourneyOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointDouble) fakeDeleteJourneyWithContext(ctx context.Context, in *pinpoint.DeleteJourneyInput, _ ...request.Option) (*pinpoint.DeleteJourneyOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "DeleteJourney cancelled", ctx.Err())
	default:
		return d.DeleteJourney(in)
	}
}

func (d *PinpointDouble) DeletePushTemplate(i0 *pinpoint.DeletePushTemplateInput) (r0 *pinpoint.DeletePushTemplateOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeletePushTemplate", i0)
	r0, _ = returns[0].(*pinpoint.DeletePushTemplateOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointDouble) DeletePushTemplateRequest(i0 *pinpoint.DeletePushTemplateInput) (r0 *request.Request, r1 *pinpoint.DeletePushTemplateOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeletePushTemplateRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*pinpoint.DeletePushTemplateOutput)
	return
}

func (d *PinpointDouble) DeletePushTemplateWithContext(i0 context.Context, i1 *pinpoint.DeletePushTemplateInput, i2 ...request.Option) (r0 *pinpoint.DeletePushTemplateOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeletePushTemplateWithContext", i0, i1, i2)
	r0, _ = returns[0].(*pinpoint.DeletePushTemplateOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointDouble) fakeDeletePushTemplateWithContext(ctx context.Context, in *pinpoint.DeletePushTemplateInput, _ ...request.Option) (*pinpoint.DeletePushTemplateOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "DeletePushTemplate cancelled", ctx.Err())
	default:
		return d.DeletePushTemplate(in)
	}
}

func (d *PinpointDouble) DeleteSegment(i0 *pinpoint.DeleteSegmentInput) (r0 *pinpoint.DeleteSegmentOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteSegment", i0)
	r0, _ = returns[0].(*pinpoint.DeleteSegmentOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointDouble) DeleteSegmentRequest(i0 *pinpoint.DeleteSegmentInput) (r0 *request.Request, r1 *pinpoint.DeleteSegmentOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteSegmentRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*pinpoint.DeleteSegmentOutput)
	return
}

func (d *PinpointDouble) DeleteSegmentWithContext(i0 context.Context, i1 *pinpoint.DeleteSegmentInput, i2 ...request.Option) (r0 *pinpoint.DeleteSegmentOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteSegmentWithContext", i0, i1, i2)
	r0, _ = returns[0].(*pinpoint.DeleteSegmentOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointDouble) fakeDeleteSegmentWithContext(ctx context.Context, in *pinpoint.DeleteSegmentInput, _ ...request.Option) (*pinpoint.DeleteSegmentOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "DeleteSegment cancelled", ctx.Err())
	default:
		return d.DeleteSegment(in)
	}
}

func (d *PinpointDouble) DeleteSmsChannel(i0 *pinpoint.DeleteSmsChannelInput) (r0 *pinpoint.DeleteSmsChannelOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteSmsChannel", i0)
	r0, _ = returns[0].(*pinpoint.DeleteSmsChannelOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointDouble) DeleteSmsChannelRequest(i0 *pinpoint.DeleteSmsChannelInput) (r0 *request.Request, r1 *pinpoint.DeleteSmsChannelOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteSmsChannelRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*pinpoint.DeleteSmsChannelOutput)
	return
}

func (d *PinpointDouble) DeleteSmsChannelWithContext(i0 context.Context, i1 *pinpoint.DeleteSmsChannelInput, i2 ...request.Option) (r0 *pinpoint.DeleteSmsChannelOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteSmsChannelWithContext", i0, i1, i2)
	r0, _ = returns[0].(*pinpoint.DeleteSmsChannelOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointDouble) fakeDeleteSmsChannelWithContext(ctx context.Context, in *pinpoint.DeleteSmsChannelInput, _ ...request.Option) (*pinpoint.DeleteSmsChannelOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "DeleteSmsChannel cancelled", ctx.Err())
	default:
		return d.DeleteSmsChannel(in)
	}
}

func (d *PinpointDouble) DeleteSmsTemplate(i0 *pinpoint.DeleteSmsTemplateInput) (r0 *pinpoint.DeleteSmsTemplateOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteSmsTemplate", i0)
	r0, _ = returns[0].(*pinpoint.DeleteSmsTemplateOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointDouble) DeleteSmsTemplateRequest(i0 *pinpoint.DeleteSmsTemplateInput) (r0 *request.Request, r1 *pinpoint.DeleteSmsTemplateOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteSmsTemplateRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*pinpoint.DeleteSmsTemplateOutput)
	return
}

func (d *PinpointDouble) DeleteSmsTemplateWithContext(i0 context.Context, i1 *pinpoint.DeleteSmsTemplateInput, i2 ...request.Option) (r0 *pinpoint.DeleteSmsTemplateOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteSmsTemplateWithContext", i0, i1, i2)
	r0, _ = returns[0].(*pinpoint.DeleteSmsTemplateOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointDouble) fakeDeleteSmsTemplateWithContext(ctx context.Context, in *pinpoint.DeleteSmsTemplateInput, _ ...request.Option) (*pinpoint.DeleteSmsTemplateOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "DeleteSmsTemplate cancelled", ctx.Err())
	default:
		return d.DeleteSmsTemplate(in)
	}
}

func (d *PinpointDouble) DeleteUserEndpoints(i0 *pinpoint.DeleteUserEndpointsInput) (r0 *pinpoint.DeleteUserEndpointsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteUserEndpoints", i0)
	r0, _ = returns[0].(*pinpoint.DeleteUserEndpointsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointDouble) DeleteUserEndpointsRequest(i0 *pinpoint.DeleteUserEndpointsInput) (r0 *request.Request, r1 *pinpoint.DeleteUserEndpointsOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteUserEndpointsRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*pinpoint.DeleteUserEndpointsOutput)
	return
}

func (d *PinpointDouble) DeleteUserEndpointsWithContext(i0 context.Context, i1 *pinpoint.DeleteUserEndpointsInput, i2 ...request.Option) (r0 *pinpoint.DeleteUserEndpointsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteUserEndpointsWithContext", i0, i1, i2)
	r0, _ = returns[0].(*pinpoint.DeleteUserEndpointsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointDouble) fakeDeleteUserEndpointsWithContext(ctx context.Context, in *pinpoint.DeleteUserEndpointsInput, _ ...request.Option) (*pinpoint.DeleteUserEndpointsOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "DeleteUserEndpoints cancelled", ctx.Err())
	default:
		return d.DeleteUserEndpoints(in)
	}
}

func (d *PinpointDouble) DeleteVoiceChannel(i0 *pinpoint.DeleteVoiceChannelInput) (r0 *pinpoint.DeleteVoiceChannelOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteVoiceChannel", i0)
	r0, _ = returns[0].(*pinpoint.DeleteVoiceChannelOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointDouble) DeleteVoiceChannelRequest(i0 *pinpoint.DeleteVoiceChannelInput) (r0 *request.Request, r1 *pinpoint.DeleteVoiceChannelOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteVoiceChannelRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*pinpoint.DeleteVoiceChannelOutput)
	return
}

func (d *PinpointDouble) DeleteVoiceChannelWithContext(i0 context.Context, i1 *pinpoint.DeleteVoiceChannelInput, i2 ...request.Option) (r0 *pinpoint.DeleteVoiceChannelOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteVoiceChannelWithContext", i0, i1, i2)
	r0, _ = returns[0].(*pinpoint.DeleteVoiceChannelOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointDouble) fakeDeleteVoiceChannelWithContext(ctx context.Context, in *pinpoint.DeleteVoiceChannelInput, _ ...request.Option) (*pinpoint.DeleteVoiceChannelOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "DeleteVoiceChannel cancelled", ctx.Err())
	default:
		return d.DeleteVoiceChannel(in)
	}
}

func (d *PinpointDouble) DeleteVoiceTemplate(i0 *pinpoint.DeleteVoiceTemplateInput) (r0 *pinpoint.DeleteVoiceTemplateOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteVoiceTemplate", i0)
	r0, _ = returns[0].(*pinpoint.DeleteVoiceTemplateOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointDouble) DeleteVoiceTemplateRequest(i0 *pinpoint.DeleteVoiceTemplateInput) (r0 *request.Request, r1 *pinpoint.DeleteVoiceTemplateOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteVoiceTemplateRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*pinpoint.DeleteVoiceTemplateOutput)
	return
}

func (d *PinpointDouble) DeleteVoiceTemplateWithContext(i0 context.Context, i1 *pinpoint.DeleteVoiceTemplateInput, i2 ...request.Option) (r0 *pinpoint.DeleteVoiceTemplateOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteVoiceTemplateWithContext", i0, i1, i2)
	r0, _ = returns[0].(*pinpoint.DeleteVoiceTemplateOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointDouble) fakeDeleteVoiceTemplateWithContext(ctx context.Context, in *pinpoint.DeleteVoiceTemplateInput, _ ...request.Option) (*pinpoint.DeleteVoiceTemplateOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "DeleteVoiceTemplate cancelled", ctx.Err())
	default:
		return d.DeleteVoiceTemplate(in)
	}
}

func (d *PinpointDouble) GetAdmChannel(i0 *pinpoint.GetAdmChannelInput) (r0 *pinpoint.GetAdmChannelOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetAdmChannel", i0)
	r0, _ = returns[0].(*pinpoint.GetAdmChannelOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointDouble) GetAdmChannelRequest(i0 *pinpoint.GetAdmChannelInput) (r0 *request.Request, r1 *pinpoint.GetAdmChannelOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetAdmChannelRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*pinpoint.GetAdmChannelOutput)
	return
}

func (d *PinpointDouble) GetAdmChannelWithContext(i0 context.Context, i1 *pinpoint.GetAdmChannelInput, i2 ...request.Option) (r0 *pinpoint.GetAdmChannelOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetAdmChannelWithContext", i0, i1, i2)
	r0, _ = returns[0].(*pinpoint.GetAdmChannelOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointDouble) fakeGetAdmChannelWithContext(ctx context.Context, in *pinpoint.GetAdmChannelInput, _ ...request.Option) (*pinpoint.GetAdmChannelOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "GetAdmChannel cancelled", ctx.Err())
	default:
		return d.GetAdmChannel(in)
	}
}

func (d *PinpointDouble) GetApnsChannel(i0 *pinpoint.GetApnsChannelInput) (r0 *pinpoint.GetApnsChannelOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetApnsChannel", i0)
	r0, _ = returns[0].(*pinpoint.GetApnsChannelOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointDouble) GetApnsChannelRequest(i0 *pinpoint.GetApnsChannelInput) (r0 *request.Request, r1 *pinpoint.GetApnsChannelOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetApnsChannelRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*pinpoint.GetApnsChannelOutput)
	return
}

func (d *PinpointDouble) GetApnsChannelWithContext(i0 context.Context, i1 *pinpoint.GetApnsChannelInput, i2 ...request.Option) (r0 *pinpoint.GetApnsChannelOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetApnsChannelWithContext", i0, i1, i2)
	r0, _ = returns[0].(*pinpoint.GetApnsChannelOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointDouble) fakeGetApnsChannelWithContext(ctx context.Context, in *pinpoint.GetApnsChannelInput, _ ...request.Option) (*pinpoint.GetApnsChannelOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "GetApnsChannel cancelled", ctx.Err())
	default:
		return d.GetApnsChannel(in)
	}
}

func (d *PinpointDouble) GetApnsSandboxChannel(i0 *pinpoint.GetApnsSandboxChannelInput) (r0 *pinpoint.GetApnsSandboxChannelOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetApnsSandboxChannel", i0)
	r0, _ = returns[0].(*pinpoint.GetApnsSandboxChannelOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointDouble) GetApnsSandboxChannelRequest(i0 *pinpoint.GetApnsSandboxChannelInput) (r0 *request.Request, r1 *pinpoint.GetApnsSandboxChannelOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetApnsSandboxChannelRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*pinpoint.GetApnsSandboxChannelOutput)
	return
}

func (d *PinpointDouble) GetApnsSandboxChannelWithContext(i0 context.Context, i1 *pinpoint.GetApnsSandboxChannelInput, i2 ...request.Option) (r0 *pinpoint.GetApnsSandboxChannelOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetApnsSandboxChannelWithContext", i0, i1, i2)
	r0, _ = returns[0].(*pinpoint.GetApnsSandboxChannelOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointDouble) fakeGetApnsSandboxChannelWithContext(ctx context.Context, in *pinpoint.GetApnsSandboxChannelInput, _ ...request.Option) (*pinpoint.GetApnsSandboxChannelOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "GetApnsSandboxChannel cancelled", ctx.Err())
	default:
		return d.GetApnsSandboxChannel(in)
	}
}

func (d *PinpointDouble) GetApnsVoipChannel(i0 *pinpoint.GetApnsVoipChannelInput) (r0 *pinpoint.GetApnsVoipChannelOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetApnsVoipChannel", i0)
	r0, _ = returns[0].(*pinpoint.GetApnsVoipChannelOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointDouble) GetApnsVoipChannelRequest(i0 *pinpoint.GetApnsVoipChannelInput) (r0 *request.Request, r1 *pinpoint.GetApnsVoipChannelOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetApnsVoipChannelRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*pinpoint.GetApnsVoipChannelOutput)
	return
}

func (d *PinpointDouble) GetApnsVoipChannelWithContext(i0 context.Context, i1 *pinpoint.GetApnsVoipChannelInput, i2 ...request.Option) (r0 *pinpoint.GetApnsVoipChannelOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetApnsVoipChannelWithContext", i0, i1, i2)
	r0, _ = returns[0].(*pinpoint.GetApnsVoipChannelOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointDouble) fakeGetApnsVoipChannelWithContext(ctx context.Context, in *pinpoint.GetApnsVoipChannelInput, _ ...request.Option) (*pinpoint.GetApnsVoipChannelOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "GetApnsVoipChannel cancelled", ctx.Err())
	default:
		return d.GetApnsVoipChannel(in)
	}
}

func (d *PinpointDouble) GetApnsVoipSandboxChannel(i0 *pinpoint.GetApnsVoipSandboxChannelInput) (r0 *pinpoint.GetApnsVoipSandboxChannelOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetApnsVoipSandboxChannel", i0)
	r0, _ = returns[0].(*pinpoint.GetApnsVoipSandboxChannelOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointDouble) GetApnsVoipSandboxChannelRequest(i0 *pinpoint.GetApnsVoipSandboxChannelInput) (r0 *request.Request, r1 *pinpoint.GetApnsVoipSandboxChannelOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetApnsVoipSandboxChannelRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*pinpoint.GetApnsVoipSandboxChannelOutput)
	return
}

func (d *PinpointDouble) GetApnsVoipSandboxChannelWithContext(i0 context.Context, i1 *pinpoint.GetApnsVoipSandboxChannelInput, i2 ...request.Option) (r0 *pinpoint.GetApnsVoipSandboxChannelOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetApnsVoipSandboxChannelWithContext", i0, i1, i2)
	r0, _ = returns[0].(*pinpoint.GetApnsVoipSandboxChannelOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointDouble) fakeGetApnsVoipSandboxChannelWithContext(ctx context.Context, in *pinpoint.GetApnsVoipSandboxChannelInput, _ ...request.Option) (*pinpoint.GetApnsVoipSandboxChannelOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "GetApnsVoipSandboxChannel cancelled", ctx.Err())
	default:
		return d.GetApnsVoipSandboxChannel(in)
	}
}

func (d *PinpointDouble) GetApp(i0 *pinpoint.GetAppInput) (r0 *pinpoint.GetAppOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetApp", i0)
	r0, _ = returns[0].(*pinpoint.GetAppOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointDouble) GetAppRequest(i0 *pinpoint.GetAppInput) (r0 *request.Request, r1 *pinpoint.GetAppOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetAppRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*pinpoint.GetAppOutput)
	return
}

func (d *PinpointDouble) GetAppWithContext(i0 context.Context, i1 *pinpoint.GetAppInput, i2 ...request.Option) (r0 *pinpoint.GetAppOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetAppWithContext", i0, i1, i2)
	r0, _ = returns[0].(*pinpoint.GetAppOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointDouble) fakeGetAppWithContext(ctx context.Context, in *pinpoint.GetAppInput, _ ...request.Option) (*pinpoint.GetAppOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "GetApp cancelled", ctx.Err())
	default:
		return d.GetApp(in)
	}
}

func (d *PinpointDouble) GetApplicationDateRangeKpi(i0 *pinpoint.GetApplicationDateRangeKpiInput) (r0 *pinpoint.GetApplicationDateRangeKpiOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetApplicationDateRangeKpi", i0)
	r0, _ = returns[0].(*pinpoint.GetApplicationDateRangeKpiOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointDouble) GetApplicationDateRangeKpiRequest(i0 *pinpoint.GetApplicationDateRangeKpiInput) (r0 *request.Request, r1 *pinpoint.GetApplicationDateRangeKpiOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetApplicationDateRangeKpiRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*pinpoint.GetApplicationDateRangeKpiOutput)
	return
}

func (d *PinpointDouble) GetApplicationDateRangeKpiWithContext(i0 context.Context, i1 *pinpoint.GetApplicationDateRangeKpiInput, i2 ...request.Option) (r0 *pinpoint.GetApplicationDateRangeKpiOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetApplicationDateRangeKpiWithContext", i0, i1, i2)
	r0, _ = returns[0].(*pinpoint.GetApplicationDateRangeKpiOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointDouble) fakeGetApplicationDateRangeKpiWithContext(ctx context.Context, in *pinpoint.GetApplicationDateRangeKpiInput, _ ...request.Option) (*pinpoint.GetApplicationDateRangeKpiOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "GetApplicationDateRangeKpi cancelled", ctx.Err())
	default:
		return d.GetApplicationDateRangeKpi(in)
	}
}

func (d *PinpointDouble) GetApplicationSettings(i0 *pinpoint.GetApplicationSettingsInput) (r0 *pinpoint.GetApplicationSettingsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetApplicationSettings", i0)
	r0, _ = returns[0].(*pinpoint.GetApplicationSettingsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointDouble) GetApplicationSettingsRequest(i0 *pinpoint.GetApplicationSettingsInput) (r0 *request.Request, r1 *pinpoint.GetApplicationSettingsOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetApplicationSettingsRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*pinpoint.GetApplicationSettingsOutput)
	return
}

func (d *PinpointDouble) GetApplicationSettingsWithContext(i0 context.Context, i1 *pinpoint.GetApplicationSettingsInput, i2 ...request.Option) (r0 *pinpoint.GetApplicationSettingsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetApplicationSettingsWithContext", i0, i1, i2)
	r0, _ = returns[0].(*pinpoint.GetApplicationSettingsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointDouble) fakeGetApplicationSettingsWithContext(ctx context.Context, in *pinpoint.GetApplicationSettingsInput, _ ...request.Option) (*pinpoint.GetApplicationSettingsOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "GetApplicationSettings cancelled", ctx.Err())
	default:
		return d.GetApplicationSettings(in)
	}
}

func (d *PinpointDouble) GetApps(i0 *pinpoint.GetAppsInput) (r0 *pinpoint.GetAppsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetApps", i0)
	r0, _ = returns[0].(*pinpoint.GetAppsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointDouble) GetAppsRequest(i0 *pinpoint.GetAppsInput) (r0 *request.Request, r1 *pinpoint.GetAppsOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetAppsRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*pinpoint.GetAppsOutput)
	return
}

func (d *PinpointDouble) GetAppsWithContext(i0 context.Context, i1 *pinpoint.GetAppsInput, i2 ...request.Option) (r0 *pinpoint.GetAppsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetAppsWithContext", i0, i1, i2)
	r0, _ = returns[0].(*pinpoint.GetAppsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointDouble) fakeGetAppsWithContext(ctx context.Context, in *pinpoint.GetAppsInput, _ ...request.Option) (*pinpoint.GetAppsOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "GetApps cancelled", ctx.Err())
	default:
		return d.GetApps(in)
	}
}

func (d *PinpointDouble) GetBaiduChannel(i0 *pinpoint.GetBaiduChannelInput) (r0 *pinpoint.GetBaiduChannelOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetBaiduChannel", i0)
	r0, _ = returns[0].(*pinpoint.GetBaiduChannelOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointDouble) GetBaiduChannelRequest(i0 *pinpoint.GetBaiduChannelInput) (r0 *request.Request, r1 *pinpoint.GetBaiduChannelOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetBaiduChannelRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*pinpoint.GetBaiduChannelOutput)
	return
}

func (d *PinpointDouble) GetBaiduChannelWithContext(i0 context.Context, i1 *pinpoint.GetBaiduChannelInput, i2 ...request.Option) (r0 *pinpoint.GetBaiduChannelOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetBaiduChannelWithContext", i0, i1, i2)
	r0, _ = returns[0].(*pinpoint.GetBaiduChannelOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointDouble) fakeGetBaiduChannelWithContext(ctx context.Context, in *pinpoint.GetBaiduChannelInput, _ ...request.Option) (*pinpoint.GetBaiduChannelOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "GetBaiduChannel cancelled", ctx.Err())
	default:
		return d.GetBaiduChannel(in)
	}
}

func (d *PinpointDouble) GetCampaign(i0 *pinpoint.GetCampaignInput) (r0 *pinpoint.GetCampaignOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetCampaign", i0)
	r0, _ = returns[0].(*pinpoint.GetCampaignOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointDouble) GetCampaignActivities(i0 *pinpoint.GetCampaignActivitiesInput) (r0 *pinpoint.GetCampaignActivitiesOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetCampaignActivities", i0)
	r0, _ = returns[0].(*pinpoint.GetCampaignActivitiesOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointDouble) GetCampaignActivitiesRequest(i0 *pinpoint.GetCampaignActivitiesInput) (r0 *request.Request, r1 *pinpoint.GetCampaignActivitiesOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetCampaignActivitiesRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*pinpoint.GetCampaignActivitiesOutput)
	return
}

func (d *PinpointDouble) GetCampaignActivitiesWithContext(i0 context.Context, i1 *pinpoint.GetCampaignActivitiesInput, i2 ...request.Option) (r0 *pinpoint.GetCampaignActivitiesOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetCampaignActivitiesWithContext", i0, i1, i2)
	r0, _ = returns[0].(*pinpoint.GetCampaignActivitiesOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointDouble) fakeGetCampaignActivitiesWithContext(ctx context.Context, in *pinpoint.GetCampaignActivitiesInput, _ ...request.Option) (*pinpoint.GetCampaignActivitiesOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "GetCampaignActivities cancelled", ctx.Err())
	default:
		return d.GetCampaignActivities(in)
	}
}

func (d *PinpointDouble) GetCampaignDateRangeKpi(i0 *pinpoint.GetCampaignDateRangeKpiInput) (r0 *pinpoint.GetCampaignDateRangeKpiOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetCampaignDateRangeKpi", i0)
	r0, _ = returns[0].(*pinpoint.GetCampaignDateRangeKpiOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointDouble) GetCampaignDateRangeKpiRequest(i0 *pinpoint.GetCampaignDateRangeKpiInput) (r0 *request.Request, r1 *pinpoint.GetCampaignDateRangeKpiOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetCampaignDateRangeKpiRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*pinpoint.GetCampaignDateRangeKpiOutput)
	return
}

func (d *PinpointDouble) GetCampaignDateRangeKpiWithContext(i0 context.Context, i1 *pinpoint.GetCampaignDateRangeKpiInput, i2 ...request.Option) (r0 *pinpoint.GetCampaignDateRangeKpiOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetCampaignDateRangeKpiWithContext", i0, i1, i2)
	r0, _ = returns[0].(*pinpoint.GetCampaignDateRangeKpiOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointDouble) fakeGetCampaignDateRangeKpiWithContext(ctx context.Context, in *pinpoint.GetCampaignDateRangeKpiInput, _ ...request.Option) (*pinpoint.GetCampaignDateRangeKpiOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "GetCampaignDateRangeKpi cancelled", ctx.Err())
	default:
		return d.GetCampaignDateRangeKpi(in)
	}
}

func (d *PinpointDouble) GetCampaignRequest(i0 *pinpoint.GetCampaignInput) (r0 *request.Request, r1 *pinpoint.GetCampaignOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetCampaignRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*pinpoint.GetCampaignOutput)
	return
}

func (d *PinpointDouble) GetCampaignVersion(i0 *pinpoint.GetCampaignVersionInput) (r0 *pinpoint.GetCampaignVersionOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetCampaignVersion", i0)
	r0, _ = returns[0].(*pinpoint.GetCampaignVersionOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointDouble) GetCampaignVersionRequest(i0 *pinpoint.GetCampaignVersionInput) (r0 *request.Request, r1 *pinpoint.GetCampaignVersionOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetCampaignVersionRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*pinpoint.GetCampaignVersionOutput)
	return
}

func (d *PinpointDouble) GetCampaignVersionWithContext(i0 context.Context, i1 *pinpoint.GetCampaignVersionInput, i2 ...request.Option) (r0 *pinpoint.GetCampaignVersionOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetCampaignVersionWithContext", i0, i1, i2)
	r0, _ = returns[0].(*pinpoint.GetCampaignVersionOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointDouble) fakeGetCampaignVersionWithContext(ctx context.Context, in *pinpoint.GetCampaignVersionInput, _ ...request.Option) (*pinpoint.GetCampaignVersionOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "GetCampaignVersion cancelled", ctx.Err())
	default:
		return d.GetCampaignVersion(in)
	}
}

func (d *PinpointDouble) GetCampaignVersions(i0 *pinpoint.GetCampaignVersionsInput) (r0 *pinpoint.GetCampaignVersionsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetCampaignVersions", i0)
	r0, _ = returns[0].(*pinpoint.GetCampaignVersionsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointDouble) GetCampaignVersionsRequest(i0 *pinpoint.GetCampaignVersionsInput) (r0 *request.Request, r1 *pinpoint.GetCampaignVersionsOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetCampaignVersionsRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*pinpoint.GetCampaignVersionsOutput)
	return
}

func (d *PinpointDouble) GetCampaignVersionsWithContext(i0 context.Context, i1 *pinpoint.GetCampaignVersionsInput, i2 ...request.Option) (r0 *pinpoint.GetCampaignVersionsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetCampaignVersionsWithContext", i0, i1, i2)
	r0, _ = returns[0].(*pinpoint.GetCampaignVersionsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointDouble) fakeGetCampaignVersionsWithContext(ctx context.Context, in *pinpoint.GetCampaignVersionsInput, _ ...request.Option) (*pinpoint.GetCampaignVersionsOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "GetCampaignVersions cancelled", ctx.Err())
	default:
		return d.GetCampaignVersions(in)
	}
}

func (d *PinpointDouble) GetCampaignWithContext(i0 context.Context, i1 *pinpoint.GetCampaignInput, i2 ...request.Option) (r0 *pinpoint.GetCampaignOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetCampaignWithContext", i0, i1, i2)
	r0, _ = returns[0].(*pinpoint.GetCampaignOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointDouble) fakeGetCampaignWithContext(ctx context.Context, in *pinpoint.GetCampaignInput, _ ...request.Option) (*pinpoint.GetCampaignOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "GetCampaign cancelled", ctx.Err())
	default:
		return d.GetCampaign(in)
	}
}

func (d *PinpointDouble) GetCampaigns(i0 *pinpoint.GetCampaignsInput) (r0 *pinpoint.GetCampaignsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetCampaigns", i0)
	r0, _ = returns[0].(*pinpoint.GetCampaignsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointDouble) GetCampaignsRequest(i0 *pinpoint.GetCampaignsInput) (r0 *request.Request, r1 *pinpoint.GetCampaignsOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetCampaignsRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*pinpoint.GetCampaignsOutput)
	return
}

func (d *PinpointDouble) GetCampaignsWithContext(i0 context.Context, i1 *pinpoint.GetCampaignsInput, i2 ...request.Option) (r0 *pinpoint.GetCampaignsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetCampaignsWithContext", i0, i1, i2)
	r0, _ = returns[0].(*pinpoint.GetCampaignsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointDouble) fakeGetCampaignsWithContext(ctx context.Context, in *pinpoint.GetCampaignsInput, _ ...request.Option) (*pinpoint.GetCampaignsOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "GetCampaigns cancelled", ctx.Err())
	default:
		return d.GetCampaigns(in)
	}
}

func (d *PinpointDouble) GetChannels(i0 *pinpoint.GetChannelsInput) (r0 *pinpoint.GetChannelsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetChannels", i0)
	r0, _ = returns[0].(*pinpoint.GetChannelsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointDouble) GetChannelsRequest(i0 *pinpoint.GetChannelsInput) (r0 *request.Request, r1 *pinpoint.GetChannelsOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetChannelsRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*pinpoint.GetChannelsOutput)
	return
}

func (d *PinpointDouble) GetChannelsWithContext(i0 context.Context, i1 *pinpoint.GetChannelsInput, i2 ...request.Option) (r0 *pinpoint.GetChannelsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetChannelsWithContext", i0, i1, i2)
	r0, _ = returns[0].(*pinpoint.GetChannelsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointDouble) fakeGetChannelsWithContext(ctx context.Context, in *pinpoint.GetChannelsInput, _ ...request.Option) (*pinpoint.GetChannelsOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "GetChannels cancelled", ctx.Err())
	default:
		return d.GetChannels(in)
	}
}

func (d *PinpointDouble) GetEmailChannel(i0 *pinpoint.GetEmailChannelInput) (r0 *pinpoint.GetEmailChannelOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetEmailChannel", i0)
	r0, _ = returns[0].(*pinpoint.GetEmailChannelOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointDouble) GetEmailChannelRequest(i0 *pinpoint.GetEmailChannelInput) (r0 *request.Request, r1 *pinpoint.GetEmailChannelOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetEmailChannelRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*pinpoint.GetEmailChannelOutput)
	return
}

func (d *PinpointDouble) GetEmailChannelWithContext(i0 context.Context, i1 *pinpoint.GetEmailChannelInput, i2 ...request.Option) (r0 *pinpoint.GetEmailChannelOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetEmailChannelWithContext", i0, i1, i2)
	r0, _ = returns[0].(*pinpoint.GetEmailChannelOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointDouble) fakeGetEmailChannelWithContext(ctx context.Context, in *pinpoint.GetEmailChannelInput, _ ...request.Option) (*pinpoint.GetEmailChannelOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "GetEmailChannel cancelled", ctx.Err())
	default:
		return d.GetEmailChannel(in)
	}
}

func (d *PinpointDouble) GetEmailTemplate(i0 *pinpoint.GetEmailTemplateInput) (r0 *pinpoint.GetEmailTemplateOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetEmailTemplate", i0)
	r0, _ = returns[0].(*pinpoint.GetEmailTemplateOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointDouble) GetEmailTemplateRequest(i0 *pinpoint.GetEmailTemplateInput) (r0 *request.Request, r1 *pinpoint.GetEmailTemplateOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetEmailTemplateRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*pinpoint.GetEmailTemplateOutput)
	return
}

func (d *PinpointDouble) GetEmailTemplateWithContext(i0 context.Context, i1 *pinpoint.GetEmailTemplateInput, i2 ...request.Option) (r0 *pinpoint.GetEmailTemplateOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetEmailTemplateWithContext", i0, i1, i2)
	r0, _ = returns[0].(*pinpoint.GetEmailTemplateOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointDouble) fakeGetEmailTemplateWithContext(ctx context.Context, in *pinpoint.GetEmailTemplateInput, _ ...request.Option) (*pinpoint.GetEmailTemplateOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "GetEmailTemplate cancelled", ctx.Err())
	default:
		return d.GetEmailTemplate(in)
	}
}

func (d *PinpointDouble) GetEndpoint(i0 *pinpoint.GetEndpointInput) (r0 *pinpoint.GetEndpointOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetEndpoint", i0)
	r0, _ = returns[0].(*pinpoint.GetEndpointOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointDouble) GetEndpointRequest(i0 *pinpoint.GetEndpointInput) (r0 *request.Request, r1 *pinpoint.GetEndpointOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetEndpointRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*pinpoint.GetEndpointOutput)
	return
}

func (d *PinpointDouble) GetEndpointWithContext(i0 context.Context, i1 *pinpoint.GetEndpointInput, i2 ...request.Option) (r0 *pinpoint.GetEndpointOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetEndpointWithContext", i0, i1, i2)
	r0, _ = returns[0].(*pinpoint.GetEndpointOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointDouble) fakeGetEndpointWithContext(ctx context.Context, in *pinpoint.GetEndpointInput, _ ...request.Option) (*pinpoint.GetEndpointOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "GetEndpoint cancelled", ctx.Err())
	default:
		return d.GetEndpoint(in)
	}
}

func (d *PinpointDouble) GetEventStream(i0 *pinpoint.GetEventStreamInput) (r0 *pinpoint.GetEventStreamOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetEventStream", i0)
	r0, _ = returns[0].(*pinpoint.GetEventStreamOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointDouble) GetEventStreamRequest(i0 *pinpoint.GetEventStreamInput) (r0 *request.Request, r1 *pinpoint.GetEventStreamOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetEventStreamRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*pinpoint.GetEventStreamOutput)
	return
}

func (d *PinpointDouble) GetEventStreamWithContext(i0 context.Context, i1 *pinpoint.GetEventStreamInput, i2 ...request.Option) (r0 *pinpoint.GetEventStreamOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetEventStreamWithContext", i0, i1, i2)
	r0, _ = returns[0].(*pinpoint.GetEventStreamOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointDouble) fakeGetEventStreamWithContext(ctx context.Context, in *pinpoint.GetEventStreamInput, _ ...request.Option) (*pinpoint.GetEventStreamOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "GetEventStream cancelled", ctx.Err())
	default:
		return d.GetEventStream(in)
	}
}

func (d *PinpointDouble) GetExportJob(i0 *pinpoint.GetExportJobInput) (r0 *pinpoint.GetExportJobOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetExportJob", i0)
	r0, _ = returns[0].(*pinpoint.GetExportJobOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointDouble) GetExportJobRequest(i0 *pinpoint.GetExportJobInput) (r0 *request.Request, r1 *pinpoint.GetExportJobOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetExportJobRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*pinpoint.GetExportJobOutput)
	return
}

func (d *PinpointDouble) GetExportJobWithContext(i0 context.Context, i1 *pinpoint.GetExportJobInput, i2 ...request.Option) (r0 *pinpoint.GetExportJobOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetExportJobWithContext", i0, i1, i2)
	r0, _ = returns[0].(*pinpoint.GetExportJobOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointDouble) fakeGetExportJobWithContext(ctx context.Context, in *pinpoint.GetExportJobInput, _ ...request.Option) (*pinpoint.GetExportJobOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "GetExportJob cancelled", ctx.Err())
	default:
		return d.GetExportJob(in)
	}
}

func (d *PinpointDouble) GetExportJobs(i0 *pinpoint.GetExportJobsInput) (r0 *pinpoint.GetExportJobsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetExportJobs", i0)
	r0, _ = returns[0].(*pinpoint.GetExportJobsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointDouble) GetExportJobsRequest(i0 *pinpoint.GetExportJobsInput) (r0 *request.Request, r1 *pinpoint.GetExportJobsOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetExportJobsRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*pinpoint.GetExportJobsOutput)
	return
}

func (d *PinpointDouble) GetExportJobsWithContext(i0 context.Context, i1 *pinpoint.GetExportJobsInput, i2 ...request.Option) (r0 *pinpoint.GetExportJobsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetExportJobsWithContext", i0, i1, i2)
	r0, _ = returns[0].(*pinpoint.GetExportJobsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointDouble) fakeGetExportJobsWithContext(ctx context.Context, in *pinpoint.GetExportJobsInput, _ ...request.Option) (*pinpoint.GetExportJobsOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "GetExportJobs cancelled", ctx.Err())
	default:
		return d.GetExportJobs(in)
	}
}

func (d *PinpointDouble) GetGcmChannel(i0 *pinpoint.GetGcmChannelInput) (r0 *pinpoint.GetGcmChannelOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetGcmChannel", i0)
	r0, _ = returns[0].(*pinpoint.GetGcmChannelOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointDouble) GetGcmChannelRequest(i0 *pinpoint.GetGcmChannelInput) (r0 *request.Request, r1 *pinpoint.GetGcmChannelOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetGcmChannelRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*pinpoint.GetGcmChannelOutput)
	return
}

func (d *PinpointDouble) GetGcmChannelWithContext(i0 context.Context, i1 *pinpoint.GetGcmChannelInput, i2 ...request.Option) (r0 *pinpoint.GetGcmChannelOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetGcmChannelWithContext", i0, i1, i2)
	r0, _ = returns[0].(*pinpoint.GetGcmChannelOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointDouble) fakeGetGcmChannelWithContext(ctx context.Context, in *pinpoint.GetGcmChannelInput, _ ...request.Option) (*pinpoint.GetGcmChannelOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "GetGcmChannel cancelled", ctx.Err())
	default:
		return d.GetGcmChannel(in)
	}
}

func (d *PinpointDouble) GetImportJob(i0 *pinpoint.GetImportJobInput) (r0 *pinpoint.GetImportJobOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetImportJob", i0)
	r0, _ = returns[0].(*pinpoint.GetImportJobOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointDouble) GetImportJobRequest(i0 *pinpoint.GetImportJobInput) (r0 *request.Request, r1 *pinpoint.GetImportJobOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetImportJobRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*pinpoint.GetImportJobOutput)
	return
}

func (d *PinpointDouble) GetImportJobWithContext(i0 context.Context, i1 *pinpoint.GetImportJobInput, i2 ...request.Option) (r0 *pinpoint.GetImportJobOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetImportJobWithContext", i0, i1, i2)
	r0, _ = returns[0].(*pinpoint.GetImportJobOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointDouble) fakeGetImportJobWithContext(ctx context.Context, in *pinpoint.GetImportJobInput, _ ...request.Option) (*pinpoint.GetImportJobOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "GetImportJob cancelled", ctx.Err())
	default:
		return d.GetImportJob(in)
	}
}

func (d *PinpointDouble) GetImportJobs(i0 *pinpoint.GetImportJobsInput) (r0 *pinpoint.GetImportJobsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetImportJobs", i0)
	r0, _ = returns[0].(*pinpoint.GetImportJobsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointDouble) GetImportJobsRequest(i0 *pinpoint.GetImportJobsInput) (r0 *request.Request, r1 *pinpoint.GetImportJobsOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetImportJobsRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*pinpoint.GetImportJobsOutput)
	return
}

func (d *PinpointDouble) GetImportJobsWithContext(i0 context.Context, i1 *pinpoint.GetImportJobsInput, i2 ...request.Option) (r0 *pinpoint.GetImportJobsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetImportJobsWithContext", i0, i1, i2)
	r0, _ = returns[0].(*pinpoint.GetImportJobsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointDouble) fakeGetImportJobsWithContext(ctx context.Context, in *pinpoint.GetImportJobsInput, _ ...request.Option) (*pinpoint.GetImportJobsOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "GetImportJobs cancelled", ctx.Err())
	default:
		return d.GetImportJobs(in)
	}
}

func (d *PinpointDouble) GetJourney(i0 *pinpoint.GetJourneyInput) (r0 *pinpoint.GetJourneyOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetJourney", i0)
	r0, _ = returns[0].(*pinpoint.GetJourneyOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointDouble) GetJourneyDateRangeKpi(i0 *pinpoint.GetJourneyDateRangeKpiInput) (r0 *pinpoint.GetJourneyDateRangeKpiOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetJourneyDateRangeKpi", i0)
	r0, _ = returns[0].(*pinpoint.GetJourneyDateRangeKpiOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointDouble) GetJourneyDateRangeKpiRequest(i0 *pinpoint.GetJourneyDateRangeKpiInput) (r0 *request.Request, r1 *pinpoint.GetJourneyDateRangeKpiOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetJourneyDateRangeKpiRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*pinpoint.GetJourneyDateRangeKpiOutput)
	return
}

func (d *PinpointDouble) GetJourneyDateRangeKpiWithContext(i0 context.Context, i1 *pinpoint.GetJourneyDateRangeKpiInput, i2 ...request.Option) (r0 *pinpoint.GetJourneyDateRangeKpiOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetJourneyDateRangeKpiWithContext", i0, i1, i2)
	r0, _ = returns[0].(*pinpoint.GetJourneyDateRangeKpiOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointDouble) fakeGetJourneyDateRangeKpiWithContext(ctx context.Context, in *pinpoint.GetJourneyDateRangeKpiInput, _ ...request.Option) (*pinpoint.GetJourneyDateRangeKpiOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "GetJourneyDateRangeKpi cancelled", ctx.Err())
	default:
		return d.GetJourneyDateRangeKpi(in)
	}
}

func (d *PinpointDouble) GetJourneyExecutionActivityMetrics(i0 *pinpoint.GetJourneyExecutionActivityMetricsInput) (r0 *pinpoint.GetJourneyExecutionActivityMetricsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetJourneyExecutionActivityMetrics", i0)
	r0, _ = returns[0].(*pinpoint.GetJourneyExecutionActivityMetricsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointDouble) GetJourneyExecutionActivityMetricsRequest(i0 *pinpoint.GetJourneyExecutionActivityMetricsInput) (r0 *request.Request, r1 *pinpoint.GetJourneyExecutionActivityMetricsOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetJourneyExecutionActivityMetricsRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*pinpoint.GetJourneyExecutionActivityMetricsOutput)
	return
}

func (d *PinpointDouble) GetJourneyExecutionActivityMetricsWithContext(i0 context.Context, i1 *pinpoint.GetJourneyExecutionActivityMetricsInput, i2 ...request.Option) (r0 *pinpoint.GetJourneyExecutionActivityMetricsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetJourneyExecutionActivityMetricsWithContext", i0, i1, i2)
	r0, _ = returns[0].(*pinpoint.GetJourneyExecutionActivityMetricsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointDouble) fakeGetJourneyExecutionActivityMetricsWithContext(ctx context.Context, in *pinpoint.GetJourneyExecutionActivityMetricsInput, _ ...request.Option) (*pinpoint.GetJourneyExecutionActivityMetricsOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "GetJourneyExecutionActivityMetrics cancelled", ctx.Err())
	default:
		return d.GetJourneyExecutionActivityMetrics(in)
	}
}

func (d *PinpointDouble) GetJourneyExecutionMetrics(i0 *pinpoint.GetJourneyExecutionMetricsInput) (r0 *pinpoint.GetJourneyExecutionMetricsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetJourneyExecutionMetrics", i0)
	r0, _ = returns[0].(*pinpoint.GetJourneyExecutionMetricsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointDouble) GetJourneyExecutionMetricsRequest(i0 *pinpoint.GetJourneyExecutionMetricsInput) (r0 *request.Request, r1 *pinpoint.GetJourneyExecutionMetricsOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetJourneyExecutionMetricsRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*pinpoint.GetJourneyExecutionMetricsOutput)
	return
}

func (d *PinpointDouble) GetJourneyExecutionMetricsWithContext(i0 context.Context, i1 *pinpoint.GetJourneyExecutionMetricsInput, i2 ...request.Option) (r0 *pinpoint.GetJourneyExecutionMetricsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetJourneyExecutionMetricsWithContext", i0, i1, i2)
	r0, _ = returns[0].(*pinpoint.GetJourneyExecutionMetricsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointDouble) fakeGetJourneyExecutionMetricsWithContext(ctx context.Context, in *pinpoint.GetJourneyExecutionMetricsInput, _ ...request.Option) (*pinpoint.GetJourneyExecutionMetricsOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "GetJourneyExecutionMetrics cancelled", ctx.Err())
	default:
		return d.GetJourneyExecutionMetrics(in)
	}
}

func (d *PinpointDouble) GetJourneyRequest(i0 *pinpoint.GetJourneyInput) (r0 *request.Request, r1 *pinpoint.GetJourneyOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetJourneyRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*pinpoint.GetJourneyOutput)
	return
}

func (d *PinpointDouble) GetJourneyWithContext(i0 context.Context, i1 *pinpoint.GetJourneyInput, i2 ...request.Option) (r0 *pinpoint.GetJourneyOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetJourneyWithContext", i0, i1, i2)
	r0, _ = returns[0].(*pinpoint.GetJourneyOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointDouble) fakeGetJourneyWithContext(ctx context.Context, in *pinpoint.GetJourneyInput, _ ...request.Option) (*pinpoint.GetJourneyOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "GetJourney cancelled", ctx.Err())
	default:
		return d.GetJourney(in)
	}
}

func (d *PinpointDouble) GetPushTemplate(i0 *pinpoint.GetPushTemplateInput) (r0 *pinpoint.GetPushTemplateOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetPushTemplate", i0)
	r0, _ = returns[0].(*pinpoint.GetPushTemplateOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointDouble) GetPushTemplateRequest(i0 *pinpoint.GetPushTemplateInput) (r0 *request.Request, r1 *pinpoint.GetPushTemplateOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetPushTemplateRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*pinpoint.GetPushTemplateOutput)
	return
}

func (d *PinpointDouble) GetPushTemplateWithContext(i0 context.Context, i1 *pinpoint.GetPushTemplateInput, i2 ...request.Option) (r0 *pinpoint.GetPushTemplateOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetPushTemplateWithContext", i0, i1, i2)
	r0, _ = returns[0].(*pinpoint.GetPushTemplateOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointDouble) fakeGetPushTemplateWithContext(ctx context.Context, in *pinpoint.GetPushTemplateInput, _ ...request.Option) (*pinpoint.GetPushTemplateOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "GetPushTemplate cancelled", ctx.Err())
	default:
		return d.GetPushTemplate(in)
	}
}

func (d *PinpointDouble) GetSegment(i0 *pinpoint.GetSegmentInput) (r0 *pinpoint.GetSegmentOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetSegment", i0)
	r0, _ = returns[0].(*pinpoint.GetSegmentOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointDouble) GetSegmentExportJobs(i0 *pinpoint.GetSegmentExportJobsInput) (r0 *pinpoint.GetSegmentExportJobsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetSegmentExportJobs", i0)
	r0, _ = returns[0].(*pinpoint.GetSegmentExportJobsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointDouble) GetSegmentExportJobsRequest(i0 *pinpoint.GetSegmentExportJobsInput) (r0 *request.Request, r1 *pinpoint.GetSegmentExportJobsOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetSegmentExportJobsRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*pinpoint.GetSegmentExportJobsOutput)
	return
}

func (d *PinpointDouble) GetSegmentExportJobsWithContext(i0 context.Context, i1 *pinpoint.GetSegmentExportJobsInput, i2 ...request.Option) (r0 *pinpoint.GetSegmentExportJobsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetSegmentExportJobsWithContext", i0, i1, i2)
	r0, _ = returns[0].(*pinpoint.GetSegmentExportJobsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointDouble) fakeGetSegmentExportJobsWithContext(ctx context.Context, in *pinpoint.GetSegmentExportJobsInput, _ ...request.Option) (*pinpoint.GetSegmentExportJobsOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "GetSegmentExportJobs cancelled", ctx.Err())
	default:
		return d.GetSegmentExportJobs(in)
	}
}

func (d *PinpointDouble) GetSegmentImportJobs(i0 *pinpoint.GetSegmentImportJobsInput) (r0 *pinpoint.GetSegmentImportJobsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetSegmentImportJobs", i0)
	r0, _ = returns[0].(*pinpoint.GetSegmentImportJobsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointDouble) GetSegmentImportJobsRequest(i0 *pinpoint.GetSegmentImportJobsInput) (r0 *request.Request, r1 *pinpoint.GetSegmentImportJobsOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetSegmentImportJobsRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*pinpoint.GetSegmentImportJobsOutput)
	return
}

func (d *PinpointDouble) GetSegmentImportJobsWithContext(i0 context.Context, i1 *pinpoint.GetSegmentImportJobsInput, i2 ...request.Option) (r0 *pinpoint.GetSegmentImportJobsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetSegmentImportJobsWithContext", i0, i1, i2)
	r0, _ = returns[0].(*pinpoint.GetSegmentImportJobsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointDouble) fakeGetSegmentImportJobsWithContext(ctx context.Context, in *pinpoint.GetSegmentImportJobsInput, _ ...request.Option) (*pinpoint.GetSegmentImportJobsOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "GetSegmentImportJobs cancelled", ctx.Err())
	default:
		return d.GetSegmentImportJobs(in)
	}
}

func (d *PinpointDouble) GetSegmentRequest(i0 *pinpoint.GetSegmentInput) (r0 *request.Request, r1 *pinpoint.GetSegmentOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetSegmentRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*pinpoint.GetSegmentOutput)
	return
}

func (d *PinpointDouble) GetSegmentVersion(i0 *pinpoint.GetSegmentVersionInput) (r0 *pinpoint.GetSegmentVersionOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetSegmentVersion", i0)
	r0, _ = returns[0].(*pinpoint.GetSegmentVersionOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointDouble) GetSegmentVersionRequest(i0 *pinpoint.GetSegmentVersionInput) (r0 *request.Request, r1 *pinpoint.GetSegmentVersionOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetSegmentVersionRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*pinpoint.GetSegmentVersionOutput)
	return
}

func (d *PinpointDouble) GetSegmentVersionWithContext(i0 context.Context, i1 *pinpoint.GetSegmentVersionInput, i2 ...request.Option) (r0 *pinpoint.GetSegmentVersionOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetSegmentVersionWithContext", i0, i1, i2)
	r0, _ = returns[0].(*pinpoint.GetSegmentVersionOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointDouble) fakeGetSegmentVersionWithContext(ctx context.Context, in *pinpoint.GetSegmentVersionInput, _ ...request.Option) (*pinpoint.GetSegmentVersionOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "GetSegmentVersion cancelled", ctx.Err())
	default:
		return d.GetSegmentVersion(in)
	}
}

func (d *PinpointDouble) GetSegmentVersions(i0 *pinpoint.GetSegmentVersionsInput) (r0 *pinpoint.GetSegmentVersionsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetSegmentVersions", i0)
	r0, _ = returns[0].(*pinpoint.GetSegmentVersionsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointDouble) GetSegmentVersionsRequest(i0 *pinpoint.GetSegmentVersionsInput) (r0 *request.Request, r1 *pinpoint.GetSegmentVersionsOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetSegmentVersionsRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*pinpoint.GetSegmentVersionsOutput)
	return
}

func (d *PinpointDouble) GetSegmentVersionsWithContext(i0 context.Context, i1 *pinpoint.GetSegmentVersionsInput, i2 ...request.Option) (r0 *pinpoint.GetSegmentVersionsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetSegmentVersionsWithContext", i0, i1, i2)
	r0, _ = returns[0].(*pinpoint.GetSegmentVersionsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointDouble) fakeGetSegmentVersionsWithContext(ctx context.Context, in *pinpoint.GetSegmentVersionsInput, _ ...request.Option) (*pinpoint.GetSegmentVersionsOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "GetSegmentVersions cancelled", ctx.Err())
	default:
		return d.GetSegmentVersions(in)
	}
}

func (d *PinpointDouble) GetSegmentWithContext(i0 context.Context, i1 *pinpoint.GetSegmentInput, i2 ...request.Option) (r0 *pinpoint.GetSegmentOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetSegmentWithContext", i0, i1, i2)
	r0, _ = returns[0].(*pinpoint.GetSegmentOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointDouble) fakeGetSegmentWithContext(ctx context.Context, in *pinpoint.GetSegmentInput, _ ...request.Option) (*pinpoint.GetSegmentOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "GetSegment cancelled", ctx.Err())
	default:
		return d.GetSegment(in)
	}
}

func (d *PinpointDouble) GetSegments(i0 *pinpoint.GetSegmentsInput) (r0 *pinpoint.GetSegmentsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetSegments", i0)
	r0, _ = returns[0].(*pinpoint.GetSegmentsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointDouble) GetSegmentsRequest(i0 *pinpoint.GetSegmentsInput) (r0 *request.Request, r1 *pinpoint.GetSegmentsOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetSegmentsRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*pinpoint.GetSegmentsOutput)
	return
}

func (d *PinpointDouble) GetSegmentsWithContext(i0 context.Context, i1 *pinpoint.GetSegmentsInput, i2 ...request.Option) (r0 *pinpoint.GetSegmentsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetSegmentsWithContext", i0, i1, i2)
	r0, _ = returns[0].(*pinpoint.GetSegmentsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointDouble) fakeGetSegmentsWithContext(ctx context.Context, in *pinpoint.GetSegmentsInput, _ ...request.Option) (*pinpoint.GetSegmentsOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "GetSegments cancelled", ctx.Err())
	default:
		return d.GetSegments(in)
	}
}

func (d *PinpointDouble) GetSmsChannel(i0 *pinpoint.GetSmsChannelInput) (r0 *pinpoint.GetSmsChannelOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetSmsChannel", i0)
	r0, _ = returns[0].(*pinpoint.GetSmsChannelOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointDouble) GetSmsChannelRequest(i0 *pinpoint.GetSmsChannelInput) (r0 *request.Request, r1 *pinpoint.GetSmsChannelOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetSmsChannelRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*pinpoint.GetSmsChannelOutput)
	return
}

func (d *PinpointDouble) GetSmsChannelWithContext(i0 context.Context, i1 *pinpoint.GetSmsChannelInput, i2 ...request.Option) (r0 *pinpoint.GetSmsChannelOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetSmsChannelWithContext", i0, i1, i2)
	r0, _ = returns[0].(*pinpoint.GetSmsChannelOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointDouble) fakeGetSmsChannelWithContext(ctx context.Context, in *pinpoint.GetSmsChannelInput, _ ...request.Option) (*pinpoint.GetSmsChannelOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "GetSmsChannel cancelled", ctx.Err())
	default:
		return d.GetSmsChannel(in)
	}
}

func (d *PinpointDouble) GetSmsTemplate(i0 *pinpoint.GetSmsTemplateInput) (r0 *pinpoint.GetSmsTemplateOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetSmsTemplate", i0)
	r0, _ = returns[0].(*pinpoint.GetSmsTemplateOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointDouble) GetSmsTemplateRequest(i0 *pinpoint.GetSmsTemplateInput) (r0 *request.Request, r1 *pinpoint.GetSmsTemplateOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetSmsTemplateRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*pinpoint.GetSmsTemplateOutput)
	return
}

func (d *PinpointDouble) GetSmsTemplateWithContext(i0 context.Context, i1 *pinpoint.GetSmsTemplateInput, i2 ...request.Option) (r0 *pinpoint.GetSmsTemplateOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetSmsTemplateWithContext", i0, i1, i2)
	r0, _ = returns[0].(*pinpoint.GetSmsTemplateOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointDouble) fakeGetSmsTemplateWithContext(ctx context.Context, in *pinpoint.GetSmsTemplateInput, _ ...request.Option) (*pinpoint.GetSmsTemplateOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "GetSmsTemplate cancelled", ctx.Err())
	default:
		return d.GetSmsTemplate(in)
	}
}

func (d *PinpointDouble) GetUserEndpoints(i0 *pinpoint.GetUserEndpointsInput) (r0 *pinpoint.GetUserEndpointsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetUserEndpoints", i0)
	r0, _ = returns[0].(*pinpoint.GetUserEndpointsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointDouble) GetUserEndpointsRequest(i0 *pinpoint.GetUserEndpointsInput) (r0 *request.Request, r1 *pinpoint.GetUserEndpointsOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetUserEndpointsRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*pinpoint.GetUserEndpointsOutput)
	return
}

func (d *PinpointDouble) GetUserEndpointsWithContext(i0 context.Context, i1 *pinpoint.GetUserEndpointsInput, i2 ...request.Option) (r0 *pinpoint.GetUserEndpointsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetUserEndpointsWithContext", i0, i1, i2)
	r0, _ = returns[0].(*pinpoint.GetUserEndpointsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointDouble) fakeGetUserEndpointsWithContext(ctx context.Context, in *pinpoint.GetUserEndpointsInput, _ ...request.Option) (*pinpoint.GetUserEndpointsOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "GetUserEndpoints cancelled", ctx.Err())
	default:
		return d.GetUserEndpoints(in)
	}
}

func (d *PinpointDouble) GetVoiceChannel(i0 *pinpoint.GetVoiceChannelInput) (r0 *pinpoint.GetVoiceChannelOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetVoiceChannel", i0)
	r0, _ = returns[0].(*pinpoint.GetVoiceChannelOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointDouble) GetVoiceChannelRequest(i0 *pinpoint.GetVoiceChannelInput) (r0 *request.Request, r1 *pinpoint.GetVoiceChannelOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetVoiceChannelRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*pinpoint.GetVoiceChannelOutput)
	return
}

func (d *PinpointDouble) GetVoiceChannelWithContext(i0 context.Context, i1 *pinpoint.GetVoiceChannelInput, i2 ...request.Option) (r0 *pinpoint.GetVoiceChannelOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetVoiceChannelWithContext", i0, i1, i2)
	r0, _ = returns[0].(*pinpoint.GetVoiceChannelOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointDouble) fakeGetVoiceChannelWithContext(ctx context.Context, in *pinpoint.GetVoiceChannelInput, _ ...request.Option) (*pinpoint.GetVoiceChannelOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "GetVoiceChannel cancelled", ctx.Err())
	default:
		return d.GetVoiceChannel(in)
	}
}

func (d *PinpointDouble) GetVoiceTemplate(i0 *pinpoint.GetVoiceTemplateInput) (r0 *pinpoint.GetVoiceTemplateOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetVoiceTemplate", i0)
	r0, _ = returns[0].(*pinpoint.GetVoiceTemplateOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointDouble) GetVoiceTemplateRequest(i0 *pinpoint.GetVoiceTemplateInput) (r0 *request.Request, r1 *pinpoint.GetVoiceTemplateOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetVoiceTemplateRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*pinpoint.GetVoiceTemplateOutput)
	return
}

func (d *PinpointDouble) GetVoiceTemplateWithContext(i0 context.Context, i1 *pinpoint.GetVoiceTemplateInput, i2 ...request.Option) (r0 *pinpoint.GetVoiceTemplateOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetVoiceTemplateWithContext", i0, i1, i2)
	r0, _ = returns[0].(*pinpoint.GetVoiceTemplateOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointDouble) fakeGetVoiceTemplateWithContext(ctx context.Context, in *pinpoint.GetVoiceTemplateInput, _ ...request.Option) (*pinpoint.GetVoiceTemplateOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "GetVoiceTemplate cancelled", ctx.Err())
	default:
		return d.GetVoiceTemplate(in)
	}
}

func (d *PinpointDouble) ListJourneys(i0 *pinpoint.ListJourneysInput) (r0 *pinpoint.ListJourneysOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListJourneys", i0)
	r0, _ = returns[0].(*pinpoint.ListJourneysOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointDouble) ListJourneysRequest(i0 *pinpoint.ListJourneysInput) (r0 *request.Request, r1 *pinpoint.ListJourneysOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListJourneysRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*pinpoint.ListJourneysOutput)
	return
}

func (d *PinpointDouble) ListJourneysWithContext(i0 context.Context, i1 *pinpoint.ListJourneysInput, i2 ...request.Option) (r0 *pinpoint.ListJourneysOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListJourneysWithContext", i0, i1, i2)
	r0, _ = returns[0].(*pinpoint.ListJourneysOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointDouble) fakeListJourneysWithContext(ctx context.Context, in *pinpoint.ListJourneysInput, _ ...request.Option) (*pinpoint.ListJourneysOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "ListJourneys cancelled", ctx.Err())
	default:
		return d.ListJourneys(in)
	}
}

func (d *PinpointDouble) ListTagsForResource(i0 *pinpoint.ListTagsForResourceInput) (r0 *pinpoint.ListTagsForResourceOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListTagsForResource", i0)
	r0, _ = returns[0].(*pinpoint.ListTagsForResourceOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointDouble) ListTagsForResourceRequest(i0 *pinpoint.ListTagsForResourceInput) (r0 *request.Request, r1 *pinpoint.ListTagsForResourceOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListTagsForResourceRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*pinpoint.ListTagsForResourceOutput)
	return
}

func (d *PinpointDouble) ListTagsForResourceWithContext(i0 context.Context, i1 *pinpoint.ListTagsForResourceInput, i2 ...request.Option) (r0 *pinpoint.ListTagsForResourceOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListTagsForResourceWithContext", i0, i1, i2)
	r0, _ = returns[0].(*pinpoint.ListTagsForResourceOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointDouble) fakeListTagsForResourceWithContext(ctx context.Context, in *pinpoint.ListTagsForResourceInput, _ ...request.Option) (*pinpoint.ListTagsForResourceOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "ListTagsForResource cancelled", ctx.Err())
	default:
		return d.ListTagsForResource(in)
	}
}

func (d *PinpointDouble) ListTemplateVersions(i0 *pinpoint.ListTemplateVersionsInput) (r0 *pinpoint.ListTemplateVersionsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListTemplateVersions", i0)
	r0, _ = returns[0].(*pinpoint.ListTemplateVersionsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointDouble) ListTemplateVersionsRequest(i0 *pinpoint.ListTemplateVersionsInput) (r0 *request.Request, r1 *pinpoint.ListTemplateVersionsOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListTemplateVersionsRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*pinpoint.ListTemplateVersionsOutput)
	return
}

func (d *PinpointDouble) ListTemplateVersionsWithContext(i0 context.Context, i1 *pinpoint.ListTemplateVersionsInput, i2 ...request.Option) (r0 *pinpoint.ListTemplateVersionsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListTemplateVersionsWithContext", i0, i1, i2)
	r0, _ = returns[0].(*pinpoint.ListTemplateVersionsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointDouble) fakeListTemplateVersionsWithContext(ctx context.Context, in *pinpoint.ListTemplateVersionsInput, _ ...request.Option) (*pinpoint.ListTemplateVersionsOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "ListTemplateVersions cancelled", ctx.Err())
	default:
		return d.ListTemplateVersions(in)
	}
}

func (d *PinpointDouble) ListTemplates(i0 *pinpoint.ListTemplatesInput) (r0 *pinpoint.ListTemplatesOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListTemplates", i0)
	r0, _ = returns[0].(*pinpoint.ListTemplatesOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointDouble) ListTemplatesRequest(i0 *pinpoint.ListTemplatesInput) (r0 *request.Request, r1 *pinpoint.ListTemplatesOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListTemplatesRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*pinpoint.ListTemplatesOutput)
	return
}

func (d *PinpointDouble) ListTemplatesWithContext(i0 context.Context, i1 *pinpoint.ListTemplatesInput, i2 ...request.Option) (r0 *pinpoint.ListTemplatesOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListTemplatesWithContext", i0, i1, i2)
	r0, _ = returns[0].(*pinpoint.ListTemplatesOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointDouble) fakeListTemplatesWithContext(ctx context.Context, in *pinpoint.ListTemplatesInput, _ ...request.Option) (*pinpoint.ListTemplatesOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "ListTemplates cancelled", ctx.Err())
	default:
		return d.ListTemplates(in)
	}
}

func (d *PinpointDouble) PhoneNumberValidate(i0 *pinpoint.PhoneNumberValidateInput) (r0 *pinpoint.PhoneNumberValidateOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("PhoneNumberValidate", i0)
	r0, _ = returns[0].(*pinpoint.PhoneNumberValidateOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointDouble) PhoneNumberValidateRequest(i0 *pinpoint.PhoneNumberValidateInput) (r0 *request.Request, r1 *pinpoint.PhoneNumberValidateOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("PhoneNumberValidateRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*pinpoint.PhoneNumberValidateOutput)
	return
}

func (d *PinpointDouble) PhoneNumberValidateWithContext(i0 context.Context, i1 *pinpoint.PhoneNumberValidateInput, i2 ...request.Option) (r0 *pinpoint.PhoneNumberValidateOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("PhoneNumberValidateWithContext", i0, i1, i2)
	r0, _ = returns[0].(*pinpoint.PhoneNumberValidateOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointDouble) fakePhoneNumberValidateWithContext(ctx context.Context, in *pinpoint.PhoneNumberValidateInput, _ ...request.Option) (*pinpoint.PhoneNumberValidateOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "PhoneNumberValidate cancelled", ctx.Err())
	default:
		return d.PhoneNumberValidate(in)
	}
}

func (d *PinpointDouble) PutEventStream(i0 *pinpoint.PutEventStreamInput) (r0 *pinpoint.PutEventStreamOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("PutEventStream", i0)
	r0, _ = returns[0].(*pinpoint.PutEventStreamOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointDouble) PutEventStreamRequest(i0 *pinpoint.PutEventStreamInput) (r0 *request.Request, r1 *pinpoint.PutEventStreamOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("PutEventStreamRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*pinpoint.PutEventStreamOutput)
	return
}

func (d *PinpointDouble) PutEventStreamWithContext(i0 context.Context, i1 *pinpoint.PutEventStreamInput, i2 ...request.Option) (r0 *pinpoint.PutEventStreamOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("PutEventStreamWithContext", i0, i1, i2)
	r0, _ = returns[0].(*pinpoint.PutEventStreamOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointDouble) fakePutEventStreamWithContext(ctx context.Context, in *pinpoint.PutEventStreamInput, _ ...request.Option) (*pinpoint.PutEventStreamOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "PutEventStream cancelled", ctx.Err())
	default:
		return d.PutEventStream(in)
	}
}

func (d *PinpointDouble) PutEvents(i0 *pinpoint.PutEventsInput) (r0 *pinpoint.PutEventsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("PutEvents", i0)
	r0, _ = returns[0].(*pinpoint.PutEventsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointDouble) PutEventsRequest(i0 *pinpoint.PutEventsInput) (r0 *request.Request, r1 *pinpoint.PutEventsOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("PutEventsRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*pinpoint.PutEventsOutput)
	return
}

func (d *PinpointDouble) PutEventsWithContext(i0 context.Context, i1 *pinpoint.PutEventsInput, i2 ...request.Option) (r0 *pinpoint.PutEventsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("PutEventsWithContext", i0, i1, i2)
	r0, _ = returns[0].(*pinpoint.PutEventsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointDouble) fakePutEventsWithContext(ctx context.Context, in *pinpoint.PutEventsInput, _ ...request.Option) (*pinpoint.PutEventsOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "PutEvents cancelled", ctx.Err())
	default:
		return d.PutEvents(in)
	}
}

func (d *PinpointDouble) RemoveAttributes(i0 *pinpoint.RemoveAttributesInput) (r0 *pinpoint.RemoveAttributesOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("RemoveAttributes", i0)
	r0, _ = returns[0].(*pinpoint.RemoveAttributesOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointDouble) RemoveAttributesRequest(i0 *pinpoint.RemoveAttributesInput) (r0 *request.Request, r1 *pinpoint.RemoveAttributesOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("RemoveAttributesRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*pinpoint.RemoveAttributesOutput)
	return
}

func (d *PinpointDouble) RemoveAttributesWithContext(i0 context.Context, i1 *pinpoint.RemoveAttributesInput, i2 ...request.Option) (r0 *pinpoint.RemoveAttributesOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("RemoveAttributesWithContext", i0, i1, i2)
	r0, _ = returns[0].(*pinpoint.RemoveAttributesOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointDouble) fakeRemoveAttributesWithContext(ctx context.Context, in *pinpoint.RemoveAttributesInput, _ ...request.Option) (*pinpoint.RemoveAttributesOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "RemoveAttributes cancelled", ctx.Err())
	default:
		return d.RemoveAttributes(in)
	}
}

func (d *PinpointDouble) SendMessages(i0 *pinpoint.SendMessagesInput) (r0 *pinpoint.SendMessagesOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("SendMessages", i0)
	r0, _ = returns[0].(*pinpoint.SendMessagesOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointDouble) SendMessagesRequest(i0 *pinpoint.SendMessagesInput) (r0 *request.Request, r1 *pinpoint.SendMessagesOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("SendMessagesRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*pinpoint.SendMessagesOutput)
	return
}

func (d *PinpointDouble) SendMessagesWithContext(i0 context.Context, i1 *pinpoint.SendMessagesInput, i2 ...request.Option) (r0 *pinpoint.SendMessagesOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("SendMessagesWithContext", i0, i1, i2)
	r0, _ = returns[0].(*pinpoint.SendMessagesOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointDouble) fakeSendMessagesWithContext(ctx context.Context, in *pinpoint.SendMessagesInput, _ ...request.Option) (*pinpoint.SendMessagesOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "SendMessages cancelled", ctx.Err())
	default:
		return d.SendMessages(in)
	}
}

func (d *PinpointDouble) SendUsersMessages(i0 *pinpoint.SendUsersMessagesInput) (r0 *pinpoint.SendUsersMessagesOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("SendUsersMessages", i0)
	r0, _ = returns[0].(*pinpoint.SendUsersMessagesOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointDouble) SendUsersMessagesRequest(i0 *pinpoint.SendUsersMessagesInput) (r0 *request.Request, r1 *pinpoint.SendUsersMessagesOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("SendUsersMessagesRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*pinpoint.SendUsersMessagesOutput)
	return
}

func (d *PinpointDouble) SendUsersMessagesWithContext(i0 context.Context, i1 *pinpoint.SendUsersMessagesInput, i2 ...request.Option) (r0 *pinpoint.SendUsersMessagesOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("SendUsersMessagesWithContext", i0, i1, i2)
	r0, _ = returns[0].(*pinpoint.SendUsersMessagesOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointDouble) fakeSendUsersMessagesWithContext(ctx context.Context, in *pinpoint.SendUsersMessagesInput, _ ...request.Option) (*pinpoint.SendUsersMessagesOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "SendUsersMessages cancelled", ctx.Err())
	default:
		return d.SendUsersMessages(in)
	}
}

func (d *PinpointDouble) TagResource(i0 *pinpoint.TagResourceInput) (r0 *pinpoint.TagResourceOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("TagResource", i0)
	r0, _ = returns[0].(*pinpoint.TagResourceOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointDouble) TagResourceRequest(i0 *pinpoint.TagResourceInput) (r0 *request.Request, r1 *pinpoint.TagResourceOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("TagResourceRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*pinpoint.TagResourceOutput)
	return
}

func (d *PinpointDouble) TagResourceWithContext(i0 context.Context, i1 *pinpoint.TagResourceInput, i2 ...request.Option) (r0 *pinpoint.TagResourceOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("TagResourceWithContext", i0, i1, i2)
	r0, _ = returns[0].(*pinpoint.TagResourceOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointDouble) fakeTagResourceWithContext(ctx context.Context, in *pinpoint.TagResourceInput, _ ...request.Option) (*pinpoint.TagResourceOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "TagResource cancelled", ctx.Err())
	default:
		return d.TagResource(in)
	}
}

func (d *PinpointDouble) UntagResource(i0 *pinpoint.UntagResourceInput) (r0 *pinpoint.UntagResourceOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UntagResource", i0)
	r0, _ = returns[0].(*pinpoint.UntagResourceOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointDouble) UntagResourceRequest(i0 *pinpoint.UntagResourceInput) (r0 *request.Request, r1 *pinpoint.UntagResourceOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UntagResourceRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*pinpoint.UntagResourceOutput)
	return
}

func (d *PinpointDouble) UntagResourceWithContext(i0 context.Context, i1 *pinpoint.UntagResourceInput, i2 ...request.Option) (r0 *pinpoint.UntagResourceOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UntagResourceWithContext", i0, i1, i2)
	r0, _ = returns[0].(*pinpoint.UntagResourceOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointDouble) fakeUntagResourceWithContext(ctx context.Context, in *pinpoint.UntagResourceInput, _ ...request.Option) (*pinpoint.UntagResourceOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "UntagResource cancelled", ctx.Err())
	default:
		return d.UntagResource(in)
	}
}

func (d *PinpointDouble) UpdateAdmChannel(i0 *pinpoint.UpdateAdmChannelInput) (r0 *pinpoint.UpdateAdmChannelOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UpdateAdmChannel", i0)
	r0, _ = returns[0].(*pinpoint.UpdateAdmChannelOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointDouble) UpdateAdmChannelRequest(i0 *pinpoint.UpdateAdmChannelInput) (r0 *request.Request, r1 *pinpoint.UpdateAdmChannelOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UpdateAdmChannelRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*pinpoint.UpdateAdmChannelOutput)
	return
}

func (d *PinpointDouble) UpdateAdmChannelWithContext(i0 context.Context, i1 *pinpoint.UpdateAdmChannelInput, i2 ...request.Option) (r0 *pinpoint.UpdateAdmChannelOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UpdateAdmChannelWithContext", i0, i1, i2)
	r0, _ = returns[0].(*pinpoint.UpdateAdmChannelOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointDouble) fakeUpdateAdmChannelWithContext(ctx context.Context, in *pinpoint.UpdateAdmChannelInput, _ ...request.Option) (*pinpoint.UpdateAdmChannelOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "UpdateAdmChannel cancelled", ctx.Err())
	default:
		return d.UpdateAdmChannel(in)
	}
}

func (d *PinpointDouble) UpdateApnsChannel(i0 *pinpoint.UpdateApnsChannelInput) (r0 *pinpoint.UpdateApnsChannelOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UpdateApnsChannel", i0)
	r0, _ = returns[0].(*pinpoint.UpdateApnsChannelOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointDouble) UpdateApnsChannelRequest(i0 *pinpoint.UpdateApnsChannelInput) (r0 *request.Request, r1 *pinpoint.UpdateApnsChannelOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UpdateApnsChannelRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*pinpoint.UpdateApnsChannelOutput)
	return
}

func (d *PinpointDouble) UpdateApnsChannelWithContext(i0 context.Context, i1 *pinpoint.UpdateApnsChannelInput, i2 ...request.Option) (r0 *pinpoint.UpdateApnsChannelOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UpdateApnsChannelWithContext", i0, i1, i2)
	r0, _ = returns[0].(*pinpoint.UpdateApnsChannelOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointDouble) fakeUpdateApnsChannelWithContext(ctx context.Context, in *pinpoint.UpdateApnsChannelInput, _ ...request.Option) (*pinpoint.UpdateApnsChannelOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "UpdateApnsChannel cancelled", ctx.Err())
	default:
		return d.UpdateApnsChannel(in)
	}
}

func (d *PinpointDouble) UpdateApnsSandboxChannel(i0 *pinpoint.UpdateApnsSandboxChannelInput) (r0 *pinpoint.UpdateApnsSandboxChannelOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UpdateApnsSandboxChannel", i0)
	r0, _ = returns[0].(*pinpoint.UpdateApnsSandboxChannelOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointDouble) UpdateApnsSandboxChannelRequest(i0 *pinpoint.UpdateApnsSandboxChannelInput) (r0 *request.Request, r1 *pinpoint.UpdateApnsSandboxChannelOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UpdateApnsSandboxChannelRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*pinpoint.UpdateApnsSandboxChannelOutput)
	return
}

func (d *PinpointDouble) UpdateApnsSandboxChannelWithContext(i0 context.Context, i1 *pinpoint.UpdateApnsSandboxChannelInput, i2 ...request.Option) (r0 *pinpoint.UpdateApnsSandboxChannelOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UpdateApnsSandboxChannelWithContext", i0, i1, i2)
	r0, _ = returns[0].(*pinpoint.UpdateApnsSandboxChannelOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointDouble) fakeUpdateApnsSandboxChannelWithContext(ctx context.Context, in *pinpoint.UpdateApnsSandboxChannelInput, _ ...request.Option) (*pinpoint.UpdateApnsSandboxChannelOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "UpdateApnsSandboxChannel cancelled", ctx.Err())
	default:
		return d.UpdateApnsSandboxChannel(in)
	}
}

func (d *PinpointDouble) UpdateApnsVoipChannel(i0 *pinpoint.UpdateApnsVoipChannelInput) (r0 *pinpoint.UpdateApnsVoipChannelOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UpdateApnsVoipChannel", i0)
	r0, _ = returns[0].(*pinpoint.UpdateApnsVoipChannelOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointDouble) UpdateApnsVoipChannelRequest(i0 *pinpoint.UpdateApnsVoipChannelInput) (r0 *request.Request, r1 *pinpoint.UpdateApnsVoipChannelOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UpdateApnsVoipChannelRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*pinpoint.UpdateApnsVoipChannelOutput)
	return
}

func (d *PinpointDouble) UpdateApnsVoipChannelWithContext(i0 context.Context, i1 *pinpoint.UpdateApnsVoipChannelInput, i2 ...request.Option) (r0 *pinpoint.UpdateApnsVoipChannelOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UpdateApnsVoipChannelWithContext", i0, i1, i2)
	r0, _ = returns[0].(*pinpoint.UpdateApnsVoipChannelOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointDouble) fakeUpdateApnsVoipChannelWithContext(ctx context.Context, in *pinpoint.UpdateApnsVoipChannelInput, _ ...request.Option) (*pinpoint.UpdateApnsVoipChannelOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "UpdateApnsVoipChannel cancelled", ctx.Err())
	default:
		return d.UpdateApnsVoipChannel(in)
	}
}

func (d *PinpointDouble) UpdateApnsVoipSandboxChannel(i0 *pinpoint.UpdateApnsVoipSandboxChannelInput) (r0 *pinpoint.UpdateApnsVoipSandboxChannelOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UpdateApnsVoipSandboxChannel", i0)
	r0, _ = returns[0].(*pinpoint.UpdateApnsVoipSandboxChannelOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointDouble) UpdateApnsVoipSandboxChannelRequest(i0 *pinpoint.UpdateApnsVoipSandboxChannelInput) (r0 *request.Request, r1 *pinpoint.UpdateApnsVoipSandboxChannelOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UpdateApnsVoipSandboxChannelRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*pinpoint.UpdateApnsVoipSandboxChannelOutput)
	return
}

func (d *PinpointDouble) UpdateApnsVoipSandboxChannelWithContext(i0 context.Context, i1 *pinpoint.UpdateApnsVoipSandboxChannelInput, i2 ...request.Option) (r0 *pinpoint.UpdateApnsVoipSandboxChannelOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UpdateApnsVoipSandboxChannelWithContext", i0, i1, i2)
	r0, _ = returns[0].(*pinpoint.UpdateApnsVoipSandboxChannelOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointDouble) fakeUpdateApnsVoipSandboxChannelWithContext(ctx context.Context, in *pinpoint.UpdateApnsVoipSandboxChannelInput, _ ...request.Option) (*pinpoint.UpdateApnsVoipSandboxChannelOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "UpdateApnsVoipSandboxChannel cancelled", ctx.Err())
	default:
		return d.UpdateApnsVoipSandboxChannel(in)
	}
}

func (d *PinpointDouble) UpdateApplicationSettings(i0 *pinpoint.UpdateApplicationSettingsInput) (r0 *pinpoint.UpdateApplicationSettingsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UpdateApplicationSettings", i0)
	r0, _ = returns[0].(*pinpoint.UpdateApplicationSettingsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointDouble) UpdateApplicationSettingsRequest(i0 *pinpoint.UpdateApplicationSettingsInput) (r0 *request.Request, r1 *pinpoint.UpdateApplicationSettingsOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UpdateApplicationSettingsRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*pinpoint.UpdateApplicationSettingsOutput)
	return
}

func (d *PinpointDouble) UpdateApplicationSettingsWithContext(i0 context.Context, i1 *pinpoint.UpdateApplicationSettingsInput, i2 ...request.Option) (r0 *pinpoint.UpdateApplicationSettingsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UpdateApplicationSettingsWithContext", i0, i1, i2)
	r0, _ = returns[0].(*pinpoint.UpdateApplicationSettingsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointDouble) fakeUpdateApplicationSettingsWithContext(ctx context.Context, in *pinpoint.UpdateApplicationSettingsInput, _ ...request.Option) (*pinpoint.UpdateApplicationSettingsOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "UpdateApplicationSettings cancelled", ctx.Err())
	default:
		return d.UpdateApplicationSettings(in)
	}
}

func (d *PinpointDouble) UpdateBaiduChannel(i0 *pinpoint.UpdateBaiduChannelInput) (r0 *pinpoint.UpdateBaiduChannelOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UpdateBaiduChannel", i0)
	r0, _ = returns[0].(*pinpoint.UpdateBaiduChannelOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointDouble) UpdateBaiduChannelRequest(i0 *pinpoint.UpdateBaiduChannelInput) (r0 *request.Request, r1 *pinpoint.UpdateBaiduChannelOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UpdateBaiduChannelRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*pinpoint.UpdateBaiduChannelOutput)
	return
}

func (d *PinpointDouble) UpdateBaiduChannelWithContext(i0 context.Context, i1 *pinpoint.UpdateBaiduChannelInput, i2 ...request.Option) (r0 *pinpoint.UpdateBaiduChannelOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UpdateBaiduChannelWithContext", i0, i1, i2)
	r0, _ = returns[0].(*pinpoint.UpdateBaiduChannelOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointDouble) fakeUpdateBaiduChannelWithContext(ctx context.Context, in *pinpoint.UpdateBaiduChannelInput, _ ...request.Option) (*pinpoint.UpdateBaiduChannelOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "UpdateBaiduChannel cancelled", ctx.Err())
	default:
		return d.UpdateBaiduChannel(in)
	}
}

func (d *PinpointDouble) UpdateCampaign(i0 *pinpoint.UpdateCampaignInput) (r0 *pinpoint.UpdateCampaignOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UpdateCampaign", i0)
	r0, _ = returns[0].(*pinpoint.UpdateCampaignOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointDouble) UpdateCampaignRequest(i0 *pinpoint.UpdateCampaignInput) (r0 *request.Request, r1 *pinpoint.UpdateCampaignOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UpdateCampaignRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*pinpoint.UpdateCampaignOutput)
	return
}

func (d *PinpointDouble) UpdateCampaignWithContext(i0 context.Context, i1 *pinpoint.UpdateCampaignInput, i2 ...request.Option) (r0 *pinpoint.UpdateCampaignOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UpdateCampaignWithContext", i0, i1, i2)
	r0, _ = returns[0].(*pinpoint.UpdateCampaignOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointDouble) fakeUpdateCampaignWithContext(ctx context.Context, in *pinpoint.UpdateCampaignInput, _ ...request.Option) (*pinpoint.UpdateCampaignOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "UpdateCampaign cancelled", ctx.Err())
	default:
		return d.UpdateCampaign(in)
	}
}

func (d *PinpointDouble) UpdateEmailChannel(i0 *pinpoint.UpdateEmailChannelInput) (r0 *pinpoint.UpdateEmailChannelOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UpdateEmailChannel", i0)
	r0, _ = returns[0].(*pinpoint.UpdateEmailChannelOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointDouble) UpdateEmailChannelRequest(i0 *pinpoint.UpdateEmailChannelInput) (r0 *request.Request, r1 *pinpoint.UpdateEmailChannelOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UpdateEmailChannelRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*pinpoint.UpdateEmailChannelOutput)
	return
}

func (d *PinpointDouble) UpdateEmailChannelWithContext(i0 context.Context, i1 *pinpoint.UpdateEmailChannelInput, i2 ...request.Option) (r0 *pinpoint.UpdateEmailChannelOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UpdateEmailChannelWithContext", i0, i1, i2)
	r0, _ = returns[0].(*pinpoint.UpdateEmailChannelOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointDouble) fakeUpdateEmailChannelWithContext(ctx context.Context, in *pinpoint.UpdateEmailChannelInput, _ ...request.Option) (*pinpoint.UpdateEmailChannelOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "UpdateEmailChannel cancelled", ctx.Err())
	default:
		return d.UpdateEmailChannel(in)
	}
}

func (d *PinpointDouble) UpdateEmailTemplate(i0 *pinpoint.UpdateEmailTemplateInput) (r0 *pinpoint.UpdateEmailTemplateOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UpdateEmailTemplate", i0)
	r0, _ = returns[0].(*pinpoint.UpdateEmailTemplateOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointDouble) UpdateEmailTemplateRequest(i0 *pinpoint.UpdateEmailTemplateInput) (r0 *request.Request, r1 *pinpoint.UpdateEmailTemplateOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UpdateEmailTemplateRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*pinpoint.UpdateEmailTemplateOutput)
	return
}

func (d *PinpointDouble) UpdateEmailTemplateWithContext(i0 context.Context, i1 *pinpoint.UpdateEmailTemplateInput, i2 ...request.Option) (r0 *pinpoint.UpdateEmailTemplateOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UpdateEmailTemplateWithContext", i0, i1, i2)
	r0, _ = returns[0].(*pinpoint.UpdateEmailTemplateOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointDouble) fakeUpdateEmailTemplateWithContext(ctx context.Context, in *pinpoint.UpdateEmailTemplateInput, _ ...request.Option) (*pinpoint.UpdateEmailTemplateOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "UpdateEmailTemplate cancelled", ctx.Err())
	default:
		return d.UpdateEmailTemplate(in)
	}
}

func (d *PinpointDouble) UpdateEndpoint(i0 *pinpoint.UpdateEndpointInput) (r0 *pinpoint.UpdateEndpointOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UpdateEndpoint", i0)
	r0, _ = returns[0].(*pinpoint.UpdateEndpointOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointDouble) UpdateEndpointRequest(i0 *pinpoint.UpdateEndpointInput) (r0 *request.Request, r1 *pinpoint.UpdateEndpointOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UpdateEndpointRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*pinpoint.UpdateEndpointOutput)
	return
}

func (d *PinpointDouble) UpdateEndpointWithContext(i0 context.Context, i1 *pinpoint.UpdateEndpointInput, i2 ...request.Option) (r0 *pinpoint.UpdateEndpointOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UpdateEndpointWithContext", i0, i1, i2)
	r0, _ = returns[0].(*pinpoint.UpdateEndpointOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointDouble) fakeUpdateEndpointWithContext(ctx context.Context, in *pinpoint.UpdateEndpointInput, _ ...request.Option) (*pinpoint.UpdateEndpointOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "UpdateEndpoint cancelled", ctx.Err())
	default:
		return d.UpdateEndpoint(in)
	}
}

func (d *PinpointDouble) UpdateEndpointsBatch(i0 *pinpoint.UpdateEndpointsBatchInput) (r0 *pinpoint.UpdateEndpointsBatchOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UpdateEndpointsBatch", i0)
	r0, _ = returns[0].(*pinpoint.UpdateEndpointsBatchOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointDouble) UpdateEndpointsBatchRequest(i0 *pinpoint.UpdateEndpointsBatchInput) (r0 *request.Request, r1 *pinpoint.UpdateEndpointsBatchOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UpdateEndpointsBatchRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*pinpoint.UpdateEndpointsBatchOutput)
	return
}

func (d *PinpointDouble) UpdateEndpointsBatchWithContext(i0 context.Context, i1 *pinpoint.UpdateEndpointsBatchInput, i2 ...request.Option) (r0 *pinpoint.UpdateEndpointsBatchOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UpdateEndpointsBatchWithContext", i0, i1, i2)
	r0, _ = returns[0].(*pinpoint.UpdateEndpointsBatchOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointDouble) fakeUpdateEndpointsBatchWithContext(ctx context.Context, in *pinpoint.UpdateEndpointsBatchInput, _ ...request.Option) (*pinpoint.UpdateEndpointsBatchOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "UpdateEndpointsBatch cancelled", ctx.Err())
	default:
		return d.UpdateEndpointsBatch(in)
	}
}

func (d *PinpointDouble) UpdateGcmChannel(i0 *pinpoint.UpdateGcmChannelInput) (r0 *pinpoint.UpdateGcmChannelOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UpdateGcmChannel", i0)
	r0, _ = returns[0].(*pinpoint.UpdateGcmChannelOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointDouble) UpdateGcmChannelRequest(i0 *pinpoint.UpdateGcmChannelInput) (r0 *request.Request, r1 *pinpoint.UpdateGcmChannelOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UpdateGcmChannelRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*pinpoint.UpdateGcmChannelOutput)
	return
}

func (d *PinpointDouble) UpdateGcmChannelWithContext(i0 context.Context, i1 *pinpoint.UpdateGcmChannelInput, i2 ...request.Option) (r0 *pinpoint.UpdateGcmChannelOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UpdateGcmChannelWithContext", i0, i1, i2)
	r0, _ = returns[0].(*pinpoint.UpdateGcmChannelOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointDouble) fakeUpdateGcmChannelWithContext(ctx context.Context, in *pinpoint.UpdateGcmChannelInput, _ ...request.Option) (*pinpoint.UpdateGcmChannelOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "UpdateGcmChannel cancelled", ctx.Err())
	default:
		return d.UpdateGcmChannel(in)
	}
}

func (d *PinpointDouble) UpdateJourney(i0 *pinpoint.UpdateJourneyInput) (r0 *pinpoint.UpdateJourneyOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UpdateJourney", i0)
	r0, _ = returns[0].(*pinpoint.UpdateJourneyOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointDouble) UpdateJourneyRequest(i0 *pinpoint.UpdateJourneyInput) (r0 *request.Request, r1 *pinpoint.UpdateJourneyOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UpdateJourneyRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*pinpoint.UpdateJourneyOutput)
	return
}

func (d *PinpointDouble) UpdateJourneyState(i0 *pinpoint.UpdateJourneyStateInput) (r0 *pinpoint.UpdateJourneyStateOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UpdateJourneyState", i0)
	r0, _ = returns[0].(*pinpoint.UpdateJourneyStateOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointDouble) UpdateJourneyStateRequest(i0 *pinpoint.UpdateJourneyStateInput) (r0 *request.Request, r1 *pinpoint.UpdateJourneyStateOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UpdateJourneyStateRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*pinpoint.UpdateJourneyStateOutput)
	return
}

func (d *PinpointDouble) UpdateJourneyStateWithContext(i0 context.Context, i1 *pinpoint.UpdateJourneyStateInput, i2 ...request.Option) (r0 *pinpoint.UpdateJourneyStateOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UpdateJourneyStateWithContext", i0, i1, i2)
	r0, _ = returns[0].(*pinpoint.UpdateJourneyStateOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointDouble) fakeUpdateJourneyStateWithContext(ctx context.Context, in *pinpoint.UpdateJourneyStateInput, _ ...request.Option) (*pinpoint.UpdateJourneyStateOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "UpdateJourneyState cancelled", ctx.Err())
	default:
		return d.UpdateJourneyState(in)
	}
}

func (d *PinpointDouble) UpdateJourneyWithContext(i0 context.Context, i1 *pinpoint.UpdateJourneyInput, i2 ...request.Option) (r0 *pinpoint.UpdateJourneyOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UpdateJourneyWithContext", i0, i1, i2)
	r0, _ = returns[0].(*pinpoint.UpdateJourneyOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointDouble) fakeUpdateJourneyWithContext(ctx context.Context, in *pinpoint.UpdateJourneyInput, _ ...request.Option) (*pinpoint.UpdateJourneyOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "UpdateJourney cancelled", ctx.Err())
	default:
		return d.UpdateJourney(in)
	}
}

func (d *PinpointDouble) UpdatePushTemplate(i0 *pinpoint.UpdatePushTemplateInput) (r0 *pinpoint.UpdatePushTemplateOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UpdatePushTemplate", i0)
	r0, _ = returns[0].(*pinpoint.UpdatePushTemplateOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointDouble) UpdatePushTemplateRequest(i0 *pinpoint.UpdatePushTemplateInput) (r0 *request.Request, r1 *pinpoint.UpdatePushTemplateOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UpdatePushTemplateRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*pinpoint.UpdatePushTemplateOutput)
	return
}

func (d *PinpointDouble) UpdatePushTemplateWithContext(i0 context.Context, i1 *pinpoint.UpdatePushTemplateInput, i2 ...request.Option) (r0 *pinpoint.UpdatePushTemplateOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UpdatePushTemplateWithContext", i0, i1, i2)
	r0, _ = returns[0].(*pinpoint.UpdatePushTemplateOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointDouble) fakeUpdatePushTemplateWithContext(ctx context.Context, in *pinpoint.UpdatePushTemplateInput, _ ...request.Option) (*pinpoint.UpdatePushTemplateOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "UpdatePushTemplate cancelled", ctx.Err())
	default:
		return d.UpdatePushTemplate(in)
	}
}

func (d *PinpointDouble) UpdateSegment(i0 *pinpoint.UpdateSegmentInput) (r0 *pinpoint.UpdateSegmentOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UpdateSegment", i0)
	r0, _ = returns[0].(*pinpoint.UpdateSegmentOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointDouble) UpdateSegmentRequest(i0 *pinpoint.UpdateSegmentInput) (r0 *request.Request, r1 *pinpoint.UpdateSegmentOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UpdateSegmentRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*pinpoint.UpdateSegmentOutput)
	return
}

func (d *PinpointDouble) UpdateSegmentWithContext(i0 context.Context, i1 *pinpoint.UpdateSegmentInput, i2 ...request.Option) (r0 *pinpoint.UpdateSegmentOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UpdateSegmentWithContext", i0, i1, i2)
	r0, _ = returns[0].(*pinpoint.UpdateSegmentOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointDouble) fakeUpdateSegmentWithContext(ctx context.Context, in *pinpoint.UpdateSegmentInput, _ ...request.Option) (*pinpoint.UpdateSegmentOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "UpdateSegment cancelled", ctx.Err())
	default:
		return d.UpdateSegment(in)
	}
}

func (d *PinpointDouble) UpdateSmsChannel(i0 *pinpoint.UpdateSmsChannelInput) (r0 *pinpoint.UpdateSmsChannelOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UpdateSmsChannel", i0)
	r0, _ = returns[0].(*pinpoint.UpdateSmsChannelOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointDouble) UpdateSmsChannelRequest(i0 *pinpoint.UpdateSmsChannelInput) (r0 *request.Request, r1 *pinpoint.UpdateSmsChannelOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UpdateSmsChannelRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*pinpoint.UpdateSmsChannelOutput)
	return
}

func (d *PinpointDouble) UpdateSmsChannelWithContext(i0 context.Context, i1 *pinpoint.UpdateSmsChannelInput, i2 ...request.Option) (r0 *pinpoint.UpdateSmsChannelOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UpdateSmsChannelWithContext", i0, i1, i2)
	r0, _ = returns[0].(*pinpoint.UpdateSmsChannelOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointDouble) fakeUpdateSmsChannelWithContext(ctx context.Context, in *pinpoint.UpdateSmsChannelInput, _ ...request.Option) (*pinpoint.UpdateSmsChannelOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "UpdateSmsChannel cancelled", ctx.Err())
	default:
		return d.UpdateSmsChannel(in)
	}
}

func (d *PinpointDouble) UpdateSmsTemplate(i0 *pinpoint.UpdateSmsTemplateInput) (r0 *pinpoint.UpdateSmsTemplateOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UpdateSmsTemplate", i0)
	r0, _ = returns[0].(*pinpoint.UpdateSmsTemplateOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointDouble) UpdateSmsTemplateRequest(i0 *pinpoint.UpdateSmsTemplateInput) (r0 *request.Request, r1 *pinpoint.UpdateSmsTemplateOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UpdateSmsTemplateRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*pinpoint.UpdateSmsTemplateOutput)
	return
}

func (d *PinpointDouble) UpdateSmsTemplateWithContext(i0 context.Context, i1 *pinpoint.UpdateSmsTemplateInput, i2 ...request.Option) (r0 *pinpoint.UpdateSmsTemplateOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UpdateSmsTemplateWithContext", i0, i1, i2)
	r0, _ = returns[0].(*pinpoint.UpdateSmsTemplateOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointDouble) fakeUpdateSmsTemplateWithContext(ctx context.Context, in *pinpoint.UpdateSmsTemplateInput, _ ...request.Option) (*pinpoint.UpdateSmsTemplateOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "UpdateSmsTemplate cancelled", ctx.Err())
	default:
		return d.UpdateSmsTemplate(in)
	}
}

func (d *PinpointDouble) UpdateTemplateActiveVersion(i0 *pinpoint.UpdateTemplateActiveVersionInput) (r0 *pinpoint.UpdateTemplateActiveVersionOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UpdateTemplateActiveVersion", i0)
	r0, _ = returns[0].(*pinpoint.UpdateTemplateActiveVersionOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointDouble) UpdateTemplateActiveVersionRequest(i0 *pinpoint.UpdateTemplateActiveVersionInput) (r0 *request.Request, r1 *pinpoint.UpdateTemplateActiveVersionOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UpdateTemplateActiveVersionRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*pinpoint.UpdateTemplateActiveVersionOutput)
	return
}

func (d *PinpointDouble) UpdateTemplateActiveVersionWithContext(i0 context.Context, i1 *pinpoint.UpdateTemplateActiveVersionInput, i2 ...request.Option) (r0 *pinpoint.UpdateTemplateActiveVersionOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UpdateTemplateActiveVersionWithContext", i0, i1, i2)
	r0, _ = returns[0].(*pinpoint.UpdateTemplateActiveVersionOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointDouble) fakeUpdateTemplateActiveVersionWithContext(ctx context.Context, in *pinpoint.UpdateTemplateActiveVersionInput, _ ...request.Option) (*pinpoint.UpdateTemplateActiveVersionOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "UpdateTemplateActiveVersion cancelled", ctx.Err())
	default:
		return d.UpdateTemplateActiveVersion(in)
	}
}

func (d *PinpointDouble) UpdateVoiceChannel(i0 *pinpoint.UpdateVoiceChannelInput) (r0 *pinpoint.UpdateVoiceChannelOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UpdateVoiceChannel", i0)
	r0, _ = returns[0].(*pinpoint.UpdateVoiceChannelOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointDouble) UpdateVoiceChannelRequest(i0 *pinpoint.UpdateVoiceChannelInput) (r0 *request.Request, r1 *pinpoint.UpdateVoiceChannelOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UpdateVoiceChannelRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*pinpoint.UpdateVoiceChannelOutput)
	return
}

func (d *PinpointDouble) UpdateVoiceChannelWithContext(i0 context.Context, i1 *pinpoint.UpdateVoiceChannelInput, i2 ...request.Option) (r0 *pinpoint.UpdateVoiceChannelOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UpdateVoiceChannelWithContext", i0, i1, i2)
	r0, _ = returns[0].(*pinpoint.UpdateVoiceChannelOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointDouble) fakeUpdateVoiceChannelWithContext(ctx context.Context, in *pinpoint.UpdateVoiceChannelInput, _ ...request.Option) (*pinpoint.UpdateVoiceChannelOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "UpdateVoiceChannel cancelled", ctx.Err())
	default:
		return d.UpdateVoiceChannel(in)
	}
}

func (d *PinpointDouble) UpdateVoiceTemplate(i0 *pinpoint.UpdateVoiceTemplateInput) (r0 *pinpoint.UpdateVoiceTemplateOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UpdateVoiceTemplate", i0)
	r0, _ = returns[0].(*pinpoint.UpdateVoiceTemplateOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointDouble) UpdateVoiceTemplateRequest(i0 *pinpoint.UpdateVoiceTemplateInput) (r0 *request.Request, r1 *pinpoint.UpdateVoiceTemplateOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UpdateVoiceTemplateRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*pinpoint.UpdateVoiceTemplateOutput)
	return
}

func (d *PinpointDouble) UpdateVoiceTemplateWithContext(i0 context.Context, i1 *pinpoint.UpdateVoiceTemplateInput, i2 ...request.Option) (r0 *pinpoint.UpdateVoiceTemplateOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UpdateVoiceTemplateWithContext", i0, i1, i2)
	r0, _ = returns[0].(*pinpoint.UpdateVoiceTemplateOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointDouble) fakeUpdateVoiceTemplateWithContext(ctx context.Context, in *pinpoint.UpdateVoiceTemplateInput, _ ...request.Option) (*pinpoint.UpdateVoiceTemplateOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "UpdateVoiceTemplate cancelled", ctx.Err())
	default:
		return d.UpdateVoiceTemplate(in)
	}
}
