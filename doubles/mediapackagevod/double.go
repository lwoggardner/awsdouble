// Code generated by go doublegen; DO NOT EDIT.
// This file was generated at 2020-02-14T22:13:56+11:00

// Package mediapackagevoddouble provides a TestDouble implementation of mediapackagevodiface.MediaPackageVodAPI
package mediapackagevoddouble

import (
	"context"

	"github.com/aws/aws-sdk-go/aws/awserr"
	"github.com/aws/aws-sdk-go/aws/request"
	"github.com/aws/aws-sdk-go/service/mediapackagevod"
	"github.com/aws/aws-sdk-go/service/mediapackagevod/mediapackagevodiface"
	"github.com/lwoggardner/awsdouble"
	"github.com/lwoggardner/godouble/godouble"
)

// MediaPackageVodDouble is TestDouble for mediapackagevodiface.MediaPackageVodAPI
type MediaPackageVodDouble struct {
	mediapackagevodiface.MediaPackageVodAPI
	*awsdouble.AWSTestDouble
}

// Constructor for MediaPackageVodDouble
// Default configuration will ensure
//   * API operations not explicitly stubbed will return an empty output struct pointer, and nil error.
//     To simulate long polling, "Poll" operations will return these values after a random delay of up to 100ms.
//   * WithContext methods implement a 'Fake' method that returns a cancellation error if the context is cancelled
//      before the method is called.
//   * Pages and PagesWithContext methods similarly implement a 'Fake' method that paginates over the underlying method.
//
//    This allows tests to only stub the simple api methods and be generally unconcerned whether the SUT is using the
//      Context or Pagination forms of the API.
//
func NewDouble(t godouble.T, configurators ...func(*awsdouble.AWSTestDouble)) *MediaPackageVodDouble {
	result := &MediaPackageVodDouble{}

	configurators = append([]func(configurator *awsdouble.AWSTestDouble){func(d *awsdouble.AWSTestDouble) {
		d.SetDefaultCall(result.defaultMethodCall)
		d.SetDefaultReturnValues(result.defaultReturnValues)
	}}, configurators...)

	result.AWSTestDouble = awsdouble.NewDouble(t, (*mediapackagevodiface.MediaPackageVodAPI)(nil), configurators...)
	return result
}

func (d *MediaPackageVodDouble) defaultReturnValues(m godouble.Method) godouble.ReturnValues {
	return d.DefaultReturnValues(m)
}

func (d *MediaPackageVodDouble) defaultMethodCall(m godouble.Method) godouble.MethodCall {
	switch m.Reflect().Name {

	case "CreateAssetWithContext":
		return m.Fake(d.fakeCreateAssetWithContext)

	case "CreatePackagingConfigurationWithContext":
		return m.Fake(d.fakeCreatePackagingConfigurationWithContext)

	case "CreatePackagingGroupWithContext":
		return m.Fake(d.fakeCreatePackagingGroupWithContext)

	case "DeleteAssetWithContext":
		return m.Fake(d.fakeDeleteAssetWithContext)

	case "DeletePackagingConfigurationWithContext":
		return m.Fake(d.fakeDeletePackagingConfigurationWithContext)

	case "DeletePackagingGroupWithContext":
		return m.Fake(d.fakeDeletePackagingGroupWithContext)

	case "DescribeAssetWithContext":
		return m.Fake(d.fakeDescribeAssetWithContext)

	case "DescribePackagingConfigurationWithContext":
		return m.Fake(d.fakeDescribePackagingConfigurationWithContext)

	case "DescribePackagingGroupWithContext":
		return m.Fake(d.fakeDescribePackagingGroupWithContext)

	case "ListAssetsPages":
		return m.Fake(d.fakeListAssetsPages)

	case "ListAssetsPagesWithContext":
		return m.Fake(d.fakeListAssetsPagesWithContext)

	case "ListAssetsWithContext":
		return m.Fake(d.fakeListAssetsWithContext)

	case "ListPackagingConfigurationsPages":
		return m.Fake(d.fakeListPackagingConfigurationsPages)

	case "ListPackagingConfigurationsPagesWithContext":
		return m.Fake(d.fakeListPackagingConfigurationsPagesWithContext)

	case "ListPackagingConfigurationsWithContext":
		return m.Fake(d.fakeListPackagingConfigurationsWithContext)

	case "ListPackagingGroupsPages":
		return m.Fake(d.fakeListPackagingGroupsPages)

	case "ListPackagingGroupsPagesWithContext":
		return m.Fake(d.fakeListPackagingGroupsPagesWithContext)

	case "ListPackagingGroupsWithContext":
		return m.Fake(d.fakeListPackagingGroupsWithContext)

	default:
		return nil
	}
}

func (d *MediaPackageVodDouble) CreateAsset(i0 *mediapackagevod.CreateAssetInput) (r0 *mediapackagevod.CreateAssetOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreateAsset", i0)
	r0, _ = returns[0].(*mediapackagevod.CreateAssetOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *MediaPackageVodDouble) CreateAssetRequest(i0 *mediapackagevod.CreateAssetInput) (r0 *request.Request, r1 *mediapackagevod.CreateAssetOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreateAssetRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*mediapackagevod.CreateAssetOutput)
	return
}

func (d *MediaPackageVodDouble) CreateAssetWithContext(i0 context.Context, i1 *mediapackagevod.CreateAssetInput, i2 ...request.Option) (r0 *mediapackagevod.CreateAssetOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreateAssetWithContext", i0, i1, i2)
	r0, _ = returns[0].(*mediapackagevod.CreateAssetOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *MediaPackageVodDouble) fakeCreateAssetWithContext(ctx context.Context, in *mediapackagevod.CreateAssetInput, _ ...request.Option) (*mediapackagevod.CreateAssetOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "CreateAsset cancelled", ctx.Err())
	default:
		return d.CreateAsset(in)
	}
}

func (d *MediaPackageVodDouble) CreatePackagingConfiguration(i0 *mediapackagevod.CreatePackagingConfigurationInput) (r0 *mediapackagevod.CreatePackagingConfigurationOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreatePackagingConfiguration", i0)
	r0, _ = returns[0].(*mediapackagevod.CreatePackagingConfigurationOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *MediaPackageVodDouble) CreatePackagingConfigurationRequest(i0 *mediapackagevod.CreatePackagingConfigurationInput) (r0 *request.Request, r1 *mediapackagevod.CreatePackagingConfigurationOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreatePackagingConfigurationRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*mediapackagevod.CreatePackagingConfigurationOutput)
	return
}

func (d *MediaPackageVodDouble) CreatePackagingConfigurationWithContext(i0 context.Context, i1 *mediapackagevod.CreatePackagingConfigurationInput, i2 ...request.Option) (r0 *mediapackagevod.CreatePackagingConfigurationOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreatePackagingConfigurationWithContext", i0, i1, i2)
	r0, _ = returns[0].(*mediapackagevod.CreatePackagingConfigurationOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *MediaPackageVodDouble) fakeCreatePackagingConfigurationWithContext(ctx context.Context, in *mediapackagevod.CreatePackagingConfigurationInput, _ ...request.Option) (*mediapackagevod.CreatePackagingConfigurationOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "CreatePackagingConfiguration cancelled", ctx.Err())
	default:
		return d.CreatePackagingConfiguration(in)
	}
}

func (d *MediaPackageVodDouble) CreatePackagingGroup(i0 *mediapackagevod.CreatePackagingGroupInput) (r0 *mediapackagevod.CreatePackagingGroupOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreatePackagingGroup", i0)
	r0, _ = returns[0].(*mediapackagevod.CreatePackagingGroupOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *MediaPackageVodDouble) CreatePackagingGroupRequest(i0 *mediapackagevod.CreatePackagingGroupInput) (r0 *request.Request, r1 *mediapackagevod.CreatePackagingGroupOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreatePackagingGroupRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*mediapackagevod.CreatePackagingGroupOutput)
	return
}

func (d *MediaPackageVodDouble) CreatePackagingGroupWithContext(i0 context.Context, i1 *mediapackagevod.CreatePackagingGroupInput, i2 ...request.Option) (r0 *mediapackagevod.CreatePackagingGroupOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreatePackagingGroupWithContext", i0, i1, i2)
	r0, _ = returns[0].(*mediapackagevod.CreatePackagingGroupOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *MediaPackageVodDouble) fakeCreatePackagingGroupWithContext(ctx context.Context, in *mediapackagevod.CreatePackagingGroupInput, _ ...request.Option) (*mediapackagevod.CreatePackagingGroupOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "CreatePackagingGroup cancelled", ctx.Err())
	default:
		return d.CreatePackagingGroup(in)
	}
}

func (d *MediaPackageVodDouble) DeleteAsset(i0 *mediapackagevod.DeleteAssetInput) (r0 *mediapackagevod.DeleteAssetOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteAsset", i0)
	r0, _ = returns[0].(*mediapackagevod.DeleteAssetOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *MediaPackageVodDouble) DeleteAssetRequest(i0 *mediapackagevod.DeleteAssetInput) (r0 *request.Request, r1 *mediapackagevod.DeleteAssetOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteAssetRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*mediapackagevod.DeleteAssetOutput)
	return
}

func (d *MediaPackageVodDouble) DeleteAssetWithContext(i0 context.Context, i1 *mediapackagevod.DeleteAssetInput, i2 ...request.Option) (r0 *mediapackagevod.DeleteAssetOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteAssetWithContext", i0, i1, i2)
	r0, _ = returns[0].(*mediapackagevod.DeleteAssetOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *MediaPackageVodDouble) fakeDeleteAssetWithContext(ctx context.Context, in *mediapackagevod.DeleteAssetInput, _ ...request.Option) (*mediapackagevod.DeleteAssetOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "DeleteAsset cancelled", ctx.Err())
	default:
		return d.DeleteAsset(in)
	}
}

func (d *MediaPackageVodDouble) DeletePackagingConfiguration(i0 *mediapackagevod.DeletePackagingConfigurationInput) (r0 *mediapackagevod.DeletePackagingConfigurationOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeletePackagingConfiguration", i0)
	r0, _ = returns[0].(*mediapackagevod.DeletePackagingConfigurationOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *MediaPackageVodDouble) DeletePackagingConfigurationRequest(i0 *mediapackagevod.DeletePackagingConfigurationInput) (r0 *request.Request, r1 *mediapackagevod.DeletePackagingConfigurationOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeletePackagingConfigurationRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*mediapackagevod.DeletePackagingConfigurationOutput)
	return
}

func (d *MediaPackageVodDouble) DeletePackagingConfigurationWithContext(i0 context.Context, i1 *mediapackagevod.DeletePackagingConfigurationInput, i2 ...request.Option) (r0 *mediapackagevod.DeletePackagingConfigurationOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeletePackagingConfigurationWithContext", i0, i1, i2)
	r0, _ = returns[0].(*mediapackagevod.DeletePackagingConfigurationOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *MediaPackageVodDouble) fakeDeletePackagingConfigurationWithContext(ctx context.Context, in *mediapackagevod.DeletePackagingConfigurationInput, _ ...request.Option) (*mediapackagevod.DeletePackagingConfigurationOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "DeletePackagingConfiguration cancelled", ctx.Err())
	default:
		return d.DeletePackagingConfiguration(in)
	}
}

func (d *MediaPackageVodDouble) DeletePackagingGroup(i0 *mediapackagevod.DeletePackagingGroupInput) (r0 *mediapackagevod.DeletePackagingGroupOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeletePackagingGroup", i0)
	r0, _ = returns[0].(*mediapackagevod.DeletePackagingGroupOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *MediaPackageVodDouble) DeletePackagingGroupRequest(i0 *mediapackagevod.DeletePackagingGroupInput) (r0 *request.Request, r1 *mediapackagevod.DeletePackagingGroupOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeletePackagingGroupRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*mediapackagevod.DeletePackagingGroupOutput)
	return
}

func (d *MediaPackageVodDouble) DeletePackagingGroupWithContext(i0 context.Context, i1 *mediapackagevod.DeletePackagingGroupInput, i2 ...request.Option) (r0 *mediapackagevod.DeletePackagingGroupOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeletePackagingGroupWithContext", i0, i1, i2)
	r0, _ = returns[0].(*mediapackagevod.DeletePackagingGroupOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *MediaPackageVodDouble) fakeDeletePackagingGroupWithContext(ctx context.Context, in *mediapackagevod.DeletePackagingGroupInput, _ ...request.Option) (*mediapackagevod.DeletePackagingGroupOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "DeletePackagingGroup cancelled", ctx.Err())
	default:
		return d.DeletePackagingGroup(in)
	}
}

func (d *MediaPackageVodDouble) DescribeAsset(i0 *mediapackagevod.DescribeAssetInput) (r0 *mediapackagevod.DescribeAssetOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DescribeAsset", i0)
	r0, _ = returns[0].(*mediapackagevod.DescribeAssetOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *MediaPackageVodDouble) DescribeAssetRequest(i0 *mediapackagevod.DescribeAssetInput) (r0 *request.Request, r1 *mediapackagevod.DescribeAssetOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DescribeAssetRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*mediapackagevod.DescribeAssetOutput)
	return
}

func (d *MediaPackageVodDouble) DescribeAssetWithContext(i0 context.Context, i1 *mediapackagevod.DescribeAssetInput, i2 ...request.Option) (r0 *mediapackagevod.DescribeAssetOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DescribeAssetWithContext", i0, i1, i2)
	r0, _ = returns[0].(*mediapackagevod.DescribeAssetOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *MediaPackageVodDouble) fakeDescribeAssetWithContext(ctx context.Context, in *mediapackagevod.DescribeAssetInput, _ ...request.Option) (*mediapackagevod.DescribeAssetOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "DescribeAsset cancelled", ctx.Err())
	default:
		return d.DescribeAsset(in)
	}
}

func (d *MediaPackageVodDouble) DescribePackagingConfiguration(i0 *mediapackagevod.DescribePackagingConfigurationInput) (r0 *mediapackagevod.DescribePackagingConfigurationOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DescribePackagingConfiguration", i0)
	r0, _ = returns[0].(*mediapackagevod.DescribePackagingConfigurationOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *MediaPackageVodDouble) DescribePackagingConfigurationRequest(i0 *mediapackagevod.DescribePackagingConfigurationInput) (r0 *request.Request, r1 *mediapackagevod.DescribePackagingConfigurationOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DescribePackagingConfigurationRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*mediapackagevod.DescribePackagingConfigurationOutput)
	return
}

func (d *MediaPackageVodDouble) DescribePackagingConfigurationWithContext(i0 context.Context, i1 *mediapackagevod.DescribePackagingConfigurationInput, i2 ...request.Option) (r0 *mediapackagevod.DescribePackagingConfigurationOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DescribePackagingConfigurationWithContext", i0, i1, i2)
	r0, _ = returns[0].(*mediapackagevod.DescribePackagingConfigurationOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *MediaPackageVodDouble) fakeDescribePackagingConfigurationWithContext(ctx context.Context, in *mediapackagevod.DescribePackagingConfigurationInput, _ ...request.Option) (*mediapackagevod.DescribePackagingConfigurationOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "DescribePackagingConfiguration cancelled", ctx.Err())
	default:
		return d.DescribePackagingConfiguration(in)
	}
}

func (d *MediaPackageVodDouble) DescribePackagingGroup(i0 *mediapackagevod.DescribePackagingGroupInput) (r0 *mediapackagevod.DescribePackagingGroupOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DescribePackagingGroup", i0)
	r0, _ = returns[0].(*mediapackagevod.DescribePackagingGroupOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *MediaPackageVodDouble) DescribePackagingGroupRequest(i0 *mediapackagevod.DescribePackagingGroupInput) (r0 *request.Request, r1 *mediapackagevod.DescribePackagingGroupOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DescribePackagingGroupRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*mediapackagevod.DescribePackagingGroupOutput)
	return
}

func (d *MediaPackageVodDouble) DescribePackagingGroupWithContext(i0 context.Context, i1 *mediapackagevod.DescribePackagingGroupInput, i2 ...request.Option) (r0 *mediapackagevod.DescribePackagingGroupOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DescribePackagingGroupWithContext", i0, i1, i2)
	r0, _ = returns[0].(*mediapackagevod.DescribePackagingGroupOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *MediaPackageVodDouble) fakeDescribePackagingGroupWithContext(ctx context.Context, in *mediapackagevod.DescribePackagingGroupInput, _ ...request.Option) (*mediapackagevod.DescribePackagingGroupOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "DescribePackagingGroup cancelled", ctx.Err())
	default:
		return d.DescribePackagingGroup(in)
	}
}

func (d *MediaPackageVodDouble) ListAssets(i0 *mediapackagevod.ListAssetsInput) (r0 *mediapackagevod.ListAssetsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListAssets", i0)
	r0, _ = returns[0].(*mediapackagevod.ListAssetsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *MediaPackageVodDouble) ListAssetsPages(i0 *mediapackagevod.ListAssetsInput, i1 func(*mediapackagevod.ListAssetsOutput, bool) bool) (r0 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListAssetsPages", i0, i1)
	r0, _ = returns[0].(error)
	return
}

func (d *MediaPackageVodDouble) fakeListAssetsPages(in *mediapackagevod.ListAssetsInput, pager func(*mediapackagevod.ListAssetsOutput, bool) (shouldContinue bool)) error {
	return d.Paginate("ListAssets", paginators, in, pager)
}

func (d *MediaPackageVodDouble) ListAssetsPagesWithContext(i0 context.Context, i1 *mediapackagevod.ListAssetsInput, i2 func(*mediapackagevod.ListAssetsOutput, bool) bool, i3 ...request.Option) (r0 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListAssetsPagesWithContext", i0, i1, i2, i3)
	r0, _ = returns[0].(error)
	return
}

func (d *MediaPackageVodDouble) fakeListAssetsPagesWithContext(ctx context.Context, in *mediapackagevod.ListAssetsInput, pager func(*mediapackagevod.ListAssetsOutput, bool) (shouldContinue bool), options ...request.Option) error {
	return d.PaginateWithContext("ListAssets", paginators, ctx, in, pager, options...)
}

func (d *MediaPackageVodDouble) ListAssetsRequest(i0 *mediapackagevod.ListAssetsInput) (r0 *request.Request, r1 *mediapackagevod.ListAssetsOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListAssetsRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*mediapackagevod.ListAssetsOutput)
	return
}

func (d *MediaPackageVodDouble) ListAssetsWithContext(i0 context.Context, i1 *mediapackagevod.ListAssetsInput, i2 ...request.Option) (r0 *mediapackagevod.ListAssetsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListAssetsWithContext", i0, i1, i2)
	r0, _ = returns[0].(*mediapackagevod.ListAssetsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *MediaPackageVodDouble) fakeListAssetsWithContext(ctx context.Context, in *mediapackagevod.ListAssetsInput, _ ...request.Option) (*mediapackagevod.ListAssetsOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "ListAssets cancelled", ctx.Err())
	default:
		return d.ListAssets(in)
	}
}

func (d *MediaPackageVodDouble) ListPackagingConfigurations(i0 *mediapackagevod.ListPackagingConfigurationsInput) (r0 *mediapackagevod.ListPackagingConfigurationsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListPackagingConfigurations", i0)
	r0, _ = returns[0].(*mediapackagevod.ListPackagingConfigurationsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *MediaPackageVodDouble) ListPackagingConfigurationsPages(i0 *mediapackagevod.ListPackagingConfigurationsInput, i1 func(*mediapackagevod.ListPackagingConfigurationsOutput, bool) bool) (r0 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListPackagingConfigurationsPages", i0, i1)
	r0, _ = returns[0].(error)
	return
}

func (d *MediaPackageVodDouble) fakeListPackagingConfigurationsPages(in *mediapackagevod.ListPackagingConfigurationsInput, pager func(*mediapackagevod.ListPackagingConfigurationsOutput, bool) (shouldContinue bool)) error {
	return d.Paginate("ListPackagingConfigurations", paginators, in, pager)
}

func (d *MediaPackageVodDouble) ListPackagingConfigurationsPagesWithContext(i0 context.Context, i1 *mediapackagevod.ListPackagingConfigurationsInput, i2 func(*mediapackagevod.ListPackagingConfigurationsOutput, bool) bool, i3 ...request.Option) (r0 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListPackagingConfigurationsPagesWithContext", i0, i1, i2, i3)
	r0, _ = returns[0].(error)
	return
}

func (d *MediaPackageVodDouble) fakeListPackagingConfigurationsPagesWithContext(ctx context.Context, in *mediapackagevod.ListPackagingConfigurationsInput, pager func(*mediapackagevod.ListPackagingConfigurationsOutput, bool) (shouldContinue bool), options ...request.Option) error {
	return d.PaginateWithContext("ListPackagingConfigurations", paginators, ctx, in, pager, options...)
}

func (d *MediaPackageVodDouble) ListPackagingConfigurationsRequest(i0 *mediapackagevod.ListPackagingConfigurationsInput) (r0 *request.Request, r1 *mediapackagevod.ListPackagingConfigurationsOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListPackagingConfigurationsRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*mediapackagevod.ListPackagingConfigurationsOutput)
	return
}

func (d *MediaPackageVodDouble) ListPackagingConfigurationsWithContext(i0 context.Context, i1 *mediapackagevod.ListPackagingConfigurationsInput, i2 ...request.Option) (r0 *mediapackagevod.ListPackagingConfigurationsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListPackagingConfigurationsWithContext", i0, i1, i2)
	r0, _ = returns[0].(*mediapackagevod.ListPackagingConfigurationsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *MediaPackageVodDouble) fakeListPackagingConfigurationsWithContext(ctx context.Context, in *mediapackagevod.ListPackagingConfigurationsInput, _ ...request.Option) (*mediapackagevod.ListPackagingConfigurationsOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "ListPackagingConfigurations cancelled", ctx.Err())
	default:
		return d.ListPackagingConfigurations(in)
	}
}

func (d *MediaPackageVodDouble) ListPackagingGroups(i0 *mediapackagevod.ListPackagingGroupsInput) (r0 *mediapackagevod.ListPackagingGroupsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListPackagingGroups", i0)
	r0, _ = returns[0].(*mediapackagevod.ListPackagingGroupsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *MediaPackageVodDouble) ListPackagingGroupsPages(i0 *mediapackagevod.ListPackagingGroupsInput, i1 func(*mediapackagevod.ListPackagingGroupsOutput, bool) bool) (r0 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListPackagingGroupsPages", i0, i1)
	r0, _ = returns[0].(error)
	return
}

func (d *MediaPackageVodDouble) fakeListPackagingGroupsPages(in *mediapackagevod.ListPackagingGroupsInput, pager func(*mediapackagevod.ListPackagingGroupsOutput, bool) (shouldContinue bool)) error {
	return d.Paginate("ListPackagingGroups", paginators, in, pager)
}

func (d *MediaPackageVodDouble) ListPackagingGroupsPagesWithContext(i0 context.Context, i1 *mediapackagevod.ListPackagingGroupsInput, i2 func(*mediapackagevod.ListPackagingGroupsOutput, bool) bool, i3 ...request.Option) (r0 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListPackagingGroupsPagesWithContext", i0, i1, i2, i3)
	r0, _ = returns[0].(error)
	return
}

func (d *MediaPackageVodDouble) fakeListPackagingGroupsPagesWithContext(ctx context.Context, in *mediapackagevod.ListPackagingGroupsInput, pager func(*mediapackagevod.ListPackagingGroupsOutput, bool) (shouldContinue bool), options ...request.Option) error {
	return d.PaginateWithContext("ListPackagingGroups", paginators, ctx, in, pager, options...)
}

func (d *MediaPackageVodDouble) ListPackagingGroupsRequest(i0 *mediapackagevod.ListPackagingGroupsInput) (r0 *request.Request, r1 *mediapackagevod.ListPackagingGroupsOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListPackagingGroupsRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*mediapackagevod.ListPackagingGroupsOutput)
	return
}

func (d *MediaPackageVodDouble) ListPackagingGroupsWithContext(i0 context.Context, i1 *mediapackagevod.ListPackagingGroupsInput, i2 ...request.Option) (r0 *mediapackagevod.ListPackagingGroupsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListPackagingGroupsWithContext", i0, i1, i2)
	r0, _ = returns[0].(*mediapackagevod.ListPackagingGroupsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *MediaPackageVodDouble) fakeListPackagingGroupsWithContext(ctx context.Context, in *mediapackagevod.ListPackagingGroupsInput, _ ...request.Option) (*mediapackagevod.ListPackagingGroupsOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "ListPackagingGroups cancelled", ctx.Err())
	default:
		return d.ListPackagingGroups(in)
	}
}
