// Code generated by go doublegen; DO NOT EDIT.
// This file was generated at 2020-02-14T22:14:02+11:00

// Package migrationhubconfigdouble provides a TestDouble implementation of migrationhubconfigiface.MigrationHubConfigAPI
package migrationhubconfigdouble

import (
	"context"

	"github.com/aws/aws-sdk-go/aws/awserr"
	"github.com/aws/aws-sdk-go/aws/request"
	"github.com/aws/aws-sdk-go/service/migrationhubconfig"
	"github.com/aws/aws-sdk-go/service/migrationhubconfig/migrationhubconfigiface"
	"github.com/lwoggardner/awsdouble"
	"github.com/lwoggardner/godouble/godouble"
)

// MigrationHubConfigDouble is TestDouble for migrationhubconfigiface.MigrationHubConfigAPI
type MigrationHubConfigDouble struct {
	migrationhubconfigiface.MigrationHubConfigAPI
	*awsdouble.AWSTestDouble
}

// Constructor for MigrationHubConfigDouble
// Default configuration will ensure
//   * API operations not explicitly stubbed will return an empty output struct pointer, and nil error.
//     To simulate long polling, "Poll" operations will return these values after a random delay of up to 100ms.
//   * WithContext methods implement a 'Fake' method that returns a cancellation error if the context is cancelled
//      before the method is called.
//   * Pages and PagesWithContext methods similarly implement a 'Fake' method that paginates over the underlying method.
//
//    This allows tests to only stub the simple api methods and be generally unconcerned whether the SUT is using the
//      Context or Pagination forms of the API.
//
func NewDouble(t godouble.T, configurators ...func(*awsdouble.AWSTestDouble)) *MigrationHubConfigDouble {
	result := &MigrationHubConfigDouble{}

	configurators = append([]func(configurator *awsdouble.AWSTestDouble){func(d *awsdouble.AWSTestDouble) {
		d.SetDefaultCall(result.defaultMethodCall)
		d.SetDefaultReturnValues(result.defaultReturnValues)
	}}, configurators...)

	result.AWSTestDouble = awsdouble.NewDouble(t, (*migrationhubconfigiface.MigrationHubConfigAPI)(nil), configurators...)
	return result
}

func (d *MigrationHubConfigDouble) defaultReturnValues(m godouble.Method) godouble.ReturnValues {
	return d.DefaultReturnValues(m)
}

func (d *MigrationHubConfigDouble) defaultMethodCall(m godouble.Method) godouble.MethodCall {
	switch m.Reflect().Name {

	case "CreateHomeRegionControlWithContext":
		return m.Fake(d.fakeCreateHomeRegionControlWithContext)

	case "DescribeHomeRegionControlsPages":
		return m.Fake(d.fakeDescribeHomeRegionControlsPages)

	case "DescribeHomeRegionControlsPagesWithContext":
		return m.Fake(d.fakeDescribeHomeRegionControlsPagesWithContext)

	case "DescribeHomeRegionControlsWithContext":
		return m.Fake(d.fakeDescribeHomeRegionControlsWithContext)

	case "GetHomeRegionWithContext":
		return m.Fake(d.fakeGetHomeRegionWithContext)

	default:
		return nil
	}
}

func (d *MigrationHubConfigDouble) CreateHomeRegionControl(i0 *migrationhubconfig.CreateHomeRegionControlInput) (r0 *migrationhubconfig.CreateHomeRegionControlOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreateHomeRegionControl", i0)
	r0, _ = returns[0].(*migrationhubconfig.CreateHomeRegionControlOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *MigrationHubConfigDouble) CreateHomeRegionControlRequest(i0 *migrationhubconfig.CreateHomeRegionControlInput) (r0 *request.Request, r1 *migrationhubconfig.CreateHomeRegionControlOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreateHomeRegionControlRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*migrationhubconfig.CreateHomeRegionControlOutput)
	return
}

func (d *MigrationHubConfigDouble) CreateHomeRegionControlWithContext(i0 context.Context, i1 *migrationhubconfig.CreateHomeRegionControlInput, i2 ...request.Option) (r0 *migrationhubconfig.CreateHomeRegionControlOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreateHomeRegionControlWithContext", i0, i1, i2)
	r0, _ = returns[0].(*migrationhubconfig.CreateHomeRegionControlOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *MigrationHubConfigDouble) fakeCreateHomeRegionControlWithContext(ctx context.Context, in *migrationhubconfig.CreateHomeRegionControlInput, _ ...request.Option) (*migrationhubconfig.CreateHomeRegionControlOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "CreateHomeRegionControl cancelled", ctx.Err())
	default:
		return d.CreateHomeRegionControl(in)
	}
}

func (d *MigrationHubConfigDouble) DescribeHomeRegionControls(i0 *migrationhubconfig.DescribeHomeRegionControlsInput) (r0 *migrationhubconfig.DescribeHomeRegionControlsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DescribeHomeRegionControls", i0)
	r0, _ = returns[0].(*migrationhubconfig.DescribeHomeRegionControlsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *MigrationHubConfigDouble) DescribeHomeRegionControlsPages(i0 *migrationhubconfig.DescribeHomeRegionControlsInput, i1 func(*migrationhubconfig.DescribeHomeRegionControlsOutput, bool) bool) (r0 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DescribeHomeRegionControlsPages", i0, i1)
	r0, _ = returns[0].(error)
	return
}

func (d *MigrationHubConfigDouble) fakeDescribeHomeRegionControlsPages(in *migrationhubconfig.DescribeHomeRegionControlsInput, pager func(*migrationhubconfig.DescribeHomeRegionControlsOutput, bool) (shouldContinue bool)) error {
	return d.Paginate("DescribeHomeRegionControls", paginators, in, pager)
}

func (d *MigrationHubConfigDouble) DescribeHomeRegionControlsPagesWithContext(i0 context.Context, i1 *migrationhubconfig.DescribeHomeRegionControlsInput, i2 func(*migrationhubconfig.DescribeHomeRegionControlsOutput, bool) bool, i3 ...request.Option) (r0 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DescribeHomeRegionControlsPagesWithContext", i0, i1, i2, i3)
	r0, _ = returns[0].(error)
	return
}

func (d *MigrationHubConfigDouble) fakeDescribeHomeRegionControlsPagesWithContext(ctx context.Context, in *migrationhubconfig.DescribeHomeRegionControlsInput, pager func(*migrationhubconfig.DescribeHomeRegionControlsOutput, bool) (shouldContinue bool), options ...request.Option) error {
	return d.PaginateWithContext("DescribeHomeRegionControls", paginators, ctx, in, pager, options...)
}

func (d *MigrationHubConfigDouble) DescribeHomeRegionControlsRequest(i0 *migrationhubconfig.DescribeHomeRegionControlsInput) (r0 *request.Request, r1 *migrationhubconfig.DescribeHomeRegionControlsOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DescribeHomeRegionControlsRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*migrationhubconfig.DescribeHomeRegionControlsOutput)
	return
}

func (d *MigrationHubConfigDouble) DescribeHomeRegionControlsWithContext(i0 context.Context, i1 *migrationhubconfig.DescribeHomeRegionControlsInput, i2 ...request.Option) (r0 *migrationhubconfig.DescribeHomeRegionControlsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DescribeHomeRegionControlsWithContext", i0, i1, i2)
	r0, _ = returns[0].(*migrationhubconfig.DescribeHomeRegionControlsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *MigrationHubConfigDouble) fakeDescribeHomeRegionControlsWithContext(ctx context.Context, in *migrationhubconfig.DescribeHomeRegionControlsInput, _ ...request.Option) (*migrationhubconfig.DescribeHomeRegionControlsOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "DescribeHomeRegionControls cancelled", ctx.Err())
	default:
		return d.DescribeHomeRegionControls(in)
	}
}

func (d *MigrationHubConfigDouble) GetHomeRegion(i0 *migrationhubconfig.GetHomeRegionInput) (r0 *migrationhubconfig.GetHomeRegionOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetHomeRegion", i0)
	r0, _ = returns[0].(*migrationhubconfig.GetHomeRegionOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *MigrationHubConfigDouble) GetHomeRegionRequest(i0 *migrationhubconfig.GetHomeRegionInput) (r0 *request.Request, r1 *migrationhubconfig.GetHomeRegionOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetHomeRegionRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*migrationhubconfig.GetHomeRegionOutput)
	return
}

func (d *MigrationHubConfigDouble) GetHomeRegionWithContext(i0 context.Context, i1 *migrationhubconfig.GetHomeRegionInput, i2 ...request.Option) (r0 *migrationhubconfig.GetHomeRegionOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetHomeRegionWithContext", i0, i1, i2)
	r0, _ = returns[0].(*migrationhubconfig.GetHomeRegionOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *MigrationHubConfigDouble) fakeGetHomeRegionWithContext(ctx context.Context, in *migrationhubconfig.GetHomeRegionInput, _ ...request.Option) (*migrationhubconfig.GetHomeRegionOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "GetHomeRegion cancelled", ctx.Err())
	default:
		return d.GetHomeRegion(in)
	}
}
