// Code generated by go doublegen; DO NOT EDIT.
// This file was generated at 2020-02-14T22:12:34+11:00

// Package efsdouble provides a TestDouble implementation of efsiface.EFSAPI
package efsdouble

import (
	"context"

	"github.com/aws/aws-sdk-go/aws/awserr"
	"github.com/aws/aws-sdk-go/aws/request"
	"github.com/aws/aws-sdk-go/service/efs"
	"github.com/aws/aws-sdk-go/service/efs/efsiface"
	"github.com/lwoggardner/awsdouble"
	"github.com/lwoggardner/godouble/godouble"
)

// EFSDouble is TestDouble for efsiface.EFSAPI
type EFSDouble struct {
	efsiface.EFSAPI
	*awsdouble.AWSTestDouble
}

// Constructor for EFSDouble
// Default configuration will ensure
//   * API operations not explicitly stubbed will return an empty output struct pointer, and nil error.
//     To simulate long polling, "Poll" operations will return these values after a random delay of up to 100ms.
//   * WithContext methods implement a 'Fake' method that returns a cancellation error if the context is cancelled
//      before the method is called.
//   * Pages and PagesWithContext methods similarly implement a 'Fake' method that paginates over the underlying method.
//
//    This allows tests to only stub the simple api methods and be generally unconcerned whether the SUT is using the
//      Context or Pagination forms of the API.
//
func NewDouble(t godouble.T, configurators ...func(*awsdouble.AWSTestDouble)) *EFSDouble {
	result := &EFSDouble{}

	configurators = append([]func(configurator *awsdouble.AWSTestDouble){func(d *awsdouble.AWSTestDouble) {
		d.SetDefaultCall(result.defaultMethodCall)
		d.SetDefaultReturnValues(result.defaultReturnValues)
	}}, configurators...)

	result.AWSTestDouble = awsdouble.NewDouble(t, (*efsiface.EFSAPI)(nil), configurators...)
	return result
}

func (d *EFSDouble) defaultReturnValues(m godouble.Method) godouble.ReturnValues {
	return d.DefaultReturnValues(m)
}

func (d *EFSDouble) defaultMethodCall(m godouble.Method) godouble.MethodCall {
	switch m.Reflect().Name {

	case "CreateAccessPointWithContext":
		return m.Fake(d.fakeCreateAccessPointWithContext)

	case "CreateFileSystemWithContext":
		return m.Fake(d.fakeCreateFileSystemWithContext)

	case "CreateMountTargetWithContext":
		return m.Fake(d.fakeCreateMountTargetWithContext)

	case "CreateTagsWithContext":
		return m.Fake(d.fakeCreateTagsWithContext)

	case "DeleteAccessPointWithContext":
		return m.Fake(d.fakeDeleteAccessPointWithContext)

	case "DeleteFileSystemPolicyWithContext":
		return m.Fake(d.fakeDeleteFileSystemPolicyWithContext)

	case "DeleteFileSystemWithContext":
		return m.Fake(d.fakeDeleteFileSystemWithContext)

	case "DeleteMountTargetWithContext":
		return m.Fake(d.fakeDeleteMountTargetWithContext)

	case "DeleteTagsWithContext":
		return m.Fake(d.fakeDeleteTagsWithContext)

	case "DescribeAccessPointsPages":
		return m.Fake(d.fakeDescribeAccessPointsPages)

	case "DescribeAccessPointsPagesWithContext":
		return m.Fake(d.fakeDescribeAccessPointsPagesWithContext)

	case "DescribeAccessPointsWithContext":
		return m.Fake(d.fakeDescribeAccessPointsWithContext)

	case "DescribeFileSystemPolicyWithContext":
		return m.Fake(d.fakeDescribeFileSystemPolicyWithContext)

	case "DescribeFileSystemsPages":
		return m.Fake(d.fakeDescribeFileSystemsPages)

	case "DescribeFileSystemsPagesWithContext":
		return m.Fake(d.fakeDescribeFileSystemsPagesWithContext)

	case "DescribeFileSystemsWithContext":
		return m.Fake(d.fakeDescribeFileSystemsWithContext)

	case "DescribeLifecycleConfigurationWithContext":
		return m.Fake(d.fakeDescribeLifecycleConfigurationWithContext)

	case "DescribeMountTargetSecurityGroupsWithContext":
		return m.Fake(d.fakeDescribeMountTargetSecurityGroupsWithContext)

	case "DescribeMountTargetsWithContext":
		return m.Fake(d.fakeDescribeMountTargetsWithContext)

	case "DescribeTagsPages":
		return m.Fake(d.fakeDescribeTagsPages)

	case "DescribeTagsPagesWithContext":
		return m.Fake(d.fakeDescribeTagsPagesWithContext)

	case "DescribeTagsWithContext":
		return m.Fake(d.fakeDescribeTagsWithContext)

	case "ListTagsForResourcePages":
		return m.Fake(d.fakeListTagsForResourcePages)

	case "ListTagsForResourcePagesWithContext":
		return m.Fake(d.fakeListTagsForResourcePagesWithContext)

	case "ListTagsForResourceWithContext":
		return m.Fake(d.fakeListTagsForResourceWithContext)

	case "ModifyMountTargetSecurityGroupsWithContext":
		return m.Fake(d.fakeModifyMountTargetSecurityGroupsWithContext)

	case "PutFileSystemPolicyWithContext":
		return m.Fake(d.fakePutFileSystemPolicyWithContext)

	case "PutLifecycleConfigurationWithContext":
		return m.Fake(d.fakePutLifecycleConfigurationWithContext)

	case "TagResourceWithContext":
		return m.Fake(d.fakeTagResourceWithContext)

	case "UntagResourceWithContext":
		return m.Fake(d.fakeUntagResourceWithContext)

	case "UpdateFileSystemWithContext":
		return m.Fake(d.fakeUpdateFileSystemWithContext)

	default:
		return nil
	}
}

func (d *EFSDouble) CreateAccessPoint(i0 *efs.CreateAccessPointInput) (r0 *efs.CreateAccessPointOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreateAccessPoint", i0)
	r0, _ = returns[0].(*efs.CreateAccessPointOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *EFSDouble) CreateAccessPointRequest(i0 *efs.CreateAccessPointInput) (r0 *request.Request, r1 *efs.CreateAccessPointOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreateAccessPointRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*efs.CreateAccessPointOutput)
	return
}

func (d *EFSDouble) CreateAccessPointWithContext(i0 context.Context, i1 *efs.CreateAccessPointInput, i2 ...request.Option) (r0 *efs.CreateAccessPointOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreateAccessPointWithContext", i0, i1, i2)
	r0, _ = returns[0].(*efs.CreateAccessPointOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *EFSDouble) fakeCreateAccessPointWithContext(ctx context.Context, in *efs.CreateAccessPointInput, _ ...request.Option) (*efs.CreateAccessPointOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "CreateAccessPoint cancelled", ctx.Err())
	default:
		return d.CreateAccessPoint(in)
	}
}

func (d *EFSDouble) CreateFileSystem(i0 *efs.CreateFileSystemInput) (r0 *efs.FileSystemDescription, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreateFileSystem", i0)
	r0, _ = returns[0].(*efs.FileSystemDescription)
	r1, _ = returns[1].(error)
	return
}

func (d *EFSDouble) CreateFileSystemRequest(i0 *efs.CreateFileSystemInput) (r0 *request.Request, r1 *efs.FileSystemDescription) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreateFileSystemRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*efs.FileSystemDescription)
	return
}

func (d *EFSDouble) CreateFileSystemWithContext(i0 context.Context, i1 *efs.CreateFileSystemInput, i2 ...request.Option) (r0 *efs.FileSystemDescription, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreateFileSystemWithContext", i0, i1, i2)
	r0, _ = returns[0].(*efs.FileSystemDescription)
	r1, _ = returns[1].(error)
	return
}

func (d *EFSDouble) fakeCreateFileSystemWithContext(ctx context.Context, in *efs.CreateFileSystemInput, _ ...request.Option) (*efs.FileSystemDescription, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "CreateFileSystem cancelled", ctx.Err())
	default:
		return d.CreateFileSystem(in)
	}
}

func (d *EFSDouble) CreateMountTarget(i0 *efs.CreateMountTargetInput) (r0 *efs.MountTargetDescription, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreateMountTarget", i0)
	r0, _ = returns[0].(*efs.MountTargetDescription)
	r1, _ = returns[1].(error)
	return
}

func (d *EFSDouble) CreateMountTargetRequest(i0 *efs.CreateMountTargetInput) (r0 *request.Request, r1 *efs.MountTargetDescription) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreateMountTargetRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*efs.MountTargetDescription)
	return
}

func (d *EFSDouble) CreateMountTargetWithContext(i0 context.Context, i1 *efs.CreateMountTargetInput, i2 ...request.Option) (r0 *efs.MountTargetDescription, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreateMountTargetWithContext", i0, i1, i2)
	r0, _ = returns[0].(*efs.MountTargetDescription)
	r1, _ = returns[1].(error)
	return
}

func (d *EFSDouble) fakeCreateMountTargetWithContext(ctx context.Context, in *efs.CreateMountTargetInput, _ ...request.Option) (*efs.MountTargetDescription, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "CreateMountTarget cancelled", ctx.Err())
	default:
		return d.CreateMountTarget(in)
	}
}

func (d *EFSDouble) CreateTags(i0 *efs.CreateTagsInput) (r0 *efs.CreateTagsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreateTags", i0)
	r0, _ = returns[0].(*efs.CreateTagsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *EFSDouble) CreateTagsRequest(i0 *efs.CreateTagsInput) (r0 *request.Request, r1 *efs.CreateTagsOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreateTagsRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*efs.CreateTagsOutput)
	return
}

func (d *EFSDouble) CreateTagsWithContext(i0 context.Context, i1 *efs.CreateTagsInput, i2 ...request.Option) (r0 *efs.CreateTagsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreateTagsWithContext", i0, i1, i2)
	r0, _ = returns[0].(*efs.CreateTagsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *EFSDouble) fakeCreateTagsWithContext(ctx context.Context, in *efs.CreateTagsInput, _ ...request.Option) (*efs.CreateTagsOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "CreateTags cancelled", ctx.Err())
	default:
		return d.CreateTags(in)
	}
}

func (d *EFSDouble) DeleteAccessPoint(i0 *efs.DeleteAccessPointInput) (r0 *efs.DeleteAccessPointOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteAccessPoint", i0)
	r0, _ = returns[0].(*efs.DeleteAccessPointOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *EFSDouble) DeleteAccessPointRequest(i0 *efs.DeleteAccessPointInput) (r0 *request.Request, r1 *efs.DeleteAccessPointOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteAccessPointRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*efs.DeleteAccessPointOutput)
	return
}

func (d *EFSDouble) DeleteAccessPointWithContext(i0 context.Context, i1 *efs.DeleteAccessPointInput, i2 ...request.Option) (r0 *efs.DeleteAccessPointOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteAccessPointWithContext", i0, i1, i2)
	r0, _ = returns[0].(*efs.DeleteAccessPointOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *EFSDouble) fakeDeleteAccessPointWithContext(ctx context.Context, in *efs.DeleteAccessPointInput, _ ...request.Option) (*efs.DeleteAccessPointOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "DeleteAccessPoint cancelled", ctx.Err())
	default:
		return d.DeleteAccessPoint(in)
	}
}

func (d *EFSDouble) DeleteFileSystem(i0 *efs.DeleteFileSystemInput) (r0 *efs.DeleteFileSystemOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteFileSystem", i0)
	r0, _ = returns[0].(*efs.DeleteFileSystemOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *EFSDouble) DeleteFileSystemPolicy(i0 *efs.DeleteFileSystemPolicyInput) (r0 *efs.DeleteFileSystemPolicyOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteFileSystemPolicy", i0)
	r0, _ = returns[0].(*efs.DeleteFileSystemPolicyOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *EFSDouble) DeleteFileSystemPolicyRequest(i0 *efs.DeleteFileSystemPolicyInput) (r0 *request.Request, r1 *efs.DeleteFileSystemPolicyOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteFileSystemPolicyRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*efs.DeleteFileSystemPolicyOutput)
	return
}

func (d *EFSDouble) DeleteFileSystemPolicyWithContext(i0 context.Context, i1 *efs.DeleteFileSystemPolicyInput, i2 ...request.Option) (r0 *efs.DeleteFileSystemPolicyOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteFileSystemPolicyWithContext", i0, i1, i2)
	r0, _ = returns[0].(*efs.DeleteFileSystemPolicyOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *EFSDouble) fakeDeleteFileSystemPolicyWithContext(ctx context.Context, in *efs.DeleteFileSystemPolicyInput, _ ...request.Option) (*efs.DeleteFileSystemPolicyOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "DeleteFileSystemPolicy cancelled", ctx.Err())
	default:
		return d.DeleteFileSystemPolicy(in)
	}
}

func (d *EFSDouble) DeleteFileSystemRequest(i0 *efs.DeleteFileSystemInput) (r0 *request.Request, r1 *efs.DeleteFileSystemOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteFileSystemRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*efs.DeleteFileSystemOutput)
	return
}

func (d *EFSDouble) DeleteFileSystemWithContext(i0 context.Context, i1 *efs.DeleteFileSystemInput, i2 ...request.Option) (r0 *efs.DeleteFileSystemOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteFileSystemWithContext", i0, i1, i2)
	r0, _ = returns[0].(*efs.DeleteFileSystemOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *EFSDouble) fakeDeleteFileSystemWithContext(ctx context.Context, in *efs.DeleteFileSystemInput, _ ...request.Option) (*efs.DeleteFileSystemOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "DeleteFileSystem cancelled", ctx.Err())
	default:
		return d.DeleteFileSystem(in)
	}
}

func (d *EFSDouble) DeleteMountTarget(i0 *efs.DeleteMountTargetInput) (r0 *efs.DeleteMountTargetOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteMountTarget", i0)
	r0, _ = returns[0].(*efs.DeleteMountTargetOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *EFSDouble) DeleteMountTargetRequest(i0 *efs.DeleteMountTargetInput) (r0 *request.Request, r1 *efs.DeleteMountTargetOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteMountTargetRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*efs.DeleteMountTargetOutput)
	return
}

func (d *EFSDouble) DeleteMountTargetWithContext(i0 context.Context, i1 *efs.DeleteMountTargetInput, i2 ...request.Option) (r0 *efs.DeleteMountTargetOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteMountTargetWithContext", i0, i1, i2)
	r0, _ = returns[0].(*efs.DeleteMountTargetOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *EFSDouble) fakeDeleteMountTargetWithContext(ctx context.Context, in *efs.DeleteMountTargetInput, _ ...request.Option) (*efs.DeleteMountTargetOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "DeleteMountTarget cancelled", ctx.Err())
	default:
		return d.DeleteMountTarget(in)
	}
}

func (d *EFSDouble) DeleteTags(i0 *efs.DeleteTagsInput) (r0 *efs.DeleteTagsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteTags", i0)
	r0, _ = returns[0].(*efs.DeleteTagsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *EFSDouble) DeleteTagsRequest(i0 *efs.DeleteTagsInput) (r0 *request.Request, r1 *efs.DeleteTagsOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteTagsRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*efs.DeleteTagsOutput)
	return
}

func (d *EFSDouble) DeleteTagsWithContext(i0 context.Context, i1 *efs.DeleteTagsInput, i2 ...request.Option) (r0 *efs.DeleteTagsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteTagsWithContext", i0, i1, i2)
	r0, _ = returns[0].(*efs.DeleteTagsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *EFSDouble) fakeDeleteTagsWithContext(ctx context.Context, in *efs.DeleteTagsInput, _ ...request.Option) (*efs.DeleteTagsOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "DeleteTags cancelled", ctx.Err())
	default:
		return d.DeleteTags(in)
	}
}

func (d *EFSDouble) DescribeAccessPoints(i0 *efs.DescribeAccessPointsInput) (r0 *efs.DescribeAccessPointsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DescribeAccessPoints", i0)
	r0, _ = returns[0].(*efs.DescribeAccessPointsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *EFSDouble) DescribeAccessPointsPages(i0 *efs.DescribeAccessPointsInput, i1 func(*efs.DescribeAccessPointsOutput, bool) bool) (r0 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DescribeAccessPointsPages", i0, i1)
	r0, _ = returns[0].(error)
	return
}

func (d *EFSDouble) fakeDescribeAccessPointsPages(in *efs.DescribeAccessPointsInput, pager func(*efs.DescribeAccessPointsOutput, bool) (shouldContinue bool)) error {
	return d.Paginate("DescribeAccessPoints", paginators, in, pager)
}

func (d *EFSDouble) DescribeAccessPointsPagesWithContext(i0 context.Context, i1 *efs.DescribeAccessPointsInput, i2 func(*efs.DescribeAccessPointsOutput, bool) bool, i3 ...request.Option) (r0 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DescribeAccessPointsPagesWithContext", i0, i1, i2, i3)
	r0, _ = returns[0].(error)
	return
}

func (d *EFSDouble) fakeDescribeAccessPointsPagesWithContext(ctx context.Context, in *efs.DescribeAccessPointsInput, pager func(*efs.DescribeAccessPointsOutput, bool) (shouldContinue bool), options ...request.Option) error {
	return d.PaginateWithContext("DescribeAccessPoints", paginators, ctx, in, pager, options...)
}

func (d *EFSDouble) DescribeAccessPointsRequest(i0 *efs.DescribeAccessPointsInput) (r0 *request.Request, r1 *efs.DescribeAccessPointsOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DescribeAccessPointsRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*efs.DescribeAccessPointsOutput)
	return
}

func (d *EFSDouble) DescribeAccessPointsWithContext(i0 context.Context, i1 *efs.DescribeAccessPointsInput, i2 ...request.Option) (r0 *efs.DescribeAccessPointsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DescribeAccessPointsWithContext", i0, i1, i2)
	r0, _ = returns[0].(*efs.DescribeAccessPointsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *EFSDouble) fakeDescribeAccessPointsWithContext(ctx context.Context, in *efs.DescribeAccessPointsInput, _ ...request.Option) (*efs.DescribeAccessPointsOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "DescribeAccessPoints cancelled", ctx.Err())
	default:
		return d.DescribeAccessPoints(in)
	}
}

func (d *EFSDouble) DescribeFileSystemPolicy(i0 *efs.DescribeFileSystemPolicyInput) (r0 *efs.DescribeFileSystemPolicyOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DescribeFileSystemPolicy", i0)
	r0, _ = returns[0].(*efs.DescribeFileSystemPolicyOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *EFSDouble) DescribeFileSystemPolicyRequest(i0 *efs.DescribeFileSystemPolicyInput) (r0 *request.Request, r1 *efs.DescribeFileSystemPolicyOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DescribeFileSystemPolicyRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*efs.DescribeFileSystemPolicyOutput)
	return
}

func (d *EFSDouble) DescribeFileSystemPolicyWithContext(i0 context.Context, i1 *efs.DescribeFileSystemPolicyInput, i2 ...request.Option) (r0 *efs.DescribeFileSystemPolicyOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DescribeFileSystemPolicyWithContext", i0, i1, i2)
	r0, _ = returns[0].(*efs.DescribeFileSystemPolicyOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *EFSDouble) fakeDescribeFileSystemPolicyWithContext(ctx context.Context, in *efs.DescribeFileSystemPolicyInput, _ ...request.Option) (*efs.DescribeFileSystemPolicyOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "DescribeFileSystemPolicy cancelled", ctx.Err())
	default:
		return d.DescribeFileSystemPolicy(in)
	}
}

func (d *EFSDouble) DescribeFileSystems(i0 *efs.DescribeFileSystemsInput) (r0 *efs.DescribeFileSystemsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DescribeFileSystems", i0)
	r0, _ = returns[0].(*efs.DescribeFileSystemsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *EFSDouble) DescribeFileSystemsPages(i0 *efs.DescribeFileSystemsInput, i1 func(*efs.DescribeFileSystemsOutput, bool) bool) (r0 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DescribeFileSystemsPages", i0, i1)
	r0, _ = returns[0].(error)
	return
}

func (d *EFSDouble) fakeDescribeFileSystemsPages(in *efs.DescribeFileSystemsInput, pager func(*efs.DescribeFileSystemsOutput, bool) (shouldContinue bool)) error {
	return d.Paginate("DescribeFileSystems", paginators, in, pager)
}

func (d *EFSDouble) DescribeFileSystemsPagesWithContext(i0 context.Context, i1 *efs.DescribeFileSystemsInput, i2 func(*efs.DescribeFileSystemsOutput, bool) bool, i3 ...request.Option) (r0 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DescribeFileSystemsPagesWithContext", i0, i1, i2, i3)
	r0, _ = returns[0].(error)
	return
}

func (d *EFSDouble) fakeDescribeFileSystemsPagesWithContext(ctx context.Context, in *efs.DescribeFileSystemsInput, pager func(*efs.DescribeFileSystemsOutput, bool) (shouldContinue bool), options ...request.Option) error {
	return d.PaginateWithContext("DescribeFileSystems", paginators, ctx, in, pager, options...)
}

func (d *EFSDouble) DescribeFileSystemsRequest(i0 *efs.DescribeFileSystemsInput) (r0 *request.Request, r1 *efs.DescribeFileSystemsOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DescribeFileSystemsRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*efs.DescribeFileSystemsOutput)
	return
}

func (d *EFSDouble) DescribeFileSystemsWithContext(i0 context.Context, i1 *efs.DescribeFileSystemsInput, i2 ...request.Option) (r0 *efs.DescribeFileSystemsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DescribeFileSystemsWithContext", i0, i1, i2)
	r0, _ = returns[0].(*efs.DescribeFileSystemsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *EFSDouble) fakeDescribeFileSystemsWithContext(ctx context.Context, in *efs.DescribeFileSystemsInput, _ ...request.Option) (*efs.DescribeFileSystemsOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "DescribeFileSystems cancelled", ctx.Err())
	default:
		return d.DescribeFileSystems(in)
	}
}

func (d *EFSDouble) DescribeLifecycleConfiguration(i0 *efs.DescribeLifecycleConfigurationInput) (r0 *efs.DescribeLifecycleConfigurationOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DescribeLifecycleConfiguration", i0)
	r0, _ = returns[0].(*efs.DescribeLifecycleConfigurationOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *EFSDouble) DescribeLifecycleConfigurationRequest(i0 *efs.DescribeLifecycleConfigurationInput) (r0 *request.Request, r1 *efs.DescribeLifecycleConfigurationOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DescribeLifecycleConfigurationRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*efs.DescribeLifecycleConfigurationOutput)
	return
}

func (d *EFSDouble) DescribeLifecycleConfigurationWithContext(i0 context.Context, i1 *efs.DescribeLifecycleConfigurationInput, i2 ...request.Option) (r0 *efs.DescribeLifecycleConfigurationOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DescribeLifecycleConfigurationWithContext", i0, i1, i2)
	r0, _ = returns[0].(*efs.DescribeLifecycleConfigurationOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *EFSDouble) fakeDescribeLifecycleConfigurationWithContext(ctx context.Context, in *efs.DescribeLifecycleConfigurationInput, _ ...request.Option) (*efs.DescribeLifecycleConfigurationOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "DescribeLifecycleConfiguration cancelled", ctx.Err())
	default:
		return d.DescribeLifecycleConfiguration(in)
	}
}

func (d *EFSDouble) DescribeMountTargetSecurityGroups(i0 *efs.DescribeMountTargetSecurityGroupsInput) (r0 *efs.DescribeMountTargetSecurityGroupsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DescribeMountTargetSecurityGroups", i0)
	r0, _ = returns[0].(*efs.DescribeMountTargetSecurityGroupsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *EFSDouble) DescribeMountTargetSecurityGroupsRequest(i0 *efs.DescribeMountTargetSecurityGroupsInput) (r0 *request.Request, r1 *efs.DescribeMountTargetSecurityGroupsOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DescribeMountTargetSecurityGroupsRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*efs.DescribeMountTargetSecurityGroupsOutput)
	return
}

func (d *EFSDouble) DescribeMountTargetSecurityGroupsWithContext(i0 context.Context, i1 *efs.DescribeMountTargetSecurityGroupsInput, i2 ...request.Option) (r0 *efs.DescribeMountTargetSecurityGroupsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DescribeMountTargetSecurityGroupsWithContext", i0, i1, i2)
	r0, _ = returns[0].(*efs.DescribeMountTargetSecurityGroupsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *EFSDouble) fakeDescribeMountTargetSecurityGroupsWithContext(ctx context.Context, in *efs.DescribeMountTargetSecurityGroupsInput, _ ...request.Option) (*efs.DescribeMountTargetSecurityGroupsOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "DescribeMountTargetSecurityGroups cancelled", ctx.Err())
	default:
		return d.DescribeMountTargetSecurityGroups(in)
	}
}

func (d *EFSDouble) DescribeMountTargets(i0 *efs.DescribeMountTargetsInput) (r0 *efs.DescribeMountTargetsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DescribeMountTargets", i0)
	r0, _ = returns[0].(*efs.DescribeMountTargetsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *EFSDouble) DescribeMountTargetsRequest(i0 *efs.DescribeMountTargetsInput) (r0 *request.Request, r1 *efs.DescribeMountTargetsOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DescribeMountTargetsRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*efs.DescribeMountTargetsOutput)
	return
}

func (d *EFSDouble) DescribeMountTargetsWithContext(i0 context.Context, i1 *efs.DescribeMountTargetsInput, i2 ...request.Option) (r0 *efs.DescribeMountTargetsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DescribeMountTargetsWithContext", i0, i1, i2)
	r0, _ = returns[0].(*efs.DescribeMountTargetsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *EFSDouble) fakeDescribeMountTargetsWithContext(ctx context.Context, in *efs.DescribeMountTargetsInput, _ ...request.Option) (*efs.DescribeMountTargetsOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "DescribeMountTargets cancelled", ctx.Err())
	default:
		return d.DescribeMountTargets(in)
	}
}

func (d *EFSDouble) DescribeTags(i0 *efs.DescribeTagsInput) (r0 *efs.DescribeTagsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DescribeTags", i0)
	r0, _ = returns[0].(*efs.DescribeTagsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *EFSDouble) DescribeTagsPages(i0 *efs.DescribeTagsInput, i1 func(*efs.DescribeTagsOutput, bool) bool) (r0 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DescribeTagsPages", i0, i1)
	r0, _ = returns[0].(error)
	return
}

func (d *EFSDouble) fakeDescribeTagsPages(in *efs.DescribeTagsInput, pager func(*efs.DescribeTagsOutput, bool) (shouldContinue bool)) error {
	return d.Paginate("DescribeTags", paginators, in, pager)
}

func (d *EFSDouble) DescribeTagsPagesWithContext(i0 context.Context, i1 *efs.DescribeTagsInput, i2 func(*efs.DescribeTagsOutput, bool) bool, i3 ...request.Option) (r0 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DescribeTagsPagesWithContext", i0, i1, i2, i3)
	r0, _ = returns[0].(error)
	return
}

func (d *EFSDouble) fakeDescribeTagsPagesWithContext(ctx context.Context, in *efs.DescribeTagsInput, pager func(*efs.DescribeTagsOutput, bool) (shouldContinue bool), options ...request.Option) error {
	return d.PaginateWithContext("DescribeTags", paginators, ctx, in, pager, options...)
}

func (d *EFSDouble) DescribeTagsRequest(i0 *efs.DescribeTagsInput) (r0 *request.Request, r1 *efs.DescribeTagsOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DescribeTagsRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*efs.DescribeTagsOutput)
	return
}

func (d *EFSDouble) DescribeTagsWithContext(i0 context.Context, i1 *efs.DescribeTagsInput, i2 ...request.Option) (r0 *efs.DescribeTagsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DescribeTagsWithContext", i0, i1, i2)
	r0, _ = returns[0].(*efs.DescribeTagsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *EFSDouble) fakeDescribeTagsWithContext(ctx context.Context, in *efs.DescribeTagsInput, _ ...request.Option) (*efs.DescribeTagsOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "DescribeTags cancelled", ctx.Err())
	default:
		return d.DescribeTags(in)
	}
}

func (d *EFSDouble) ListTagsForResource(i0 *efs.ListTagsForResourceInput) (r0 *efs.ListTagsForResourceOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListTagsForResource", i0)
	r0, _ = returns[0].(*efs.ListTagsForResourceOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *EFSDouble) ListTagsForResourcePages(i0 *efs.ListTagsForResourceInput, i1 func(*efs.ListTagsForResourceOutput, bool) bool) (r0 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListTagsForResourcePages", i0, i1)
	r0, _ = returns[0].(error)
	return
}

func (d *EFSDouble) fakeListTagsForResourcePages(in *efs.ListTagsForResourceInput, pager func(*efs.ListTagsForResourceOutput, bool) (shouldContinue bool)) error {
	return d.Paginate("ListTagsForResource", paginators, in, pager)
}

func (d *EFSDouble) ListTagsForResourcePagesWithContext(i0 context.Context, i1 *efs.ListTagsForResourceInput, i2 func(*efs.ListTagsForResourceOutput, bool) bool, i3 ...request.Option) (r0 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListTagsForResourcePagesWithContext", i0, i1, i2, i3)
	r0, _ = returns[0].(error)
	return
}

func (d *EFSDouble) fakeListTagsForResourcePagesWithContext(ctx context.Context, in *efs.ListTagsForResourceInput, pager func(*efs.ListTagsForResourceOutput, bool) (shouldContinue bool), options ...request.Option) error {
	return d.PaginateWithContext("ListTagsForResource", paginators, ctx, in, pager, options...)
}

func (d *EFSDouble) ListTagsForResourceRequest(i0 *efs.ListTagsForResourceInput) (r0 *request.Request, r1 *efs.ListTagsForResourceOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListTagsForResourceRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*efs.ListTagsForResourceOutput)
	return
}

func (d *EFSDouble) ListTagsForResourceWithContext(i0 context.Context, i1 *efs.ListTagsForResourceInput, i2 ...request.Option) (r0 *efs.ListTagsForResourceOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListTagsForResourceWithContext", i0, i1, i2)
	r0, _ = returns[0].(*efs.ListTagsForResourceOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *EFSDouble) fakeListTagsForResourceWithContext(ctx context.Context, in *efs.ListTagsForResourceInput, _ ...request.Option) (*efs.ListTagsForResourceOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "ListTagsForResource cancelled", ctx.Err())
	default:
		return d.ListTagsForResource(in)
	}
}

func (d *EFSDouble) ModifyMountTargetSecurityGroups(i0 *efs.ModifyMountTargetSecurityGroupsInput) (r0 *efs.ModifyMountTargetSecurityGroupsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ModifyMountTargetSecurityGroups", i0)
	r0, _ = returns[0].(*efs.ModifyMountTargetSecurityGroupsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *EFSDouble) ModifyMountTargetSecurityGroupsRequest(i0 *efs.ModifyMountTargetSecurityGroupsInput) (r0 *request.Request, r1 *efs.ModifyMountTargetSecurityGroupsOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ModifyMountTargetSecurityGroupsRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*efs.ModifyMountTargetSecurityGroupsOutput)
	return
}

func (d *EFSDouble) ModifyMountTargetSecurityGroupsWithContext(i0 context.Context, i1 *efs.ModifyMountTargetSecurityGroupsInput, i2 ...request.Option) (r0 *efs.ModifyMountTargetSecurityGroupsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ModifyMountTargetSecurityGroupsWithContext", i0, i1, i2)
	r0, _ = returns[0].(*efs.ModifyMountTargetSecurityGroupsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *EFSDouble) fakeModifyMountTargetSecurityGroupsWithContext(ctx context.Context, in *efs.ModifyMountTargetSecurityGroupsInput, _ ...request.Option) (*efs.ModifyMountTargetSecurityGroupsOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "ModifyMountTargetSecurityGroups cancelled", ctx.Err())
	default:
		return d.ModifyMountTargetSecurityGroups(in)
	}
}

func (d *EFSDouble) PutFileSystemPolicy(i0 *efs.PutFileSystemPolicyInput) (r0 *efs.PutFileSystemPolicyOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("PutFileSystemPolicy", i0)
	r0, _ = returns[0].(*efs.PutFileSystemPolicyOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *EFSDouble) PutFileSystemPolicyRequest(i0 *efs.PutFileSystemPolicyInput) (r0 *request.Request, r1 *efs.PutFileSystemPolicyOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("PutFileSystemPolicyRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*efs.PutFileSystemPolicyOutput)
	return
}

func (d *EFSDouble) PutFileSystemPolicyWithContext(i0 context.Context, i1 *efs.PutFileSystemPolicyInput, i2 ...request.Option) (r0 *efs.PutFileSystemPolicyOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("PutFileSystemPolicyWithContext", i0, i1, i2)
	r0, _ = returns[0].(*efs.PutFileSystemPolicyOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *EFSDouble) fakePutFileSystemPolicyWithContext(ctx context.Context, in *efs.PutFileSystemPolicyInput, _ ...request.Option) (*efs.PutFileSystemPolicyOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "PutFileSystemPolicy cancelled", ctx.Err())
	default:
		return d.PutFileSystemPolicy(in)
	}
}

func (d *EFSDouble) PutLifecycleConfiguration(i0 *efs.PutLifecycleConfigurationInput) (r0 *efs.PutLifecycleConfigurationOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("PutLifecycleConfiguration", i0)
	r0, _ = returns[0].(*efs.PutLifecycleConfigurationOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *EFSDouble) PutLifecycleConfigurationRequest(i0 *efs.PutLifecycleConfigurationInput) (r0 *request.Request, r1 *efs.PutLifecycleConfigurationOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("PutLifecycleConfigurationRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*efs.PutLifecycleConfigurationOutput)
	return
}

func (d *EFSDouble) PutLifecycleConfigurationWithContext(i0 context.Context, i1 *efs.PutLifecycleConfigurationInput, i2 ...request.Option) (r0 *efs.PutLifecycleConfigurationOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("PutLifecycleConfigurationWithContext", i0, i1, i2)
	r0, _ = returns[0].(*efs.PutLifecycleConfigurationOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *EFSDouble) fakePutLifecycleConfigurationWithContext(ctx context.Context, in *efs.PutLifecycleConfigurationInput, _ ...request.Option) (*efs.PutLifecycleConfigurationOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "PutLifecycleConfiguration cancelled", ctx.Err())
	default:
		return d.PutLifecycleConfiguration(in)
	}
}

func (d *EFSDouble) TagResource(i0 *efs.TagResourceInput) (r0 *efs.TagResourceOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("TagResource", i0)
	r0, _ = returns[0].(*efs.TagResourceOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *EFSDouble) TagResourceRequest(i0 *efs.TagResourceInput) (r0 *request.Request, r1 *efs.TagResourceOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("TagResourceRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*efs.TagResourceOutput)
	return
}

func (d *EFSDouble) TagResourceWithContext(i0 context.Context, i1 *efs.TagResourceInput, i2 ...request.Option) (r0 *efs.TagResourceOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("TagResourceWithContext", i0, i1, i2)
	r0, _ = returns[0].(*efs.TagResourceOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *EFSDouble) fakeTagResourceWithContext(ctx context.Context, in *efs.TagResourceInput, _ ...request.Option) (*efs.TagResourceOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "TagResource cancelled", ctx.Err())
	default:
		return d.TagResource(in)
	}
}

func (d *EFSDouble) UntagResource(i0 *efs.UntagResourceInput) (r0 *efs.UntagResourceOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UntagResource", i0)
	r0, _ = returns[0].(*efs.UntagResourceOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *EFSDouble) UntagResourceRequest(i0 *efs.UntagResourceInput) (r0 *request.Request, r1 *efs.UntagResourceOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UntagResourceRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*efs.UntagResourceOutput)
	return
}

func (d *EFSDouble) UntagResourceWithContext(i0 context.Context, i1 *efs.UntagResourceInput, i2 ...request.Option) (r0 *efs.UntagResourceOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UntagResourceWithContext", i0, i1, i2)
	r0, _ = returns[0].(*efs.UntagResourceOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *EFSDouble) fakeUntagResourceWithContext(ctx context.Context, in *efs.UntagResourceInput, _ ...request.Option) (*efs.UntagResourceOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "UntagResource cancelled", ctx.Err())
	default:
		return d.UntagResource(in)
	}
}

func (d *EFSDouble) UpdateFileSystem(i0 *efs.UpdateFileSystemInput) (r0 *efs.UpdateFileSystemOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UpdateFileSystem", i0)
	r0, _ = returns[0].(*efs.UpdateFileSystemOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *EFSDouble) UpdateFileSystemRequest(i0 *efs.UpdateFileSystemInput) (r0 *request.Request, r1 *efs.UpdateFileSystemOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UpdateFileSystemRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*efs.UpdateFileSystemOutput)
	return
}

func (d *EFSDouble) UpdateFileSystemWithContext(i0 context.Context, i1 *efs.UpdateFileSystemInput, i2 ...request.Option) (r0 *efs.UpdateFileSystemOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UpdateFileSystemWithContext", i0, i1, i2)
	r0, _ = returns[0].(*efs.UpdateFileSystemOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *EFSDouble) fakeUpdateFileSystemWithContext(ctx context.Context, in *efs.UpdateFileSystemInput, _ ...request.Option) (*efs.UpdateFileSystemOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "UpdateFileSystem cancelled", ctx.Err())
	default:
		return d.UpdateFileSystem(in)
	}
}
