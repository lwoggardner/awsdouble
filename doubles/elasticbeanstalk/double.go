// Code generated by go doublegen; DO NOT EDIT.
// This file was generated at 2020-02-14T22:12:38+11:00

// Package elasticbeanstalkdouble provides a TestDouble implementation of elasticbeanstalkiface.ElasticBeanstalkAPI
package elasticbeanstalkdouble

import (
	"context"

	"github.com/aws/aws-sdk-go/aws/awserr"
	"github.com/aws/aws-sdk-go/aws/request"
	"github.com/aws/aws-sdk-go/service/elasticbeanstalk"
	"github.com/aws/aws-sdk-go/service/elasticbeanstalk/elasticbeanstalkiface"
	"github.com/lwoggardner/awsdouble"
	"github.com/lwoggardner/godouble/godouble"
)

// ElasticBeanstalkDouble is TestDouble for elasticbeanstalkiface.ElasticBeanstalkAPI
type ElasticBeanstalkDouble struct {
	elasticbeanstalkiface.ElasticBeanstalkAPI
	*awsdouble.AWSTestDouble
}

// Constructor for ElasticBeanstalkDouble
// Default configuration will ensure
//   * API operations not explicitly stubbed will return an empty output struct pointer, and nil error.
//     To simulate long polling, "Poll" operations will return these values after a random delay of up to 100ms.
//   * WithContext methods implement a 'Fake' method that returns a cancellation error if the context is cancelled
//      before the method is called.
//   * Pages and PagesWithContext methods similarly implement a 'Fake' method that paginates over the underlying method.
//
//    This allows tests to only stub the simple api methods and be generally unconcerned whether the SUT is using the
//      Context or Pagination forms of the API.
//
func NewDouble(t godouble.T, configurators ...func(*awsdouble.AWSTestDouble)) *ElasticBeanstalkDouble {
	result := &ElasticBeanstalkDouble{}

	configurators = append([]func(configurator *awsdouble.AWSTestDouble){func(d *awsdouble.AWSTestDouble) {
		d.SetDefaultCall(result.defaultMethodCall)
		d.SetDefaultReturnValues(result.defaultReturnValues)
	}}, configurators...)

	result.AWSTestDouble = awsdouble.NewDouble(t, (*elasticbeanstalkiface.ElasticBeanstalkAPI)(nil), configurators...)
	return result
}

func (d *ElasticBeanstalkDouble) defaultReturnValues(m godouble.Method) godouble.ReturnValues {
	return d.DefaultReturnValues(m)
}

func (d *ElasticBeanstalkDouble) defaultMethodCall(m godouble.Method) godouble.MethodCall {
	switch m.Reflect().Name {

	case "AbortEnvironmentUpdateWithContext":
		return m.Fake(d.fakeAbortEnvironmentUpdateWithContext)

	case "ApplyEnvironmentManagedActionWithContext":
		return m.Fake(d.fakeApplyEnvironmentManagedActionWithContext)

	case "CheckDNSAvailabilityWithContext":
		return m.Fake(d.fakeCheckDNSAvailabilityWithContext)

	case "ComposeEnvironmentsWithContext":
		return m.Fake(d.fakeComposeEnvironmentsWithContext)

	case "CreateApplicationVersionWithContext":
		return m.Fake(d.fakeCreateApplicationVersionWithContext)

	case "CreateApplicationWithContext":
		return m.Fake(d.fakeCreateApplicationWithContext)

	case "CreateConfigurationTemplateWithContext":
		return m.Fake(d.fakeCreateConfigurationTemplateWithContext)

	case "CreateEnvironmentWithContext":
		return m.Fake(d.fakeCreateEnvironmentWithContext)

	case "CreatePlatformVersionWithContext":
		return m.Fake(d.fakeCreatePlatformVersionWithContext)

	case "CreateStorageLocationWithContext":
		return m.Fake(d.fakeCreateStorageLocationWithContext)

	case "DeleteApplicationVersionWithContext":
		return m.Fake(d.fakeDeleteApplicationVersionWithContext)

	case "DeleteApplicationWithContext":
		return m.Fake(d.fakeDeleteApplicationWithContext)

	case "DeleteConfigurationTemplateWithContext":
		return m.Fake(d.fakeDeleteConfigurationTemplateWithContext)

	case "DeleteEnvironmentConfigurationWithContext":
		return m.Fake(d.fakeDeleteEnvironmentConfigurationWithContext)

	case "DeletePlatformVersionWithContext":
		return m.Fake(d.fakeDeletePlatformVersionWithContext)

	case "DescribeAccountAttributesWithContext":
		return m.Fake(d.fakeDescribeAccountAttributesWithContext)

	case "DescribeApplicationVersionsWithContext":
		return m.Fake(d.fakeDescribeApplicationVersionsWithContext)

	case "DescribeApplicationsWithContext":
		return m.Fake(d.fakeDescribeApplicationsWithContext)

	case "DescribeConfigurationOptionsWithContext":
		return m.Fake(d.fakeDescribeConfigurationOptionsWithContext)

	case "DescribeConfigurationSettingsWithContext":
		return m.Fake(d.fakeDescribeConfigurationSettingsWithContext)

	case "DescribeEnvironmentHealthWithContext":
		return m.Fake(d.fakeDescribeEnvironmentHealthWithContext)

	case "DescribeEnvironmentManagedActionHistoryWithContext":
		return m.Fake(d.fakeDescribeEnvironmentManagedActionHistoryWithContext)

	case "DescribeEnvironmentManagedActionsWithContext":
		return m.Fake(d.fakeDescribeEnvironmentManagedActionsWithContext)

	case "DescribeEnvironmentResourcesWithContext":
		return m.Fake(d.fakeDescribeEnvironmentResourcesWithContext)

	case "DescribeEnvironmentsWithContext":
		return m.Fake(d.fakeDescribeEnvironmentsWithContext)

	case "DescribeEventsPages":
		return m.Fake(d.fakeDescribeEventsPages)

	case "DescribeEventsPagesWithContext":
		return m.Fake(d.fakeDescribeEventsPagesWithContext)

	case "DescribeEventsWithContext":
		return m.Fake(d.fakeDescribeEventsWithContext)

	case "DescribeInstancesHealthWithContext":
		return m.Fake(d.fakeDescribeInstancesHealthWithContext)

	case "DescribePlatformVersionWithContext":
		return m.Fake(d.fakeDescribePlatformVersionWithContext)

	case "ListAvailableSolutionStacksWithContext":
		return m.Fake(d.fakeListAvailableSolutionStacksWithContext)

	case "ListPlatformVersionsWithContext":
		return m.Fake(d.fakeListPlatformVersionsWithContext)

	case "ListTagsForResourceWithContext":
		return m.Fake(d.fakeListTagsForResourceWithContext)

	case "RebuildEnvironmentWithContext":
		return m.Fake(d.fakeRebuildEnvironmentWithContext)

	case "RequestEnvironmentInfoWithContext":
		return m.Fake(d.fakeRequestEnvironmentInfoWithContext)

	case "RestartAppServerWithContext":
		return m.Fake(d.fakeRestartAppServerWithContext)

	case "RetrieveEnvironmentInfoWithContext":
		return m.Fake(d.fakeRetrieveEnvironmentInfoWithContext)

	case "SwapEnvironmentCNAMEsWithContext":
		return m.Fake(d.fakeSwapEnvironmentCNAMEsWithContext)

	case "TerminateEnvironmentWithContext":
		return m.Fake(d.fakeTerminateEnvironmentWithContext)

	case "UpdateApplicationResourceLifecycleWithContext":
		return m.Fake(d.fakeUpdateApplicationResourceLifecycleWithContext)

	case "UpdateApplicationVersionWithContext":
		return m.Fake(d.fakeUpdateApplicationVersionWithContext)

	case "UpdateApplicationWithContext":
		return m.Fake(d.fakeUpdateApplicationWithContext)

	case "UpdateConfigurationTemplateWithContext":
		return m.Fake(d.fakeUpdateConfigurationTemplateWithContext)

	case "UpdateEnvironmentWithContext":
		return m.Fake(d.fakeUpdateEnvironmentWithContext)

	case "UpdateTagsForResourceWithContext":
		return m.Fake(d.fakeUpdateTagsForResourceWithContext)

	case "ValidateConfigurationSettingsWithContext":
		return m.Fake(d.fakeValidateConfigurationSettingsWithContext)

	default:
		return nil
	}
}

func (d *ElasticBeanstalkDouble) AbortEnvironmentUpdate(i0 *elasticbeanstalk.AbortEnvironmentUpdateInput) (r0 *elasticbeanstalk.AbortEnvironmentUpdateOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("AbortEnvironmentUpdate", i0)
	r0, _ = returns[0].(*elasticbeanstalk.AbortEnvironmentUpdateOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ElasticBeanstalkDouble) AbortEnvironmentUpdateRequest(i0 *elasticbeanstalk.AbortEnvironmentUpdateInput) (r0 *request.Request, r1 *elasticbeanstalk.AbortEnvironmentUpdateOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("AbortEnvironmentUpdateRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*elasticbeanstalk.AbortEnvironmentUpdateOutput)
	return
}

func (d *ElasticBeanstalkDouble) AbortEnvironmentUpdateWithContext(i0 context.Context, i1 *elasticbeanstalk.AbortEnvironmentUpdateInput, i2 ...request.Option) (r0 *elasticbeanstalk.AbortEnvironmentUpdateOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("AbortEnvironmentUpdateWithContext", i0, i1, i2)
	r0, _ = returns[0].(*elasticbeanstalk.AbortEnvironmentUpdateOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ElasticBeanstalkDouble) fakeAbortEnvironmentUpdateWithContext(ctx context.Context, in *elasticbeanstalk.AbortEnvironmentUpdateInput, _ ...request.Option) (*elasticbeanstalk.AbortEnvironmentUpdateOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "AbortEnvironmentUpdate cancelled", ctx.Err())
	default:
		return d.AbortEnvironmentUpdate(in)
	}
}

func (d *ElasticBeanstalkDouble) ApplyEnvironmentManagedAction(i0 *elasticbeanstalk.ApplyEnvironmentManagedActionInput) (r0 *elasticbeanstalk.ApplyEnvironmentManagedActionOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ApplyEnvironmentManagedAction", i0)
	r0, _ = returns[0].(*elasticbeanstalk.ApplyEnvironmentManagedActionOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ElasticBeanstalkDouble) ApplyEnvironmentManagedActionRequest(i0 *elasticbeanstalk.ApplyEnvironmentManagedActionInput) (r0 *request.Request, r1 *elasticbeanstalk.ApplyEnvironmentManagedActionOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ApplyEnvironmentManagedActionRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*elasticbeanstalk.ApplyEnvironmentManagedActionOutput)
	return
}

func (d *ElasticBeanstalkDouble) ApplyEnvironmentManagedActionWithContext(i0 context.Context, i1 *elasticbeanstalk.ApplyEnvironmentManagedActionInput, i2 ...request.Option) (r0 *elasticbeanstalk.ApplyEnvironmentManagedActionOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ApplyEnvironmentManagedActionWithContext", i0, i1, i2)
	r0, _ = returns[0].(*elasticbeanstalk.ApplyEnvironmentManagedActionOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ElasticBeanstalkDouble) fakeApplyEnvironmentManagedActionWithContext(ctx context.Context, in *elasticbeanstalk.ApplyEnvironmentManagedActionInput, _ ...request.Option) (*elasticbeanstalk.ApplyEnvironmentManagedActionOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "ApplyEnvironmentManagedAction cancelled", ctx.Err())
	default:
		return d.ApplyEnvironmentManagedAction(in)
	}
}

func (d *ElasticBeanstalkDouble) CheckDNSAvailability(i0 *elasticbeanstalk.CheckDNSAvailabilityInput) (r0 *elasticbeanstalk.CheckDNSAvailabilityOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CheckDNSAvailability", i0)
	r0, _ = returns[0].(*elasticbeanstalk.CheckDNSAvailabilityOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ElasticBeanstalkDouble) CheckDNSAvailabilityRequest(i0 *elasticbeanstalk.CheckDNSAvailabilityInput) (r0 *request.Request, r1 *elasticbeanstalk.CheckDNSAvailabilityOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CheckDNSAvailabilityRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*elasticbeanstalk.CheckDNSAvailabilityOutput)
	return
}

func (d *ElasticBeanstalkDouble) CheckDNSAvailabilityWithContext(i0 context.Context, i1 *elasticbeanstalk.CheckDNSAvailabilityInput, i2 ...request.Option) (r0 *elasticbeanstalk.CheckDNSAvailabilityOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CheckDNSAvailabilityWithContext", i0, i1, i2)
	r0, _ = returns[0].(*elasticbeanstalk.CheckDNSAvailabilityOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ElasticBeanstalkDouble) fakeCheckDNSAvailabilityWithContext(ctx context.Context, in *elasticbeanstalk.CheckDNSAvailabilityInput, _ ...request.Option) (*elasticbeanstalk.CheckDNSAvailabilityOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "CheckDNSAvailability cancelled", ctx.Err())
	default:
		return d.CheckDNSAvailability(in)
	}
}

func (d *ElasticBeanstalkDouble) ComposeEnvironments(i0 *elasticbeanstalk.ComposeEnvironmentsInput) (r0 *elasticbeanstalk.EnvironmentDescriptionsMessage, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ComposeEnvironments", i0)
	r0, _ = returns[0].(*elasticbeanstalk.EnvironmentDescriptionsMessage)
	r1, _ = returns[1].(error)
	return
}

func (d *ElasticBeanstalkDouble) ComposeEnvironmentsRequest(i0 *elasticbeanstalk.ComposeEnvironmentsInput) (r0 *request.Request, r1 *elasticbeanstalk.EnvironmentDescriptionsMessage) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ComposeEnvironmentsRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*elasticbeanstalk.EnvironmentDescriptionsMessage)
	return
}

func (d *ElasticBeanstalkDouble) ComposeEnvironmentsWithContext(i0 context.Context, i1 *elasticbeanstalk.ComposeEnvironmentsInput, i2 ...request.Option) (r0 *elasticbeanstalk.EnvironmentDescriptionsMessage, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ComposeEnvironmentsWithContext", i0, i1, i2)
	r0, _ = returns[0].(*elasticbeanstalk.EnvironmentDescriptionsMessage)
	r1, _ = returns[1].(error)
	return
}

func (d *ElasticBeanstalkDouble) fakeComposeEnvironmentsWithContext(ctx context.Context, in *elasticbeanstalk.ComposeEnvironmentsInput, _ ...request.Option) (*elasticbeanstalk.EnvironmentDescriptionsMessage, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "ComposeEnvironments cancelled", ctx.Err())
	default:
		return d.ComposeEnvironments(in)
	}
}

func (d *ElasticBeanstalkDouble) CreateApplication(i0 *elasticbeanstalk.CreateApplicationInput) (r0 *elasticbeanstalk.ApplicationDescriptionMessage, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreateApplication", i0)
	r0, _ = returns[0].(*elasticbeanstalk.ApplicationDescriptionMessage)
	r1, _ = returns[1].(error)
	return
}

func (d *ElasticBeanstalkDouble) CreateApplicationRequest(i0 *elasticbeanstalk.CreateApplicationInput) (r0 *request.Request, r1 *elasticbeanstalk.ApplicationDescriptionMessage) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreateApplicationRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*elasticbeanstalk.ApplicationDescriptionMessage)
	return
}

func (d *ElasticBeanstalkDouble) CreateApplicationVersion(i0 *elasticbeanstalk.CreateApplicationVersionInput) (r0 *elasticbeanstalk.ApplicationVersionDescriptionMessage, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreateApplicationVersion", i0)
	r0, _ = returns[0].(*elasticbeanstalk.ApplicationVersionDescriptionMessage)
	r1, _ = returns[1].(error)
	return
}

func (d *ElasticBeanstalkDouble) CreateApplicationVersionRequest(i0 *elasticbeanstalk.CreateApplicationVersionInput) (r0 *request.Request, r1 *elasticbeanstalk.ApplicationVersionDescriptionMessage) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreateApplicationVersionRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*elasticbeanstalk.ApplicationVersionDescriptionMessage)
	return
}

func (d *ElasticBeanstalkDouble) CreateApplicationVersionWithContext(i0 context.Context, i1 *elasticbeanstalk.CreateApplicationVersionInput, i2 ...request.Option) (r0 *elasticbeanstalk.ApplicationVersionDescriptionMessage, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreateApplicationVersionWithContext", i0, i1, i2)
	r0, _ = returns[0].(*elasticbeanstalk.ApplicationVersionDescriptionMessage)
	r1, _ = returns[1].(error)
	return
}

func (d *ElasticBeanstalkDouble) fakeCreateApplicationVersionWithContext(ctx context.Context, in *elasticbeanstalk.CreateApplicationVersionInput, _ ...request.Option) (*elasticbeanstalk.ApplicationVersionDescriptionMessage, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "CreateApplicationVersion cancelled", ctx.Err())
	default:
		return d.CreateApplicationVersion(in)
	}
}

func (d *ElasticBeanstalkDouble) CreateApplicationWithContext(i0 context.Context, i1 *elasticbeanstalk.CreateApplicationInput, i2 ...request.Option) (r0 *elasticbeanstalk.ApplicationDescriptionMessage, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreateApplicationWithContext", i0, i1, i2)
	r0, _ = returns[0].(*elasticbeanstalk.ApplicationDescriptionMessage)
	r1, _ = returns[1].(error)
	return
}

func (d *ElasticBeanstalkDouble) fakeCreateApplicationWithContext(ctx context.Context, in *elasticbeanstalk.CreateApplicationInput, _ ...request.Option) (*elasticbeanstalk.ApplicationDescriptionMessage, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "CreateApplication cancelled", ctx.Err())
	default:
		return d.CreateApplication(in)
	}
}

func (d *ElasticBeanstalkDouble) CreateConfigurationTemplate(i0 *elasticbeanstalk.CreateConfigurationTemplateInput) (r0 *elasticbeanstalk.ConfigurationSettingsDescription, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreateConfigurationTemplate", i0)
	r0, _ = returns[0].(*elasticbeanstalk.ConfigurationSettingsDescription)
	r1, _ = returns[1].(error)
	return
}

func (d *ElasticBeanstalkDouble) CreateConfigurationTemplateRequest(i0 *elasticbeanstalk.CreateConfigurationTemplateInput) (r0 *request.Request, r1 *elasticbeanstalk.ConfigurationSettingsDescription) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreateConfigurationTemplateRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*elasticbeanstalk.ConfigurationSettingsDescription)
	return
}

func (d *ElasticBeanstalkDouble) CreateConfigurationTemplateWithContext(i0 context.Context, i1 *elasticbeanstalk.CreateConfigurationTemplateInput, i2 ...request.Option) (r0 *elasticbeanstalk.ConfigurationSettingsDescription, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreateConfigurationTemplateWithContext", i0, i1, i2)
	r0, _ = returns[0].(*elasticbeanstalk.ConfigurationSettingsDescription)
	r1, _ = returns[1].(error)
	return
}

func (d *ElasticBeanstalkDouble) fakeCreateConfigurationTemplateWithContext(ctx context.Context, in *elasticbeanstalk.CreateConfigurationTemplateInput, _ ...request.Option) (*elasticbeanstalk.ConfigurationSettingsDescription, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "CreateConfigurationTemplate cancelled", ctx.Err())
	default:
		return d.CreateConfigurationTemplate(in)
	}
}

func (d *ElasticBeanstalkDouble) CreateEnvironment(i0 *elasticbeanstalk.CreateEnvironmentInput) (r0 *elasticbeanstalk.EnvironmentDescription, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreateEnvironment", i0)
	r0, _ = returns[0].(*elasticbeanstalk.EnvironmentDescription)
	r1, _ = returns[1].(error)
	return
}

func (d *ElasticBeanstalkDouble) CreateEnvironmentRequest(i0 *elasticbeanstalk.CreateEnvironmentInput) (r0 *request.Request, r1 *elasticbeanstalk.EnvironmentDescription) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreateEnvironmentRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*elasticbeanstalk.EnvironmentDescription)
	return
}

func (d *ElasticBeanstalkDouble) CreateEnvironmentWithContext(i0 context.Context, i1 *elasticbeanstalk.CreateEnvironmentInput, i2 ...request.Option) (r0 *elasticbeanstalk.EnvironmentDescription, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreateEnvironmentWithContext", i0, i1, i2)
	r0, _ = returns[0].(*elasticbeanstalk.EnvironmentDescription)
	r1, _ = returns[1].(error)
	return
}

func (d *ElasticBeanstalkDouble) fakeCreateEnvironmentWithContext(ctx context.Context, in *elasticbeanstalk.CreateEnvironmentInput, _ ...request.Option) (*elasticbeanstalk.EnvironmentDescription, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "CreateEnvironment cancelled", ctx.Err())
	default:
		return d.CreateEnvironment(in)
	}
}

func (d *ElasticBeanstalkDouble) CreatePlatformVersion(i0 *elasticbeanstalk.CreatePlatformVersionInput) (r0 *elasticbeanstalk.CreatePlatformVersionOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreatePlatformVersion", i0)
	r0, _ = returns[0].(*elasticbeanstalk.CreatePlatformVersionOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ElasticBeanstalkDouble) CreatePlatformVersionRequest(i0 *elasticbeanstalk.CreatePlatformVersionInput) (r0 *request.Request, r1 *elasticbeanstalk.CreatePlatformVersionOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreatePlatformVersionRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*elasticbeanstalk.CreatePlatformVersionOutput)
	return
}

func (d *ElasticBeanstalkDouble) CreatePlatformVersionWithContext(i0 context.Context, i1 *elasticbeanstalk.CreatePlatformVersionInput, i2 ...request.Option) (r0 *elasticbeanstalk.CreatePlatformVersionOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreatePlatformVersionWithContext", i0, i1, i2)
	r0, _ = returns[0].(*elasticbeanstalk.CreatePlatformVersionOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ElasticBeanstalkDouble) fakeCreatePlatformVersionWithContext(ctx context.Context, in *elasticbeanstalk.CreatePlatformVersionInput, _ ...request.Option) (*elasticbeanstalk.CreatePlatformVersionOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "CreatePlatformVersion cancelled", ctx.Err())
	default:
		return d.CreatePlatformVersion(in)
	}
}

func (d *ElasticBeanstalkDouble) CreateStorageLocation(i0 *elasticbeanstalk.CreateStorageLocationInput) (r0 *elasticbeanstalk.CreateStorageLocationOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreateStorageLocation", i0)
	r0, _ = returns[0].(*elasticbeanstalk.CreateStorageLocationOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ElasticBeanstalkDouble) CreateStorageLocationRequest(i0 *elasticbeanstalk.CreateStorageLocationInput) (r0 *request.Request, r1 *elasticbeanstalk.CreateStorageLocationOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreateStorageLocationRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*elasticbeanstalk.CreateStorageLocationOutput)
	return
}

func (d *ElasticBeanstalkDouble) CreateStorageLocationWithContext(i0 context.Context, i1 *elasticbeanstalk.CreateStorageLocationInput, i2 ...request.Option) (r0 *elasticbeanstalk.CreateStorageLocationOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreateStorageLocationWithContext", i0, i1, i2)
	r0, _ = returns[0].(*elasticbeanstalk.CreateStorageLocationOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ElasticBeanstalkDouble) fakeCreateStorageLocationWithContext(ctx context.Context, in *elasticbeanstalk.CreateStorageLocationInput, _ ...request.Option) (*elasticbeanstalk.CreateStorageLocationOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "CreateStorageLocation cancelled", ctx.Err())
	default:
		return d.CreateStorageLocation(in)
	}
}

func (d *ElasticBeanstalkDouble) DeleteApplication(i0 *elasticbeanstalk.DeleteApplicationInput) (r0 *elasticbeanstalk.DeleteApplicationOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteApplication", i0)
	r0, _ = returns[0].(*elasticbeanstalk.DeleteApplicationOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ElasticBeanstalkDouble) DeleteApplicationRequest(i0 *elasticbeanstalk.DeleteApplicationInput) (r0 *request.Request, r1 *elasticbeanstalk.DeleteApplicationOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteApplicationRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*elasticbeanstalk.DeleteApplicationOutput)
	return
}

func (d *ElasticBeanstalkDouble) DeleteApplicationVersion(i0 *elasticbeanstalk.DeleteApplicationVersionInput) (r0 *elasticbeanstalk.DeleteApplicationVersionOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteApplicationVersion", i0)
	r0, _ = returns[0].(*elasticbeanstalk.DeleteApplicationVersionOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ElasticBeanstalkDouble) DeleteApplicationVersionRequest(i0 *elasticbeanstalk.DeleteApplicationVersionInput) (r0 *request.Request, r1 *elasticbeanstalk.DeleteApplicationVersionOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteApplicationVersionRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*elasticbeanstalk.DeleteApplicationVersionOutput)
	return
}

func (d *ElasticBeanstalkDouble) DeleteApplicationVersionWithContext(i0 context.Context, i1 *elasticbeanstalk.DeleteApplicationVersionInput, i2 ...request.Option) (r0 *elasticbeanstalk.DeleteApplicationVersionOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteApplicationVersionWithContext", i0, i1, i2)
	r0, _ = returns[0].(*elasticbeanstalk.DeleteApplicationVersionOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ElasticBeanstalkDouble) fakeDeleteApplicationVersionWithContext(ctx context.Context, in *elasticbeanstalk.DeleteApplicationVersionInput, _ ...request.Option) (*elasticbeanstalk.DeleteApplicationVersionOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "DeleteApplicationVersion cancelled", ctx.Err())
	default:
		return d.DeleteApplicationVersion(in)
	}
}

func (d *ElasticBeanstalkDouble) DeleteApplicationWithContext(i0 context.Context, i1 *elasticbeanstalk.DeleteApplicationInput, i2 ...request.Option) (r0 *elasticbeanstalk.DeleteApplicationOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteApplicationWithContext", i0, i1, i2)
	r0, _ = returns[0].(*elasticbeanstalk.DeleteApplicationOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ElasticBeanstalkDouble) fakeDeleteApplicationWithContext(ctx context.Context, in *elasticbeanstalk.DeleteApplicationInput, _ ...request.Option) (*elasticbeanstalk.DeleteApplicationOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "DeleteApplication cancelled", ctx.Err())
	default:
		return d.DeleteApplication(in)
	}
}

func (d *ElasticBeanstalkDouble) DeleteConfigurationTemplate(i0 *elasticbeanstalk.DeleteConfigurationTemplateInput) (r0 *elasticbeanstalk.DeleteConfigurationTemplateOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteConfigurationTemplate", i0)
	r0, _ = returns[0].(*elasticbeanstalk.DeleteConfigurationTemplateOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ElasticBeanstalkDouble) DeleteConfigurationTemplateRequest(i0 *elasticbeanstalk.DeleteConfigurationTemplateInput) (r0 *request.Request, r1 *elasticbeanstalk.DeleteConfigurationTemplateOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteConfigurationTemplateRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*elasticbeanstalk.DeleteConfigurationTemplateOutput)
	return
}

func (d *ElasticBeanstalkDouble) DeleteConfigurationTemplateWithContext(i0 context.Context, i1 *elasticbeanstalk.DeleteConfigurationTemplateInput, i2 ...request.Option) (r0 *elasticbeanstalk.DeleteConfigurationTemplateOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteConfigurationTemplateWithContext", i0, i1, i2)
	r0, _ = returns[0].(*elasticbeanstalk.DeleteConfigurationTemplateOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ElasticBeanstalkDouble) fakeDeleteConfigurationTemplateWithContext(ctx context.Context, in *elasticbeanstalk.DeleteConfigurationTemplateInput, _ ...request.Option) (*elasticbeanstalk.DeleteConfigurationTemplateOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "DeleteConfigurationTemplate cancelled", ctx.Err())
	default:
		return d.DeleteConfigurationTemplate(in)
	}
}

func (d *ElasticBeanstalkDouble) DeleteEnvironmentConfiguration(i0 *elasticbeanstalk.DeleteEnvironmentConfigurationInput) (r0 *elasticbeanstalk.DeleteEnvironmentConfigurationOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteEnvironmentConfiguration", i0)
	r0, _ = returns[0].(*elasticbeanstalk.DeleteEnvironmentConfigurationOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ElasticBeanstalkDouble) DeleteEnvironmentConfigurationRequest(i0 *elasticbeanstalk.DeleteEnvironmentConfigurationInput) (r0 *request.Request, r1 *elasticbeanstalk.DeleteEnvironmentConfigurationOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteEnvironmentConfigurationRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*elasticbeanstalk.DeleteEnvironmentConfigurationOutput)
	return
}

func (d *ElasticBeanstalkDouble) DeleteEnvironmentConfigurationWithContext(i0 context.Context, i1 *elasticbeanstalk.DeleteEnvironmentConfigurationInput, i2 ...request.Option) (r0 *elasticbeanstalk.DeleteEnvironmentConfigurationOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteEnvironmentConfigurationWithContext", i0, i1, i2)
	r0, _ = returns[0].(*elasticbeanstalk.DeleteEnvironmentConfigurationOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ElasticBeanstalkDouble) fakeDeleteEnvironmentConfigurationWithContext(ctx context.Context, in *elasticbeanstalk.DeleteEnvironmentConfigurationInput, _ ...request.Option) (*elasticbeanstalk.DeleteEnvironmentConfigurationOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "DeleteEnvironmentConfiguration cancelled", ctx.Err())
	default:
		return d.DeleteEnvironmentConfiguration(in)
	}
}

func (d *ElasticBeanstalkDouble) DeletePlatformVersion(i0 *elasticbeanstalk.DeletePlatformVersionInput) (r0 *elasticbeanstalk.DeletePlatformVersionOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeletePlatformVersion", i0)
	r0, _ = returns[0].(*elasticbeanstalk.DeletePlatformVersionOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ElasticBeanstalkDouble) DeletePlatformVersionRequest(i0 *elasticbeanstalk.DeletePlatformVersionInput) (r0 *request.Request, r1 *elasticbeanstalk.DeletePlatformVersionOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeletePlatformVersionRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*elasticbeanstalk.DeletePlatformVersionOutput)
	return
}

func (d *ElasticBeanstalkDouble) DeletePlatformVersionWithContext(i0 context.Context, i1 *elasticbeanstalk.DeletePlatformVersionInput, i2 ...request.Option) (r0 *elasticbeanstalk.DeletePlatformVersionOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeletePlatformVersionWithContext", i0, i1, i2)
	r0, _ = returns[0].(*elasticbeanstalk.DeletePlatformVersionOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ElasticBeanstalkDouble) fakeDeletePlatformVersionWithContext(ctx context.Context, in *elasticbeanstalk.DeletePlatformVersionInput, _ ...request.Option) (*elasticbeanstalk.DeletePlatformVersionOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "DeletePlatformVersion cancelled", ctx.Err())
	default:
		return d.DeletePlatformVersion(in)
	}
}

func (d *ElasticBeanstalkDouble) DescribeAccountAttributes(i0 *elasticbeanstalk.DescribeAccountAttributesInput) (r0 *elasticbeanstalk.DescribeAccountAttributesOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DescribeAccountAttributes", i0)
	r0, _ = returns[0].(*elasticbeanstalk.DescribeAccountAttributesOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ElasticBeanstalkDouble) DescribeAccountAttributesRequest(i0 *elasticbeanstalk.DescribeAccountAttributesInput) (r0 *request.Request, r1 *elasticbeanstalk.DescribeAccountAttributesOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DescribeAccountAttributesRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*elasticbeanstalk.DescribeAccountAttributesOutput)
	return
}

func (d *ElasticBeanstalkDouble) DescribeAccountAttributesWithContext(i0 context.Context, i1 *elasticbeanstalk.DescribeAccountAttributesInput, i2 ...request.Option) (r0 *elasticbeanstalk.DescribeAccountAttributesOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DescribeAccountAttributesWithContext", i0, i1, i2)
	r0, _ = returns[0].(*elasticbeanstalk.DescribeAccountAttributesOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ElasticBeanstalkDouble) fakeDescribeAccountAttributesWithContext(ctx context.Context, in *elasticbeanstalk.DescribeAccountAttributesInput, _ ...request.Option) (*elasticbeanstalk.DescribeAccountAttributesOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "DescribeAccountAttributes cancelled", ctx.Err())
	default:
		return d.DescribeAccountAttributes(in)
	}
}

func (d *ElasticBeanstalkDouble) DescribeApplicationVersions(i0 *elasticbeanstalk.DescribeApplicationVersionsInput) (r0 *elasticbeanstalk.DescribeApplicationVersionsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DescribeApplicationVersions", i0)
	r0, _ = returns[0].(*elasticbeanstalk.DescribeApplicationVersionsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ElasticBeanstalkDouble) DescribeApplicationVersionsRequest(i0 *elasticbeanstalk.DescribeApplicationVersionsInput) (r0 *request.Request, r1 *elasticbeanstalk.DescribeApplicationVersionsOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DescribeApplicationVersionsRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*elasticbeanstalk.DescribeApplicationVersionsOutput)
	return
}

func (d *ElasticBeanstalkDouble) DescribeApplicationVersionsWithContext(i0 context.Context, i1 *elasticbeanstalk.DescribeApplicationVersionsInput, i2 ...request.Option) (r0 *elasticbeanstalk.DescribeApplicationVersionsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DescribeApplicationVersionsWithContext", i0, i1, i2)
	r0, _ = returns[0].(*elasticbeanstalk.DescribeApplicationVersionsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ElasticBeanstalkDouble) fakeDescribeApplicationVersionsWithContext(ctx context.Context, in *elasticbeanstalk.DescribeApplicationVersionsInput, _ ...request.Option) (*elasticbeanstalk.DescribeApplicationVersionsOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "DescribeApplicationVersions cancelled", ctx.Err())
	default:
		return d.DescribeApplicationVersions(in)
	}
}

func (d *ElasticBeanstalkDouble) DescribeApplications(i0 *elasticbeanstalk.DescribeApplicationsInput) (r0 *elasticbeanstalk.DescribeApplicationsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DescribeApplications", i0)
	r0, _ = returns[0].(*elasticbeanstalk.DescribeApplicationsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ElasticBeanstalkDouble) DescribeApplicationsRequest(i0 *elasticbeanstalk.DescribeApplicationsInput) (r0 *request.Request, r1 *elasticbeanstalk.DescribeApplicationsOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DescribeApplicationsRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*elasticbeanstalk.DescribeApplicationsOutput)
	return
}

func (d *ElasticBeanstalkDouble) DescribeApplicationsWithContext(i0 context.Context, i1 *elasticbeanstalk.DescribeApplicationsInput, i2 ...request.Option) (r0 *elasticbeanstalk.DescribeApplicationsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DescribeApplicationsWithContext", i0, i1, i2)
	r0, _ = returns[0].(*elasticbeanstalk.DescribeApplicationsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ElasticBeanstalkDouble) fakeDescribeApplicationsWithContext(ctx context.Context, in *elasticbeanstalk.DescribeApplicationsInput, _ ...request.Option) (*elasticbeanstalk.DescribeApplicationsOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "DescribeApplications cancelled", ctx.Err())
	default:
		return d.DescribeApplications(in)
	}
}

func (d *ElasticBeanstalkDouble) DescribeConfigurationOptions(i0 *elasticbeanstalk.DescribeConfigurationOptionsInput) (r0 *elasticbeanstalk.DescribeConfigurationOptionsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DescribeConfigurationOptions", i0)
	r0, _ = returns[0].(*elasticbeanstalk.DescribeConfigurationOptionsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ElasticBeanstalkDouble) DescribeConfigurationOptionsRequest(i0 *elasticbeanstalk.DescribeConfigurationOptionsInput) (r0 *request.Request, r1 *elasticbeanstalk.DescribeConfigurationOptionsOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DescribeConfigurationOptionsRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*elasticbeanstalk.DescribeConfigurationOptionsOutput)
	return
}

func (d *ElasticBeanstalkDouble) DescribeConfigurationOptionsWithContext(i0 context.Context, i1 *elasticbeanstalk.DescribeConfigurationOptionsInput, i2 ...request.Option) (r0 *elasticbeanstalk.DescribeConfigurationOptionsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DescribeConfigurationOptionsWithContext", i0, i1, i2)
	r0, _ = returns[0].(*elasticbeanstalk.DescribeConfigurationOptionsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ElasticBeanstalkDouble) fakeDescribeConfigurationOptionsWithContext(ctx context.Context, in *elasticbeanstalk.DescribeConfigurationOptionsInput, _ ...request.Option) (*elasticbeanstalk.DescribeConfigurationOptionsOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "DescribeConfigurationOptions cancelled", ctx.Err())
	default:
		return d.DescribeConfigurationOptions(in)
	}
}

func (d *ElasticBeanstalkDouble) DescribeConfigurationSettings(i0 *elasticbeanstalk.DescribeConfigurationSettingsInput) (r0 *elasticbeanstalk.DescribeConfigurationSettingsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DescribeConfigurationSettings", i0)
	r0, _ = returns[0].(*elasticbeanstalk.DescribeConfigurationSettingsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ElasticBeanstalkDouble) DescribeConfigurationSettingsRequest(i0 *elasticbeanstalk.DescribeConfigurationSettingsInput) (r0 *request.Request, r1 *elasticbeanstalk.DescribeConfigurationSettingsOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DescribeConfigurationSettingsRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*elasticbeanstalk.DescribeConfigurationSettingsOutput)
	return
}

func (d *ElasticBeanstalkDouble) DescribeConfigurationSettingsWithContext(i0 context.Context, i1 *elasticbeanstalk.DescribeConfigurationSettingsInput, i2 ...request.Option) (r0 *elasticbeanstalk.DescribeConfigurationSettingsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DescribeConfigurationSettingsWithContext", i0, i1, i2)
	r0, _ = returns[0].(*elasticbeanstalk.DescribeConfigurationSettingsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ElasticBeanstalkDouble) fakeDescribeConfigurationSettingsWithContext(ctx context.Context, in *elasticbeanstalk.DescribeConfigurationSettingsInput, _ ...request.Option) (*elasticbeanstalk.DescribeConfigurationSettingsOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "DescribeConfigurationSettings cancelled", ctx.Err())
	default:
		return d.DescribeConfigurationSettings(in)
	}
}

func (d *ElasticBeanstalkDouble) DescribeEnvironmentHealth(i0 *elasticbeanstalk.DescribeEnvironmentHealthInput) (r0 *elasticbeanstalk.DescribeEnvironmentHealthOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DescribeEnvironmentHealth", i0)
	r0, _ = returns[0].(*elasticbeanstalk.DescribeEnvironmentHealthOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ElasticBeanstalkDouble) DescribeEnvironmentHealthRequest(i0 *elasticbeanstalk.DescribeEnvironmentHealthInput) (r0 *request.Request, r1 *elasticbeanstalk.DescribeEnvironmentHealthOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DescribeEnvironmentHealthRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*elasticbeanstalk.DescribeEnvironmentHealthOutput)
	return
}

func (d *ElasticBeanstalkDouble) DescribeEnvironmentHealthWithContext(i0 context.Context, i1 *elasticbeanstalk.DescribeEnvironmentHealthInput, i2 ...request.Option) (r0 *elasticbeanstalk.DescribeEnvironmentHealthOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DescribeEnvironmentHealthWithContext", i0, i1, i2)
	r0, _ = returns[0].(*elasticbeanstalk.DescribeEnvironmentHealthOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ElasticBeanstalkDouble) fakeDescribeEnvironmentHealthWithContext(ctx context.Context, in *elasticbeanstalk.DescribeEnvironmentHealthInput, _ ...request.Option) (*elasticbeanstalk.DescribeEnvironmentHealthOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "DescribeEnvironmentHealth cancelled", ctx.Err())
	default:
		return d.DescribeEnvironmentHealth(in)
	}
}

func (d *ElasticBeanstalkDouble) DescribeEnvironmentManagedActionHistory(i0 *elasticbeanstalk.DescribeEnvironmentManagedActionHistoryInput) (r0 *elasticbeanstalk.DescribeEnvironmentManagedActionHistoryOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DescribeEnvironmentManagedActionHistory", i0)
	r0, _ = returns[0].(*elasticbeanstalk.DescribeEnvironmentManagedActionHistoryOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ElasticBeanstalkDouble) DescribeEnvironmentManagedActionHistoryRequest(i0 *elasticbeanstalk.DescribeEnvironmentManagedActionHistoryInput) (r0 *request.Request, r1 *elasticbeanstalk.DescribeEnvironmentManagedActionHistoryOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DescribeEnvironmentManagedActionHistoryRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*elasticbeanstalk.DescribeEnvironmentManagedActionHistoryOutput)
	return
}

func (d *ElasticBeanstalkDouble) DescribeEnvironmentManagedActionHistoryWithContext(i0 context.Context, i1 *elasticbeanstalk.DescribeEnvironmentManagedActionHistoryInput, i2 ...request.Option) (r0 *elasticbeanstalk.DescribeEnvironmentManagedActionHistoryOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DescribeEnvironmentManagedActionHistoryWithContext", i0, i1, i2)
	r0, _ = returns[0].(*elasticbeanstalk.DescribeEnvironmentManagedActionHistoryOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ElasticBeanstalkDouble) fakeDescribeEnvironmentManagedActionHistoryWithContext(ctx context.Context, in *elasticbeanstalk.DescribeEnvironmentManagedActionHistoryInput, _ ...request.Option) (*elasticbeanstalk.DescribeEnvironmentManagedActionHistoryOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "DescribeEnvironmentManagedActionHistory cancelled", ctx.Err())
	default:
		return d.DescribeEnvironmentManagedActionHistory(in)
	}
}

func (d *ElasticBeanstalkDouble) DescribeEnvironmentManagedActions(i0 *elasticbeanstalk.DescribeEnvironmentManagedActionsInput) (r0 *elasticbeanstalk.DescribeEnvironmentManagedActionsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DescribeEnvironmentManagedActions", i0)
	r0, _ = returns[0].(*elasticbeanstalk.DescribeEnvironmentManagedActionsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ElasticBeanstalkDouble) DescribeEnvironmentManagedActionsRequest(i0 *elasticbeanstalk.DescribeEnvironmentManagedActionsInput) (r0 *request.Request, r1 *elasticbeanstalk.DescribeEnvironmentManagedActionsOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DescribeEnvironmentManagedActionsRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*elasticbeanstalk.DescribeEnvironmentManagedActionsOutput)
	return
}

func (d *ElasticBeanstalkDouble) DescribeEnvironmentManagedActionsWithContext(i0 context.Context, i1 *elasticbeanstalk.DescribeEnvironmentManagedActionsInput, i2 ...request.Option) (r0 *elasticbeanstalk.DescribeEnvironmentManagedActionsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DescribeEnvironmentManagedActionsWithContext", i0, i1, i2)
	r0, _ = returns[0].(*elasticbeanstalk.DescribeEnvironmentManagedActionsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ElasticBeanstalkDouble) fakeDescribeEnvironmentManagedActionsWithContext(ctx context.Context, in *elasticbeanstalk.DescribeEnvironmentManagedActionsInput, _ ...request.Option) (*elasticbeanstalk.DescribeEnvironmentManagedActionsOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "DescribeEnvironmentManagedActions cancelled", ctx.Err())
	default:
		return d.DescribeEnvironmentManagedActions(in)
	}
}

func (d *ElasticBeanstalkDouble) DescribeEnvironmentResources(i0 *elasticbeanstalk.DescribeEnvironmentResourcesInput) (r0 *elasticbeanstalk.DescribeEnvironmentResourcesOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DescribeEnvironmentResources", i0)
	r0, _ = returns[0].(*elasticbeanstalk.DescribeEnvironmentResourcesOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ElasticBeanstalkDouble) DescribeEnvironmentResourcesRequest(i0 *elasticbeanstalk.DescribeEnvironmentResourcesInput) (r0 *request.Request, r1 *elasticbeanstalk.DescribeEnvironmentResourcesOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DescribeEnvironmentResourcesRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*elasticbeanstalk.DescribeEnvironmentResourcesOutput)
	return
}

func (d *ElasticBeanstalkDouble) DescribeEnvironmentResourcesWithContext(i0 context.Context, i1 *elasticbeanstalk.DescribeEnvironmentResourcesInput, i2 ...request.Option) (r0 *elasticbeanstalk.DescribeEnvironmentResourcesOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DescribeEnvironmentResourcesWithContext", i0, i1, i2)
	r0, _ = returns[0].(*elasticbeanstalk.DescribeEnvironmentResourcesOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ElasticBeanstalkDouble) fakeDescribeEnvironmentResourcesWithContext(ctx context.Context, in *elasticbeanstalk.DescribeEnvironmentResourcesInput, _ ...request.Option) (*elasticbeanstalk.DescribeEnvironmentResourcesOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "DescribeEnvironmentResources cancelled", ctx.Err())
	default:
		return d.DescribeEnvironmentResources(in)
	}
}

func (d *ElasticBeanstalkDouble) DescribeEnvironments(i0 *elasticbeanstalk.DescribeEnvironmentsInput) (r0 *elasticbeanstalk.EnvironmentDescriptionsMessage, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DescribeEnvironments", i0)
	r0, _ = returns[0].(*elasticbeanstalk.EnvironmentDescriptionsMessage)
	r1, _ = returns[1].(error)
	return
}

func (d *ElasticBeanstalkDouble) DescribeEnvironmentsRequest(i0 *elasticbeanstalk.DescribeEnvironmentsInput) (r0 *request.Request, r1 *elasticbeanstalk.EnvironmentDescriptionsMessage) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DescribeEnvironmentsRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*elasticbeanstalk.EnvironmentDescriptionsMessage)
	return
}

func (d *ElasticBeanstalkDouble) DescribeEnvironmentsWithContext(i0 context.Context, i1 *elasticbeanstalk.DescribeEnvironmentsInput, i2 ...request.Option) (r0 *elasticbeanstalk.EnvironmentDescriptionsMessage, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DescribeEnvironmentsWithContext", i0, i1, i2)
	r0, _ = returns[0].(*elasticbeanstalk.EnvironmentDescriptionsMessage)
	r1, _ = returns[1].(error)
	return
}

func (d *ElasticBeanstalkDouble) fakeDescribeEnvironmentsWithContext(ctx context.Context, in *elasticbeanstalk.DescribeEnvironmentsInput, _ ...request.Option) (*elasticbeanstalk.EnvironmentDescriptionsMessage, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "DescribeEnvironments cancelled", ctx.Err())
	default:
		return d.DescribeEnvironments(in)
	}
}

func (d *ElasticBeanstalkDouble) DescribeEvents(i0 *elasticbeanstalk.DescribeEventsInput) (r0 *elasticbeanstalk.DescribeEventsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DescribeEvents", i0)
	r0, _ = returns[0].(*elasticbeanstalk.DescribeEventsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ElasticBeanstalkDouble) DescribeEventsPages(i0 *elasticbeanstalk.DescribeEventsInput, i1 func(*elasticbeanstalk.DescribeEventsOutput, bool) bool) (r0 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DescribeEventsPages", i0, i1)
	r0, _ = returns[0].(error)
	return
}

func (d *ElasticBeanstalkDouble) fakeDescribeEventsPages(in *elasticbeanstalk.DescribeEventsInput, pager func(*elasticbeanstalk.DescribeEventsOutput, bool) (shouldContinue bool)) error {
	return d.Paginate("DescribeEvents", paginators, in, pager)
}

func (d *ElasticBeanstalkDouble) DescribeEventsPagesWithContext(i0 context.Context, i1 *elasticbeanstalk.DescribeEventsInput, i2 func(*elasticbeanstalk.DescribeEventsOutput, bool) bool, i3 ...request.Option) (r0 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DescribeEventsPagesWithContext", i0, i1, i2, i3)
	r0, _ = returns[0].(error)
	return
}

func (d *ElasticBeanstalkDouble) fakeDescribeEventsPagesWithContext(ctx context.Context, in *elasticbeanstalk.DescribeEventsInput, pager func(*elasticbeanstalk.DescribeEventsOutput, bool) (shouldContinue bool), options ...request.Option) error {
	return d.PaginateWithContext("DescribeEvents", paginators, ctx, in, pager, options...)
}

func (d *ElasticBeanstalkDouble) DescribeEventsRequest(i0 *elasticbeanstalk.DescribeEventsInput) (r0 *request.Request, r1 *elasticbeanstalk.DescribeEventsOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DescribeEventsRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*elasticbeanstalk.DescribeEventsOutput)
	return
}

func (d *ElasticBeanstalkDouble) DescribeEventsWithContext(i0 context.Context, i1 *elasticbeanstalk.DescribeEventsInput, i2 ...request.Option) (r0 *elasticbeanstalk.DescribeEventsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DescribeEventsWithContext", i0, i1, i2)
	r0, _ = returns[0].(*elasticbeanstalk.DescribeEventsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ElasticBeanstalkDouble) fakeDescribeEventsWithContext(ctx context.Context, in *elasticbeanstalk.DescribeEventsInput, _ ...request.Option) (*elasticbeanstalk.DescribeEventsOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "DescribeEvents cancelled", ctx.Err())
	default:
		return d.DescribeEvents(in)
	}
}

func (d *ElasticBeanstalkDouble) DescribeInstancesHealth(i0 *elasticbeanstalk.DescribeInstancesHealthInput) (r0 *elasticbeanstalk.DescribeInstancesHealthOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DescribeInstancesHealth", i0)
	r0, _ = returns[0].(*elasticbeanstalk.DescribeInstancesHealthOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ElasticBeanstalkDouble) DescribeInstancesHealthRequest(i0 *elasticbeanstalk.DescribeInstancesHealthInput) (r0 *request.Request, r1 *elasticbeanstalk.DescribeInstancesHealthOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DescribeInstancesHealthRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*elasticbeanstalk.DescribeInstancesHealthOutput)
	return
}

func (d *ElasticBeanstalkDouble) DescribeInstancesHealthWithContext(i0 context.Context, i1 *elasticbeanstalk.DescribeInstancesHealthInput, i2 ...request.Option) (r0 *elasticbeanstalk.DescribeInstancesHealthOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DescribeInstancesHealthWithContext", i0, i1, i2)
	r0, _ = returns[0].(*elasticbeanstalk.DescribeInstancesHealthOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ElasticBeanstalkDouble) fakeDescribeInstancesHealthWithContext(ctx context.Context, in *elasticbeanstalk.DescribeInstancesHealthInput, _ ...request.Option) (*elasticbeanstalk.DescribeInstancesHealthOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "DescribeInstancesHealth cancelled", ctx.Err())
	default:
		return d.DescribeInstancesHealth(in)
	}
}

func (d *ElasticBeanstalkDouble) DescribePlatformVersion(i0 *elasticbeanstalk.DescribePlatformVersionInput) (r0 *elasticbeanstalk.DescribePlatformVersionOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DescribePlatformVersion", i0)
	r0, _ = returns[0].(*elasticbeanstalk.DescribePlatformVersionOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ElasticBeanstalkDouble) DescribePlatformVersionRequest(i0 *elasticbeanstalk.DescribePlatformVersionInput) (r0 *request.Request, r1 *elasticbeanstalk.DescribePlatformVersionOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DescribePlatformVersionRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*elasticbeanstalk.DescribePlatformVersionOutput)
	return
}

func (d *ElasticBeanstalkDouble) DescribePlatformVersionWithContext(i0 context.Context, i1 *elasticbeanstalk.DescribePlatformVersionInput, i2 ...request.Option) (r0 *elasticbeanstalk.DescribePlatformVersionOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DescribePlatformVersionWithContext", i0, i1, i2)
	r0, _ = returns[0].(*elasticbeanstalk.DescribePlatformVersionOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ElasticBeanstalkDouble) fakeDescribePlatformVersionWithContext(ctx context.Context, in *elasticbeanstalk.DescribePlatformVersionInput, _ ...request.Option) (*elasticbeanstalk.DescribePlatformVersionOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "DescribePlatformVersion cancelled", ctx.Err())
	default:
		return d.DescribePlatformVersion(in)
	}
}

func (d *ElasticBeanstalkDouble) ListAvailableSolutionStacks(i0 *elasticbeanstalk.ListAvailableSolutionStacksInput) (r0 *elasticbeanstalk.ListAvailableSolutionStacksOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListAvailableSolutionStacks", i0)
	r0, _ = returns[0].(*elasticbeanstalk.ListAvailableSolutionStacksOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ElasticBeanstalkDouble) ListAvailableSolutionStacksRequest(i0 *elasticbeanstalk.ListAvailableSolutionStacksInput) (r0 *request.Request, r1 *elasticbeanstalk.ListAvailableSolutionStacksOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListAvailableSolutionStacksRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*elasticbeanstalk.ListAvailableSolutionStacksOutput)
	return
}

func (d *ElasticBeanstalkDouble) ListAvailableSolutionStacksWithContext(i0 context.Context, i1 *elasticbeanstalk.ListAvailableSolutionStacksInput, i2 ...request.Option) (r0 *elasticbeanstalk.ListAvailableSolutionStacksOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListAvailableSolutionStacksWithContext", i0, i1, i2)
	r0, _ = returns[0].(*elasticbeanstalk.ListAvailableSolutionStacksOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ElasticBeanstalkDouble) fakeListAvailableSolutionStacksWithContext(ctx context.Context, in *elasticbeanstalk.ListAvailableSolutionStacksInput, _ ...request.Option) (*elasticbeanstalk.ListAvailableSolutionStacksOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "ListAvailableSolutionStacks cancelled", ctx.Err())
	default:
		return d.ListAvailableSolutionStacks(in)
	}
}

func (d *ElasticBeanstalkDouble) ListPlatformVersions(i0 *elasticbeanstalk.ListPlatformVersionsInput) (r0 *elasticbeanstalk.ListPlatformVersionsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListPlatformVersions", i0)
	r0, _ = returns[0].(*elasticbeanstalk.ListPlatformVersionsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ElasticBeanstalkDouble) ListPlatformVersionsRequest(i0 *elasticbeanstalk.ListPlatformVersionsInput) (r0 *request.Request, r1 *elasticbeanstalk.ListPlatformVersionsOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListPlatformVersionsRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*elasticbeanstalk.ListPlatformVersionsOutput)
	return
}

func (d *ElasticBeanstalkDouble) ListPlatformVersionsWithContext(i0 context.Context, i1 *elasticbeanstalk.ListPlatformVersionsInput, i2 ...request.Option) (r0 *elasticbeanstalk.ListPlatformVersionsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListPlatformVersionsWithContext", i0, i1, i2)
	r0, _ = returns[0].(*elasticbeanstalk.ListPlatformVersionsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ElasticBeanstalkDouble) fakeListPlatformVersionsWithContext(ctx context.Context, in *elasticbeanstalk.ListPlatformVersionsInput, _ ...request.Option) (*elasticbeanstalk.ListPlatformVersionsOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "ListPlatformVersions cancelled", ctx.Err())
	default:
		return d.ListPlatformVersions(in)
	}
}

func (d *ElasticBeanstalkDouble) ListTagsForResource(i0 *elasticbeanstalk.ListTagsForResourceInput) (r0 *elasticbeanstalk.ListTagsForResourceOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListTagsForResource", i0)
	r0, _ = returns[0].(*elasticbeanstalk.ListTagsForResourceOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ElasticBeanstalkDouble) ListTagsForResourceRequest(i0 *elasticbeanstalk.ListTagsForResourceInput) (r0 *request.Request, r1 *elasticbeanstalk.ListTagsForResourceOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListTagsForResourceRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*elasticbeanstalk.ListTagsForResourceOutput)
	return
}

func (d *ElasticBeanstalkDouble) ListTagsForResourceWithContext(i0 context.Context, i1 *elasticbeanstalk.ListTagsForResourceInput, i2 ...request.Option) (r0 *elasticbeanstalk.ListTagsForResourceOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListTagsForResourceWithContext", i0, i1, i2)
	r0, _ = returns[0].(*elasticbeanstalk.ListTagsForResourceOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ElasticBeanstalkDouble) fakeListTagsForResourceWithContext(ctx context.Context, in *elasticbeanstalk.ListTagsForResourceInput, _ ...request.Option) (*elasticbeanstalk.ListTagsForResourceOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "ListTagsForResource cancelled", ctx.Err())
	default:
		return d.ListTagsForResource(in)
	}
}

func (d *ElasticBeanstalkDouble) RebuildEnvironment(i0 *elasticbeanstalk.RebuildEnvironmentInput) (r0 *elasticbeanstalk.RebuildEnvironmentOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("RebuildEnvironment", i0)
	r0, _ = returns[0].(*elasticbeanstalk.RebuildEnvironmentOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ElasticBeanstalkDouble) RebuildEnvironmentRequest(i0 *elasticbeanstalk.RebuildEnvironmentInput) (r0 *request.Request, r1 *elasticbeanstalk.RebuildEnvironmentOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("RebuildEnvironmentRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*elasticbeanstalk.RebuildEnvironmentOutput)
	return
}

func (d *ElasticBeanstalkDouble) RebuildEnvironmentWithContext(i0 context.Context, i1 *elasticbeanstalk.RebuildEnvironmentInput, i2 ...request.Option) (r0 *elasticbeanstalk.RebuildEnvironmentOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("RebuildEnvironmentWithContext", i0, i1, i2)
	r0, _ = returns[0].(*elasticbeanstalk.RebuildEnvironmentOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ElasticBeanstalkDouble) fakeRebuildEnvironmentWithContext(ctx context.Context, in *elasticbeanstalk.RebuildEnvironmentInput, _ ...request.Option) (*elasticbeanstalk.RebuildEnvironmentOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "RebuildEnvironment cancelled", ctx.Err())
	default:
		return d.RebuildEnvironment(in)
	}
}

func (d *ElasticBeanstalkDouble) RequestEnvironmentInfo(i0 *elasticbeanstalk.RequestEnvironmentInfoInput) (r0 *elasticbeanstalk.RequestEnvironmentInfoOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("RequestEnvironmentInfo", i0)
	r0, _ = returns[0].(*elasticbeanstalk.RequestEnvironmentInfoOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ElasticBeanstalkDouble) RequestEnvironmentInfoRequest(i0 *elasticbeanstalk.RequestEnvironmentInfoInput) (r0 *request.Request, r1 *elasticbeanstalk.RequestEnvironmentInfoOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("RequestEnvironmentInfoRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*elasticbeanstalk.RequestEnvironmentInfoOutput)
	return
}

func (d *ElasticBeanstalkDouble) RequestEnvironmentInfoWithContext(i0 context.Context, i1 *elasticbeanstalk.RequestEnvironmentInfoInput, i2 ...request.Option) (r0 *elasticbeanstalk.RequestEnvironmentInfoOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("RequestEnvironmentInfoWithContext", i0, i1, i2)
	r0, _ = returns[0].(*elasticbeanstalk.RequestEnvironmentInfoOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ElasticBeanstalkDouble) fakeRequestEnvironmentInfoWithContext(ctx context.Context, in *elasticbeanstalk.RequestEnvironmentInfoInput, _ ...request.Option) (*elasticbeanstalk.RequestEnvironmentInfoOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "RequestEnvironmentInfo cancelled", ctx.Err())
	default:
		return d.RequestEnvironmentInfo(in)
	}
}

func (d *ElasticBeanstalkDouble) RestartAppServer(i0 *elasticbeanstalk.RestartAppServerInput) (r0 *elasticbeanstalk.RestartAppServerOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("RestartAppServer", i0)
	r0, _ = returns[0].(*elasticbeanstalk.RestartAppServerOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ElasticBeanstalkDouble) RestartAppServerRequest(i0 *elasticbeanstalk.RestartAppServerInput) (r0 *request.Request, r1 *elasticbeanstalk.RestartAppServerOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("RestartAppServerRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*elasticbeanstalk.RestartAppServerOutput)
	return
}

func (d *ElasticBeanstalkDouble) RestartAppServerWithContext(i0 context.Context, i1 *elasticbeanstalk.RestartAppServerInput, i2 ...request.Option) (r0 *elasticbeanstalk.RestartAppServerOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("RestartAppServerWithContext", i0, i1, i2)
	r0, _ = returns[0].(*elasticbeanstalk.RestartAppServerOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ElasticBeanstalkDouble) fakeRestartAppServerWithContext(ctx context.Context, in *elasticbeanstalk.RestartAppServerInput, _ ...request.Option) (*elasticbeanstalk.RestartAppServerOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "RestartAppServer cancelled", ctx.Err())
	default:
		return d.RestartAppServer(in)
	}
}

func (d *ElasticBeanstalkDouble) RetrieveEnvironmentInfo(i0 *elasticbeanstalk.RetrieveEnvironmentInfoInput) (r0 *elasticbeanstalk.RetrieveEnvironmentInfoOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("RetrieveEnvironmentInfo", i0)
	r0, _ = returns[0].(*elasticbeanstalk.RetrieveEnvironmentInfoOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ElasticBeanstalkDouble) RetrieveEnvironmentInfoRequest(i0 *elasticbeanstalk.RetrieveEnvironmentInfoInput) (r0 *request.Request, r1 *elasticbeanstalk.RetrieveEnvironmentInfoOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("RetrieveEnvironmentInfoRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*elasticbeanstalk.RetrieveEnvironmentInfoOutput)
	return
}

func (d *ElasticBeanstalkDouble) RetrieveEnvironmentInfoWithContext(i0 context.Context, i1 *elasticbeanstalk.RetrieveEnvironmentInfoInput, i2 ...request.Option) (r0 *elasticbeanstalk.RetrieveEnvironmentInfoOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("RetrieveEnvironmentInfoWithContext", i0, i1, i2)
	r0, _ = returns[0].(*elasticbeanstalk.RetrieveEnvironmentInfoOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ElasticBeanstalkDouble) fakeRetrieveEnvironmentInfoWithContext(ctx context.Context, in *elasticbeanstalk.RetrieveEnvironmentInfoInput, _ ...request.Option) (*elasticbeanstalk.RetrieveEnvironmentInfoOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "RetrieveEnvironmentInfo cancelled", ctx.Err())
	default:
		return d.RetrieveEnvironmentInfo(in)
	}
}

func (d *ElasticBeanstalkDouble) SwapEnvironmentCNAMEs(i0 *elasticbeanstalk.SwapEnvironmentCNAMEsInput) (r0 *elasticbeanstalk.SwapEnvironmentCNAMEsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("SwapEnvironmentCNAMEs", i0)
	r0, _ = returns[0].(*elasticbeanstalk.SwapEnvironmentCNAMEsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ElasticBeanstalkDouble) SwapEnvironmentCNAMEsRequest(i0 *elasticbeanstalk.SwapEnvironmentCNAMEsInput) (r0 *request.Request, r1 *elasticbeanstalk.SwapEnvironmentCNAMEsOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("SwapEnvironmentCNAMEsRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*elasticbeanstalk.SwapEnvironmentCNAMEsOutput)
	return
}

func (d *ElasticBeanstalkDouble) SwapEnvironmentCNAMEsWithContext(i0 context.Context, i1 *elasticbeanstalk.SwapEnvironmentCNAMEsInput, i2 ...request.Option) (r0 *elasticbeanstalk.SwapEnvironmentCNAMEsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("SwapEnvironmentCNAMEsWithContext", i0, i1, i2)
	r0, _ = returns[0].(*elasticbeanstalk.SwapEnvironmentCNAMEsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ElasticBeanstalkDouble) fakeSwapEnvironmentCNAMEsWithContext(ctx context.Context, in *elasticbeanstalk.SwapEnvironmentCNAMEsInput, _ ...request.Option) (*elasticbeanstalk.SwapEnvironmentCNAMEsOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "SwapEnvironmentCNAMEs cancelled", ctx.Err())
	default:
		return d.SwapEnvironmentCNAMEs(in)
	}
}

func (d *ElasticBeanstalkDouble) TerminateEnvironment(i0 *elasticbeanstalk.TerminateEnvironmentInput) (r0 *elasticbeanstalk.EnvironmentDescription, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("TerminateEnvironment", i0)
	r0, _ = returns[0].(*elasticbeanstalk.EnvironmentDescription)
	r1, _ = returns[1].(error)
	return
}

func (d *ElasticBeanstalkDouble) TerminateEnvironmentRequest(i0 *elasticbeanstalk.TerminateEnvironmentInput) (r0 *request.Request, r1 *elasticbeanstalk.EnvironmentDescription) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("TerminateEnvironmentRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*elasticbeanstalk.EnvironmentDescription)
	return
}

func (d *ElasticBeanstalkDouble) TerminateEnvironmentWithContext(i0 context.Context, i1 *elasticbeanstalk.TerminateEnvironmentInput, i2 ...request.Option) (r0 *elasticbeanstalk.EnvironmentDescription, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("TerminateEnvironmentWithContext", i0, i1, i2)
	r0, _ = returns[0].(*elasticbeanstalk.EnvironmentDescription)
	r1, _ = returns[1].(error)
	return
}

func (d *ElasticBeanstalkDouble) fakeTerminateEnvironmentWithContext(ctx context.Context, in *elasticbeanstalk.TerminateEnvironmentInput, _ ...request.Option) (*elasticbeanstalk.EnvironmentDescription, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "TerminateEnvironment cancelled", ctx.Err())
	default:
		return d.TerminateEnvironment(in)
	}
}

func (d *ElasticBeanstalkDouble) UpdateApplication(i0 *elasticbeanstalk.UpdateApplicationInput) (r0 *elasticbeanstalk.ApplicationDescriptionMessage, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UpdateApplication", i0)
	r0, _ = returns[0].(*elasticbeanstalk.ApplicationDescriptionMessage)
	r1, _ = returns[1].(error)
	return
}

func (d *ElasticBeanstalkDouble) UpdateApplicationRequest(i0 *elasticbeanstalk.UpdateApplicationInput) (r0 *request.Request, r1 *elasticbeanstalk.ApplicationDescriptionMessage) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UpdateApplicationRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*elasticbeanstalk.ApplicationDescriptionMessage)
	return
}

func (d *ElasticBeanstalkDouble) UpdateApplicationResourceLifecycle(i0 *elasticbeanstalk.UpdateApplicationResourceLifecycleInput) (r0 *elasticbeanstalk.UpdateApplicationResourceLifecycleOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UpdateApplicationResourceLifecycle", i0)
	r0, _ = returns[0].(*elasticbeanstalk.UpdateApplicationResourceLifecycleOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ElasticBeanstalkDouble) UpdateApplicationResourceLifecycleRequest(i0 *elasticbeanstalk.UpdateApplicationResourceLifecycleInput) (r0 *request.Request, r1 *elasticbeanstalk.UpdateApplicationResourceLifecycleOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UpdateApplicationResourceLifecycleRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*elasticbeanstalk.UpdateApplicationResourceLifecycleOutput)
	return
}

func (d *ElasticBeanstalkDouble) UpdateApplicationResourceLifecycleWithContext(i0 context.Context, i1 *elasticbeanstalk.UpdateApplicationResourceLifecycleInput, i2 ...request.Option) (r0 *elasticbeanstalk.UpdateApplicationResourceLifecycleOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UpdateApplicationResourceLifecycleWithContext", i0, i1, i2)
	r0, _ = returns[0].(*elasticbeanstalk.UpdateApplicationResourceLifecycleOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ElasticBeanstalkDouble) fakeUpdateApplicationResourceLifecycleWithContext(ctx context.Context, in *elasticbeanstalk.UpdateApplicationResourceLifecycleInput, _ ...request.Option) (*elasticbeanstalk.UpdateApplicationResourceLifecycleOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "UpdateApplicationResourceLifecycle cancelled", ctx.Err())
	default:
		return d.UpdateApplicationResourceLifecycle(in)
	}
}

func (d *ElasticBeanstalkDouble) UpdateApplicationVersion(i0 *elasticbeanstalk.UpdateApplicationVersionInput) (r0 *elasticbeanstalk.ApplicationVersionDescriptionMessage, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UpdateApplicationVersion", i0)
	r0, _ = returns[0].(*elasticbeanstalk.ApplicationVersionDescriptionMessage)
	r1, _ = returns[1].(error)
	return
}

func (d *ElasticBeanstalkDouble) UpdateApplicationVersionRequest(i0 *elasticbeanstalk.UpdateApplicationVersionInput) (r0 *request.Request, r1 *elasticbeanstalk.ApplicationVersionDescriptionMessage) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UpdateApplicationVersionRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*elasticbeanstalk.ApplicationVersionDescriptionMessage)
	return
}

func (d *ElasticBeanstalkDouble) UpdateApplicationVersionWithContext(i0 context.Context, i1 *elasticbeanstalk.UpdateApplicationVersionInput, i2 ...request.Option) (r0 *elasticbeanstalk.ApplicationVersionDescriptionMessage, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UpdateApplicationVersionWithContext", i0, i1, i2)
	r0, _ = returns[0].(*elasticbeanstalk.ApplicationVersionDescriptionMessage)
	r1, _ = returns[1].(error)
	return
}

func (d *ElasticBeanstalkDouble) fakeUpdateApplicationVersionWithContext(ctx context.Context, in *elasticbeanstalk.UpdateApplicationVersionInput, _ ...request.Option) (*elasticbeanstalk.ApplicationVersionDescriptionMessage, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "UpdateApplicationVersion cancelled", ctx.Err())
	default:
		return d.UpdateApplicationVersion(in)
	}
}

func (d *ElasticBeanstalkDouble) UpdateApplicationWithContext(i0 context.Context, i1 *elasticbeanstalk.UpdateApplicationInput, i2 ...request.Option) (r0 *elasticbeanstalk.ApplicationDescriptionMessage, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UpdateApplicationWithContext", i0, i1, i2)
	r0, _ = returns[0].(*elasticbeanstalk.ApplicationDescriptionMessage)
	r1, _ = returns[1].(error)
	return
}

func (d *ElasticBeanstalkDouble) fakeUpdateApplicationWithContext(ctx context.Context, in *elasticbeanstalk.UpdateApplicationInput, _ ...request.Option) (*elasticbeanstalk.ApplicationDescriptionMessage, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "UpdateApplication cancelled", ctx.Err())
	default:
		return d.UpdateApplication(in)
	}
}

func (d *ElasticBeanstalkDouble) UpdateConfigurationTemplate(i0 *elasticbeanstalk.UpdateConfigurationTemplateInput) (r0 *elasticbeanstalk.ConfigurationSettingsDescription, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UpdateConfigurationTemplate", i0)
	r0, _ = returns[0].(*elasticbeanstalk.ConfigurationSettingsDescription)
	r1, _ = returns[1].(error)
	return
}

func (d *ElasticBeanstalkDouble) UpdateConfigurationTemplateRequest(i0 *elasticbeanstalk.UpdateConfigurationTemplateInput) (r0 *request.Request, r1 *elasticbeanstalk.ConfigurationSettingsDescription) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UpdateConfigurationTemplateRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*elasticbeanstalk.ConfigurationSettingsDescription)
	return
}

func (d *ElasticBeanstalkDouble) UpdateConfigurationTemplateWithContext(i0 context.Context, i1 *elasticbeanstalk.UpdateConfigurationTemplateInput, i2 ...request.Option) (r0 *elasticbeanstalk.ConfigurationSettingsDescription, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UpdateConfigurationTemplateWithContext", i0, i1, i2)
	r0, _ = returns[0].(*elasticbeanstalk.ConfigurationSettingsDescription)
	r1, _ = returns[1].(error)
	return
}

func (d *ElasticBeanstalkDouble) fakeUpdateConfigurationTemplateWithContext(ctx context.Context, in *elasticbeanstalk.UpdateConfigurationTemplateInput, _ ...request.Option) (*elasticbeanstalk.ConfigurationSettingsDescription, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "UpdateConfigurationTemplate cancelled", ctx.Err())
	default:
		return d.UpdateConfigurationTemplate(in)
	}
}

func (d *ElasticBeanstalkDouble) UpdateEnvironment(i0 *elasticbeanstalk.UpdateEnvironmentInput) (r0 *elasticbeanstalk.EnvironmentDescription, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UpdateEnvironment", i0)
	r0, _ = returns[0].(*elasticbeanstalk.EnvironmentDescription)
	r1, _ = returns[1].(error)
	return
}

func (d *ElasticBeanstalkDouble) UpdateEnvironmentRequest(i0 *elasticbeanstalk.UpdateEnvironmentInput) (r0 *request.Request, r1 *elasticbeanstalk.EnvironmentDescription) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UpdateEnvironmentRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*elasticbeanstalk.EnvironmentDescription)
	return
}

func (d *ElasticBeanstalkDouble) UpdateEnvironmentWithContext(i0 context.Context, i1 *elasticbeanstalk.UpdateEnvironmentInput, i2 ...request.Option) (r0 *elasticbeanstalk.EnvironmentDescription, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UpdateEnvironmentWithContext", i0, i1, i2)
	r0, _ = returns[0].(*elasticbeanstalk.EnvironmentDescription)
	r1, _ = returns[1].(error)
	return
}

func (d *ElasticBeanstalkDouble) fakeUpdateEnvironmentWithContext(ctx context.Context, in *elasticbeanstalk.UpdateEnvironmentInput, _ ...request.Option) (*elasticbeanstalk.EnvironmentDescription, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "UpdateEnvironment cancelled", ctx.Err())
	default:
		return d.UpdateEnvironment(in)
	}
}

func (d *ElasticBeanstalkDouble) UpdateTagsForResource(i0 *elasticbeanstalk.UpdateTagsForResourceInput) (r0 *elasticbeanstalk.UpdateTagsForResourceOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UpdateTagsForResource", i0)
	r0, _ = returns[0].(*elasticbeanstalk.UpdateTagsForResourceOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ElasticBeanstalkDouble) UpdateTagsForResourceRequest(i0 *elasticbeanstalk.UpdateTagsForResourceInput) (r0 *request.Request, r1 *elasticbeanstalk.UpdateTagsForResourceOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UpdateTagsForResourceRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*elasticbeanstalk.UpdateTagsForResourceOutput)
	return
}

func (d *ElasticBeanstalkDouble) UpdateTagsForResourceWithContext(i0 context.Context, i1 *elasticbeanstalk.UpdateTagsForResourceInput, i2 ...request.Option) (r0 *elasticbeanstalk.UpdateTagsForResourceOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UpdateTagsForResourceWithContext", i0, i1, i2)
	r0, _ = returns[0].(*elasticbeanstalk.UpdateTagsForResourceOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ElasticBeanstalkDouble) fakeUpdateTagsForResourceWithContext(ctx context.Context, in *elasticbeanstalk.UpdateTagsForResourceInput, _ ...request.Option) (*elasticbeanstalk.UpdateTagsForResourceOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "UpdateTagsForResource cancelled", ctx.Err())
	default:
		return d.UpdateTagsForResource(in)
	}
}

func (d *ElasticBeanstalkDouble) ValidateConfigurationSettings(i0 *elasticbeanstalk.ValidateConfigurationSettingsInput) (r0 *elasticbeanstalk.ValidateConfigurationSettingsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ValidateConfigurationSettings", i0)
	r0, _ = returns[0].(*elasticbeanstalk.ValidateConfigurationSettingsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ElasticBeanstalkDouble) ValidateConfigurationSettingsRequest(i0 *elasticbeanstalk.ValidateConfigurationSettingsInput) (r0 *request.Request, r1 *elasticbeanstalk.ValidateConfigurationSettingsOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ValidateConfigurationSettingsRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*elasticbeanstalk.ValidateConfigurationSettingsOutput)
	return
}

func (d *ElasticBeanstalkDouble) ValidateConfigurationSettingsWithContext(i0 context.Context, i1 *elasticbeanstalk.ValidateConfigurationSettingsInput, i2 ...request.Option) (r0 *elasticbeanstalk.ValidateConfigurationSettingsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ValidateConfigurationSettingsWithContext", i0, i1, i2)
	r0, _ = returns[0].(*elasticbeanstalk.ValidateConfigurationSettingsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ElasticBeanstalkDouble) fakeValidateConfigurationSettingsWithContext(ctx context.Context, in *elasticbeanstalk.ValidateConfigurationSettingsInput, _ ...request.Option) (*elasticbeanstalk.ValidateConfigurationSettingsOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "ValidateConfigurationSettings cancelled", ctx.Err())
	default:
		return d.ValidateConfigurationSettings(in)
	}
}
