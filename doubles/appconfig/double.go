// Code generated by go doublegen; DO NOT EDIT.
// This file was generated at 2020-02-14T22:11:11+11:00

// Package appconfigdouble provides a TestDouble implementation of appconfigiface.AppConfigAPI
package appconfigdouble

import (
	"context"

	"github.com/aws/aws-sdk-go/aws/awserr"
	"github.com/aws/aws-sdk-go/aws/request"
	"github.com/aws/aws-sdk-go/service/appconfig"
	"github.com/aws/aws-sdk-go/service/appconfig/appconfigiface"
	"github.com/lwoggardner/awsdouble"
	"github.com/lwoggardner/godouble/godouble"
)

// AppConfigDouble is TestDouble for appconfigiface.AppConfigAPI
type AppConfigDouble struct {
	appconfigiface.AppConfigAPI
	*awsdouble.AWSTestDouble
}

// Constructor for AppConfigDouble
// Default configuration will ensure
//   * API operations not explicitly stubbed will return an empty output struct pointer, and nil error.
//     To simulate long polling, "Poll" operations will return these values after a random delay of up to 100ms.
//   * WithContext methods implement a 'Fake' method that returns a cancellation error if the context is cancelled
//      before the method is called.
//   * Pages and PagesWithContext methods similarly implement a 'Fake' method that paginates over the underlying method.
//
//    This allows tests to only stub the simple api methods and be generally unconcerned whether the SUT is using the
//      Context or Pagination forms of the API.
//
func NewDouble(t godouble.T, configurators ...func(*awsdouble.AWSTestDouble)) *AppConfigDouble {
	result := &AppConfigDouble{}

	configurators = append([]func(configurator *awsdouble.AWSTestDouble){func(d *awsdouble.AWSTestDouble) {
		d.SetDefaultCall(result.defaultMethodCall)
		d.SetDefaultReturnValues(result.defaultReturnValues)
	}}, configurators...)

	result.AWSTestDouble = awsdouble.NewDouble(t, (*appconfigiface.AppConfigAPI)(nil), configurators...)
	return result
}

func (d *AppConfigDouble) defaultReturnValues(m godouble.Method) godouble.ReturnValues {
	return d.DefaultReturnValues(m)
}

func (d *AppConfigDouble) defaultMethodCall(m godouble.Method) godouble.MethodCall {
	switch m.Reflect().Name {

	case "CreateApplicationWithContext":
		return m.Fake(d.fakeCreateApplicationWithContext)

	case "CreateConfigurationProfileWithContext":
		return m.Fake(d.fakeCreateConfigurationProfileWithContext)

	case "CreateDeploymentStrategyWithContext":
		return m.Fake(d.fakeCreateDeploymentStrategyWithContext)

	case "CreateEnvironmentWithContext":
		return m.Fake(d.fakeCreateEnvironmentWithContext)

	case "DeleteApplicationWithContext":
		return m.Fake(d.fakeDeleteApplicationWithContext)

	case "DeleteConfigurationProfileWithContext":
		return m.Fake(d.fakeDeleteConfigurationProfileWithContext)

	case "DeleteDeploymentStrategyWithContext":
		return m.Fake(d.fakeDeleteDeploymentStrategyWithContext)

	case "DeleteEnvironmentWithContext":
		return m.Fake(d.fakeDeleteEnvironmentWithContext)

	case "GetApplicationWithContext":
		return m.Fake(d.fakeGetApplicationWithContext)

	case "GetConfigurationProfileWithContext":
		return m.Fake(d.fakeGetConfigurationProfileWithContext)

	case "GetConfigurationWithContext":
		return m.Fake(d.fakeGetConfigurationWithContext)

	case "GetDeploymentStrategyWithContext":
		return m.Fake(d.fakeGetDeploymentStrategyWithContext)

	case "GetDeploymentWithContext":
		return m.Fake(d.fakeGetDeploymentWithContext)

	case "GetEnvironmentWithContext":
		return m.Fake(d.fakeGetEnvironmentWithContext)

	case "ListApplicationsPages":
		return m.Fake(d.fakeListApplicationsPages)

	case "ListApplicationsPagesWithContext":
		return m.Fake(d.fakeListApplicationsPagesWithContext)

	case "ListApplicationsWithContext":
		return m.Fake(d.fakeListApplicationsWithContext)

	case "ListConfigurationProfilesPages":
		return m.Fake(d.fakeListConfigurationProfilesPages)

	case "ListConfigurationProfilesPagesWithContext":
		return m.Fake(d.fakeListConfigurationProfilesPagesWithContext)

	case "ListConfigurationProfilesWithContext":
		return m.Fake(d.fakeListConfigurationProfilesWithContext)

	case "ListDeploymentStrategiesPages":
		return m.Fake(d.fakeListDeploymentStrategiesPages)

	case "ListDeploymentStrategiesPagesWithContext":
		return m.Fake(d.fakeListDeploymentStrategiesPagesWithContext)

	case "ListDeploymentStrategiesWithContext":
		return m.Fake(d.fakeListDeploymentStrategiesWithContext)

	case "ListDeploymentsPages":
		return m.Fake(d.fakeListDeploymentsPages)

	case "ListDeploymentsPagesWithContext":
		return m.Fake(d.fakeListDeploymentsPagesWithContext)

	case "ListDeploymentsWithContext":
		return m.Fake(d.fakeListDeploymentsWithContext)

	case "ListEnvironmentsPages":
		return m.Fake(d.fakeListEnvironmentsPages)

	case "ListEnvironmentsPagesWithContext":
		return m.Fake(d.fakeListEnvironmentsPagesWithContext)

	case "ListEnvironmentsWithContext":
		return m.Fake(d.fakeListEnvironmentsWithContext)

	case "ListTagsForResourceWithContext":
		return m.Fake(d.fakeListTagsForResourceWithContext)

	case "StartDeploymentWithContext":
		return m.Fake(d.fakeStartDeploymentWithContext)

	case "StopDeploymentWithContext":
		return m.Fake(d.fakeStopDeploymentWithContext)

	case "TagResourceWithContext":
		return m.Fake(d.fakeTagResourceWithContext)

	case "UntagResourceWithContext":
		return m.Fake(d.fakeUntagResourceWithContext)

	case "UpdateApplicationWithContext":
		return m.Fake(d.fakeUpdateApplicationWithContext)

	case "UpdateConfigurationProfileWithContext":
		return m.Fake(d.fakeUpdateConfigurationProfileWithContext)

	case "UpdateDeploymentStrategyWithContext":
		return m.Fake(d.fakeUpdateDeploymentStrategyWithContext)

	case "UpdateEnvironmentWithContext":
		return m.Fake(d.fakeUpdateEnvironmentWithContext)

	case "ValidateConfigurationWithContext":
		return m.Fake(d.fakeValidateConfigurationWithContext)

	default:
		return nil
	}
}

func (d *AppConfigDouble) CreateApplication(i0 *appconfig.CreateApplicationInput) (r0 *appconfig.CreateApplicationOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreateApplication", i0)
	r0, _ = returns[0].(*appconfig.CreateApplicationOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *AppConfigDouble) CreateApplicationRequest(i0 *appconfig.CreateApplicationInput) (r0 *request.Request, r1 *appconfig.CreateApplicationOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreateApplicationRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*appconfig.CreateApplicationOutput)
	return
}

func (d *AppConfigDouble) CreateApplicationWithContext(i0 context.Context, i1 *appconfig.CreateApplicationInput, i2 ...request.Option) (r0 *appconfig.CreateApplicationOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreateApplicationWithContext", i0, i1, i2)
	r0, _ = returns[0].(*appconfig.CreateApplicationOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *AppConfigDouble) fakeCreateApplicationWithContext(ctx context.Context, in *appconfig.CreateApplicationInput, _ ...request.Option) (*appconfig.CreateApplicationOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "CreateApplication cancelled", ctx.Err())
	default:
		return d.CreateApplication(in)
	}
}

func (d *AppConfigDouble) CreateConfigurationProfile(i0 *appconfig.CreateConfigurationProfileInput) (r0 *appconfig.CreateConfigurationProfileOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreateConfigurationProfile", i0)
	r0, _ = returns[0].(*appconfig.CreateConfigurationProfileOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *AppConfigDouble) CreateConfigurationProfileRequest(i0 *appconfig.CreateConfigurationProfileInput) (r0 *request.Request, r1 *appconfig.CreateConfigurationProfileOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreateConfigurationProfileRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*appconfig.CreateConfigurationProfileOutput)
	return
}

func (d *AppConfigDouble) CreateConfigurationProfileWithContext(i0 context.Context, i1 *appconfig.CreateConfigurationProfileInput, i2 ...request.Option) (r0 *appconfig.CreateConfigurationProfileOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreateConfigurationProfileWithContext", i0, i1, i2)
	r0, _ = returns[0].(*appconfig.CreateConfigurationProfileOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *AppConfigDouble) fakeCreateConfigurationProfileWithContext(ctx context.Context, in *appconfig.CreateConfigurationProfileInput, _ ...request.Option) (*appconfig.CreateConfigurationProfileOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "CreateConfigurationProfile cancelled", ctx.Err())
	default:
		return d.CreateConfigurationProfile(in)
	}
}

func (d *AppConfigDouble) CreateDeploymentStrategy(i0 *appconfig.CreateDeploymentStrategyInput) (r0 *appconfig.CreateDeploymentStrategyOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreateDeploymentStrategy", i0)
	r0, _ = returns[0].(*appconfig.CreateDeploymentStrategyOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *AppConfigDouble) CreateDeploymentStrategyRequest(i0 *appconfig.CreateDeploymentStrategyInput) (r0 *request.Request, r1 *appconfig.CreateDeploymentStrategyOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreateDeploymentStrategyRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*appconfig.CreateDeploymentStrategyOutput)
	return
}

func (d *AppConfigDouble) CreateDeploymentStrategyWithContext(i0 context.Context, i1 *appconfig.CreateDeploymentStrategyInput, i2 ...request.Option) (r0 *appconfig.CreateDeploymentStrategyOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreateDeploymentStrategyWithContext", i0, i1, i2)
	r0, _ = returns[0].(*appconfig.CreateDeploymentStrategyOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *AppConfigDouble) fakeCreateDeploymentStrategyWithContext(ctx context.Context, in *appconfig.CreateDeploymentStrategyInput, _ ...request.Option) (*appconfig.CreateDeploymentStrategyOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "CreateDeploymentStrategy cancelled", ctx.Err())
	default:
		return d.CreateDeploymentStrategy(in)
	}
}

func (d *AppConfigDouble) CreateEnvironment(i0 *appconfig.CreateEnvironmentInput) (r0 *appconfig.CreateEnvironmentOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreateEnvironment", i0)
	r0, _ = returns[0].(*appconfig.CreateEnvironmentOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *AppConfigDouble) CreateEnvironmentRequest(i0 *appconfig.CreateEnvironmentInput) (r0 *request.Request, r1 *appconfig.CreateEnvironmentOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreateEnvironmentRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*appconfig.CreateEnvironmentOutput)
	return
}

func (d *AppConfigDouble) CreateEnvironmentWithContext(i0 context.Context, i1 *appconfig.CreateEnvironmentInput, i2 ...request.Option) (r0 *appconfig.CreateEnvironmentOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreateEnvironmentWithContext", i0, i1, i2)
	r0, _ = returns[0].(*appconfig.CreateEnvironmentOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *AppConfigDouble) fakeCreateEnvironmentWithContext(ctx context.Context, in *appconfig.CreateEnvironmentInput, _ ...request.Option) (*appconfig.CreateEnvironmentOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "CreateEnvironment cancelled", ctx.Err())
	default:
		return d.CreateEnvironment(in)
	}
}

func (d *AppConfigDouble) DeleteApplication(i0 *appconfig.DeleteApplicationInput) (r0 *appconfig.DeleteApplicationOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteApplication", i0)
	r0, _ = returns[0].(*appconfig.DeleteApplicationOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *AppConfigDouble) DeleteApplicationRequest(i0 *appconfig.DeleteApplicationInput) (r0 *request.Request, r1 *appconfig.DeleteApplicationOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteApplicationRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*appconfig.DeleteApplicationOutput)
	return
}

func (d *AppConfigDouble) DeleteApplicationWithContext(i0 context.Context, i1 *appconfig.DeleteApplicationInput, i2 ...request.Option) (r0 *appconfig.DeleteApplicationOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteApplicationWithContext", i0, i1, i2)
	r0, _ = returns[0].(*appconfig.DeleteApplicationOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *AppConfigDouble) fakeDeleteApplicationWithContext(ctx context.Context, in *appconfig.DeleteApplicationInput, _ ...request.Option) (*appconfig.DeleteApplicationOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "DeleteApplication cancelled", ctx.Err())
	default:
		return d.DeleteApplication(in)
	}
}

func (d *AppConfigDouble) DeleteConfigurationProfile(i0 *appconfig.DeleteConfigurationProfileInput) (r0 *appconfig.DeleteConfigurationProfileOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteConfigurationProfile", i0)
	r0, _ = returns[0].(*appconfig.DeleteConfigurationProfileOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *AppConfigDouble) DeleteConfigurationProfileRequest(i0 *appconfig.DeleteConfigurationProfileInput) (r0 *request.Request, r1 *appconfig.DeleteConfigurationProfileOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteConfigurationProfileRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*appconfig.DeleteConfigurationProfileOutput)
	return
}

func (d *AppConfigDouble) DeleteConfigurationProfileWithContext(i0 context.Context, i1 *appconfig.DeleteConfigurationProfileInput, i2 ...request.Option) (r0 *appconfig.DeleteConfigurationProfileOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteConfigurationProfileWithContext", i0, i1, i2)
	r0, _ = returns[0].(*appconfig.DeleteConfigurationProfileOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *AppConfigDouble) fakeDeleteConfigurationProfileWithContext(ctx context.Context, in *appconfig.DeleteConfigurationProfileInput, _ ...request.Option) (*appconfig.DeleteConfigurationProfileOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "DeleteConfigurationProfile cancelled", ctx.Err())
	default:
		return d.DeleteConfigurationProfile(in)
	}
}

func (d *AppConfigDouble) DeleteDeploymentStrategy(i0 *appconfig.DeleteDeploymentStrategyInput) (r0 *appconfig.DeleteDeploymentStrategyOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteDeploymentStrategy", i0)
	r0, _ = returns[0].(*appconfig.DeleteDeploymentStrategyOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *AppConfigDouble) DeleteDeploymentStrategyRequest(i0 *appconfig.DeleteDeploymentStrategyInput) (r0 *request.Request, r1 *appconfig.DeleteDeploymentStrategyOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteDeploymentStrategyRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*appconfig.DeleteDeploymentStrategyOutput)
	return
}

func (d *AppConfigDouble) DeleteDeploymentStrategyWithContext(i0 context.Context, i1 *appconfig.DeleteDeploymentStrategyInput, i2 ...request.Option) (r0 *appconfig.DeleteDeploymentStrategyOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteDeploymentStrategyWithContext", i0, i1, i2)
	r0, _ = returns[0].(*appconfig.DeleteDeploymentStrategyOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *AppConfigDouble) fakeDeleteDeploymentStrategyWithContext(ctx context.Context, in *appconfig.DeleteDeploymentStrategyInput, _ ...request.Option) (*appconfig.DeleteDeploymentStrategyOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "DeleteDeploymentStrategy cancelled", ctx.Err())
	default:
		return d.DeleteDeploymentStrategy(in)
	}
}

func (d *AppConfigDouble) DeleteEnvironment(i0 *appconfig.DeleteEnvironmentInput) (r0 *appconfig.DeleteEnvironmentOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteEnvironment", i0)
	r0, _ = returns[0].(*appconfig.DeleteEnvironmentOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *AppConfigDouble) DeleteEnvironmentRequest(i0 *appconfig.DeleteEnvironmentInput) (r0 *request.Request, r1 *appconfig.DeleteEnvironmentOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteEnvironmentRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*appconfig.DeleteEnvironmentOutput)
	return
}

func (d *AppConfigDouble) DeleteEnvironmentWithContext(i0 context.Context, i1 *appconfig.DeleteEnvironmentInput, i2 ...request.Option) (r0 *appconfig.DeleteEnvironmentOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteEnvironmentWithContext", i0, i1, i2)
	r0, _ = returns[0].(*appconfig.DeleteEnvironmentOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *AppConfigDouble) fakeDeleteEnvironmentWithContext(ctx context.Context, in *appconfig.DeleteEnvironmentInput, _ ...request.Option) (*appconfig.DeleteEnvironmentOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "DeleteEnvironment cancelled", ctx.Err())
	default:
		return d.DeleteEnvironment(in)
	}
}

func (d *AppConfigDouble) GetApplication(i0 *appconfig.GetApplicationInput) (r0 *appconfig.GetApplicationOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetApplication", i0)
	r0, _ = returns[0].(*appconfig.GetApplicationOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *AppConfigDouble) GetApplicationRequest(i0 *appconfig.GetApplicationInput) (r0 *request.Request, r1 *appconfig.GetApplicationOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetApplicationRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*appconfig.GetApplicationOutput)
	return
}

func (d *AppConfigDouble) GetApplicationWithContext(i0 context.Context, i1 *appconfig.GetApplicationInput, i2 ...request.Option) (r0 *appconfig.GetApplicationOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetApplicationWithContext", i0, i1, i2)
	r0, _ = returns[0].(*appconfig.GetApplicationOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *AppConfigDouble) fakeGetApplicationWithContext(ctx context.Context, in *appconfig.GetApplicationInput, _ ...request.Option) (*appconfig.GetApplicationOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "GetApplication cancelled", ctx.Err())
	default:
		return d.GetApplication(in)
	}
}

func (d *AppConfigDouble) GetConfiguration(i0 *appconfig.GetConfigurationInput) (r0 *appconfig.GetConfigurationOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetConfiguration", i0)
	r0, _ = returns[0].(*appconfig.GetConfigurationOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *AppConfigDouble) GetConfigurationProfile(i0 *appconfig.GetConfigurationProfileInput) (r0 *appconfig.GetConfigurationProfileOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetConfigurationProfile", i0)
	r0, _ = returns[0].(*appconfig.GetConfigurationProfileOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *AppConfigDouble) GetConfigurationProfileRequest(i0 *appconfig.GetConfigurationProfileInput) (r0 *request.Request, r1 *appconfig.GetConfigurationProfileOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetConfigurationProfileRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*appconfig.GetConfigurationProfileOutput)
	return
}

func (d *AppConfigDouble) GetConfigurationProfileWithContext(i0 context.Context, i1 *appconfig.GetConfigurationProfileInput, i2 ...request.Option) (r0 *appconfig.GetConfigurationProfileOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetConfigurationProfileWithContext", i0, i1, i2)
	r0, _ = returns[0].(*appconfig.GetConfigurationProfileOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *AppConfigDouble) fakeGetConfigurationProfileWithContext(ctx context.Context, in *appconfig.GetConfigurationProfileInput, _ ...request.Option) (*appconfig.GetConfigurationProfileOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "GetConfigurationProfile cancelled", ctx.Err())
	default:
		return d.GetConfigurationProfile(in)
	}
}

func (d *AppConfigDouble) GetConfigurationRequest(i0 *appconfig.GetConfigurationInput) (r0 *request.Request, r1 *appconfig.GetConfigurationOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetConfigurationRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*appconfig.GetConfigurationOutput)
	return
}

func (d *AppConfigDouble) GetConfigurationWithContext(i0 context.Context, i1 *appconfig.GetConfigurationInput, i2 ...request.Option) (r0 *appconfig.GetConfigurationOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetConfigurationWithContext", i0, i1, i2)
	r0, _ = returns[0].(*appconfig.GetConfigurationOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *AppConfigDouble) fakeGetConfigurationWithContext(ctx context.Context, in *appconfig.GetConfigurationInput, _ ...request.Option) (*appconfig.GetConfigurationOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "GetConfiguration cancelled", ctx.Err())
	default:
		return d.GetConfiguration(in)
	}
}

func (d *AppConfigDouble) GetDeployment(i0 *appconfig.GetDeploymentInput) (r0 *appconfig.GetDeploymentOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetDeployment", i0)
	r0, _ = returns[0].(*appconfig.GetDeploymentOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *AppConfigDouble) GetDeploymentRequest(i0 *appconfig.GetDeploymentInput) (r0 *request.Request, r1 *appconfig.GetDeploymentOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetDeploymentRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*appconfig.GetDeploymentOutput)
	return
}

func (d *AppConfigDouble) GetDeploymentStrategy(i0 *appconfig.GetDeploymentStrategyInput) (r0 *appconfig.GetDeploymentStrategyOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetDeploymentStrategy", i0)
	r0, _ = returns[0].(*appconfig.GetDeploymentStrategyOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *AppConfigDouble) GetDeploymentStrategyRequest(i0 *appconfig.GetDeploymentStrategyInput) (r0 *request.Request, r1 *appconfig.GetDeploymentStrategyOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetDeploymentStrategyRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*appconfig.GetDeploymentStrategyOutput)
	return
}

func (d *AppConfigDouble) GetDeploymentStrategyWithContext(i0 context.Context, i1 *appconfig.GetDeploymentStrategyInput, i2 ...request.Option) (r0 *appconfig.GetDeploymentStrategyOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetDeploymentStrategyWithContext", i0, i1, i2)
	r0, _ = returns[0].(*appconfig.GetDeploymentStrategyOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *AppConfigDouble) fakeGetDeploymentStrategyWithContext(ctx context.Context, in *appconfig.GetDeploymentStrategyInput, _ ...request.Option) (*appconfig.GetDeploymentStrategyOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "GetDeploymentStrategy cancelled", ctx.Err())
	default:
		return d.GetDeploymentStrategy(in)
	}
}

func (d *AppConfigDouble) GetDeploymentWithContext(i0 context.Context, i1 *appconfig.GetDeploymentInput, i2 ...request.Option) (r0 *appconfig.GetDeploymentOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetDeploymentWithContext", i0, i1, i2)
	r0, _ = returns[0].(*appconfig.GetDeploymentOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *AppConfigDouble) fakeGetDeploymentWithContext(ctx context.Context, in *appconfig.GetDeploymentInput, _ ...request.Option) (*appconfig.GetDeploymentOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "GetDeployment cancelled", ctx.Err())
	default:
		return d.GetDeployment(in)
	}
}

func (d *AppConfigDouble) GetEnvironment(i0 *appconfig.GetEnvironmentInput) (r0 *appconfig.GetEnvironmentOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetEnvironment", i0)
	r0, _ = returns[0].(*appconfig.GetEnvironmentOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *AppConfigDouble) GetEnvironmentRequest(i0 *appconfig.GetEnvironmentInput) (r0 *request.Request, r1 *appconfig.GetEnvironmentOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetEnvironmentRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*appconfig.GetEnvironmentOutput)
	return
}

func (d *AppConfigDouble) GetEnvironmentWithContext(i0 context.Context, i1 *appconfig.GetEnvironmentInput, i2 ...request.Option) (r0 *appconfig.GetEnvironmentOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetEnvironmentWithContext", i0, i1, i2)
	r0, _ = returns[0].(*appconfig.GetEnvironmentOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *AppConfigDouble) fakeGetEnvironmentWithContext(ctx context.Context, in *appconfig.GetEnvironmentInput, _ ...request.Option) (*appconfig.GetEnvironmentOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "GetEnvironment cancelled", ctx.Err())
	default:
		return d.GetEnvironment(in)
	}
}

func (d *AppConfigDouble) ListApplications(i0 *appconfig.ListApplicationsInput) (r0 *appconfig.ListApplicationsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListApplications", i0)
	r0, _ = returns[0].(*appconfig.ListApplicationsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *AppConfigDouble) ListApplicationsPages(i0 *appconfig.ListApplicationsInput, i1 func(*appconfig.ListApplicationsOutput, bool) bool) (r0 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListApplicationsPages", i0, i1)
	r0, _ = returns[0].(error)
	return
}

func (d *AppConfigDouble) fakeListApplicationsPages(in *appconfig.ListApplicationsInput, pager func(*appconfig.ListApplicationsOutput, bool) (shouldContinue bool)) error {
	return d.Paginate("ListApplications", paginators, in, pager)
}

func (d *AppConfigDouble) ListApplicationsPagesWithContext(i0 context.Context, i1 *appconfig.ListApplicationsInput, i2 func(*appconfig.ListApplicationsOutput, bool) bool, i3 ...request.Option) (r0 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListApplicationsPagesWithContext", i0, i1, i2, i3)
	r0, _ = returns[0].(error)
	return
}

func (d *AppConfigDouble) fakeListApplicationsPagesWithContext(ctx context.Context, in *appconfig.ListApplicationsInput, pager func(*appconfig.ListApplicationsOutput, bool) (shouldContinue bool), options ...request.Option) error {
	return d.PaginateWithContext("ListApplications", paginators, ctx, in, pager, options...)
}

func (d *AppConfigDouble) ListApplicationsRequest(i0 *appconfig.ListApplicationsInput) (r0 *request.Request, r1 *appconfig.ListApplicationsOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListApplicationsRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*appconfig.ListApplicationsOutput)
	return
}

func (d *AppConfigDouble) ListApplicationsWithContext(i0 context.Context, i1 *appconfig.ListApplicationsInput, i2 ...request.Option) (r0 *appconfig.ListApplicationsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListApplicationsWithContext", i0, i1, i2)
	r0, _ = returns[0].(*appconfig.ListApplicationsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *AppConfigDouble) fakeListApplicationsWithContext(ctx context.Context, in *appconfig.ListApplicationsInput, _ ...request.Option) (*appconfig.ListApplicationsOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "ListApplications cancelled", ctx.Err())
	default:
		return d.ListApplications(in)
	}
}

func (d *AppConfigDouble) ListConfigurationProfiles(i0 *appconfig.ListConfigurationProfilesInput) (r0 *appconfig.ListConfigurationProfilesOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListConfigurationProfiles", i0)
	r0, _ = returns[0].(*appconfig.ListConfigurationProfilesOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *AppConfigDouble) ListConfigurationProfilesPages(i0 *appconfig.ListConfigurationProfilesInput, i1 func(*appconfig.ListConfigurationProfilesOutput, bool) bool) (r0 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListConfigurationProfilesPages", i0, i1)
	r0, _ = returns[0].(error)
	return
}

func (d *AppConfigDouble) fakeListConfigurationProfilesPages(in *appconfig.ListConfigurationProfilesInput, pager func(*appconfig.ListConfigurationProfilesOutput, bool) (shouldContinue bool)) error {
	return d.Paginate("ListConfigurationProfiles", paginators, in, pager)
}

func (d *AppConfigDouble) ListConfigurationProfilesPagesWithContext(i0 context.Context, i1 *appconfig.ListConfigurationProfilesInput, i2 func(*appconfig.ListConfigurationProfilesOutput, bool) bool, i3 ...request.Option) (r0 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListConfigurationProfilesPagesWithContext", i0, i1, i2, i3)
	r0, _ = returns[0].(error)
	return
}

func (d *AppConfigDouble) fakeListConfigurationProfilesPagesWithContext(ctx context.Context, in *appconfig.ListConfigurationProfilesInput, pager func(*appconfig.ListConfigurationProfilesOutput, bool) (shouldContinue bool), options ...request.Option) error {
	return d.PaginateWithContext("ListConfigurationProfiles", paginators, ctx, in, pager, options...)
}

func (d *AppConfigDouble) ListConfigurationProfilesRequest(i0 *appconfig.ListConfigurationProfilesInput) (r0 *request.Request, r1 *appconfig.ListConfigurationProfilesOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListConfigurationProfilesRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*appconfig.ListConfigurationProfilesOutput)
	return
}

func (d *AppConfigDouble) ListConfigurationProfilesWithContext(i0 context.Context, i1 *appconfig.ListConfigurationProfilesInput, i2 ...request.Option) (r0 *appconfig.ListConfigurationProfilesOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListConfigurationProfilesWithContext", i0, i1, i2)
	r0, _ = returns[0].(*appconfig.ListConfigurationProfilesOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *AppConfigDouble) fakeListConfigurationProfilesWithContext(ctx context.Context, in *appconfig.ListConfigurationProfilesInput, _ ...request.Option) (*appconfig.ListConfigurationProfilesOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "ListConfigurationProfiles cancelled", ctx.Err())
	default:
		return d.ListConfigurationProfiles(in)
	}
}

func (d *AppConfigDouble) ListDeploymentStrategies(i0 *appconfig.ListDeploymentStrategiesInput) (r0 *appconfig.ListDeploymentStrategiesOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListDeploymentStrategies", i0)
	r0, _ = returns[0].(*appconfig.ListDeploymentStrategiesOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *AppConfigDouble) ListDeploymentStrategiesPages(i0 *appconfig.ListDeploymentStrategiesInput, i1 func(*appconfig.ListDeploymentStrategiesOutput, bool) bool) (r0 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListDeploymentStrategiesPages", i0, i1)
	r0, _ = returns[0].(error)
	return
}

func (d *AppConfigDouble) fakeListDeploymentStrategiesPages(in *appconfig.ListDeploymentStrategiesInput, pager func(*appconfig.ListDeploymentStrategiesOutput, bool) (shouldContinue bool)) error {
	return d.Paginate("ListDeploymentStrategies", paginators, in, pager)
}

func (d *AppConfigDouble) ListDeploymentStrategiesPagesWithContext(i0 context.Context, i1 *appconfig.ListDeploymentStrategiesInput, i2 func(*appconfig.ListDeploymentStrategiesOutput, bool) bool, i3 ...request.Option) (r0 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListDeploymentStrategiesPagesWithContext", i0, i1, i2, i3)
	r0, _ = returns[0].(error)
	return
}

func (d *AppConfigDouble) fakeListDeploymentStrategiesPagesWithContext(ctx context.Context, in *appconfig.ListDeploymentStrategiesInput, pager func(*appconfig.ListDeploymentStrategiesOutput, bool) (shouldContinue bool), options ...request.Option) error {
	return d.PaginateWithContext("ListDeploymentStrategies", paginators, ctx, in, pager, options...)
}

func (d *AppConfigDouble) ListDeploymentStrategiesRequest(i0 *appconfig.ListDeploymentStrategiesInput) (r0 *request.Request, r1 *appconfig.ListDeploymentStrategiesOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListDeploymentStrategiesRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*appconfig.ListDeploymentStrategiesOutput)
	return
}

func (d *AppConfigDouble) ListDeploymentStrategiesWithContext(i0 context.Context, i1 *appconfig.ListDeploymentStrategiesInput, i2 ...request.Option) (r0 *appconfig.ListDeploymentStrategiesOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListDeploymentStrategiesWithContext", i0, i1, i2)
	r0, _ = returns[0].(*appconfig.ListDeploymentStrategiesOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *AppConfigDouble) fakeListDeploymentStrategiesWithContext(ctx context.Context, in *appconfig.ListDeploymentStrategiesInput, _ ...request.Option) (*appconfig.ListDeploymentStrategiesOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "ListDeploymentStrategies cancelled", ctx.Err())
	default:
		return d.ListDeploymentStrategies(in)
	}
}

func (d *AppConfigDouble) ListDeployments(i0 *appconfig.ListDeploymentsInput) (r0 *appconfig.ListDeploymentsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListDeployments", i0)
	r0, _ = returns[0].(*appconfig.ListDeploymentsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *AppConfigDouble) ListDeploymentsPages(i0 *appconfig.ListDeploymentsInput, i1 func(*appconfig.ListDeploymentsOutput, bool) bool) (r0 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListDeploymentsPages", i0, i1)
	r0, _ = returns[0].(error)
	return
}

func (d *AppConfigDouble) fakeListDeploymentsPages(in *appconfig.ListDeploymentsInput, pager func(*appconfig.ListDeploymentsOutput, bool) (shouldContinue bool)) error {
	return d.Paginate("ListDeployments", paginators, in, pager)
}

func (d *AppConfigDouble) ListDeploymentsPagesWithContext(i0 context.Context, i1 *appconfig.ListDeploymentsInput, i2 func(*appconfig.ListDeploymentsOutput, bool) bool, i3 ...request.Option) (r0 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListDeploymentsPagesWithContext", i0, i1, i2, i3)
	r0, _ = returns[0].(error)
	return
}

func (d *AppConfigDouble) fakeListDeploymentsPagesWithContext(ctx context.Context, in *appconfig.ListDeploymentsInput, pager func(*appconfig.ListDeploymentsOutput, bool) (shouldContinue bool), options ...request.Option) error {
	return d.PaginateWithContext("ListDeployments", paginators, ctx, in, pager, options...)
}

func (d *AppConfigDouble) ListDeploymentsRequest(i0 *appconfig.ListDeploymentsInput) (r0 *request.Request, r1 *appconfig.ListDeploymentsOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListDeploymentsRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*appconfig.ListDeploymentsOutput)
	return
}

func (d *AppConfigDouble) ListDeploymentsWithContext(i0 context.Context, i1 *appconfig.ListDeploymentsInput, i2 ...request.Option) (r0 *appconfig.ListDeploymentsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListDeploymentsWithContext", i0, i1, i2)
	r0, _ = returns[0].(*appconfig.ListDeploymentsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *AppConfigDouble) fakeListDeploymentsWithContext(ctx context.Context, in *appconfig.ListDeploymentsInput, _ ...request.Option) (*appconfig.ListDeploymentsOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "ListDeployments cancelled", ctx.Err())
	default:
		return d.ListDeployments(in)
	}
}

func (d *AppConfigDouble) ListEnvironments(i0 *appconfig.ListEnvironmentsInput) (r0 *appconfig.ListEnvironmentsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListEnvironments", i0)
	r0, _ = returns[0].(*appconfig.ListEnvironmentsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *AppConfigDouble) ListEnvironmentsPages(i0 *appconfig.ListEnvironmentsInput, i1 func(*appconfig.ListEnvironmentsOutput, bool) bool) (r0 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListEnvironmentsPages", i0, i1)
	r0, _ = returns[0].(error)
	return
}

func (d *AppConfigDouble) fakeListEnvironmentsPages(in *appconfig.ListEnvironmentsInput, pager func(*appconfig.ListEnvironmentsOutput, bool) (shouldContinue bool)) error {
	return d.Paginate("ListEnvironments", paginators, in, pager)
}

func (d *AppConfigDouble) ListEnvironmentsPagesWithContext(i0 context.Context, i1 *appconfig.ListEnvironmentsInput, i2 func(*appconfig.ListEnvironmentsOutput, bool) bool, i3 ...request.Option) (r0 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListEnvironmentsPagesWithContext", i0, i1, i2, i3)
	r0, _ = returns[0].(error)
	return
}

func (d *AppConfigDouble) fakeListEnvironmentsPagesWithContext(ctx context.Context, in *appconfig.ListEnvironmentsInput, pager func(*appconfig.ListEnvironmentsOutput, bool) (shouldContinue bool), options ...request.Option) error {
	return d.PaginateWithContext("ListEnvironments", paginators, ctx, in, pager, options...)
}

func (d *AppConfigDouble) ListEnvironmentsRequest(i0 *appconfig.ListEnvironmentsInput) (r0 *request.Request, r1 *appconfig.ListEnvironmentsOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListEnvironmentsRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*appconfig.ListEnvironmentsOutput)
	return
}

func (d *AppConfigDouble) ListEnvironmentsWithContext(i0 context.Context, i1 *appconfig.ListEnvironmentsInput, i2 ...request.Option) (r0 *appconfig.ListEnvironmentsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListEnvironmentsWithContext", i0, i1, i2)
	r0, _ = returns[0].(*appconfig.ListEnvironmentsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *AppConfigDouble) fakeListEnvironmentsWithContext(ctx context.Context, in *appconfig.ListEnvironmentsInput, _ ...request.Option) (*appconfig.ListEnvironmentsOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "ListEnvironments cancelled", ctx.Err())
	default:
		return d.ListEnvironments(in)
	}
}

func (d *AppConfigDouble) ListTagsForResource(i0 *appconfig.ListTagsForResourceInput) (r0 *appconfig.ListTagsForResourceOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListTagsForResource", i0)
	r0, _ = returns[0].(*appconfig.ListTagsForResourceOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *AppConfigDouble) ListTagsForResourceRequest(i0 *appconfig.ListTagsForResourceInput) (r0 *request.Request, r1 *appconfig.ListTagsForResourceOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListTagsForResourceRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*appconfig.ListTagsForResourceOutput)
	return
}

func (d *AppConfigDouble) ListTagsForResourceWithContext(i0 context.Context, i1 *appconfig.ListTagsForResourceInput, i2 ...request.Option) (r0 *appconfig.ListTagsForResourceOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListTagsForResourceWithContext", i0, i1, i2)
	r0, _ = returns[0].(*appconfig.ListTagsForResourceOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *AppConfigDouble) fakeListTagsForResourceWithContext(ctx context.Context, in *appconfig.ListTagsForResourceInput, _ ...request.Option) (*appconfig.ListTagsForResourceOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "ListTagsForResource cancelled", ctx.Err())
	default:
		return d.ListTagsForResource(in)
	}
}

func (d *AppConfigDouble) StartDeployment(i0 *appconfig.StartDeploymentInput) (r0 *appconfig.StartDeploymentOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("StartDeployment", i0)
	r0, _ = returns[0].(*appconfig.StartDeploymentOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *AppConfigDouble) StartDeploymentRequest(i0 *appconfig.StartDeploymentInput) (r0 *request.Request, r1 *appconfig.StartDeploymentOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("StartDeploymentRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*appconfig.StartDeploymentOutput)
	return
}

func (d *AppConfigDouble) StartDeploymentWithContext(i0 context.Context, i1 *appconfig.StartDeploymentInput, i2 ...request.Option) (r0 *appconfig.StartDeploymentOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("StartDeploymentWithContext", i0, i1, i2)
	r0, _ = returns[0].(*appconfig.StartDeploymentOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *AppConfigDouble) fakeStartDeploymentWithContext(ctx context.Context, in *appconfig.StartDeploymentInput, _ ...request.Option) (*appconfig.StartDeploymentOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "StartDeployment cancelled", ctx.Err())
	default:
		return d.StartDeployment(in)
	}
}

func (d *AppConfigDouble) StopDeployment(i0 *appconfig.StopDeploymentInput) (r0 *appconfig.StopDeploymentOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("StopDeployment", i0)
	r0, _ = returns[0].(*appconfig.StopDeploymentOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *AppConfigDouble) StopDeploymentRequest(i0 *appconfig.StopDeploymentInput) (r0 *request.Request, r1 *appconfig.StopDeploymentOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("StopDeploymentRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*appconfig.StopDeploymentOutput)
	return
}

func (d *AppConfigDouble) StopDeploymentWithContext(i0 context.Context, i1 *appconfig.StopDeploymentInput, i2 ...request.Option) (r0 *appconfig.StopDeploymentOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("StopDeploymentWithContext", i0, i1, i2)
	r0, _ = returns[0].(*appconfig.StopDeploymentOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *AppConfigDouble) fakeStopDeploymentWithContext(ctx context.Context, in *appconfig.StopDeploymentInput, _ ...request.Option) (*appconfig.StopDeploymentOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "StopDeployment cancelled", ctx.Err())
	default:
		return d.StopDeployment(in)
	}
}

func (d *AppConfigDouble) TagResource(i0 *appconfig.TagResourceInput) (r0 *appconfig.TagResourceOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("TagResource", i0)
	r0, _ = returns[0].(*appconfig.TagResourceOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *AppConfigDouble) TagResourceRequest(i0 *appconfig.TagResourceInput) (r0 *request.Request, r1 *appconfig.TagResourceOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("TagResourceRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*appconfig.TagResourceOutput)
	return
}

func (d *AppConfigDouble) TagResourceWithContext(i0 context.Context, i1 *appconfig.TagResourceInput, i2 ...request.Option) (r0 *appconfig.TagResourceOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("TagResourceWithContext", i0, i1, i2)
	r0, _ = returns[0].(*appconfig.TagResourceOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *AppConfigDouble) fakeTagResourceWithContext(ctx context.Context, in *appconfig.TagResourceInput, _ ...request.Option) (*appconfig.TagResourceOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "TagResource cancelled", ctx.Err())
	default:
		return d.TagResource(in)
	}
}

func (d *AppConfigDouble) UntagResource(i0 *appconfig.UntagResourceInput) (r0 *appconfig.UntagResourceOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UntagResource", i0)
	r0, _ = returns[0].(*appconfig.UntagResourceOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *AppConfigDouble) UntagResourceRequest(i0 *appconfig.UntagResourceInput) (r0 *request.Request, r1 *appconfig.UntagResourceOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UntagResourceRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*appconfig.UntagResourceOutput)
	return
}

func (d *AppConfigDouble) UntagResourceWithContext(i0 context.Context, i1 *appconfig.UntagResourceInput, i2 ...request.Option) (r0 *appconfig.UntagResourceOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UntagResourceWithContext", i0, i1, i2)
	r0, _ = returns[0].(*appconfig.UntagResourceOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *AppConfigDouble) fakeUntagResourceWithContext(ctx context.Context, in *appconfig.UntagResourceInput, _ ...request.Option) (*appconfig.UntagResourceOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "UntagResource cancelled", ctx.Err())
	default:
		return d.UntagResource(in)
	}
}

func (d *AppConfigDouble) UpdateApplication(i0 *appconfig.UpdateApplicationInput) (r0 *appconfig.UpdateApplicationOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UpdateApplication", i0)
	r0, _ = returns[0].(*appconfig.UpdateApplicationOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *AppConfigDouble) UpdateApplicationRequest(i0 *appconfig.UpdateApplicationInput) (r0 *request.Request, r1 *appconfig.UpdateApplicationOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UpdateApplicationRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*appconfig.UpdateApplicationOutput)
	return
}

func (d *AppConfigDouble) UpdateApplicationWithContext(i0 context.Context, i1 *appconfig.UpdateApplicationInput, i2 ...request.Option) (r0 *appconfig.UpdateApplicationOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UpdateApplicationWithContext", i0, i1, i2)
	r0, _ = returns[0].(*appconfig.UpdateApplicationOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *AppConfigDouble) fakeUpdateApplicationWithContext(ctx context.Context, in *appconfig.UpdateApplicationInput, _ ...request.Option) (*appconfig.UpdateApplicationOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "UpdateApplication cancelled", ctx.Err())
	default:
		return d.UpdateApplication(in)
	}
}

func (d *AppConfigDouble) UpdateConfigurationProfile(i0 *appconfig.UpdateConfigurationProfileInput) (r0 *appconfig.UpdateConfigurationProfileOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UpdateConfigurationProfile", i0)
	r0, _ = returns[0].(*appconfig.UpdateConfigurationProfileOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *AppConfigDouble) UpdateConfigurationProfileRequest(i0 *appconfig.UpdateConfigurationProfileInput) (r0 *request.Request, r1 *appconfig.UpdateConfigurationProfileOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UpdateConfigurationProfileRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*appconfig.UpdateConfigurationProfileOutput)
	return
}

func (d *AppConfigDouble) UpdateConfigurationProfileWithContext(i0 context.Context, i1 *appconfig.UpdateConfigurationProfileInput, i2 ...request.Option) (r0 *appconfig.UpdateConfigurationProfileOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UpdateConfigurationProfileWithContext", i0, i1, i2)
	r0, _ = returns[0].(*appconfig.UpdateConfigurationProfileOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *AppConfigDouble) fakeUpdateConfigurationProfileWithContext(ctx context.Context, in *appconfig.UpdateConfigurationProfileInput, _ ...request.Option) (*appconfig.UpdateConfigurationProfileOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "UpdateConfigurationProfile cancelled", ctx.Err())
	default:
		return d.UpdateConfigurationProfile(in)
	}
}

func (d *AppConfigDouble) UpdateDeploymentStrategy(i0 *appconfig.UpdateDeploymentStrategyInput) (r0 *appconfig.UpdateDeploymentStrategyOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UpdateDeploymentStrategy", i0)
	r0, _ = returns[0].(*appconfig.UpdateDeploymentStrategyOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *AppConfigDouble) UpdateDeploymentStrategyRequest(i0 *appconfig.UpdateDeploymentStrategyInput) (r0 *request.Request, r1 *appconfig.UpdateDeploymentStrategyOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UpdateDeploymentStrategyRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*appconfig.UpdateDeploymentStrategyOutput)
	return
}

func (d *AppConfigDouble) UpdateDeploymentStrategyWithContext(i0 context.Context, i1 *appconfig.UpdateDeploymentStrategyInput, i2 ...request.Option) (r0 *appconfig.UpdateDeploymentStrategyOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UpdateDeploymentStrategyWithContext", i0, i1, i2)
	r0, _ = returns[0].(*appconfig.UpdateDeploymentStrategyOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *AppConfigDouble) fakeUpdateDeploymentStrategyWithContext(ctx context.Context, in *appconfig.UpdateDeploymentStrategyInput, _ ...request.Option) (*appconfig.UpdateDeploymentStrategyOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "UpdateDeploymentStrategy cancelled", ctx.Err())
	default:
		return d.UpdateDeploymentStrategy(in)
	}
}

func (d *AppConfigDouble) UpdateEnvironment(i0 *appconfig.UpdateEnvironmentInput) (r0 *appconfig.UpdateEnvironmentOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UpdateEnvironment", i0)
	r0, _ = returns[0].(*appconfig.UpdateEnvironmentOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *AppConfigDouble) UpdateEnvironmentRequest(i0 *appconfig.UpdateEnvironmentInput) (r0 *request.Request, r1 *appconfig.UpdateEnvironmentOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UpdateEnvironmentRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*appconfig.UpdateEnvironmentOutput)
	return
}

func (d *AppConfigDouble) UpdateEnvironmentWithContext(i0 context.Context, i1 *appconfig.UpdateEnvironmentInput, i2 ...request.Option) (r0 *appconfig.UpdateEnvironmentOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UpdateEnvironmentWithContext", i0, i1, i2)
	r0, _ = returns[0].(*appconfig.UpdateEnvironmentOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *AppConfigDouble) fakeUpdateEnvironmentWithContext(ctx context.Context, in *appconfig.UpdateEnvironmentInput, _ ...request.Option) (*appconfig.UpdateEnvironmentOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "UpdateEnvironment cancelled", ctx.Err())
	default:
		return d.UpdateEnvironment(in)
	}
}

func (d *AppConfigDouble) ValidateConfiguration(i0 *appconfig.ValidateConfigurationInput) (r0 *appconfig.ValidateConfigurationOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ValidateConfiguration", i0)
	r0, _ = returns[0].(*appconfig.ValidateConfigurationOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *AppConfigDouble) ValidateConfigurationRequest(i0 *appconfig.ValidateConfigurationInput) (r0 *request.Request, r1 *appconfig.ValidateConfigurationOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ValidateConfigurationRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*appconfig.ValidateConfigurationOutput)
	return
}

func (d *AppConfigDouble) ValidateConfigurationWithContext(i0 context.Context, i1 *appconfig.ValidateConfigurationInput, i2 ...request.Option) (r0 *appconfig.ValidateConfigurationOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ValidateConfigurationWithContext", i0, i1, i2)
	r0, _ = returns[0].(*appconfig.ValidateConfigurationOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *AppConfigDouble) fakeValidateConfigurationWithContext(ctx context.Context, in *appconfig.ValidateConfigurationInput, _ ...request.Option) (*appconfig.ValidateConfigurationOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "ValidateConfiguration cancelled", ctx.Err())
	default:
		return d.ValidateConfiguration(in)
	}
}
