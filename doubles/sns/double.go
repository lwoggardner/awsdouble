// Code generated by go doublegen; DO NOT EDIT.
// This file was generated at 2020-02-14T22:15:11+11:00

// Package snsdouble provides a TestDouble implementation of snsiface.SNSAPI
package snsdouble

import (
	"context"

	"github.com/aws/aws-sdk-go/aws/awserr"
	"github.com/aws/aws-sdk-go/aws/request"
	"github.com/aws/aws-sdk-go/service/sns"
	"github.com/aws/aws-sdk-go/service/sns/snsiface"
	"github.com/lwoggardner/awsdouble"
	"github.com/lwoggardner/godouble/godouble"
)

// SNSDouble is TestDouble for snsiface.SNSAPI
type SNSDouble struct {
	snsiface.SNSAPI
	*awsdouble.AWSTestDouble
}

// Constructor for SNSDouble
// Default configuration will ensure
//   * API operations not explicitly stubbed will return an empty output struct pointer, and nil error.
//     To simulate long polling, "Poll" operations will return these values after a random delay of up to 100ms.
//   * WithContext methods implement a 'Fake' method that returns a cancellation error if the context is cancelled
//      before the method is called.
//   * Pages and PagesWithContext methods similarly implement a 'Fake' method that paginates over the underlying method.
//
//    This allows tests to only stub the simple api methods and be generally unconcerned whether the SUT is using the
//      Context or Pagination forms of the API.
//
func NewDouble(t godouble.T, configurators ...func(*awsdouble.AWSTestDouble)) *SNSDouble {
	result := &SNSDouble{}

	configurators = append([]func(configurator *awsdouble.AWSTestDouble){func(d *awsdouble.AWSTestDouble) {
		d.SetDefaultCall(result.defaultMethodCall)
		d.SetDefaultReturnValues(result.defaultReturnValues)
	}}, configurators...)

	result.AWSTestDouble = awsdouble.NewDouble(t, (*snsiface.SNSAPI)(nil), configurators...)
	return result
}

func (d *SNSDouble) defaultReturnValues(m godouble.Method) godouble.ReturnValues {
	return d.DefaultReturnValues(m)
}

func (d *SNSDouble) defaultMethodCall(m godouble.Method) godouble.MethodCall {
	switch m.Reflect().Name {

	case "AddPermissionWithContext":
		return m.Fake(d.fakeAddPermissionWithContext)

	case "CheckIfPhoneNumberIsOptedOutWithContext":
		return m.Fake(d.fakeCheckIfPhoneNumberIsOptedOutWithContext)

	case "ConfirmSubscriptionWithContext":
		return m.Fake(d.fakeConfirmSubscriptionWithContext)

	case "CreatePlatformApplicationWithContext":
		return m.Fake(d.fakeCreatePlatformApplicationWithContext)

	case "CreatePlatformEndpointWithContext":
		return m.Fake(d.fakeCreatePlatformEndpointWithContext)

	case "CreateTopicWithContext":
		return m.Fake(d.fakeCreateTopicWithContext)

	case "DeleteEndpointWithContext":
		return m.Fake(d.fakeDeleteEndpointWithContext)

	case "DeletePlatformApplicationWithContext":
		return m.Fake(d.fakeDeletePlatformApplicationWithContext)

	case "DeleteTopicWithContext":
		return m.Fake(d.fakeDeleteTopicWithContext)

	case "GetEndpointAttributesWithContext":
		return m.Fake(d.fakeGetEndpointAttributesWithContext)

	case "GetPlatformApplicationAttributesWithContext":
		return m.Fake(d.fakeGetPlatformApplicationAttributesWithContext)

	case "GetSMSAttributesWithContext":
		return m.Fake(d.fakeGetSMSAttributesWithContext)

	case "GetSubscriptionAttributesWithContext":
		return m.Fake(d.fakeGetSubscriptionAttributesWithContext)

	case "GetTopicAttributesWithContext":
		return m.Fake(d.fakeGetTopicAttributesWithContext)

	case "ListEndpointsByPlatformApplicationPages":
		return m.Fake(d.fakeListEndpointsByPlatformApplicationPages)

	case "ListEndpointsByPlatformApplicationPagesWithContext":
		return m.Fake(d.fakeListEndpointsByPlatformApplicationPagesWithContext)

	case "ListEndpointsByPlatformApplicationWithContext":
		return m.Fake(d.fakeListEndpointsByPlatformApplicationWithContext)

	case "ListPhoneNumbersOptedOutWithContext":
		return m.Fake(d.fakeListPhoneNumbersOptedOutWithContext)

	case "ListPlatformApplicationsPages":
		return m.Fake(d.fakeListPlatformApplicationsPages)

	case "ListPlatformApplicationsPagesWithContext":
		return m.Fake(d.fakeListPlatformApplicationsPagesWithContext)

	case "ListPlatformApplicationsWithContext":
		return m.Fake(d.fakeListPlatformApplicationsWithContext)

	case "ListSubscriptionsByTopicPages":
		return m.Fake(d.fakeListSubscriptionsByTopicPages)

	case "ListSubscriptionsByTopicPagesWithContext":
		return m.Fake(d.fakeListSubscriptionsByTopicPagesWithContext)

	case "ListSubscriptionsByTopicWithContext":
		return m.Fake(d.fakeListSubscriptionsByTopicWithContext)

	case "ListSubscriptionsPages":
		return m.Fake(d.fakeListSubscriptionsPages)

	case "ListSubscriptionsPagesWithContext":
		return m.Fake(d.fakeListSubscriptionsPagesWithContext)

	case "ListSubscriptionsWithContext":
		return m.Fake(d.fakeListSubscriptionsWithContext)

	case "ListTagsForResourceWithContext":
		return m.Fake(d.fakeListTagsForResourceWithContext)

	case "ListTopicsPages":
		return m.Fake(d.fakeListTopicsPages)

	case "ListTopicsPagesWithContext":
		return m.Fake(d.fakeListTopicsPagesWithContext)

	case "ListTopicsWithContext":
		return m.Fake(d.fakeListTopicsWithContext)

	case "OptInPhoneNumberWithContext":
		return m.Fake(d.fakeOptInPhoneNumberWithContext)

	case "PublishWithContext":
		return m.Fake(d.fakePublishWithContext)

	case "RemovePermissionWithContext":
		return m.Fake(d.fakeRemovePermissionWithContext)

	case "SetEndpointAttributesWithContext":
		return m.Fake(d.fakeSetEndpointAttributesWithContext)

	case "SetPlatformApplicationAttributesWithContext":
		return m.Fake(d.fakeSetPlatformApplicationAttributesWithContext)

	case "SetSMSAttributesWithContext":
		return m.Fake(d.fakeSetSMSAttributesWithContext)

	case "SetSubscriptionAttributesWithContext":
		return m.Fake(d.fakeSetSubscriptionAttributesWithContext)

	case "SetTopicAttributesWithContext":
		return m.Fake(d.fakeSetTopicAttributesWithContext)

	case "SubscribeWithContext":
		return m.Fake(d.fakeSubscribeWithContext)

	case "TagResourceWithContext":
		return m.Fake(d.fakeTagResourceWithContext)

	case "UnsubscribeWithContext":
		return m.Fake(d.fakeUnsubscribeWithContext)

	case "UntagResourceWithContext":
		return m.Fake(d.fakeUntagResourceWithContext)

	default:
		return nil
	}
}

func (d *SNSDouble) AddPermission(i0 *sns.AddPermissionInput) (r0 *sns.AddPermissionOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("AddPermission", i0)
	r0, _ = returns[0].(*sns.AddPermissionOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SNSDouble) AddPermissionRequest(i0 *sns.AddPermissionInput) (r0 *request.Request, r1 *sns.AddPermissionOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("AddPermissionRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*sns.AddPermissionOutput)
	return
}

func (d *SNSDouble) AddPermissionWithContext(i0 context.Context, i1 *sns.AddPermissionInput, i2 ...request.Option) (r0 *sns.AddPermissionOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("AddPermissionWithContext", i0, i1, i2)
	r0, _ = returns[0].(*sns.AddPermissionOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SNSDouble) fakeAddPermissionWithContext(ctx context.Context, in *sns.AddPermissionInput, _ ...request.Option) (*sns.AddPermissionOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "AddPermission cancelled", ctx.Err())
	default:
		return d.AddPermission(in)
	}
}

func (d *SNSDouble) CheckIfPhoneNumberIsOptedOut(i0 *sns.CheckIfPhoneNumberIsOptedOutInput) (r0 *sns.CheckIfPhoneNumberIsOptedOutOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CheckIfPhoneNumberIsOptedOut", i0)
	r0, _ = returns[0].(*sns.CheckIfPhoneNumberIsOptedOutOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SNSDouble) CheckIfPhoneNumberIsOptedOutRequest(i0 *sns.CheckIfPhoneNumberIsOptedOutInput) (r0 *request.Request, r1 *sns.CheckIfPhoneNumberIsOptedOutOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CheckIfPhoneNumberIsOptedOutRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*sns.CheckIfPhoneNumberIsOptedOutOutput)
	return
}

func (d *SNSDouble) CheckIfPhoneNumberIsOptedOutWithContext(i0 context.Context, i1 *sns.CheckIfPhoneNumberIsOptedOutInput, i2 ...request.Option) (r0 *sns.CheckIfPhoneNumberIsOptedOutOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CheckIfPhoneNumberIsOptedOutWithContext", i0, i1, i2)
	r0, _ = returns[0].(*sns.CheckIfPhoneNumberIsOptedOutOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SNSDouble) fakeCheckIfPhoneNumberIsOptedOutWithContext(ctx context.Context, in *sns.CheckIfPhoneNumberIsOptedOutInput, _ ...request.Option) (*sns.CheckIfPhoneNumberIsOptedOutOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "CheckIfPhoneNumberIsOptedOut cancelled", ctx.Err())
	default:
		return d.CheckIfPhoneNumberIsOptedOut(in)
	}
}

func (d *SNSDouble) ConfirmSubscription(i0 *sns.ConfirmSubscriptionInput) (r0 *sns.ConfirmSubscriptionOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ConfirmSubscription", i0)
	r0, _ = returns[0].(*sns.ConfirmSubscriptionOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SNSDouble) ConfirmSubscriptionRequest(i0 *sns.ConfirmSubscriptionInput) (r0 *request.Request, r1 *sns.ConfirmSubscriptionOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ConfirmSubscriptionRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*sns.ConfirmSubscriptionOutput)
	return
}

func (d *SNSDouble) ConfirmSubscriptionWithContext(i0 context.Context, i1 *sns.ConfirmSubscriptionInput, i2 ...request.Option) (r0 *sns.ConfirmSubscriptionOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ConfirmSubscriptionWithContext", i0, i1, i2)
	r0, _ = returns[0].(*sns.ConfirmSubscriptionOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SNSDouble) fakeConfirmSubscriptionWithContext(ctx context.Context, in *sns.ConfirmSubscriptionInput, _ ...request.Option) (*sns.ConfirmSubscriptionOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "ConfirmSubscription cancelled", ctx.Err())
	default:
		return d.ConfirmSubscription(in)
	}
}

func (d *SNSDouble) CreatePlatformApplication(i0 *sns.CreatePlatformApplicationInput) (r0 *sns.CreatePlatformApplicationOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreatePlatformApplication", i0)
	r0, _ = returns[0].(*sns.CreatePlatformApplicationOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SNSDouble) CreatePlatformApplicationRequest(i0 *sns.CreatePlatformApplicationInput) (r0 *request.Request, r1 *sns.CreatePlatformApplicationOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreatePlatformApplicationRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*sns.CreatePlatformApplicationOutput)
	return
}

func (d *SNSDouble) CreatePlatformApplicationWithContext(i0 context.Context, i1 *sns.CreatePlatformApplicationInput, i2 ...request.Option) (r0 *sns.CreatePlatformApplicationOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreatePlatformApplicationWithContext", i0, i1, i2)
	r0, _ = returns[0].(*sns.CreatePlatformApplicationOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SNSDouble) fakeCreatePlatformApplicationWithContext(ctx context.Context, in *sns.CreatePlatformApplicationInput, _ ...request.Option) (*sns.CreatePlatformApplicationOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "CreatePlatformApplication cancelled", ctx.Err())
	default:
		return d.CreatePlatformApplication(in)
	}
}

func (d *SNSDouble) CreatePlatformEndpoint(i0 *sns.CreatePlatformEndpointInput) (r0 *sns.CreatePlatformEndpointOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreatePlatformEndpoint", i0)
	r0, _ = returns[0].(*sns.CreatePlatformEndpointOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SNSDouble) CreatePlatformEndpointRequest(i0 *sns.CreatePlatformEndpointInput) (r0 *request.Request, r1 *sns.CreatePlatformEndpointOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreatePlatformEndpointRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*sns.CreatePlatformEndpointOutput)
	return
}

func (d *SNSDouble) CreatePlatformEndpointWithContext(i0 context.Context, i1 *sns.CreatePlatformEndpointInput, i2 ...request.Option) (r0 *sns.CreatePlatformEndpointOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreatePlatformEndpointWithContext", i0, i1, i2)
	r0, _ = returns[0].(*sns.CreatePlatformEndpointOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SNSDouble) fakeCreatePlatformEndpointWithContext(ctx context.Context, in *sns.CreatePlatformEndpointInput, _ ...request.Option) (*sns.CreatePlatformEndpointOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "CreatePlatformEndpoint cancelled", ctx.Err())
	default:
		return d.CreatePlatformEndpoint(in)
	}
}

func (d *SNSDouble) CreateTopic(i0 *sns.CreateTopicInput) (r0 *sns.CreateTopicOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreateTopic", i0)
	r0, _ = returns[0].(*sns.CreateTopicOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SNSDouble) CreateTopicRequest(i0 *sns.CreateTopicInput) (r0 *request.Request, r1 *sns.CreateTopicOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreateTopicRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*sns.CreateTopicOutput)
	return
}

func (d *SNSDouble) CreateTopicWithContext(i0 context.Context, i1 *sns.CreateTopicInput, i2 ...request.Option) (r0 *sns.CreateTopicOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreateTopicWithContext", i0, i1, i2)
	r0, _ = returns[0].(*sns.CreateTopicOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SNSDouble) fakeCreateTopicWithContext(ctx context.Context, in *sns.CreateTopicInput, _ ...request.Option) (*sns.CreateTopicOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "CreateTopic cancelled", ctx.Err())
	default:
		return d.CreateTopic(in)
	}
}

func (d *SNSDouble) DeleteEndpoint(i0 *sns.DeleteEndpointInput) (r0 *sns.DeleteEndpointOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteEndpoint", i0)
	r0, _ = returns[0].(*sns.DeleteEndpointOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SNSDouble) DeleteEndpointRequest(i0 *sns.DeleteEndpointInput) (r0 *request.Request, r1 *sns.DeleteEndpointOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteEndpointRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*sns.DeleteEndpointOutput)
	return
}

func (d *SNSDouble) DeleteEndpointWithContext(i0 context.Context, i1 *sns.DeleteEndpointInput, i2 ...request.Option) (r0 *sns.DeleteEndpointOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteEndpointWithContext", i0, i1, i2)
	r0, _ = returns[0].(*sns.DeleteEndpointOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SNSDouble) fakeDeleteEndpointWithContext(ctx context.Context, in *sns.DeleteEndpointInput, _ ...request.Option) (*sns.DeleteEndpointOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "DeleteEndpoint cancelled", ctx.Err())
	default:
		return d.DeleteEndpoint(in)
	}
}

func (d *SNSDouble) DeletePlatformApplication(i0 *sns.DeletePlatformApplicationInput) (r0 *sns.DeletePlatformApplicationOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeletePlatformApplication", i0)
	r0, _ = returns[0].(*sns.DeletePlatformApplicationOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SNSDouble) DeletePlatformApplicationRequest(i0 *sns.DeletePlatformApplicationInput) (r0 *request.Request, r1 *sns.DeletePlatformApplicationOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeletePlatformApplicationRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*sns.DeletePlatformApplicationOutput)
	return
}

func (d *SNSDouble) DeletePlatformApplicationWithContext(i0 context.Context, i1 *sns.DeletePlatformApplicationInput, i2 ...request.Option) (r0 *sns.DeletePlatformApplicationOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeletePlatformApplicationWithContext", i0, i1, i2)
	r0, _ = returns[0].(*sns.DeletePlatformApplicationOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SNSDouble) fakeDeletePlatformApplicationWithContext(ctx context.Context, in *sns.DeletePlatformApplicationInput, _ ...request.Option) (*sns.DeletePlatformApplicationOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "DeletePlatformApplication cancelled", ctx.Err())
	default:
		return d.DeletePlatformApplication(in)
	}
}

func (d *SNSDouble) DeleteTopic(i0 *sns.DeleteTopicInput) (r0 *sns.DeleteTopicOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteTopic", i0)
	r0, _ = returns[0].(*sns.DeleteTopicOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SNSDouble) DeleteTopicRequest(i0 *sns.DeleteTopicInput) (r0 *request.Request, r1 *sns.DeleteTopicOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteTopicRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*sns.DeleteTopicOutput)
	return
}

func (d *SNSDouble) DeleteTopicWithContext(i0 context.Context, i1 *sns.DeleteTopicInput, i2 ...request.Option) (r0 *sns.DeleteTopicOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteTopicWithContext", i0, i1, i2)
	r0, _ = returns[0].(*sns.DeleteTopicOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SNSDouble) fakeDeleteTopicWithContext(ctx context.Context, in *sns.DeleteTopicInput, _ ...request.Option) (*sns.DeleteTopicOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "DeleteTopic cancelled", ctx.Err())
	default:
		return d.DeleteTopic(in)
	}
}

func (d *SNSDouble) GetEndpointAttributes(i0 *sns.GetEndpointAttributesInput) (r0 *sns.GetEndpointAttributesOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetEndpointAttributes", i0)
	r0, _ = returns[0].(*sns.GetEndpointAttributesOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SNSDouble) GetEndpointAttributesRequest(i0 *sns.GetEndpointAttributesInput) (r0 *request.Request, r1 *sns.GetEndpointAttributesOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetEndpointAttributesRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*sns.GetEndpointAttributesOutput)
	return
}

func (d *SNSDouble) GetEndpointAttributesWithContext(i0 context.Context, i1 *sns.GetEndpointAttributesInput, i2 ...request.Option) (r0 *sns.GetEndpointAttributesOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetEndpointAttributesWithContext", i0, i1, i2)
	r0, _ = returns[0].(*sns.GetEndpointAttributesOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SNSDouble) fakeGetEndpointAttributesWithContext(ctx context.Context, in *sns.GetEndpointAttributesInput, _ ...request.Option) (*sns.GetEndpointAttributesOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "GetEndpointAttributes cancelled", ctx.Err())
	default:
		return d.GetEndpointAttributes(in)
	}
}

func (d *SNSDouble) GetPlatformApplicationAttributes(i0 *sns.GetPlatformApplicationAttributesInput) (r0 *sns.GetPlatformApplicationAttributesOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetPlatformApplicationAttributes", i0)
	r0, _ = returns[0].(*sns.GetPlatformApplicationAttributesOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SNSDouble) GetPlatformApplicationAttributesRequest(i0 *sns.GetPlatformApplicationAttributesInput) (r0 *request.Request, r1 *sns.GetPlatformApplicationAttributesOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetPlatformApplicationAttributesRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*sns.GetPlatformApplicationAttributesOutput)
	return
}

func (d *SNSDouble) GetPlatformApplicationAttributesWithContext(i0 context.Context, i1 *sns.GetPlatformApplicationAttributesInput, i2 ...request.Option) (r0 *sns.GetPlatformApplicationAttributesOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetPlatformApplicationAttributesWithContext", i0, i1, i2)
	r0, _ = returns[0].(*sns.GetPlatformApplicationAttributesOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SNSDouble) fakeGetPlatformApplicationAttributesWithContext(ctx context.Context, in *sns.GetPlatformApplicationAttributesInput, _ ...request.Option) (*sns.GetPlatformApplicationAttributesOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "GetPlatformApplicationAttributes cancelled", ctx.Err())
	default:
		return d.GetPlatformApplicationAttributes(in)
	}
}

func (d *SNSDouble) GetSMSAttributes(i0 *sns.GetSMSAttributesInput) (r0 *sns.GetSMSAttributesOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetSMSAttributes", i0)
	r0, _ = returns[0].(*sns.GetSMSAttributesOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SNSDouble) GetSMSAttributesRequest(i0 *sns.GetSMSAttributesInput) (r0 *request.Request, r1 *sns.GetSMSAttributesOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetSMSAttributesRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*sns.GetSMSAttributesOutput)
	return
}

func (d *SNSDouble) GetSMSAttributesWithContext(i0 context.Context, i1 *sns.GetSMSAttributesInput, i2 ...request.Option) (r0 *sns.GetSMSAttributesOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetSMSAttributesWithContext", i0, i1, i2)
	r0, _ = returns[0].(*sns.GetSMSAttributesOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SNSDouble) fakeGetSMSAttributesWithContext(ctx context.Context, in *sns.GetSMSAttributesInput, _ ...request.Option) (*sns.GetSMSAttributesOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "GetSMSAttributes cancelled", ctx.Err())
	default:
		return d.GetSMSAttributes(in)
	}
}

func (d *SNSDouble) GetSubscriptionAttributes(i0 *sns.GetSubscriptionAttributesInput) (r0 *sns.GetSubscriptionAttributesOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetSubscriptionAttributes", i0)
	r0, _ = returns[0].(*sns.GetSubscriptionAttributesOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SNSDouble) GetSubscriptionAttributesRequest(i0 *sns.GetSubscriptionAttributesInput) (r0 *request.Request, r1 *sns.GetSubscriptionAttributesOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetSubscriptionAttributesRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*sns.GetSubscriptionAttributesOutput)
	return
}

func (d *SNSDouble) GetSubscriptionAttributesWithContext(i0 context.Context, i1 *sns.GetSubscriptionAttributesInput, i2 ...request.Option) (r0 *sns.GetSubscriptionAttributesOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetSubscriptionAttributesWithContext", i0, i1, i2)
	r0, _ = returns[0].(*sns.GetSubscriptionAttributesOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SNSDouble) fakeGetSubscriptionAttributesWithContext(ctx context.Context, in *sns.GetSubscriptionAttributesInput, _ ...request.Option) (*sns.GetSubscriptionAttributesOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "GetSubscriptionAttributes cancelled", ctx.Err())
	default:
		return d.GetSubscriptionAttributes(in)
	}
}

func (d *SNSDouble) GetTopicAttributes(i0 *sns.GetTopicAttributesInput) (r0 *sns.GetTopicAttributesOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetTopicAttributes", i0)
	r0, _ = returns[0].(*sns.GetTopicAttributesOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SNSDouble) GetTopicAttributesRequest(i0 *sns.GetTopicAttributesInput) (r0 *request.Request, r1 *sns.GetTopicAttributesOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetTopicAttributesRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*sns.GetTopicAttributesOutput)
	return
}

func (d *SNSDouble) GetTopicAttributesWithContext(i0 context.Context, i1 *sns.GetTopicAttributesInput, i2 ...request.Option) (r0 *sns.GetTopicAttributesOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetTopicAttributesWithContext", i0, i1, i2)
	r0, _ = returns[0].(*sns.GetTopicAttributesOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SNSDouble) fakeGetTopicAttributesWithContext(ctx context.Context, in *sns.GetTopicAttributesInput, _ ...request.Option) (*sns.GetTopicAttributesOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "GetTopicAttributes cancelled", ctx.Err())
	default:
		return d.GetTopicAttributes(in)
	}
}

func (d *SNSDouble) ListEndpointsByPlatformApplication(i0 *sns.ListEndpointsByPlatformApplicationInput) (r0 *sns.ListEndpointsByPlatformApplicationOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListEndpointsByPlatformApplication", i0)
	r0, _ = returns[0].(*sns.ListEndpointsByPlatformApplicationOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SNSDouble) ListEndpointsByPlatformApplicationPages(i0 *sns.ListEndpointsByPlatformApplicationInput, i1 func(*sns.ListEndpointsByPlatformApplicationOutput, bool) bool) (r0 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListEndpointsByPlatformApplicationPages", i0, i1)
	r0, _ = returns[0].(error)
	return
}

func (d *SNSDouble) fakeListEndpointsByPlatformApplicationPages(in *sns.ListEndpointsByPlatformApplicationInput, pager func(*sns.ListEndpointsByPlatformApplicationOutput, bool) (shouldContinue bool)) error {
	return d.Paginate("ListEndpointsByPlatformApplication", paginators, in, pager)
}

func (d *SNSDouble) ListEndpointsByPlatformApplicationPagesWithContext(i0 context.Context, i1 *sns.ListEndpointsByPlatformApplicationInput, i2 func(*sns.ListEndpointsByPlatformApplicationOutput, bool) bool, i3 ...request.Option) (r0 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListEndpointsByPlatformApplicationPagesWithContext", i0, i1, i2, i3)
	r0, _ = returns[0].(error)
	return
}

func (d *SNSDouble) fakeListEndpointsByPlatformApplicationPagesWithContext(ctx context.Context, in *sns.ListEndpointsByPlatformApplicationInput, pager func(*sns.ListEndpointsByPlatformApplicationOutput, bool) (shouldContinue bool), options ...request.Option) error {
	return d.PaginateWithContext("ListEndpointsByPlatformApplication", paginators, ctx, in, pager, options...)
}

func (d *SNSDouble) ListEndpointsByPlatformApplicationRequest(i0 *sns.ListEndpointsByPlatformApplicationInput) (r0 *request.Request, r1 *sns.ListEndpointsByPlatformApplicationOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListEndpointsByPlatformApplicationRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*sns.ListEndpointsByPlatformApplicationOutput)
	return
}

func (d *SNSDouble) ListEndpointsByPlatformApplicationWithContext(i0 context.Context, i1 *sns.ListEndpointsByPlatformApplicationInput, i2 ...request.Option) (r0 *sns.ListEndpointsByPlatformApplicationOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListEndpointsByPlatformApplicationWithContext", i0, i1, i2)
	r0, _ = returns[0].(*sns.ListEndpointsByPlatformApplicationOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SNSDouble) fakeListEndpointsByPlatformApplicationWithContext(ctx context.Context, in *sns.ListEndpointsByPlatformApplicationInput, _ ...request.Option) (*sns.ListEndpointsByPlatformApplicationOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "ListEndpointsByPlatformApplication cancelled", ctx.Err())
	default:
		return d.ListEndpointsByPlatformApplication(in)
	}
}

func (d *SNSDouble) ListPhoneNumbersOptedOut(i0 *sns.ListPhoneNumbersOptedOutInput) (r0 *sns.ListPhoneNumbersOptedOutOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListPhoneNumbersOptedOut", i0)
	r0, _ = returns[0].(*sns.ListPhoneNumbersOptedOutOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SNSDouble) ListPhoneNumbersOptedOutRequest(i0 *sns.ListPhoneNumbersOptedOutInput) (r0 *request.Request, r1 *sns.ListPhoneNumbersOptedOutOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListPhoneNumbersOptedOutRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*sns.ListPhoneNumbersOptedOutOutput)
	return
}

func (d *SNSDouble) ListPhoneNumbersOptedOutWithContext(i0 context.Context, i1 *sns.ListPhoneNumbersOptedOutInput, i2 ...request.Option) (r0 *sns.ListPhoneNumbersOptedOutOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListPhoneNumbersOptedOutWithContext", i0, i1, i2)
	r0, _ = returns[0].(*sns.ListPhoneNumbersOptedOutOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SNSDouble) fakeListPhoneNumbersOptedOutWithContext(ctx context.Context, in *sns.ListPhoneNumbersOptedOutInput, _ ...request.Option) (*sns.ListPhoneNumbersOptedOutOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "ListPhoneNumbersOptedOut cancelled", ctx.Err())
	default:
		return d.ListPhoneNumbersOptedOut(in)
	}
}

func (d *SNSDouble) ListPlatformApplications(i0 *sns.ListPlatformApplicationsInput) (r0 *sns.ListPlatformApplicationsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListPlatformApplications", i0)
	r0, _ = returns[0].(*sns.ListPlatformApplicationsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SNSDouble) ListPlatformApplicationsPages(i0 *sns.ListPlatformApplicationsInput, i1 func(*sns.ListPlatformApplicationsOutput, bool) bool) (r0 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListPlatformApplicationsPages", i0, i1)
	r0, _ = returns[0].(error)
	return
}

func (d *SNSDouble) fakeListPlatformApplicationsPages(in *sns.ListPlatformApplicationsInput, pager func(*sns.ListPlatformApplicationsOutput, bool) (shouldContinue bool)) error {
	return d.Paginate("ListPlatformApplications", paginators, in, pager)
}

func (d *SNSDouble) ListPlatformApplicationsPagesWithContext(i0 context.Context, i1 *sns.ListPlatformApplicationsInput, i2 func(*sns.ListPlatformApplicationsOutput, bool) bool, i3 ...request.Option) (r0 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListPlatformApplicationsPagesWithContext", i0, i1, i2, i3)
	r0, _ = returns[0].(error)
	return
}

func (d *SNSDouble) fakeListPlatformApplicationsPagesWithContext(ctx context.Context, in *sns.ListPlatformApplicationsInput, pager func(*sns.ListPlatformApplicationsOutput, bool) (shouldContinue bool), options ...request.Option) error {
	return d.PaginateWithContext("ListPlatformApplications", paginators, ctx, in, pager, options...)
}

func (d *SNSDouble) ListPlatformApplicationsRequest(i0 *sns.ListPlatformApplicationsInput) (r0 *request.Request, r1 *sns.ListPlatformApplicationsOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListPlatformApplicationsRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*sns.ListPlatformApplicationsOutput)
	return
}

func (d *SNSDouble) ListPlatformApplicationsWithContext(i0 context.Context, i1 *sns.ListPlatformApplicationsInput, i2 ...request.Option) (r0 *sns.ListPlatformApplicationsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListPlatformApplicationsWithContext", i0, i1, i2)
	r0, _ = returns[0].(*sns.ListPlatformApplicationsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SNSDouble) fakeListPlatformApplicationsWithContext(ctx context.Context, in *sns.ListPlatformApplicationsInput, _ ...request.Option) (*sns.ListPlatformApplicationsOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "ListPlatformApplications cancelled", ctx.Err())
	default:
		return d.ListPlatformApplications(in)
	}
}

func (d *SNSDouble) ListSubscriptions(i0 *sns.ListSubscriptionsInput) (r0 *sns.ListSubscriptionsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListSubscriptions", i0)
	r0, _ = returns[0].(*sns.ListSubscriptionsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SNSDouble) ListSubscriptionsByTopic(i0 *sns.ListSubscriptionsByTopicInput) (r0 *sns.ListSubscriptionsByTopicOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListSubscriptionsByTopic", i0)
	r0, _ = returns[0].(*sns.ListSubscriptionsByTopicOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SNSDouble) ListSubscriptionsByTopicPages(i0 *sns.ListSubscriptionsByTopicInput, i1 func(*sns.ListSubscriptionsByTopicOutput, bool) bool) (r0 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListSubscriptionsByTopicPages", i0, i1)
	r0, _ = returns[0].(error)
	return
}

func (d *SNSDouble) fakeListSubscriptionsByTopicPages(in *sns.ListSubscriptionsByTopicInput, pager func(*sns.ListSubscriptionsByTopicOutput, bool) (shouldContinue bool)) error {
	return d.Paginate("ListSubscriptionsByTopic", paginators, in, pager)
}

func (d *SNSDouble) ListSubscriptionsByTopicPagesWithContext(i0 context.Context, i1 *sns.ListSubscriptionsByTopicInput, i2 func(*sns.ListSubscriptionsByTopicOutput, bool) bool, i3 ...request.Option) (r0 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListSubscriptionsByTopicPagesWithContext", i0, i1, i2, i3)
	r0, _ = returns[0].(error)
	return
}

func (d *SNSDouble) fakeListSubscriptionsByTopicPagesWithContext(ctx context.Context, in *sns.ListSubscriptionsByTopicInput, pager func(*sns.ListSubscriptionsByTopicOutput, bool) (shouldContinue bool), options ...request.Option) error {
	return d.PaginateWithContext("ListSubscriptionsByTopic", paginators, ctx, in, pager, options...)
}

func (d *SNSDouble) ListSubscriptionsByTopicRequest(i0 *sns.ListSubscriptionsByTopicInput) (r0 *request.Request, r1 *sns.ListSubscriptionsByTopicOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListSubscriptionsByTopicRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*sns.ListSubscriptionsByTopicOutput)
	return
}

func (d *SNSDouble) ListSubscriptionsByTopicWithContext(i0 context.Context, i1 *sns.ListSubscriptionsByTopicInput, i2 ...request.Option) (r0 *sns.ListSubscriptionsByTopicOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListSubscriptionsByTopicWithContext", i0, i1, i2)
	r0, _ = returns[0].(*sns.ListSubscriptionsByTopicOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SNSDouble) fakeListSubscriptionsByTopicWithContext(ctx context.Context, in *sns.ListSubscriptionsByTopicInput, _ ...request.Option) (*sns.ListSubscriptionsByTopicOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "ListSubscriptionsByTopic cancelled", ctx.Err())
	default:
		return d.ListSubscriptionsByTopic(in)
	}
}

func (d *SNSDouble) ListSubscriptionsPages(i0 *sns.ListSubscriptionsInput, i1 func(*sns.ListSubscriptionsOutput, bool) bool) (r0 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListSubscriptionsPages", i0, i1)
	r0, _ = returns[0].(error)
	return
}

func (d *SNSDouble) fakeListSubscriptionsPages(in *sns.ListSubscriptionsInput, pager func(*sns.ListSubscriptionsOutput, bool) (shouldContinue bool)) error {
	return d.Paginate("ListSubscriptions", paginators, in, pager)
}

func (d *SNSDouble) ListSubscriptionsPagesWithContext(i0 context.Context, i1 *sns.ListSubscriptionsInput, i2 func(*sns.ListSubscriptionsOutput, bool) bool, i3 ...request.Option) (r0 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListSubscriptionsPagesWithContext", i0, i1, i2, i3)
	r0, _ = returns[0].(error)
	return
}

func (d *SNSDouble) fakeListSubscriptionsPagesWithContext(ctx context.Context, in *sns.ListSubscriptionsInput, pager func(*sns.ListSubscriptionsOutput, bool) (shouldContinue bool), options ...request.Option) error {
	return d.PaginateWithContext("ListSubscriptions", paginators, ctx, in, pager, options...)
}

func (d *SNSDouble) ListSubscriptionsRequest(i0 *sns.ListSubscriptionsInput) (r0 *request.Request, r1 *sns.ListSubscriptionsOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListSubscriptionsRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*sns.ListSubscriptionsOutput)
	return
}

func (d *SNSDouble) ListSubscriptionsWithContext(i0 context.Context, i1 *sns.ListSubscriptionsInput, i2 ...request.Option) (r0 *sns.ListSubscriptionsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListSubscriptionsWithContext", i0, i1, i2)
	r0, _ = returns[0].(*sns.ListSubscriptionsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SNSDouble) fakeListSubscriptionsWithContext(ctx context.Context, in *sns.ListSubscriptionsInput, _ ...request.Option) (*sns.ListSubscriptionsOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "ListSubscriptions cancelled", ctx.Err())
	default:
		return d.ListSubscriptions(in)
	}
}

func (d *SNSDouble) ListTagsForResource(i0 *sns.ListTagsForResourceInput) (r0 *sns.ListTagsForResourceOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListTagsForResource", i0)
	r0, _ = returns[0].(*sns.ListTagsForResourceOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SNSDouble) ListTagsForResourceRequest(i0 *sns.ListTagsForResourceInput) (r0 *request.Request, r1 *sns.ListTagsForResourceOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListTagsForResourceRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*sns.ListTagsForResourceOutput)
	return
}

func (d *SNSDouble) ListTagsForResourceWithContext(i0 context.Context, i1 *sns.ListTagsForResourceInput, i2 ...request.Option) (r0 *sns.ListTagsForResourceOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListTagsForResourceWithContext", i0, i1, i2)
	r0, _ = returns[0].(*sns.ListTagsForResourceOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SNSDouble) fakeListTagsForResourceWithContext(ctx context.Context, in *sns.ListTagsForResourceInput, _ ...request.Option) (*sns.ListTagsForResourceOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "ListTagsForResource cancelled", ctx.Err())
	default:
		return d.ListTagsForResource(in)
	}
}

func (d *SNSDouble) ListTopics(i0 *sns.ListTopicsInput) (r0 *sns.ListTopicsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListTopics", i0)
	r0, _ = returns[0].(*sns.ListTopicsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SNSDouble) ListTopicsPages(i0 *sns.ListTopicsInput, i1 func(*sns.ListTopicsOutput, bool) bool) (r0 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListTopicsPages", i0, i1)
	r0, _ = returns[0].(error)
	return
}

func (d *SNSDouble) fakeListTopicsPages(in *sns.ListTopicsInput, pager func(*sns.ListTopicsOutput, bool) (shouldContinue bool)) error {
	return d.Paginate("ListTopics", paginators, in, pager)
}

func (d *SNSDouble) ListTopicsPagesWithContext(i0 context.Context, i1 *sns.ListTopicsInput, i2 func(*sns.ListTopicsOutput, bool) bool, i3 ...request.Option) (r0 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListTopicsPagesWithContext", i0, i1, i2, i3)
	r0, _ = returns[0].(error)
	return
}

func (d *SNSDouble) fakeListTopicsPagesWithContext(ctx context.Context, in *sns.ListTopicsInput, pager func(*sns.ListTopicsOutput, bool) (shouldContinue bool), options ...request.Option) error {
	return d.PaginateWithContext("ListTopics", paginators, ctx, in, pager, options...)
}

func (d *SNSDouble) ListTopicsRequest(i0 *sns.ListTopicsInput) (r0 *request.Request, r1 *sns.ListTopicsOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListTopicsRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*sns.ListTopicsOutput)
	return
}

func (d *SNSDouble) ListTopicsWithContext(i0 context.Context, i1 *sns.ListTopicsInput, i2 ...request.Option) (r0 *sns.ListTopicsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListTopicsWithContext", i0, i1, i2)
	r0, _ = returns[0].(*sns.ListTopicsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SNSDouble) fakeListTopicsWithContext(ctx context.Context, in *sns.ListTopicsInput, _ ...request.Option) (*sns.ListTopicsOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "ListTopics cancelled", ctx.Err())
	default:
		return d.ListTopics(in)
	}
}

func (d *SNSDouble) OptInPhoneNumber(i0 *sns.OptInPhoneNumberInput) (r0 *sns.OptInPhoneNumberOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("OptInPhoneNumber", i0)
	r0, _ = returns[0].(*sns.OptInPhoneNumberOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SNSDouble) OptInPhoneNumberRequest(i0 *sns.OptInPhoneNumberInput) (r0 *request.Request, r1 *sns.OptInPhoneNumberOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("OptInPhoneNumberRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*sns.OptInPhoneNumberOutput)
	return
}

func (d *SNSDouble) OptInPhoneNumberWithContext(i0 context.Context, i1 *sns.OptInPhoneNumberInput, i2 ...request.Option) (r0 *sns.OptInPhoneNumberOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("OptInPhoneNumberWithContext", i0, i1, i2)
	r0, _ = returns[0].(*sns.OptInPhoneNumberOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SNSDouble) fakeOptInPhoneNumberWithContext(ctx context.Context, in *sns.OptInPhoneNumberInput, _ ...request.Option) (*sns.OptInPhoneNumberOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "OptInPhoneNumber cancelled", ctx.Err())
	default:
		return d.OptInPhoneNumber(in)
	}
}

func (d *SNSDouble) Publish(i0 *sns.PublishInput) (r0 *sns.PublishOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("Publish", i0)
	r0, _ = returns[0].(*sns.PublishOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SNSDouble) PublishRequest(i0 *sns.PublishInput) (r0 *request.Request, r1 *sns.PublishOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("PublishRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*sns.PublishOutput)
	return
}

func (d *SNSDouble) PublishWithContext(i0 context.Context, i1 *sns.PublishInput, i2 ...request.Option) (r0 *sns.PublishOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("PublishWithContext", i0, i1, i2)
	r0, _ = returns[0].(*sns.PublishOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SNSDouble) fakePublishWithContext(ctx context.Context, in *sns.PublishInput, _ ...request.Option) (*sns.PublishOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "Publish cancelled", ctx.Err())
	default:
		return d.Publish(in)
	}
}

func (d *SNSDouble) RemovePermission(i0 *sns.RemovePermissionInput) (r0 *sns.RemovePermissionOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("RemovePermission", i0)
	r0, _ = returns[0].(*sns.RemovePermissionOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SNSDouble) RemovePermissionRequest(i0 *sns.RemovePermissionInput) (r0 *request.Request, r1 *sns.RemovePermissionOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("RemovePermissionRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*sns.RemovePermissionOutput)
	return
}

func (d *SNSDouble) RemovePermissionWithContext(i0 context.Context, i1 *sns.RemovePermissionInput, i2 ...request.Option) (r0 *sns.RemovePermissionOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("RemovePermissionWithContext", i0, i1, i2)
	r0, _ = returns[0].(*sns.RemovePermissionOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SNSDouble) fakeRemovePermissionWithContext(ctx context.Context, in *sns.RemovePermissionInput, _ ...request.Option) (*sns.RemovePermissionOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "RemovePermission cancelled", ctx.Err())
	default:
		return d.RemovePermission(in)
	}
}

func (d *SNSDouble) SetEndpointAttributes(i0 *sns.SetEndpointAttributesInput) (r0 *sns.SetEndpointAttributesOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("SetEndpointAttributes", i0)
	r0, _ = returns[0].(*sns.SetEndpointAttributesOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SNSDouble) SetEndpointAttributesRequest(i0 *sns.SetEndpointAttributesInput) (r0 *request.Request, r1 *sns.SetEndpointAttributesOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("SetEndpointAttributesRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*sns.SetEndpointAttributesOutput)
	return
}

func (d *SNSDouble) SetEndpointAttributesWithContext(i0 context.Context, i1 *sns.SetEndpointAttributesInput, i2 ...request.Option) (r0 *sns.SetEndpointAttributesOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("SetEndpointAttributesWithContext", i0, i1, i2)
	r0, _ = returns[0].(*sns.SetEndpointAttributesOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SNSDouble) fakeSetEndpointAttributesWithContext(ctx context.Context, in *sns.SetEndpointAttributesInput, _ ...request.Option) (*sns.SetEndpointAttributesOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "SetEndpointAttributes cancelled", ctx.Err())
	default:
		return d.SetEndpointAttributes(in)
	}
}

func (d *SNSDouble) SetPlatformApplicationAttributes(i0 *sns.SetPlatformApplicationAttributesInput) (r0 *sns.SetPlatformApplicationAttributesOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("SetPlatformApplicationAttributes", i0)
	r0, _ = returns[0].(*sns.SetPlatformApplicationAttributesOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SNSDouble) SetPlatformApplicationAttributesRequest(i0 *sns.SetPlatformApplicationAttributesInput) (r0 *request.Request, r1 *sns.SetPlatformApplicationAttributesOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("SetPlatformApplicationAttributesRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*sns.SetPlatformApplicationAttributesOutput)
	return
}

func (d *SNSDouble) SetPlatformApplicationAttributesWithContext(i0 context.Context, i1 *sns.SetPlatformApplicationAttributesInput, i2 ...request.Option) (r0 *sns.SetPlatformApplicationAttributesOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("SetPlatformApplicationAttributesWithContext", i0, i1, i2)
	r0, _ = returns[0].(*sns.SetPlatformApplicationAttributesOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SNSDouble) fakeSetPlatformApplicationAttributesWithContext(ctx context.Context, in *sns.SetPlatformApplicationAttributesInput, _ ...request.Option) (*sns.SetPlatformApplicationAttributesOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "SetPlatformApplicationAttributes cancelled", ctx.Err())
	default:
		return d.SetPlatformApplicationAttributes(in)
	}
}

func (d *SNSDouble) SetSMSAttributes(i0 *sns.SetSMSAttributesInput) (r0 *sns.SetSMSAttributesOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("SetSMSAttributes", i0)
	r0, _ = returns[0].(*sns.SetSMSAttributesOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SNSDouble) SetSMSAttributesRequest(i0 *sns.SetSMSAttributesInput) (r0 *request.Request, r1 *sns.SetSMSAttributesOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("SetSMSAttributesRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*sns.SetSMSAttributesOutput)
	return
}

func (d *SNSDouble) SetSMSAttributesWithContext(i0 context.Context, i1 *sns.SetSMSAttributesInput, i2 ...request.Option) (r0 *sns.SetSMSAttributesOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("SetSMSAttributesWithContext", i0, i1, i2)
	r0, _ = returns[0].(*sns.SetSMSAttributesOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SNSDouble) fakeSetSMSAttributesWithContext(ctx context.Context, in *sns.SetSMSAttributesInput, _ ...request.Option) (*sns.SetSMSAttributesOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "SetSMSAttributes cancelled", ctx.Err())
	default:
		return d.SetSMSAttributes(in)
	}
}

func (d *SNSDouble) SetSubscriptionAttributes(i0 *sns.SetSubscriptionAttributesInput) (r0 *sns.SetSubscriptionAttributesOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("SetSubscriptionAttributes", i0)
	r0, _ = returns[0].(*sns.SetSubscriptionAttributesOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SNSDouble) SetSubscriptionAttributesRequest(i0 *sns.SetSubscriptionAttributesInput) (r0 *request.Request, r1 *sns.SetSubscriptionAttributesOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("SetSubscriptionAttributesRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*sns.SetSubscriptionAttributesOutput)
	return
}

func (d *SNSDouble) SetSubscriptionAttributesWithContext(i0 context.Context, i1 *sns.SetSubscriptionAttributesInput, i2 ...request.Option) (r0 *sns.SetSubscriptionAttributesOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("SetSubscriptionAttributesWithContext", i0, i1, i2)
	r0, _ = returns[0].(*sns.SetSubscriptionAttributesOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SNSDouble) fakeSetSubscriptionAttributesWithContext(ctx context.Context, in *sns.SetSubscriptionAttributesInput, _ ...request.Option) (*sns.SetSubscriptionAttributesOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "SetSubscriptionAttributes cancelled", ctx.Err())
	default:
		return d.SetSubscriptionAttributes(in)
	}
}

func (d *SNSDouble) SetTopicAttributes(i0 *sns.SetTopicAttributesInput) (r0 *sns.SetTopicAttributesOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("SetTopicAttributes", i0)
	r0, _ = returns[0].(*sns.SetTopicAttributesOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SNSDouble) SetTopicAttributesRequest(i0 *sns.SetTopicAttributesInput) (r0 *request.Request, r1 *sns.SetTopicAttributesOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("SetTopicAttributesRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*sns.SetTopicAttributesOutput)
	return
}

func (d *SNSDouble) SetTopicAttributesWithContext(i0 context.Context, i1 *sns.SetTopicAttributesInput, i2 ...request.Option) (r0 *sns.SetTopicAttributesOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("SetTopicAttributesWithContext", i0, i1, i2)
	r0, _ = returns[0].(*sns.SetTopicAttributesOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SNSDouble) fakeSetTopicAttributesWithContext(ctx context.Context, in *sns.SetTopicAttributesInput, _ ...request.Option) (*sns.SetTopicAttributesOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "SetTopicAttributes cancelled", ctx.Err())
	default:
		return d.SetTopicAttributes(in)
	}
}

func (d *SNSDouble) Subscribe(i0 *sns.SubscribeInput) (r0 *sns.SubscribeOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("Subscribe", i0)
	r0, _ = returns[0].(*sns.SubscribeOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SNSDouble) SubscribeRequest(i0 *sns.SubscribeInput) (r0 *request.Request, r1 *sns.SubscribeOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("SubscribeRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*sns.SubscribeOutput)
	return
}

func (d *SNSDouble) SubscribeWithContext(i0 context.Context, i1 *sns.SubscribeInput, i2 ...request.Option) (r0 *sns.SubscribeOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("SubscribeWithContext", i0, i1, i2)
	r0, _ = returns[0].(*sns.SubscribeOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SNSDouble) fakeSubscribeWithContext(ctx context.Context, in *sns.SubscribeInput, _ ...request.Option) (*sns.SubscribeOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "Subscribe cancelled", ctx.Err())
	default:
		return d.Subscribe(in)
	}
}

func (d *SNSDouble) TagResource(i0 *sns.TagResourceInput) (r0 *sns.TagResourceOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("TagResource", i0)
	r0, _ = returns[0].(*sns.TagResourceOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SNSDouble) TagResourceRequest(i0 *sns.TagResourceInput) (r0 *request.Request, r1 *sns.TagResourceOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("TagResourceRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*sns.TagResourceOutput)
	return
}

func (d *SNSDouble) TagResourceWithContext(i0 context.Context, i1 *sns.TagResourceInput, i2 ...request.Option) (r0 *sns.TagResourceOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("TagResourceWithContext", i0, i1, i2)
	r0, _ = returns[0].(*sns.TagResourceOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SNSDouble) fakeTagResourceWithContext(ctx context.Context, in *sns.TagResourceInput, _ ...request.Option) (*sns.TagResourceOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "TagResource cancelled", ctx.Err())
	default:
		return d.TagResource(in)
	}
}

func (d *SNSDouble) Unsubscribe(i0 *sns.UnsubscribeInput) (r0 *sns.UnsubscribeOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("Unsubscribe", i0)
	r0, _ = returns[0].(*sns.UnsubscribeOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SNSDouble) UnsubscribeRequest(i0 *sns.UnsubscribeInput) (r0 *request.Request, r1 *sns.UnsubscribeOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UnsubscribeRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*sns.UnsubscribeOutput)
	return
}

func (d *SNSDouble) UnsubscribeWithContext(i0 context.Context, i1 *sns.UnsubscribeInput, i2 ...request.Option) (r0 *sns.UnsubscribeOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UnsubscribeWithContext", i0, i1, i2)
	r0, _ = returns[0].(*sns.UnsubscribeOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SNSDouble) fakeUnsubscribeWithContext(ctx context.Context, in *sns.UnsubscribeInput, _ ...request.Option) (*sns.UnsubscribeOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "Unsubscribe cancelled", ctx.Err())
	default:
		return d.Unsubscribe(in)
	}
}

func (d *SNSDouble) UntagResource(i0 *sns.UntagResourceInput) (r0 *sns.UntagResourceOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UntagResource", i0)
	r0, _ = returns[0].(*sns.UntagResourceOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SNSDouble) UntagResourceRequest(i0 *sns.UntagResourceInput) (r0 *request.Request, r1 *sns.UntagResourceOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UntagResourceRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*sns.UntagResourceOutput)
	return
}

func (d *SNSDouble) UntagResourceWithContext(i0 context.Context, i1 *sns.UntagResourceInput, i2 ...request.Option) (r0 *sns.UntagResourceOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UntagResourceWithContext", i0, i1, i2)
	r0, _ = returns[0].(*sns.UntagResourceOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SNSDouble) fakeUntagResourceWithContext(ctx context.Context, in *sns.UntagResourceInput, _ ...request.Option) (*sns.UntagResourceOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "UntagResource cancelled", ctx.Err())
	default:
		return d.UntagResource(in)
	}
}
