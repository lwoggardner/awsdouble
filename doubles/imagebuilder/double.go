// Code generated by go doublegen; DO NOT EDIT.
// This file was generated at 2020-02-14T22:13:07+11:00

// Package imagebuilderdouble provides a TestDouble implementation of imagebuilderiface.ImagebuilderAPI
package imagebuilderdouble

import (
	"context"

	"github.com/aws/aws-sdk-go/aws/awserr"
	"github.com/aws/aws-sdk-go/aws/request"
	"github.com/aws/aws-sdk-go/service/imagebuilder"
	"github.com/aws/aws-sdk-go/service/imagebuilder/imagebuilderiface"
	"github.com/lwoggardner/awsdouble"
	"github.com/lwoggardner/godouble/godouble"
)

// ImagebuilderDouble is TestDouble for imagebuilderiface.ImagebuilderAPI
type ImagebuilderDouble struct {
	imagebuilderiface.ImagebuilderAPI
	*awsdouble.AWSTestDouble
}

// Constructor for ImagebuilderDouble
// Default configuration will ensure
//   * API operations not explicitly stubbed will return an empty output struct pointer, and nil error.
//     To simulate long polling, "Poll" operations will return these values after a random delay of up to 100ms.
//   * WithContext methods implement a 'Fake' method that returns a cancellation error if the context is cancelled
//      before the method is called.
//   * Pages and PagesWithContext methods similarly implement a 'Fake' method that paginates over the underlying method.
//
//    This allows tests to only stub the simple api methods and be generally unconcerned whether the SUT is using the
//      Context or Pagination forms of the API.
//
func NewDouble(t godouble.T, configurators ...func(*awsdouble.AWSTestDouble)) *ImagebuilderDouble {
	result := &ImagebuilderDouble{}

	configurators = append([]func(configurator *awsdouble.AWSTestDouble){func(d *awsdouble.AWSTestDouble) {
		d.SetDefaultCall(result.defaultMethodCall)
		d.SetDefaultReturnValues(result.defaultReturnValues)
	}}, configurators...)

	result.AWSTestDouble = awsdouble.NewDouble(t, (*imagebuilderiface.ImagebuilderAPI)(nil), configurators...)
	return result
}

func (d *ImagebuilderDouble) defaultReturnValues(m godouble.Method) godouble.ReturnValues {
	return d.DefaultReturnValues(m)
}

func (d *ImagebuilderDouble) defaultMethodCall(m godouble.Method) godouble.MethodCall {
	switch m.Reflect().Name {

	case "CancelImageCreationWithContext":
		return m.Fake(d.fakeCancelImageCreationWithContext)

	case "CreateComponentWithContext":
		return m.Fake(d.fakeCreateComponentWithContext)

	case "CreateDistributionConfigurationWithContext":
		return m.Fake(d.fakeCreateDistributionConfigurationWithContext)

	case "CreateImagePipelineWithContext":
		return m.Fake(d.fakeCreateImagePipelineWithContext)

	case "CreateImageRecipeWithContext":
		return m.Fake(d.fakeCreateImageRecipeWithContext)

	case "CreateImageWithContext":
		return m.Fake(d.fakeCreateImageWithContext)

	case "CreateInfrastructureConfigurationWithContext":
		return m.Fake(d.fakeCreateInfrastructureConfigurationWithContext)

	case "DeleteComponentWithContext":
		return m.Fake(d.fakeDeleteComponentWithContext)

	case "DeleteDistributionConfigurationWithContext":
		return m.Fake(d.fakeDeleteDistributionConfigurationWithContext)

	case "DeleteImagePipelineWithContext":
		return m.Fake(d.fakeDeleteImagePipelineWithContext)

	case "DeleteImageRecipeWithContext":
		return m.Fake(d.fakeDeleteImageRecipeWithContext)

	case "DeleteImageWithContext":
		return m.Fake(d.fakeDeleteImageWithContext)

	case "DeleteInfrastructureConfigurationWithContext":
		return m.Fake(d.fakeDeleteInfrastructureConfigurationWithContext)

	case "GetComponentPolicyWithContext":
		return m.Fake(d.fakeGetComponentPolicyWithContext)

	case "GetComponentWithContext":
		return m.Fake(d.fakeGetComponentWithContext)

	case "GetDistributionConfigurationWithContext":
		return m.Fake(d.fakeGetDistributionConfigurationWithContext)

	case "GetImagePipelineWithContext":
		return m.Fake(d.fakeGetImagePipelineWithContext)

	case "GetImagePolicyWithContext":
		return m.Fake(d.fakeGetImagePolicyWithContext)

	case "GetImageRecipePolicyWithContext":
		return m.Fake(d.fakeGetImageRecipePolicyWithContext)

	case "GetImageRecipeWithContext":
		return m.Fake(d.fakeGetImageRecipeWithContext)

	case "GetImageWithContext":
		return m.Fake(d.fakeGetImageWithContext)

	case "GetInfrastructureConfigurationWithContext":
		return m.Fake(d.fakeGetInfrastructureConfigurationWithContext)

	case "ImportComponentWithContext":
		return m.Fake(d.fakeImportComponentWithContext)

	case "ListComponentBuildVersionsPages":
		return m.Fake(d.fakeListComponentBuildVersionsPages)

	case "ListComponentBuildVersionsPagesWithContext":
		return m.Fake(d.fakeListComponentBuildVersionsPagesWithContext)

	case "ListComponentBuildVersionsWithContext":
		return m.Fake(d.fakeListComponentBuildVersionsWithContext)

	case "ListComponentsPages":
		return m.Fake(d.fakeListComponentsPages)

	case "ListComponentsPagesWithContext":
		return m.Fake(d.fakeListComponentsPagesWithContext)

	case "ListComponentsWithContext":
		return m.Fake(d.fakeListComponentsWithContext)

	case "ListDistributionConfigurationsPages":
		return m.Fake(d.fakeListDistributionConfigurationsPages)

	case "ListDistributionConfigurationsPagesWithContext":
		return m.Fake(d.fakeListDistributionConfigurationsPagesWithContext)

	case "ListDistributionConfigurationsWithContext":
		return m.Fake(d.fakeListDistributionConfigurationsWithContext)

	case "ListImageBuildVersionsPages":
		return m.Fake(d.fakeListImageBuildVersionsPages)

	case "ListImageBuildVersionsPagesWithContext":
		return m.Fake(d.fakeListImageBuildVersionsPagesWithContext)

	case "ListImageBuildVersionsWithContext":
		return m.Fake(d.fakeListImageBuildVersionsWithContext)

	case "ListImagePipelineImagesPages":
		return m.Fake(d.fakeListImagePipelineImagesPages)

	case "ListImagePipelineImagesPagesWithContext":
		return m.Fake(d.fakeListImagePipelineImagesPagesWithContext)

	case "ListImagePipelineImagesWithContext":
		return m.Fake(d.fakeListImagePipelineImagesWithContext)

	case "ListImagePipelinesPages":
		return m.Fake(d.fakeListImagePipelinesPages)

	case "ListImagePipelinesPagesWithContext":
		return m.Fake(d.fakeListImagePipelinesPagesWithContext)

	case "ListImagePipelinesWithContext":
		return m.Fake(d.fakeListImagePipelinesWithContext)

	case "ListImageRecipesPages":
		return m.Fake(d.fakeListImageRecipesPages)

	case "ListImageRecipesPagesWithContext":
		return m.Fake(d.fakeListImageRecipesPagesWithContext)

	case "ListImageRecipesWithContext":
		return m.Fake(d.fakeListImageRecipesWithContext)

	case "ListImagesPages":
		return m.Fake(d.fakeListImagesPages)

	case "ListImagesPagesWithContext":
		return m.Fake(d.fakeListImagesPagesWithContext)

	case "ListImagesWithContext":
		return m.Fake(d.fakeListImagesWithContext)

	case "ListInfrastructureConfigurationsPages":
		return m.Fake(d.fakeListInfrastructureConfigurationsPages)

	case "ListInfrastructureConfigurationsPagesWithContext":
		return m.Fake(d.fakeListInfrastructureConfigurationsPagesWithContext)

	case "ListInfrastructureConfigurationsWithContext":
		return m.Fake(d.fakeListInfrastructureConfigurationsWithContext)

	case "ListTagsForResourceWithContext":
		return m.Fake(d.fakeListTagsForResourceWithContext)

	case "PutComponentPolicyWithContext":
		return m.Fake(d.fakePutComponentPolicyWithContext)

	case "PutImagePolicyWithContext":
		return m.Fake(d.fakePutImagePolicyWithContext)

	case "PutImageRecipePolicyWithContext":
		return m.Fake(d.fakePutImageRecipePolicyWithContext)

	case "StartImagePipelineExecutionWithContext":
		return m.Fake(d.fakeStartImagePipelineExecutionWithContext)

	case "TagResourceWithContext":
		return m.Fake(d.fakeTagResourceWithContext)

	case "UntagResourceWithContext":
		return m.Fake(d.fakeUntagResourceWithContext)

	case "UpdateDistributionConfigurationWithContext":
		return m.Fake(d.fakeUpdateDistributionConfigurationWithContext)

	case "UpdateImagePipelineWithContext":
		return m.Fake(d.fakeUpdateImagePipelineWithContext)

	case "UpdateInfrastructureConfigurationWithContext":
		return m.Fake(d.fakeUpdateInfrastructureConfigurationWithContext)

	default:
		return nil
	}
}

func (d *ImagebuilderDouble) CancelImageCreation(i0 *imagebuilder.CancelImageCreationInput) (r0 *imagebuilder.CancelImageCreationOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CancelImageCreation", i0)
	r0, _ = returns[0].(*imagebuilder.CancelImageCreationOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ImagebuilderDouble) CancelImageCreationRequest(i0 *imagebuilder.CancelImageCreationInput) (r0 *request.Request, r1 *imagebuilder.CancelImageCreationOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CancelImageCreationRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*imagebuilder.CancelImageCreationOutput)
	return
}

func (d *ImagebuilderDouble) CancelImageCreationWithContext(i0 context.Context, i1 *imagebuilder.CancelImageCreationInput, i2 ...request.Option) (r0 *imagebuilder.CancelImageCreationOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CancelImageCreationWithContext", i0, i1, i2)
	r0, _ = returns[0].(*imagebuilder.CancelImageCreationOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ImagebuilderDouble) fakeCancelImageCreationWithContext(ctx context.Context, in *imagebuilder.CancelImageCreationInput, _ ...request.Option) (*imagebuilder.CancelImageCreationOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "CancelImageCreation cancelled", ctx.Err())
	default:
		return d.CancelImageCreation(in)
	}
}

func (d *ImagebuilderDouble) CreateComponent(i0 *imagebuilder.CreateComponentInput) (r0 *imagebuilder.CreateComponentOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreateComponent", i0)
	r0, _ = returns[0].(*imagebuilder.CreateComponentOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ImagebuilderDouble) CreateComponentRequest(i0 *imagebuilder.CreateComponentInput) (r0 *request.Request, r1 *imagebuilder.CreateComponentOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreateComponentRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*imagebuilder.CreateComponentOutput)
	return
}

func (d *ImagebuilderDouble) CreateComponentWithContext(i0 context.Context, i1 *imagebuilder.CreateComponentInput, i2 ...request.Option) (r0 *imagebuilder.CreateComponentOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreateComponentWithContext", i0, i1, i2)
	r0, _ = returns[0].(*imagebuilder.CreateComponentOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ImagebuilderDouble) fakeCreateComponentWithContext(ctx context.Context, in *imagebuilder.CreateComponentInput, _ ...request.Option) (*imagebuilder.CreateComponentOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "CreateComponent cancelled", ctx.Err())
	default:
		return d.CreateComponent(in)
	}
}

func (d *ImagebuilderDouble) CreateDistributionConfiguration(i0 *imagebuilder.CreateDistributionConfigurationInput) (r0 *imagebuilder.CreateDistributionConfigurationOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreateDistributionConfiguration", i0)
	r0, _ = returns[0].(*imagebuilder.CreateDistributionConfigurationOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ImagebuilderDouble) CreateDistributionConfigurationRequest(i0 *imagebuilder.CreateDistributionConfigurationInput) (r0 *request.Request, r1 *imagebuilder.CreateDistributionConfigurationOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreateDistributionConfigurationRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*imagebuilder.CreateDistributionConfigurationOutput)
	return
}

func (d *ImagebuilderDouble) CreateDistributionConfigurationWithContext(i0 context.Context, i1 *imagebuilder.CreateDistributionConfigurationInput, i2 ...request.Option) (r0 *imagebuilder.CreateDistributionConfigurationOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreateDistributionConfigurationWithContext", i0, i1, i2)
	r0, _ = returns[0].(*imagebuilder.CreateDistributionConfigurationOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ImagebuilderDouble) fakeCreateDistributionConfigurationWithContext(ctx context.Context, in *imagebuilder.CreateDistributionConfigurationInput, _ ...request.Option) (*imagebuilder.CreateDistributionConfigurationOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "CreateDistributionConfiguration cancelled", ctx.Err())
	default:
		return d.CreateDistributionConfiguration(in)
	}
}

func (d *ImagebuilderDouble) CreateImage(i0 *imagebuilder.CreateImageInput) (r0 *imagebuilder.CreateImageOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreateImage", i0)
	r0, _ = returns[0].(*imagebuilder.CreateImageOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ImagebuilderDouble) CreateImagePipeline(i0 *imagebuilder.CreateImagePipelineInput) (r0 *imagebuilder.CreateImagePipelineOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreateImagePipeline", i0)
	r0, _ = returns[0].(*imagebuilder.CreateImagePipelineOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ImagebuilderDouble) CreateImagePipelineRequest(i0 *imagebuilder.CreateImagePipelineInput) (r0 *request.Request, r1 *imagebuilder.CreateImagePipelineOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreateImagePipelineRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*imagebuilder.CreateImagePipelineOutput)
	return
}

func (d *ImagebuilderDouble) CreateImagePipelineWithContext(i0 context.Context, i1 *imagebuilder.CreateImagePipelineInput, i2 ...request.Option) (r0 *imagebuilder.CreateImagePipelineOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreateImagePipelineWithContext", i0, i1, i2)
	r0, _ = returns[0].(*imagebuilder.CreateImagePipelineOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ImagebuilderDouble) fakeCreateImagePipelineWithContext(ctx context.Context, in *imagebuilder.CreateImagePipelineInput, _ ...request.Option) (*imagebuilder.CreateImagePipelineOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "CreateImagePipeline cancelled", ctx.Err())
	default:
		return d.CreateImagePipeline(in)
	}
}

func (d *ImagebuilderDouble) CreateImageRecipe(i0 *imagebuilder.CreateImageRecipeInput) (r0 *imagebuilder.CreateImageRecipeOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreateImageRecipe", i0)
	r0, _ = returns[0].(*imagebuilder.CreateImageRecipeOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ImagebuilderDouble) CreateImageRecipeRequest(i0 *imagebuilder.CreateImageRecipeInput) (r0 *request.Request, r1 *imagebuilder.CreateImageRecipeOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreateImageRecipeRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*imagebuilder.CreateImageRecipeOutput)
	return
}

func (d *ImagebuilderDouble) CreateImageRecipeWithContext(i0 context.Context, i1 *imagebuilder.CreateImageRecipeInput, i2 ...request.Option) (r0 *imagebuilder.CreateImageRecipeOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreateImageRecipeWithContext", i0, i1, i2)
	r0, _ = returns[0].(*imagebuilder.CreateImageRecipeOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ImagebuilderDouble) fakeCreateImageRecipeWithContext(ctx context.Context, in *imagebuilder.CreateImageRecipeInput, _ ...request.Option) (*imagebuilder.CreateImageRecipeOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "CreateImageRecipe cancelled", ctx.Err())
	default:
		return d.CreateImageRecipe(in)
	}
}

func (d *ImagebuilderDouble) CreateImageRequest(i0 *imagebuilder.CreateImageInput) (r0 *request.Request, r1 *imagebuilder.CreateImageOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreateImageRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*imagebuilder.CreateImageOutput)
	return
}

func (d *ImagebuilderDouble) CreateImageWithContext(i0 context.Context, i1 *imagebuilder.CreateImageInput, i2 ...request.Option) (r0 *imagebuilder.CreateImageOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreateImageWithContext", i0, i1, i2)
	r0, _ = returns[0].(*imagebuilder.CreateImageOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ImagebuilderDouble) fakeCreateImageWithContext(ctx context.Context, in *imagebuilder.CreateImageInput, _ ...request.Option) (*imagebuilder.CreateImageOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "CreateImage cancelled", ctx.Err())
	default:
		return d.CreateImage(in)
	}
}

func (d *ImagebuilderDouble) CreateInfrastructureConfiguration(i0 *imagebuilder.CreateInfrastructureConfigurationInput) (r0 *imagebuilder.CreateInfrastructureConfigurationOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreateInfrastructureConfiguration", i0)
	r0, _ = returns[0].(*imagebuilder.CreateInfrastructureConfigurationOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ImagebuilderDouble) CreateInfrastructureConfigurationRequest(i0 *imagebuilder.CreateInfrastructureConfigurationInput) (r0 *request.Request, r1 *imagebuilder.CreateInfrastructureConfigurationOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreateInfrastructureConfigurationRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*imagebuilder.CreateInfrastructureConfigurationOutput)
	return
}

func (d *ImagebuilderDouble) CreateInfrastructureConfigurationWithContext(i0 context.Context, i1 *imagebuilder.CreateInfrastructureConfigurationInput, i2 ...request.Option) (r0 *imagebuilder.CreateInfrastructureConfigurationOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreateInfrastructureConfigurationWithContext", i0, i1, i2)
	r0, _ = returns[0].(*imagebuilder.CreateInfrastructureConfigurationOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ImagebuilderDouble) fakeCreateInfrastructureConfigurationWithContext(ctx context.Context, in *imagebuilder.CreateInfrastructureConfigurationInput, _ ...request.Option) (*imagebuilder.CreateInfrastructureConfigurationOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "CreateInfrastructureConfiguration cancelled", ctx.Err())
	default:
		return d.CreateInfrastructureConfiguration(in)
	}
}

func (d *ImagebuilderDouble) DeleteComponent(i0 *imagebuilder.DeleteComponentInput) (r0 *imagebuilder.DeleteComponentOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteComponent", i0)
	r0, _ = returns[0].(*imagebuilder.DeleteComponentOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ImagebuilderDouble) DeleteComponentRequest(i0 *imagebuilder.DeleteComponentInput) (r0 *request.Request, r1 *imagebuilder.DeleteComponentOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteComponentRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*imagebuilder.DeleteComponentOutput)
	return
}

func (d *ImagebuilderDouble) DeleteComponentWithContext(i0 context.Context, i1 *imagebuilder.DeleteComponentInput, i2 ...request.Option) (r0 *imagebuilder.DeleteComponentOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteComponentWithContext", i0, i1, i2)
	r0, _ = returns[0].(*imagebuilder.DeleteComponentOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ImagebuilderDouble) fakeDeleteComponentWithContext(ctx context.Context, in *imagebuilder.DeleteComponentInput, _ ...request.Option) (*imagebuilder.DeleteComponentOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "DeleteComponent cancelled", ctx.Err())
	default:
		return d.DeleteComponent(in)
	}
}

func (d *ImagebuilderDouble) DeleteDistributionConfiguration(i0 *imagebuilder.DeleteDistributionConfigurationInput) (r0 *imagebuilder.DeleteDistributionConfigurationOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteDistributionConfiguration", i0)
	r0, _ = returns[0].(*imagebuilder.DeleteDistributionConfigurationOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ImagebuilderDouble) DeleteDistributionConfigurationRequest(i0 *imagebuilder.DeleteDistributionConfigurationInput) (r0 *request.Request, r1 *imagebuilder.DeleteDistributionConfigurationOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteDistributionConfigurationRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*imagebuilder.DeleteDistributionConfigurationOutput)
	return
}

func (d *ImagebuilderDouble) DeleteDistributionConfigurationWithContext(i0 context.Context, i1 *imagebuilder.DeleteDistributionConfigurationInput, i2 ...request.Option) (r0 *imagebuilder.DeleteDistributionConfigurationOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteDistributionConfigurationWithContext", i0, i1, i2)
	r0, _ = returns[0].(*imagebuilder.DeleteDistributionConfigurationOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ImagebuilderDouble) fakeDeleteDistributionConfigurationWithContext(ctx context.Context, in *imagebuilder.DeleteDistributionConfigurationInput, _ ...request.Option) (*imagebuilder.DeleteDistributionConfigurationOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "DeleteDistributionConfiguration cancelled", ctx.Err())
	default:
		return d.DeleteDistributionConfiguration(in)
	}
}

func (d *ImagebuilderDouble) DeleteImage(i0 *imagebuilder.DeleteImageInput) (r0 *imagebuilder.DeleteImageOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteImage", i0)
	r0, _ = returns[0].(*imagebuilder.DeleteImageOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ImagebuilderDouble) DeleteImagePipeline(i0 *imagebuilder.DeleteImagePipelineInput) (r0 *imagebuilder.DeleteImagePipelineOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteImagePipeline", i0)
	r0, _ = returns[0].(*imagebuilder.DeleteImagePipelineOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ImagebuilderDouble) DeleteImagePipelineRequest(i0 *imagebuilder.DeleteImagePipelineInput) (r0 *request.Request, r1 *imagebuilder.DeleteImagePipelineOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteImagePipelineRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*imagebuilder.DeleteImagePipelineOutput)
	return
}

func (d *ImagebuilderDouble) DeleteImagePipelineWithContext(i0 context.Context, i1 *imagebuilder.DeleteImagePipelineInput, i2 ...request.Option) (r0 *imagebuilder.DeleteImagePipelineOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteImagePipelineWithContext", i0, i1, i2)
	r0, _ = returns[0].(*imagebuilder.DeleteImagePipelineOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ImagebuilderDouble) fakeDeleteImagePipelineWithContext(ctx context.Context, in *imagebuilder.DeleteImagePipelineInput, _ ...request.Option) (*imagebuilder.DeleteImagePipelineOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "DeleteImagePipeline cancelled", ctx.Err())
	default:
		return d.DeleteImagePipeline(in)
	}
}

func (d *ImagebuilderDouble) DeleteImageRecipe(i0 *imagebuilder.DeleteImageRecipeInput) (r0 *imagebuilder.DeleteImageRecipeOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteImageRecipe", i0)
	r0, _ = returns[0].(*imagebuilder.DeleteImageRecipeOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ImagebuilderDouble) DeleteImageRecipeRequest(i0 *imagebuilder.DeleteImageRecipeInput) (r0 *request.Request, r1 *imagebuilder.DeleteImageRecipeOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteImageRecipeRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*imagebuilder.DeleteImageRecipeOutput)
	return
}

func (d *ImagebuilderDouble) DeleteImageRecipeWithContext(i0 context.Context, i1 *imagebuilder.DeleteImageRecipeInput, i2 ...request.Option) (r0 *imagebuilder.DeleteImageRecipeOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteImageRecipeWithContext", i0, i1, i2)
	r0, _ = returns[0].(*imagebuilder.DeleteImageRecipeOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ImagebuilderDouble) fakeDeleteImageRecipeWithContext(ctx context.Context, in *imagebuilder.DeleteImageRecipeInput, _ ...request.Option) (*imagebuilder.DeleteImageRecipeOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "DeleteImageRecipe cancelled", ctx.Err())
	default:
		return d.DeleteImageRecipe(in)
	}
}

func (d *ImagebuilderDouble) DeleteImageRequest(i0 *imagebuilder.DeleteImageInput) (r0 *request.Request, r1 *imagebuilder.DeleteImageOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteImageRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*imagebuilder.DeleteImageOutput)
	return
}

func (d *ImagebuilderDouble) DeleteImageWithContext(i0 context.Context, i1 *imagebuilder.DeleteImageInput, i2 ...request.Option) (r0 *imagebuilder.DeleteImageOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteImageWithContext", i0, i1, i2)
	r0, _ = returns[0].(*imagebuilder.DeleteImageOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ImagebuilderDouble) fakeDeleteImageWithContext(ctx context.Context, in *imagebuilder.DeleteImageInput, _ ...request.Option) (*imagebuilder.DeleteImageOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "DeleteImage cancelled", ctx.Err())
	default:
		return d.DeleteImage(in)
	}
}

func (d *ImagebuilderDouble) DeleteInfrastructureConfiguration(i0 *imagebuilder.DeleteInfrastructureConfigurationInput) (r0 *imagebuilder.DeleteInfrastructureConfigurationOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteInfrastructureConfiguration", i0)
	r0, _ = returns[0].(*imagebuilder.DeleteInfrastructureConfigurationOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ImagebuilderDouble) DeleteInfrastructureConfigurationRequest(i0 *imagebuilder.DeleteInfrastructureConfigurationInput) (r0 *request.Request, r1 *imagebuilder.DeleteInfrastructureConfigurationOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteInfrastructureConfigurationRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*imagebuilder.DeleteInfrastructureConfigurationOutput)
	return
}

func (d *ImagebuilderDouble) DeleteInfrastructureConfigurationWithContext(i0 context.Context, i1 *imagebuilder.DeleteInfrastructureConfigurationInput, i2 ...request.Option) (r0 *imagebuilder.DeleteInfrastructureConfigurationOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteInfrastructureConfigurationWithContext", i0, i1, i2)
	r0, _ = returns[0].(*imagebuilder.DeleteInfrastructureConfigurationOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ImagebuilderDouble) fakeDeleteInfrastructureConfigurationWithContext(ctx context.Context, in *imagebuilder.DeleteInfrastructureConfigurationInput, _ ...request.Option) (*imagebuilder.DeleteInfrastructureConfigurationOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "DeleteInfrastructureConfiguration cancelled", ctx.Err())
	default:
		return d.DeleteInfrastructureConfiguration(in)
	}
}

func (d *ImagebuilderDouble) GetComponent(i0 *imagebuilder.GetComponentInput) (r0 *imagebuilder.GetComponentOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetComponent", i0)
	r0, _ = returns[0].(*imagebuilder.GetComponentOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ImagebuilderDouble) GetComponentPolicy(i0 *imagebuilder.GetComponentPolicyInput) (r0 *imagebuilder.GetComponentPolicyOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetComponentPolicy", i0)
	r0, _ = returns[0].(*imagebuilder.GetComponentPolicyOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ImagebuilderDouble) GetComponentPolicyRequest(i0 *imagebuilder.GetComponentPolicyInput) (r0 *request.Request, r1 *imagebuilder.GetComponentPolicyOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetComponentPolicyRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*imagebuilder.GetComponentPolicyOutput)
	return
}

func (d *ImagebuilderDouble) GetComponentPolicyWithContext(i0 context.Context, i1 *imagebuilder.GetComponentPolicyInput, i2 ...request.Option) (r0 *imagebuilder.GetComponentPolicyOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetComponentPolicyWithContext", i0, i1, i2)
	r0, _ = returns[0].(*imagebuilder.GetComponentPolicyOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ImagebuilderDouble) fakeGetComponentPolicyWithContext(ctx context.Context, in *imagebuilder.GetComponentPolicyInput, _ ...request.Option) (*imagebuilder.GetComponentPolicyOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "GetComponentPolicy cancelled", ctx.Err())
	default:
		return d.GetComponentPolicy(in)
	}
}

func (d *ImagebuilderDouble) GetComponentRequest(i0 *imagebuilder.GetComponentInput) (r0 *request.Request, r1 *imagebuilder.GetComponentOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetComponentRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*imagebuilder.GetComponentOutput)
	return
}

func (d *ImagebuilderDouble) GetComponentWithContext(i0 context.Context, i1 *imagebuilder.GetComponentInput, i2 ...request.Option) (r0 *imagebuilder.GetComponentOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetComponentWithContext", i0, i1, i2)
	r0, _ = returns[0].(*imagebuilder.GetComponentOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ImagebuilderDouble) fakeGetComponentWithContext(ctx context.Context, in *imagebuilder.GetComponentInput, _ ...request.Option) (*imagebuilder.GetComponentOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "GetComponent cancelled", ctx.Err())
	default:
		return d.GetComponent(in)
	}
}

func (d *ImagebuilderDouble) GetDistributionConfiguration(i0 *imagebuilder.GetDistributionConfigurationInput) (r0 *imagebuilder.GetDistributionConfigurationOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetDistributionConfiguration", i0)
	r0, _ = returns[0].(*imagebuilder.GetDistributionConfigurationOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ImagebuilderDouble) GetDistributionConfigurationRequest(i0 *imagebuilder.GetDistributionConfigurationInput) (r0 *request.Request, r1 *imagebuilder.GetDistributionConfigurationOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetDistributionConfigurationRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*imagebuilder.GetDistributionConfigurationOutput)
	return
}

func (d *ImagebuilderDouble) GetDistributionConfigurationWithContext(i0 context.Context, i1 *imagebuilder.GetDistributionConfigurationInput, i2 ...request.Option) (r0 *imagebuilder.GetDistributionConfigurationOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetDistributionConfigurationWithContext", i0, i1, i2)
	r0, _ = returns[0].(*imagebuilder.GetDistributionConfigurationOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ImagebuilderDouble) fakeGetDistributionConfigurationWithContext(ctx context.Context, in *imagebuilder.GetDistributionConfigurationInput, _ ...request.Option) (*imagebuilder.GetDistributionConfigurationOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "GetDistributionConfiguration cancelled", ctx.Err())
	default:
		return d.GetDistributionConfiguration(in)
	}
}

func (d *ImagebuilderDouble) GetImage(i0 *imagebuilder.GetImageInput) (r0 *imagebuilder.GetImageOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetImage", i0)
	r0, _ = returns[0].(*imagebuilder.GetImageOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ImagebuilderDouble) GetImagePipeline(i0 *imagebuilder.GetImagePipelineInput) (r0 *imagebuilder.GetImagePipelineOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetImagePipeline", i0)
	r0, _ = returns[0].(*imagebuilder.GetImagePipelineOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ImagebuilderDouble) GetImagePipelineRequest(i0 *imagebuilder.GetImagePipelineInput) (r0 *request.Request, r1 *imagebuilder.GetImagePipelineOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetImagePipelineRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*imagebuilder.GetImagePipelineOutput)
	return
}

func (d *ImagebuilderDouble) GetImagePipelineWithContext(i0 context.Context, i1 *imagebuilder.GetImagePipelineInput, i2 ...request.Option) (r0 *imagebuilder.GetImagePipelineOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetImagePipelineWithContext", i0, i1, i2)
	r0, _ = returns[0].(*imagebuilder.GetImagePipelineOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ImagebuilderDouble) fakeGetImagePipelineWithContext(ctx context.Context, in *imagebuilder.GetImagePipelineInput, _ ...request.Option) (*imagebuilder.GetImagePipelineOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "GetImagePipeline cancelled", ctx.Err())
	default:
		return d.GetImagePipeline(in)
	}
}

func (d *ImagebuilderDouble) GetImagePolicy(i0 *imagebuilder.GetImagePolicyInput) (r0 *imagebuilder.GetImagePolicyOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetImagePolicy", i0)
	r0, _ = returns[0].(*imagebuilder.GetImagePolicyOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ImagebuilderDouble) GetImagePolicyRequest(i0 *imagebuilder.GetImagePolicyInput) (r0 *request.Request, r1 *imagebuilder.GetImagePolicyOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetImagePolicyRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*imagebuilder.GetImagePolicyOutput)
	return
}

func (d *ImagebuilderDouble) GetImagePolicyWithContext(i0 context.Context, i1 *imagebuilder.GetImagePolicyInput, i2 ...request.Option) (r0 *imagebuilder.GetImagePolicyOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetImagePolicyWithContext", i0, i1, i2)
	r0, _ = returns[0].(*imagebuilder.GetImagePolicyOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ImagebuilderDouble) fakeGetImagePolicyWithContext(ctx context.Context, in *imagebuilder.GetImagePolicyInput, _ ...request.Option) (*imagebuilder.GetImagePolicyOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "GetImagePolicy cancelled", ctx.Err())
	default:
		return d.GetImagePolicy(in)
	}
}

func (d *ImagebuilderDouble) GetImageRecipe(i0 *imagebuilder.GetImageRecipeInput) (r0 *imagebuilder.GetImageRecipeOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetImageRecipe", i0)
	r0, _ = returns[0].(*imagebuilder.GetImageRecipeOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ImagebuilderDouble) GetImageRecipePolicy(i0 *imagebuilder.GetImageRecipePolicyInput) (r0 *imagebuilder.GetImageRecipePolicyOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetImageRecipePolicy", i0)
	r0, _ = returns[0].(*imagebuilder.GetImageRecipePolicyOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ImagebuilderDouble) GetImageRecipePolicyRequest(i0 *imagebuilder.GetImageRecipePolicyInput) (r0 *request.Request, r1 *imagebuilder.GetImageRecipePolicyOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetImageRecipePolicyRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*imagebuilder.GetImageRecipePolicyOutput)
	return
}

func (d *ImagebuilderDouble) GetImageRecipePolicyWithContext(i0 context.Context, i1 *imagebuilder.GetImageRecipePolicyInput, i2 ...request.Option) (r0 *imagebuilder.GetImageRecipePolicyOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetImageRecipePolicyWithContext", i0, i1, i2)
	r0, _ = returns[0].(*imagebuilder.GetImageRecipePolicyOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ImagebuilderDouble) fakeGetImageRecipePolicyWithContext(ctx context.Context, in *imagebuilder.GetImageRecipePolicyInput, _ ...request.Option) (*imagebuilder.GetImageRecipePolicyOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "GetImageRecipePolicy cancelled", ctx.Err())
	default:
		return d.GetImageRecipePolicy(in)
	}
}

func (d *ImagebuilderDouble) GetImageRecipeRequest(i0 *imagebuilder.GetImageRecipeInput) (r0 *request.Request, r1 *imagebuilder.GetImageRecipeOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetImageRecipeRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*imagebuilder.GetImageRecipeOutput)
	return
}

func (d *ImagebuilderDouble) GetImageRecipeWithContext(i0 context.Context, i1 *imagebuilder.GetImageRecipeInput, i2 ...request.Option) (r0 *imagebuilder.GetImageRecipeOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetImageRecipeWithContext", i0, i1, i2)
	r0, _ = returns[0].(*imagebuilder.GetImageRecipeOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ImagebuilderDouble) fakeGetImageRecipeWithContext(ctx context.Context, in *imagebuilder.GetImageRecipeInput, _ ...request.Option) (*imagebuilder.GetImageRecipeOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "GetImageRecipe cancelled", ctx.Err())
	default:
		return d.GetImageRecipe(in)
	}
}

func (d *ImagebuilderDouble) GetImageRequest(i0 *imagebuilder.GetImageInput) (r0 *request.Request, r1 *imagebuilder.GetImageOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetImageRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*imagebuilder.GetImageOutput)
	return
}

func (d *ImagebuilderDouble) GetImageWithContext(i0 context.Context, i1 *imagebuilder.GetImageInput, i2 ...request.Option) (r0 *imagebuilder.GetImageOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetImageWithContext", i0, i1, i2)
	r0, _ = returns[0].(*imagebuilder.GetImageOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ImagebuilderDouble) fakeGetImageWithContext(ctx context.Context, in *imagebuilder.GetImageInput, _ ...request.Option) (*imagebuilder.GetImageOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "GetImage cancelled", ctx.Err())
	default:
		return d.GetImage(in)
	}
}

func (d *ImagebuilderDouble) GetInfrastructureConfiguration(i0 *imagebuilder.GetInfrastructureConfigurationInput) (r0 *imagebuilder.GetInfrastructureConfigurationOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetInfrastructureConfiguration", i0)
	r0, _ = returns[0].(*imagebuilder.GetInfrastructureConfigurationOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ImagebuilderDouble) GetInfrastructureConfigurationRequest(i0 *imagebuilder.GetInfrastructureConfigurationInput) (r0 *request.Request, r1 *imagebuilder.GetInfrastructureConfigurationOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetInfrastructureConfigurationRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*imagebuilder.GetInfrastructureConfigurationOutput)
	return
}

func (d *ImagebuilderDouble) GetInfrastructureConfigurationWithContext(i0 context.Context, i1 *imagebuilder.GetInfrastructureConfigurationInput, i2 ...request.Option) (r0 *imagebuilder.GetInfrastructureConfigurationOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetInfrastructureConfigurationWithContext", i0, i1, i2)
	r0, _ = returns[0].(*imagebuilder.GetInfrastructureConfigurationOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ImagebuilderDouble) fakeGetInfrastructureConfigurationWithContext(ctx context.Context, in *imagebuilder.GetInfrastructureConfigurationInput, _ ...request.Option) (*imagebuilder.GetInfrastructureConfigurationOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "GetInfrastructureConfiguration cancelled", ctx.Err())
	default:
		return d.GetInfrastructureConfiguration(in)
	}
}

func (d *ImagebuilderDouble) ImportComponent(i0 *imagebuilder.ImportComponentInput) (r0 *imagebuilder.ImportComponentOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ImportComponent", i0)
	r0, _ = returns[0].(*imagebuilder.ImportComponentOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ImagebuilderDouble) ImportComponentRequest(i0 *imagebuilder.ImportComponentInput) (r0 *request.Request, r1 *imagebuilder.ImportComponentOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ImportComponentRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*imagebuilder.ImportComponentOutput)
	return
}

func (d *ImagebuilderDouble) ImportComponentWithContext(i0 context.Context, i1 *imagebuilder.ImportComponentInput, i2 ...request.Option) (r0 *imagebuilder.ImportComponentOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ImportComponentWithContext", i0, i1, i2)
	r0, _ = returns[0].(*imagebuilder.ImportComponentOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ImagebuilderDouble) fakeImportComponentWithContext(ctx context.Context, in *imagebuilder.ImportComponentInput, _ ...request.Option) (*imagebuilder.ImportComponentOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "ImportComponent cancelled", ctx.Err())
	default:
		return d.ImportComponent(in)
	}
}

func (d *ImagebuilderDouble) ListComponentBuildVersions(i0 *imagebuilder.ListComponentBuildVersionsInput) (r0 *imagebuilder.ListComponentBuildVersionsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListComponentBuildVersions", i0)
	r0, _ = returns[0].(*imagebuilder.ListComponentBuildVersionsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ImagebuilderDouble) ListComponentBuildVersionsPages(i0 *imagebuilder.ListComponentBuildVersionsInput, i1 func(*imagebuilder.ListComponentBuildVersionsOutput, bool) bool) (r0 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListComponentBuildVersionsPages", i0, i1)
	r0, _ = returns[0].(error)
	return
}

func (d *ImagebuilderDouble) fakeListComponentBuildVersionsPages(in *imagebuilder.ListComponentBuildVersionsInput, pager func(*imagebuilder.ListComponentBuildVersionsOutput, bool) (shouldContinue bool)) error {
	return d.Paginate("ListComponentBuildVersions", paginators, in, pager)
}

func (d *ImagebuilderDouble) ListComponentBuildVersionsPagesWithContext(i0 context.Context, i1 *imagebuilder.ListComponentBuildVersionsInput, i2 func(*imagebuilder.ListComponentBuildVersionsOutput, bool) bool, i3 ...request.Option) (r0 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListComponentBuildVersionsPagesWithContext", i0, i1, i2, i3)
	r0, _ = returns[0].(error)
	return
}

func (d *ImagebuilderDouble) fakeListComponentBuildVersionsPagesWithContext(ctx context.Context, in *imagebuilder.ListComponentBuildVersionsInput, pager func(*imagebuilder.ListComponentBuildVersionsOutput, bool) (shouldContinue bool), options ...request.Option) error {
	return d.PaginateWithContext("ListComponentBuildVersions", paginators, ctx, in, pager, options...)
}

func (d *ImagebuilderDouble) ListComponentBuildVersionsRequest(i0 *imagebuilder.ListComponentBuildVersionsInput) (r0 *request.Request, r1 *imagebuilder.ListComponentBuildVersionsOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListComponentBuildVersionsRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*imagebuilder.ListComponentBuildVersionsOutput)
	return
}

func (d *ImagebuilderDouble) ListComponentBuildVersionsWithContext(i0 context.Context, i1 *imagebuilder.ListComponentBuildVersionsInput, i2 ...request.Option) (r0 *imagebuilder.ListComponentBuildVersionsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListComponentBuildVersionsWithContext", i0, i1, i2)
	r0, _ = returns[0].(*imagebuilder.ListComponentBuildVersionsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ImagebuilderDouble) fakeListComponentBuildVersionsWithContext(ctx context.Context, in *imagebuilder.ListComponentBuildVersionsInput, _ ...request.Option) (*imagebuilder.ListComponentBuildVersionsOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "ListComponentBuildVersions cancelled", ctx.Err())
	default:
		return d.ListComponentBuildVersions(in)
	}
}

func (d *ImagebuilderDouble) ListComponents(i0 *imagebuilder.ListComponentsInput) (r0 *imagebuilder.ListComponentsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListComponents", i0)
	r0, _ = returns[0].(*imagebuilder.ListComponentsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ImagebuilderDouble) ListComponentsPages(i0 *imagebuilder.ListComponentsInput, i1 func(*imagebuilder.ListComponentsOutput, bool) bool) (r0 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListComponentsPages", i0, i1)
	r0, _ = returns[0].(error)
	return
}

func (d *ImagebuilderDouble) fakeListComponentsPages(in *imagebuilder.ListComponentsInput, pager func(*imagebuilder.ListComponentsOutput, bool) (shouldContinue bool)) error {
	return d.Paginate("ListComponents", paginators, in, pager)
}

func (d *ImagebuilderDouble) ListComponentsPagesWithContext(i0 context.Context, i1 *imagebuilder.ListComponentsInput, i2 func(*imagebuilder.ListComponentsOutput, bool) bool, i3 ...request.Option) (r0 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListComponentsPagesWithContext", i0, i1, i2, i3)
	r0, _ = returns[0].(error)
	return
}

func (d *ImagebuilderDouble) fakeListComponentsPagesWithContext(ctx context.Context, in *imagebuilder.ListComponentsInput, pager func(*imagebuilder.ListComponentsOutput, bool) (shouldContinue bool), options ...request.Option) error {
	return d.PaginateWithContext("ListComponents", paginators, ctx, in, pager, options...)
}

func (d *ImagebuilderDouble) ListComponentsRequest(i0 *imagebuilder.ListComponentsInput) (r0 *request.Request, r1 *imagebuilder.ListComponentsOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListComponentsRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*imagebuilder.ListComponentsOutput)
	return
}

func (d *ImagebuilderDouble) ListComponentsWithContext(i0 context.Context, i1 *imagebuilder.ListComponentsInput, i2 ...request.Option) (r0 *imagebuilder.ListComponentsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListComponentsWithContext", i0, i1, i2)
	r0, _ = returns[0].(*imagebuilder.ListComponentsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ImagebuilderDouble) fakeListComponentsWithContext(ctx context.Context, in *imagebuilder.ListComponentsInput, _ ...request.Option) (*imagebuilder.ListComponentsOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "ListComponents cancelled", ctx.Err())
	default:
		return d.ListComponents(in)
	}
}

func (d *ImagebuilderDouble) ListDistributionConfigurations(i0 *imagebuilder.ListDistributionConfigurationsInput) (r0 *imagebuilder.ListDistributionConfigurationsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListDistributionConfigurations", i0)
	r0, _ = returns[0].(*imagebuilder.ListDistributionConfigurationsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ImagebuilderDouble) ListDistributionConfigurationsPages(i0 *imagebuilder.ListDistributionConfigurationsInput, i1 func(*imagebuilder.ListDistributionConfigurationsOutput, bool) bool) (r0 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListDistributionConfigurationsPages", i0, i1)
	r0, _ = returns[0].(error)
	return
}

func (d *ImagebuilderDouble) fakeListDistributionConfigurationsPages(in *imagebuilder.ListDistributionConfigurationsInput, pager func(*imagebuilder.ListDistributionConfigurationsOutput, bool) (shouldContinue bool)) error {
	return d.Paginate("ListDistributionConfigurations", paginators, in, pager)
}

func (d *ImagebuilderDouble) ListDistributionConfigurationsPagesWithContext(i0 context.Context, i1 *imagebuilder.ListDistributionConfigurationsInput, i2 func(*imagebuilder.ListDistributionConfigurationsOutput, bool) bool, i3 ...request.Option) (r0 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListDistributionConfigurationsPagesWithContext", i0, i1, i2, i3)
	r0, _ = returns[0].(error)
	return
}

func (d *ImagebuilderDouble) fakeListDistributionConfigurationsPagesWithContext(ctx context.Context, in *imagebuilder.ListDistributionConfigurationsInput, pager func(*imagebuilder.ListDistributionConfigurationsOutput, bool) (shouldContinue bool), options ...request.Option) error {
	return d.PaginateWithContext("ListDistributionConfigurations", paginators, ctx, in, pager, options...)
}

func (d *ImagebuilderDouble) ListDistributionConfigurationsRequest(i0 *imagebuilder.ListDistributionConfigurationsInput) (r0 *request.Request, r1 *imagebuilder.ListDistributionConfigurationsOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListDistributionConfigurationsRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*imagebuilder.ListDistributionConfigurationsOutput)
	return
}

func (d *ImagebuilderDouble) ListDistributionConfigurationsWithContext(i0 context.Context, i1 *imagebuilder.ListDistributionConfigurationsInput, i2 ...request.Option) (r0 *imagebuilder.ListDistributionConfigurationsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListDistributionConfigurationsWithContext", i0, i1, i2)
	r0, _ = returns[0].(*imagebuilder.ListDistributionConfigurationsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ImagebuilderDouble) fakeListDistributionConfigurationsWithContext(ctx context.Context, in *imagebuilder.ListDistributionConfigurationsInput, _ ...request.Option) (*imagebuilder.ListDistributionConfigurationsOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "ListDistributionConfigurations cancelled", ctx.Err())
	default:
		return d.ListDistributionConfigurations(in)
	}
}

func (d *ImagebuilderDouble) ListImageBuildVersions(i0 *imagebuilder.ListImageBuildVersionsInput) (r0 *imagebuilder.ListImageBuildVersionsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListImageBuildVersions", i0)
	r0, _ = returns[0].(*imagebuilder.ListImageBuildVersionsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ImagebuilderDouble) ListImageBuildVersionsPages(i0 *imagebuilder.ListImageBuildVersionsInput, i1 func(*imagebuilder.ListImageBuildVersionsOutput, bool) bool) (r0 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListImageBuildVersionsPages", i0, i1)
	r0, _ = returns[0].(error)
	return
}

func (d *ImagebuilderDouble) fakeListImageBuildVersionsPages(in *imagebuilder.ListImageBuildVersionsInput, pager func(*imagebuilder.ListImageBuildVersionsOutput, bool) (shouldContinue bool)) error {
	return d.Paginate("ListImageBuildVersions", paginators, in, pager)
}

func (d *ImagebuilderDouble) ListImageBuildVersionsPagesWithContext(i0 context.Context, i1 *imagebuilder.ListImageBuildVersionsInput, i2 func(*imagebuilder.ListImageBuildVersionsOutput, bool) bool, i3 ...request.Option) (r0 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListImageBuildVersionsPagesWithContext", i0, i1, i2, i3)
	r0, _ = returns[0].(error)
	return
}

func (d *ImagebuilderDouble) fakeListImageBuildVersionsPagesWithContext(ctx context.Context, in *imagebuilder.ListImageBuildVersionsInput, pager func(*imagebuilder.ListImageBuildVersionsOutput, bool) (shouldContinue bool), options ...request.Option) error {
	return d.PaginateWithContext("ListImageBuildVersions", paginators, ctx, in, pager, options...)
}

func (d *ImagebuilderDouble) ListImageBuildVersionsRequest(i0 *imagebuilder.ListImageBuildVersionsInput) (r0 *request.Request, r1 *imagebuilder.ListImageBuildVersionsOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListImageBuildVersionsRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*imagebuilder.ListImageBuildVersionsOutput)
	return
}

func (d *ImagebuilderDouble) ListImageBuildVersionsWithContext(i0 context.Context, i1 *imagebuilder.ListImageBuildVersionsInput, i2 ...request.Option) (r0 *imagebuilder.ListImageBuildVersionsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListImageBuildVersionsWithContext", i0, i1, i2)
	r0, _ = returns[0].(*imagebuilder.ListImageBuildVersionsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ImagebuilderDouble) fakeListImageBuildVersionsWithContext(ctx context.Context, in *imagebuilder.ListImageBuildVersionsInput, _ ...request.Option) (*imagebuilder.ListImageBuildVersionsOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "ListImageBuildVersions cancelled", ctx.Err())
	default:
		return d.ListImageBuildVersions(in)
	}
}

func (d *ImagebuilderDouble) ListImagePipelineImages(i0 *imagebuilder.ListImagePipelineImagesInput) (r0 *imagebuilder.ListImagePipelineImagesOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListImagePipelineImages", i0)
	r0, _ = returns[0].(*imagebuilder.ListImagePipelineImagesOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ImagebuilderDouble) ListImagePipelineImagesPages(i0 *imagebuilder.ListImagePipelineImagesInput, i1 func(*imagebuilder.ListImagePipelineImagesOutput, bool) bool) (r0 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListImagePipelineImagesPages", i0, i1)
	r0, _ = returns[0].(error)
	return
}

func (d *ImagebuilderDouble) fakeListImagePipelineImagesPages(in *imagebuilder.ListImagePipelineImagesInput, pager func(*imagebuilder.ListImagePipelineImagesOutput, bool) (shouldContinue bool)) error {
	return d.Paginate("ListImagePipelineImages", paginators, in, pager)
}

func (d *ImagebuilderDouble) ListImagePipelineImagesPagesWithContext(i0 context.Context, i1 *imagebuilder.ListImagePipelineImagesInput, i2 func(*imagebuilder.ListImagePipelineImagesOutput, bool) bool, i3 ...request.Option) (r0 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListImagePipelineImagesPagesWithContext", i0, i1, i2, i3)
	r0, _ = returns[0].(error)
	return
}

func (d *ImagebuilderDouble) fakeListImagePipelineImagesPagesWithContext(ctx context.Context, in *imagebuilder.ListImagePipelineImagesInput, pager func(*imagebuilder.ListImagePipelineImagesOutput, bool) (shouldContinue bool), options ...request.Option) error {
	return d.PaginateWithContext("ListImagePipelineImages", paginators, ctx, in, pager, options...)
}

func (d *ImagebuilderDouble) ListImagePipelineImagesRequest(i0 *imagebuilder.ListImagePipelineImagesInput) (r0 *request.Request, r1 *imagebuilder.ListImagePipelineImagesOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListImagePipelineImagesRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*imagebuilder.ListImagePipelineImagesOutput)
	return
}

func (d *ImagebuilderDouble) ListImagePipelineImagesWithContext(i0 context.Context, i1 *imagebuilder.ListImagePipelineImagesInput, i2 ...request.Option) (r0 *imagebuilder.ListImagePipelineImagesOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListImagePipelineImagesWithContext", i0, i1, i2)
	r0, _ = returns[0].(*imagebuilder.ListImagePipelineImagesOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ImagebuilderDouble) fakeListImagePipelineImagesWithContext(ctx context.Context, in *imagebuilder.ListImagePipelineImagesInput, _ ...request.Option) (*imagebuilder.ListImagePipelineImagesOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "ListImagePipelineImages cancelled", ctx.Err())
	default:
		return d.ListImagePipelineImages(in)
	}
}

func (d *ImagebuilderDouble) ListImagePipelines(i0 *imagebuilder.ListImagePipelinesInput) (r0 *imagebuilder.ListImagePipelinesOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListImagePipelines", i0)
	r0, _ = returns[0].(*imagebuilder.ListImagePipelinesOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ImagebuilderDouble) ListImagePipelinesPages(i0 *imagebuilder.ListImagePipelinesInput, i1 func(*imagebuilder.ListImagePipelinesOutput, bool) bool) (r0 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListImagePipelinesPages", i0, i1)
	r0, _ = returns[0].(error)
	return
}

func (d *ImagebuilderDouble) fakeListImagePipelinesPages(in *imagebuilder.ListImagePipelinesInput, pager func(*imagebuilder.ListImagePipelinesOutput, bool) (shouldContinue bool)) error {
	return d.Paginate("ListImagePipelines", paginators, in, pager)
}

func (d *ImagebuilderDouble) ListImagePipelinesPagesWithContext(i0 context.Context, i1 *imagebuilder.ListImagePipelinesInput, i2 func(*imagebuilder.ListImagePipelinesOutput, bool) bool, i3 ...request.Option) (r0 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListImagePipelinesPagesWithContext", i0, i1, i2, i3)
	r0, _ = returns[0].(error)
	return
}

func (d *ImagebuilderDouble) fakeListImagePipelinesPagesWithContext(ctx context.Context, in *imagebuilder.ListImagePipelinesInput, pager func(*imagebuilder.ListImagePipelinesOutput, bool) (shouldContinue bool), options ...request.Option) error {
	return d.PaginateWithContext("ListImagePipelines", paginators, ctx, in, pager, options...)
}

func (d *ImagebuilderDouble) ListImagePipelinesRequest(i0 *imagebuilder.ListImagePipelinesInput) (r0 *request.Request, r1 *imagebuilder.ListImagePipelinesOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListImagePipelinesRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*imagebuilder.ListImagePipelinesOutput)
	return
}

func (d *ImagebuilderDouble) ListImagePipelinesWithContext(i0 context.Context, i1 *imagebuilder.ListImagePipelinesInput, i2 ...request.Option) (r0 *imagebuilder.ListImagePipelinesOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListImagePipelinesWithContext", i0, i1, i2)
	r0, _ = returns[0].(*imagebuilder.ListImagePipelinesOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ImagebuilderDouble) fakeListImagePipelinesWithContext(ctx context.Context, in *imagebuilder.ListImagePipelinesInput, _ ...request.Option) (*imagebuilder.ListImagePipelinesOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "ListImagePipelines cancelled", ctx.Err())
	default:
		return d.ListImagePipelines(in)
	}
}

func (d *ImagebuilderDouble) ListImageRecipes(i0 *imagebuilder.ListImageRecipesInput) (r0 *imagebuilder.ListImageRecipesOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListImageRecipes", i0)
	r0, _ = returns[0].(*imagebuilder.ListImageRecipesOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ImagebuilderDouble) ListImageRecipesPages(i0 *imagebuilder.ListImageRecipesInput, i1 func(*imagebuilder.ListImageRecipesOutput, bool) bool) (r0 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListImageRecipesPages", i0, i1)
	r0, _ = returns[0].(error)
	return
}

func (d *ImagebuilderDouble) fakeListImageRecipesPages(in *imagebuilder.ListImageRecipesInput, pager func(*imagebuilder.ListImageRecipesOutput, bool) (shouldContinue bool)) error {
	return d.Paginate("ListImageRecipes", paginators, in, pager)
}

func (d *ImagebuilderDouble) ListImageRecipesPagesWithContext(i0 context.Context, i1 *imagebuilder.ListImageRecipesInput, i2 func(*imagebuilder.ListImageRecipesOutput, bool) bool, i3 ...request.Option) (r0 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListImageRecipesPagesWithContext", i0, i1, i2, i3)
	r0, _ = returns[0].(error)
	return
}

func (d *ImagebuilderDouble) fakeListImageRecipesPagesWithContext(ctx context.Context, in *imagebuilder.ListImageRecipesInput, pager func(*imagebuilder.ListImageRecipesOutput, bool) (shouldContinue bool), options ...request.Option) error {
	return d.PaginateWithContext("ListImageRecipes", paginators, ctx, in, pager, options...)
}

func (d *ImagebuilderDouble) ListImageRecipesRequest(i0 *imagebuilder.ListImageRecipesInput) (r0 *request.Request, r1 *imagebuilder.ListImageRecipesOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListImageRecipesRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*imagebuilder.ListImageRecipesOutput)
	return
}

func (d *ImagebuilderDouble) ListImageRecipesWithContext(i0 context.Context, i1 *imagebuilder.ListImageRecipesInput, i2 ...request.Option) (r0 *imagebuilder.ListImageRecipesOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListImageRecipesWithContext", i0, i1, i2)
	r0, _ = returns[0].(*imagebuilder.ListImageRecipesOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ImagebuilderDouble) fakeListImageRecipesWithContext(ctx context.Context, in *imagebuilder.ListImageRecipesInput, _ ...request.Option) (*imagebuilder.ListImageRecipesOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "ListImageRecipes cancelled", ctx.Err())
	default:
		return d.ListImageRecipes(in)
	}
}

func (d *ImagebuilderDouble) ListImages(i0 *imagebuilder.ListImagesInput) (r0 *imagebuilder.ListImagesOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListImages", i0)
	r0, _ = returns[0].(*imagebuilder.ListImagesOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ImagebuilderDouble) ListImagesPages(i0 *imagebuilder.ListImagesInput, i1 func(*imagebuilder.ListImagesOutput, bool) bool) (r0 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListImagesPages", i0, i1)
	r0, _ = returns[0].(error)
	return
}

func (d *ImagebuilderDouble) fakeListImagesPages(in *imagebuilder.ListImagesInput, pager func(*imagebuilder.ListImagesOutput, bool) (shouldContinue bool)) error {
	return d.Paginate("ListImages", paginators, in, pager)
}

func (d *ImagebuilderDouble) ListImagesPagesWithContext(i0 context.Context, i1 *imagebuilder.ListImagesInput, i2 func(*imagebuilder.ListImagesOutput, bool) bool, i3 ...request.Option) (r0 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListImagesPagesWithContext", i0, i1, i2, i3)
	r0, _ = returns[0].(error)
	return
}

func (d *ImagebuilderDouble) fakeListImagesPagesWithContext(ctx context.Context, in *imagebuilder.ListImagesInput, pager func(*imagebuilder.ListImagesOutput, bool) (shouldContinue bool), options ...request.Option) error {
	return d.PaginateWithContext("ListImages", paginators, ctx, in, pager, options...)
}

func (d *ImagebuilderDouble) ListImagesRequest(i0 *imagebuilder.ListImagesInput) (r0 *request.Request, r1 *imagebuilder.ListImagesOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListImagesRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*imagebuilder.ListImagesOutput)
	return
}

func (d *ImagebuilderDouble) ListImagesWithContext(i0 context.Context, i1 *imagebuilder.ListImagesInput, i2 ...request.Option) (r0 *imagebuilder.ListImagesOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListImagesWithContext", i0, i1, i2)
	r0, _ = returns[0].(*imagebuilder.ListImagesOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ImagebuilderDouble) fakeListImagesWithContext(ctx context.Context, in *imagebuilder.ListImagesInput, _ ...request.Option) (*imagebuilder.ListImagesOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "ListImages cancelled", ctx.Err())
	default:
		return d.ListImages(in)
	}
}

func (d *ImagebuilderDouble) ListInfrastructureConfigurations(i0 *imagebuilder.ListInfrastructureConfigurationsInput) (r0 *imagebuilder.ListInfrastructureConfigurationsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListInfrastructureConfigurations", i0)
	r0, _ = returns[0].(*imagebuilder.ListInfrastructureConfigurationsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ImagebuilderDouble) ListInfrastructureConfigurationsPages(i0 *imagebuilder.ListInfrastructureConfigurationsInput, i1 func(*imagebuilder.ListInfrastructureConfigurationsOutput, bool) bool) (r0 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListInfrastructureConfigurationsPages", i0, i1)
	r0, _ = returns[0].(error)
	return
}

func (d *ImagebuilderDouble) fakeListInfrastructureConfigurationsPages(in *imagebuilder.ListInfrastructureConfigurationsInput, pager func(*imagebuilder.ListInfrastructureConfigurationsOutput, bool) (shouldContinue bool)) error {
	return d.Paginate("ListInfrastructureConfigurations", paginators, in, pager)
}

func (d *ImagebuilderDouble) ListInfrastructureConfigurationsPagesWithContext(i0 context.Context, i1 *imagebuilder.ListInfrastructureConfigurationsInput, i2 func(*imagebuilder.ListInfrastructureConfigurationsOutput, bool) bool, i3 ...request.Option) (r0 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListInfrastructureConfigurationsPagesWithContext", i0, i1, i2, i3)
	r0, _ = returns[0].(error)
	return
}

func (d *ImagebuilderDouble) fakeListInfrastructureConfigurationsPagesWithContext(ctx context.Context, in *imagebuilder.ListInfrastructureConfigurationsInput, pager func(*imagebuilder.ListInfrastructureConfigurationsOutput, bool) (shouldContinue bool), options ...request.Option) error {
	return d.PaginateWithContext("ListInfrastructureConfigurations", paginators, ctx, in, pager, options...)
}

func (d *ImagebuilderDouble) ListInfrastructureConfigurationsRequest(i0 *imagebuilder.ListInfrastructureConfigurationsInput) (r0 *request.Request, r1 *imagebuilder.ListInfrastructureConfigurationsOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListInfrastructureConfigurationsRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*imagebuilder.ListInfrastructureConfigurationsOutput)
	return
}

func (d *ImagebuilderDouble) ListInfrastructureConfigurationsWithContext(i0 context.Context, i1 *imagebuilder.ListInfrastructureConfigurationsInput, i2 ...request.Option) (r0 *imagebuilder.ListInfrastructureConfigurationsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListInfrastructureConfigurationsWithContext", i0, i1, i2)
	r0, _ = returns[0].(*imagebuilder.ListInfrastructureConfigurationsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ImagebuilderDouble) fakeListInfrastructureConfigurationsWithContext(ctx context.Context, in *imagebuilder.ListInfrastructureConfigurationsInput, _ ...request.Option) (*imagebuilder.ListInfrastructureConfigurationsOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "ListInfrastructureConfigurations cancelled", ctx.Err())
	default:
		return d.ListInfrastructureConfigurations(in)
	}
}

func (d *ImagebuilderDouble) ListTagsForResource(i0 *imagebuilder.ListTagsForResourceInput) (r0 *imagebuilder.ListTagsForResourceOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListTagsForResource", i0)
	r0, _ = returns[0].(*imagebuilder.ListTagsForResourceOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ImagebuilderDouble) ListTagsForResourceRequest(i0 *imagebuilder.ListTagsForResourceInput) (r0 *request.Request, r1 *imagebuilder.ListTagsForResourceOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListTagsForResourceRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*imagebuilder.ListTagsForResourceOutput)
	return
}

func (d *ImagebuilderDouble) ListTagsForResourceWithContext(i0 context.Context, i1 *imagebuilder.ListTagsForResourceInput, i2 ...request.Option) (r0 *imagebuilder.ListTagsForResourceOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListTagsForResourceWithContext", i0, i1, i2)
	r0, _ = returns[0].(*imagebuilder.ListTagsForResourceOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ImagebuilderDouble) fakeListTagsForResourceWithContext(ctx context.Context, in *imagebuilder.ListTagsForResourceInput, _ ...request.Option) (*imagebuilder.ListTagsForResourceOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "ListTagsForResource cancelled", ctx.Err())
	default:
		return d.ListTagsForResource(in)
	}
}

func (d *ImagebuilderDouble) PutComponentPolicy(i0 *imagebuilder.PutComponentPolicyInput) (r0 *imagebuilder.PutComponentPolicyOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("PutComponentPolicy", i0)
	r0, _ = returns[0].(*imagebuilder.PutComponentPolicyOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ImagebuilderDouble) PutComponentPolicyRequest(i0 *imagebuilder.PutComponentPolicyInput) (r0 *request.Request, r1 *imagebuilder.PutComponentPolicyOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("PutComponentPolicyRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*imagebuilder.PutComponentPolicyOutput)
	return
}

func (d *ImagebuilderDouble) PutComponentPolicyWithContext(i0 context.Context, i1 *imagebuilder.PutComponentPolicyInput, i2 ...request.Option) (r0 *imagebuilder.PutComponentPolicyOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("PutComponentPolicyWithContext", i0, i1, i2)
	r0, _ = returns[0].(*imagebuilder.PutComponentPolicyOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ImagebuilderDouble) fakePutComponentPolicyWithContext(ctx context.Context, in *imagebuilder.PutComponentPolicyInput, _ ...request.Option) (*imagebuilder.PutComponentPolicyOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "PutComponentPolicy cancelled", ctx.Err())
	default:
		return d.PutComponentPolicy(in)
	}
}

func (d *ImagebuilderDouble) PutImagePolicy(i0 *imagebuilder.PutImagePolicyInput) (r0 *imagebuilder.PutImagePolicyOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("PutImagePolicy", i0)
	r0, _ = returns[0].(*imagebuilder.PutImagePolicyOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ImagebuilderDouble) PutImagePolicyRequest(i0 *imagebuilder.PutImagePolicyInput) (r0 *request.Request, r1 *imagebuilder.PutImagePolicyOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("PutImagePolicyRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*imagebuilder.PutImagePolicyOutput)
	return
}

func (d *ImagebuilderDouble) PutImagePolicyWithContext(i0 context.Context, i1 *imagebuilder.PutImagePolicyInput, i2 ...request.Option) (r0 *imagebuilder.PutImagePolicyOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("PutImagePolicyWithContext", i0, i1, i2)
	r0, _ = returns[0].(*imagebuilder.PutImagePolicyOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ImagebuilderDouble) fakePutImagePolicyWithContext(ctx context.Context, in *imagebuilder.PutImagePolicyInput, _ ...request.Option) (*imagebuilder.PutImagePolicyOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "PutImagePolicy cancelled", ctx.Err())
	default:
		return d.PutImagePolicy(in)
	}
}

func (d *ImagebuilderDouble) PutImageRecipePolicy(i0 *imagebuilder.PutImageRecipePolicyInput) (r0 *imagebuilder.PutImageRecipePolicyOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("PutImageRecipePolicy", i0)
	r0, _ = returns[0].(*imagebuilder.PutImageRecipePolicyOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ImagebuilderDouble) PutImageRecipePolicyRequest(i0 *imagebuilder.PutImageRecipePolicyInput) (r0 *request.Request, r1 *imagebuilder.PutImageRecipePolicyOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("PutImageRecipePolicyRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*imagebuilder.PutImageRecipePolicyOutput)
	return
}

func (d *ImagebuilderDouble) PutImageRecipePolicyWithContext(i0 context.Context, i1 *imagebuilder.PutImageRecipePolicyInput, i2 ...request.Option) (r0 *imagebuilder.PutImageRecipePolicyOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("PutImageRecipePolicyWithContext", i0, i1, i2)
	r0, _ = returns[0].(*imagebuilder.PutImageRecipePolicyOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ImagebuilderDouble) fakePutImageRecipePolicyWithContext(ctx context.Context, in *imagebuilder.PutImageRecipePolicyInput, _ ...request.Option) (*imagebuilder.PutImageRecipePolicyOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "PutImageRecipePolicy cancelled", ctx.Err())
	default:
		return d.PutImageRecipePolicy(in)
	}
}

func (d *ImagebuilderDouble) StartImagePipelineExecution(i0 *imagebuilder.StartImagePipelineExecutionInput) (r0 *imagebuilder.StartImagePipelineExecutionOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("StartImagePipelineExecution", i0)
	r0, _ = returns[0].(*imagebuilder.StartImagePipelineExecutionOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ImagebuilderDouble) StartImagePipelineExecutionRequest(i0 *imagebuilder.StartImagePipelineExecutionInput) (r0 *request.Request, r1 *imagebuilder.StartImagePipelineExecutionOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("StartImagePipelineExecutionRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*imagebuilder.StartImagePipelineExecutionOutput)
	return
}

func (d *ImagebuilderDouble) StartImagePipelineExecutionWithContext(i0 context.Context, i1 *imagebuilder.StartImagePipelineExecutionInput, i2 ...request.Option) (r0 *imagebuilder.StartImagePipelineExecutionOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("StartImagePipelineExecutionWithContext", i0, i1, i2)
	r0, _ = returns[0].(*imagebuilder.StartImagePipelineExecutionOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ImagebuilderDouble) fakeStartImagePipelineExecutionWithContext(ctx context.Context, in *imagebuilder.StartImagePipelineExecutionInput, _ ...request.Option) (*imagebuilder.StartImagePipelineExecutionOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "StartImagePipelineExecution cancelled", ctx.Err())
	default:
		return d.StartImagePipelineExecution(in)
	}
}

func (d *ImagebuilderDouble) TagResource(i0 *imagebuilder.TagResourceInput) (r0 *imagebuilder.TagResourceOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("TagResource", i0)
	r0, _ = returns[0].(*imagebuilder.TagResourceOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ImagebuilderDouble) TagResourceRequest(i0 *imagebuilder.TagResourceInput) (r0 *request.Request, r1 *imagebuilder.TagResourceOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("TagResourceRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*imagebuilder.TagResourceOutput)
	return
}

func (d *ImagebuilderDouble) TagResourceWithContext(i0 context.Context, i1 *imagebuilder.TagResourceInput, i2 ...request.Option) (r0 *imagebuilder.TagResourceOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("TagResourceWithContext", i0, i1, i2)
	r0, _ = returns[0].(*imagebuilder.TagResourceOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ImagebuilderDouble) fakeTagResourceWithContext(ctx context.Context, in *imagebuilder.TagResourceInput, _ ...request.Option) (*imagebuilder.TagResourceOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "TagResource cancelled", ctx.Err())
	default:
		return d.TagResource(in)
	}
}

func (d *ImagebuilderDouble) UntagResource(i0 *imagebuilder.UntagResourceInput) (r0 *imagebuilder.UntagResourceOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UntagResource", i0)
	r0, _ = returns[0].(*imagebuilder.UntagResourceOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ImagebuilderDouble) UntagResourceRequest(i0 *imagebuilder.UntagResourceInput) (r0 *request.Request, r1 *imagebuilder.UntagResourceOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UntagResourceRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*imagebuilder.UntagResourceOutput)
	return
}

func (d *ImagebuilderDouble) UntagResourceWithContext(i0 context.Context, i1 *imagebuilder.UntagResourceInput, i2 ...request.Option) (r0 *imagebuilder.UntagResourceOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UntagResourceWithContext", i0, i1, i2)
	r0, _ = returns[0].(*imagebuilder.UntagResourceOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ImagebuilderDouble) fakeUntagResourceWithContext(ctx context.Context, in *imagebuilder.UntagResourceInput, _ ...request.Option) (*imagebuilder.UntagResourceOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "UntagResource cancelled", ctx.Err())
	default:
		return d.UntagResource(in)
	}
}

func (d *ImagebuilderDouble) UpdateDistributionConfiguration(i0 *imagebuilder.UpdateDistributionConfigurationInput) (r0 *imagebuilder.UpdateDistributionConfigurationOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UpdateDistributionConfiguration", i0)
	r0, _ = returns[0].(*imagebuilder.UpdateDistributionConfigurationOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ImagebuilderDouble) UpdateDistributionConfigurationRequest(i0 *imagebuilder.UpdateDistributionConfigurationInput) (r0 *request.Request, r1 *imagebuilder.UpdateDistributionConfigurationOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UpdateDistributionConfigurationRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*imagebuilder.UpdateDistributionConfigurationOutput)
	return
}

func (d *ImagebuilderDouble) UpdateDistributionConfigurationWithContext(i0 context.Context, i1 *imagebuilder.UpdateDistributionConfigurationInput, i2 ...request.Option) (r0 *imagebuilder.UpdateDistributionConfigurationOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UpdateDistributionConfigurationWithContext", i0, i1, i2)
	r0, _ = returns[0].(*imagebuilder.UpdateDistributionConfigurationOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ImagebuilderDouble) fakeUpdateDistributionConfigurationWithContext(ctx context.Context, in *imagebuilder.UpdateDistributionConfigurationInput, _ ...request.Option) (*imagebuilder.UpdateDistributionConfigurationOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "UpdateDistributionConfiguration cancelled", ctx.Err())
	default:
		return d.UpdateDistributionConfiguration(in)
	}
}

func (d *ImagebuilderDouble) UpdateImagePipeline(i0 *imagebuilder.UpdateImagePipelineInput) (r0 *imagebuilder.UpdateImagePipelineOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UpdateImagePipeline", i0)
	r0, _ = returns[0].(*imagebuilder.UpdateImagePipelineOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ImagebuilderDouble) UpdateImagePipelineRequest(i0 *imagebuilder.UpdateImagePipelineInput) (r0 *request.Request, r1 *imagebuilder.UpdateImagePipelineOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UpdateImagePipelineRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*imagebuilder.UpdateImagePipelineOutput)
	return
}

func (d *ImagebuilderDouble) UpdateImagePipelineWithContext(i0 context.Context, i1 *imagebuilder.UpdateImagePipelineInput, i2 ...request.Option) (r0 *imagebuilder.UpdateImagePipelineOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UpdateImagePipelineWithContext", i0, i1, i2)
	r0, _ = returns[0].(*imagebuilder.UpdateImagePipelineOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ImagebuilderDouble) fakeUpdateImagePipelineWithContext(ctx context.Context, in *imagebuilder.UpdateImagePipelineInput, _ ...request.Option) (*imagebuilder.UpdateImagePipelineOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "UpdateImagePipeline cancelled", ctx.Err())
	default:
		return d.UpdateImagePipeline(in)
	}
}

func (d *ImagebuilderDouble) UpdateInfrastructureConfiguration(i0 *imagebuilder.UpdateInfrastructureConfigurationInput) (r0 *imagebuilder.UpdateInfrastructureConfigurationOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UpdateInfrastructureConfiguration", i0)
	r0, _ = returns[0].(*imagebuilder.UpdateInfrastructureConfigurationOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ImagebuilderDouble) UpdateInfrastructureConfigurationRequest(i0 *imagebuilder.UpdateInfrastructureConfigurationInput) (r0 *request.Request, r1 *imagebuilder.UpdateInfrastructureConfigurationOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UpdateInfrastructureConfigurationRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*imagebuilder.UpdateInfrastructureConfigurationOutput)
	return
}

func (d *ImagebuilderDouble) UpdateInfrastructureConfigurationWithContext(i0 context.Context, i1 *imagebuilder.UpdateInfrastructureConfigurationInput, i2 ...request.Option) (r0 *imagebuilder.UpdateInfrastructureConfigurationOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UpdateInfrastructureConfigurationWithContext", i0, i1, i2)
	r0, _ = returns[0].(*imagebuilder.UpdateInfrastructureConfigurationOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ImagebuilderDouble) fakeUpdateInfrastructureConfigurationWithContext(ctx context.Context, in *imagebuilder.UpdateInfrastructureConfigurationInput, _ ...request.Option) (*imagebuilder.UpdateInfrastructureConfigurationOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "UpdateInfrastructureConfiguration cancelled", ctx.Err())
	default:
		return d.UpdateInfrastructureConfiguration(in)
	}
}
