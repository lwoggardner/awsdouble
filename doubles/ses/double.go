// Code generated by go doublegen; DO NOT EDIT.
// This file was generated at 2020-02-14T22:15:01+11:00

// Package sesdouble provides a TestDouble implementation of sesiface.SESAPI
package sesdouble

import (
	"context"

	"github.com/aws/aws-sdk-go/aws/awserr"
	"github.com/aws/aws-sdk-go/aws/request"
	"github.com/aws/aws-sdk-go/service/ses"
	"github.com/aws/aws-sdk-go/service/ses/sesiface"
	"github.com/lwoggardner/awsdouble"
	"github.com/lwoggardner/godouble/godouble"
)

// SESDouble is TestDouble for sesiface.SESAPI
type SESDouble struct {
	sesiface.SESAPI
	*awsdouble.AWSTestDouble
}

// Constructor for SESDouble
// Default configuration will ensure
//   * API operations not explicitly stubbed will return an empty output struct pointer, and nil error.
//     To simulate long polling, "Poll" operations will return these values after a random delay of up to 100ms.
//   * WithContext methods implement a 'Fake' method that returns a cancellation error if the context is cancelled
//      before the method is called.
//   * Pages and PagesWithContext methods similarly implement a 'Fake' method that paginates over the underlying method.
//
//    This allows tests to only stub the simple api methods and be generally unconcerned whether the SUT is using the
//      Context or Pagination forms of the API.
//
func NewDouble(t godouble.T, configurators ...func(*awsdouble.AWSTestDouble)) *SESDouble {
	result := &SESDouble{}

	configurators = append([]func(configurator *awsdouble.AWSTestDouble){func(d *awsdouble.AWSTestDouble) {
		d.SetDefaultCall(result.defaultMethodCall)
		d.SetDefaultReturnValues(result.defaultReturnValues)
	}}, configurators...)

	result.AWSTestDouble = awsdouble.NewDouble(t, (*sesiface.SESAPI)(nil), configurators...)
	return result
}

func (d *SESDouble) defaultReturnValues(m godouble.Method) godouble.ReturnValues {
	return d.DefaultReturnValues(m)
}

func (d *SESDouble) defaultMethodCall(m godouble.Method) godouble.MethodCall {
	switch m.Reflect().Name {

	case "CloneReceiptRuleSetWithContext":
		return m.Fake(d.fakeCloneReceiptRuleSetWithContext)

	case "CreateConfigurationSetEventDestinationWithContext":
		return m.Fake(d.fakeCreateConfigurationSetEventDestinationWithContext)

	case "CreateConfigurationSetTrackingOptionsWithContext":
		return m.Fake(d.fakeCreateConfigurationSetTrackingOptionsWithContext)

	case "CreateConfigurationSetWithContext":
		return m.Fake(d.fakeCreateConfigurationSetWithContext)

	case "CreateCustomVerificationEmailTemplateWithContext":
		return m.Fake(d.fakeCreateCustomVerificationEmailTemplateWithContext)

	case "CreateReceiptFilterWithContext":
		return m.Fake(d.fakeCreateReceiptFilterWithContext)

	case "CreateReceiptRuleSetWithContext":
		return m.Fake(d.fakeCreateReceiptRuleSetWithContext)

	case "CreateReceiptRuleWithContext":
		return m.Fake(d.fakeCreateReceiptRuleWithContext)

	case "CreateTemplateWithContext":
		return m.Fake(d.fakeCreateTemplateWithContext)

	case "DeleteConfigurationSetEventDestinationWithContext":
		return m.Fake(d.fakeDeleteConfigurationSetEventDestinationWithContext)

	case "DeleteConfigurationSetTrackingOptionsWithContext":
		return m.Fake(d.fakeDeleteConfigurationSetTrackingOptionsWithContext)

	case "DeleteConfigurationSetWithContext":
		return m.Fake(d.fakeDeleteConfigurationSetWithContext)

	case "DeleteCustomVerificationEmailTemplateWithContext":
		return m.Fake(d.fakeDeleteCustomVerificationEmailTemplateWithContext)

	case "DeleteIdentityPolicyWithContext":
		return m.Fake(d.fakeDeleteIdentityPolicyWithContext)

	case "DeleteIdentityWithContext":
		return m.Fake(d.fakeDeleteIdentityWithContext)

	case "DeleteReceiptFilterWithContext":
		return m.Fake(d.fakeDeleteReceiptFilterWithContext)

	case "DeleteReceiptRuleSetWithContext":
		return m.Fake(d.fakeDeleteReceiptRuleSetWithContext)

	case "DeleteReceiptRuleWithContext":
		return m.Fake(d.fakeDeleteReceiptRuleWithContext)

	case "DeleteTemplateWithContext":
		return m.Fake(d.fakeDeleteTemplateWithContext)

	case "DeleteVerifiedEmailAddressWithContext":
		return m.Fake(d.fakeDeleteVerifiedEmailAddressWithContext)

	case "DescribeActiveReceiptRuleSetWithContext":
		return m.Fake(d.fakeDescribeActiveReceiptRuleSetWithContext)

	case "DescribeConfigurationSetWithContext":
		return m.Fake(d.fakeDescribeConfigurationSetWithContext)

	case "DescribeReceiptRuleSetWithContext":
		return m.Fake(d.fakeDescribeReceiptRuleSetWithContext)

	case "DescribeReceiptRuleWithContext":
		return m.Fake(d.fakeDescribeReceiptRuleWithContext)

	case "GetAccountSendingEnabledWithContext":
		return m.Fake(d.fakeGetAccountSendingEnabledWithContext)

	case "GetCustomVerificationEmailTemplateWithContext":
		return m.Fake(d.fakeGetCustomVerificationEmailTemplateWithContext)

	case "GetIdentityDkimAttributesWithContext":
		return m.Fake(d.fakeGetIdentityDkimAttributesWithContext)

	case "GetIdentityMailFromDomainAttributesWithContext":
		return m.Fake(d.fakeGetIdentityMailFromDomainAttributesWithContext)

	case "GetIdentityNotificationAttributesWithContext":
		return m.Fake(d.fakeGetIdentityNotificationAttributesWithContext)

	case "GetIdentityPoliciesWithContext":
		return m.Fake(d.fakeGetIdentityPoliciesWithContext)

	case "GetIdentityVerificationAttributesWithContext":
		return m.Fake(d.fakeGetIdentityVerificationAttributesWithContext)

	case "GetSendQuotaWithContext":
		return m.Fake(d.fakeGetSendQuotaWithContext)

	case "GetSendStatisticsWithContext":
		return m.Fake(d.fakeGetSendStatisticsWithContext)

	case "GetTemplateWithContext":
		return m.Fake(d.fakeGetTemplateWithContext)

	case "ListConfigurationSetsWithContext":
		return m.Fake(d.fakeListConfigurationSetsWithContext)

	case "ListCustomVerificationEmailTemplatesPages":
		return m.Fake(d.fakeListCustomVerificationEmailTemplatesPages)

	case "ListCustomVerificationEmailTemplatesPagesWithContext":
		return m.Fake(d.fakeListCustomVerificationEmailTemplatesPagesWithContext)

	case "ListCustomVerificationEmailTemplatesWithContext":
		return m.Fake(d.fakeListCustomVerificationEmailTemplatesWithContext)

	case "ListIdentitiesPages":
		return m.Fake(d.fakeListIdentitiesPages)

	case "ListIdentitiesPagesWithContext":
		return m.Fake(d.fakeListIdentitiesPagesWithContext)

	case "ListIdentitiesWithContext":
		return m.Fake(d.fakeListIdentitiesWithContext)

	case "ListIdentityPoliciesWithContext":
		return m.Fake(d.fakeListIdentityPoliciesWithContext)

	case "ListReceiptFiltersWithContext":
		return m.Fake(d.fakeListReceiptFiltersWithContext)

	case "ListReceiptRuleSetsWithContext":
		return m.Fake(d.fakeListReceiptRuleSetsWithContext)

	case "ListTemplatesWithContext":
		return m.Fake(d.fakeListTemplatesWithContext)

	case "ListVerifiedEmailAddressesWithContext":
		return m.Fake(d.fakeListVerifiedEmailAddressesWithContext)

	case "PutConfigurationSetDeliveryOptionsWithContext":
		return m.Fake(d.fakePutConfigurationSetDeliveryOptionsWithContext)

	case "PutIdentityPolicyWithContext":
		return m.Fake(d.fakePutIdentityPolicyWithContext)

	case "ReorderReceiptRuleSetWithContext":
		return m.Fake(d.fakeReorderReceiptRuleSetWithContext)

	case "SendBounceWithContext":
		return m.Fake(d.fakeSendBounceWithContext)

	case "SendBulkTemplatedEmailWithContext":
		return m.Fake(d.fakeSendBulkTemplatedEmailWithContext)

	case "SendCustomVerificationEmailWithContext":
		return m.Fake(d.fakeSendCustomVerificationEmailWithContext)

	case "SendEmailWithContext":
		return m.Fake(d.fakeSendEmailWithContext)

	case "SendRawEmailWithContext":
		return m.Fake(d.fakeSendRawEmailWithContext)

	case "SendTemplatedEmailWithContext":
		return m.Fake(d.fakeSendTemplatedEmailWithContext)

	case "SetActiveReceiptRuleSetWithContext":
		return m.Fake(d.fakeSetActiveReceiptRuleSetWithContext)

	case "SetIdentityDkimEnabledWithContext":
		return m.Fake(d.fakeSetIdentityDkimEnabledWithContext)

	case "SetIdentityFeedbackForwardingEnabledWithContext":
		return m.Fake(d.fakeSetIdentityFeedbackForwardingEnabledWithContext)

	case "SetIdentityHeadersInNotificationsEnabledWithContext":
		return m.Fake(d.fakeSetIdentityHeadersInNotificationsEnabledWithContext)

	case "SetIdentityMailFromDomainWithContext":
		return m.Fake(d.fakeSetIdentityMailFromDomainWithContext)

	case "SetIdentityNotificationTopicWithContext":
		return m.Fake(d.fakeSetIdentityNotificationTopicWithContext)

	case "SetReceiptRulePositionWithContext":
		return m.Fake(d.fakeSetReceiptRulePositionWithContext)

	case "TestRenderTemplateWithContext":
		return m.Fake(d.fakeTestRenderTemplateWithContext)

	case "UpdateAccountSendingEnabledWithContext":
		return m.Fake(d.fakeUpdateAccountSendingEnabledWithContext)

	case "UpdateConfigurationSetEventDestinationWithContext":
		return m.Fake(d.fakeUpdateConfigurationSetEventDestinationWithContext)

	case "UpdateConfigurationSetReputationMetricsEnabledWithContext":
		return m.Fake(d.fakeUpdateConfigurationSetReputationMetricsEnabledWithContext)

	case "UpdateConfigurationSetSendingEnabledWithContext":
		return m.Fake(d.fakeUpdateConfigurationSetSendingEnabledWithContext)

	case "UpdateConfigurationSetTrackingOptionsWithContext":
		return m.Fake(d.fakeUpdateConfigurationSetTrackingOptionsWithContext)

	case "UpdateCustomVerificationEmailTemplateWithContext":
		return m.Fake(d.fakeUpdateCustomVerificationEmailTemplateWithContext)

	case "UpdateReceiptRuleWithContext":
		return m.Fake(d.fakeUpdateReceiptRuleWithContext)

	case "UpdateTemplateWithContext":
		return m.Fake(d.fakeUpdateTemplateWithContext)

	case "VerifyDomainDkimWithContext":
		return m.Fake(d.fakeVerifyDomainDkimWithContext)

	case "VerifyDomainIdentityWithContext":
		return m.Fake(d.fakeVerifyDomainIdentityWithContext)

	case "VerifyEmailAddressWithContext":
		return m.Fake(d.fakeVerifyEmailAddressWithContext)

	case "VerifyEmailIdentityWithContext":
		return m.Fake(d.fakeVerifyEmailIdentityWithContext)

	case "WaitUntilIdentityExists":
		return m.Fake(d.fakeWaitUntilIdentityExists)

	case "WaitUntilIdentityExistsWithContext":
		return m.Fake(d.fakeWaitUntilIdentityExistsWithContext)

	default:
		return nil
	}
}

func (d *SESDouble) CloneReceiptRuleSet(i0 *ses.CloneReceiptRuleSetInput) (r0 *ses.CloneReceiptRuleSetOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CloneReceiptRuleSet", i0)
	r0, _ = returns[0].(*ses.CloneReceiptRuleSetOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SESDouble) CloneReceiptRuleSetRequest(i0 *ses.CloneReceiptRuleSetInput) (r0 *request.Request, r1 *ses.CloneReceiptRuleSetOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CloneReceiptRuleSetRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*ses.CloneReceiptRuleSetOutput)
	return
}

func (d *SESDouble) CloneReceiptRuleSetWithContext(i0 context.Context, i1 *ses.CloneReceiptRuleSetInput, i2 ...request.Option) (r0 *ses.CloneReceiptRuleSetOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CloneReceiptRuleSetWithContext", i0, i1, i2)
	r0, _ = returns[0].(*ses.CloneReceiptRuleSetOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SESDouble) fakeCloneReceiptRuleSetWithContext(ctx context.Context, in *ses.CloneReceiptRuleSetInput, _ ...request.Option) (*ses.CloneReceiptRuleSetOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "CloneReceiptRuleSet cancelled", ctx.Err())
	default:
		return d.CloneReceiptRuleSet(in)
	}
}

func (d *SESDouble) CreateConfigurationSet(i0 *ses.CreateConfigurationSetInput) (r0 *ses.CreateConfigurationSetOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreateConfigurationSet", i0)
	r0, _ = returns[0].(*ses.CreateConfigurationSetOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SESDouble) CreateConfigurationSetEventDestination(i0 *ses.CreateConfigurationSetEventDestinationInput) (r0 *ses.CreateConfigurationSetEventDestinationOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreateConfigurationSetEventDestination", i0)
	r0, _ = returns[0].(*ses.CreateConfigurationSetEventDestinationOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SESDouble) CreateConfigurationSetEventDestinationRequest(i0 *ses.CreateConfigurationSetEventDestinationInput) (r0 *request.Request, r1 *ses.CreateConfigurationSetEventDestinationOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreateConfigurationSetEventDestinationRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*ses.CreateConfigurationSetEventDestinationOutput)
	return
}

func (d *SESDouble) CreateConfigurationSetEventDestinationWithContext(i0 context.Context, i1 *ses.CreateConfigurationSetEventDestinationInput, i2 ...request.Option) (r0 *ses.CreateConfigurationSetEventDestinationOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreateConfigurationSetEventDestinationWithContext", i0, i1, i2)
	r0, _ = returns[0].(*ses.CreateConfigurationSetEventDestinationOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SESDouble) fakeCreateConfigurationSetEventDestinationWithContext(ctx context.Context, in *ses.CreateConfigurationSetEventDestinationInput, _ ...request.Option) (*ses.CreateConfigurationSetEventDestinationOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "CreateConfigurationSetEventDestination cancelled", ctx.Err())
	default:
		return d.CreateConfigurationSetEventDestination(in)
	}
}

func (d *SESDouble) CreateConfigurationSetRequest(i0 *ses.CreateConfigurationSetInput) (r0 *request.Request, r1 *ses.CreateConfigurationSetOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreateConfigurationSetRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*ses.CreateConfigurationSetOutput)
	return
}

func (d *SESDouble) CreateConfigurationSetTrackingOptions(i0 *ses.CreateConfigurationSetTrackingOptionsInput) (r0 *ses.CreateConfigurationSetTrackingOptionsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreateConfigurationSetTrackingOptions", i0)
	r0, _ = returns[0].(*ses.CreateConfigurationSetTrackingOptionsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SESDouble) CreateConfigurationSetTrackingOptionsRequest(i0 *ses.CreateConfigurationSetTrackingOptionsInput) (r0 *request.Request, r1 *ses.CreateConfigurationSetTrackingOptionsOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreateConfigurationSetTrackingOptionsRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*ses.CreateConfigurationSetTrackingOptionsOutput)
	return
}

func (d *SESDouble) CreateConfigurationSetTrackingOptionsWithContext(i0 context.Context, i1 *ses.CreateConfigurationSetTrackingOptionsInput, i2 ...request.Option) (r0 *ses.CreateConfigurationSetTrackingOptionsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreateConfigurationSetTrackingOptionsWithContext", i0, i1, i2)
	r0, _ = returns[0].(*ses.CreateConfigurationSetTrackingOptionsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SESDouble) fakeCreateConfigurationSetTrackingOptionsWithContext(ctx context.Context, in *ses.CreateConfigurationSetTrackingOptionsInput, _ ...request.Option) (*ses.CreateConfigurationSetTrackingOptionsOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "CreateConfigurationSetTrackingOptions cancelled", ctx.Err())
	default:
		return d.CreateConfigurationSetTrackingOptions(in)
	}
}

func (d *SESDouble) CreateConfigurationSetWithContext(i0 context.Context, i1 *ses.CreateConfigurationSetInput, i2 ...request.Option) (r0 *ses.CreateConfigurationSetOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreateConfigurationSetWithContext", i0, i1, i2)
	r0, _ = returns[0].(*ses.CreateConfigurationSetOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SESDouble) fakeCreateConfigurationSetWithContext(ctx context.Context, in *ses.CreateConfigurationSetInput, _ ...request.Option) (*ses.CreateConfigurationSetOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "CreateConfigurationSet cancelled", ctx.Err())
	default:
		return d.CreateConfigurationSet(in)
	}
}

func (d *SESDouble) CreateCustomVerificationEmailTemplate(i0 *ses.CreateCustomVerificationEmailTemplateInput) (r0 *ses.CreateCustomVerificationEmailTemplateOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreateCustomVerificationEmailTemplate", i0)
	r0, _ = returns[0].(*ses.CreateCustomVerificationEmailTemplateOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SESDouble) CreateCustomVerificationEmailTemplateRequest(i0 *ses.CreateCustomVerificationEmailTemplateInput) (r0 *request.Request, r1 *ses.CreateCustomVerificationEmailTemplateOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreateCustomVerificationEmailTemplateRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*ses.CreateCustomVerificationEmailTemplateOutput)
	return
}

func (d *SESDouble) CreateCustomVerificationEmailTemplateWithContext(i0 context.Context, i1 *ses.CreateCustomVerificationEmailTemplateInput, i2 ...request.Option) (r0 *ses.CreateCustomVerificationEmailTemplateOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreateCustomVerificationEmailTemplateWithContext", i0, i1, i2)
	r0, _ = returns[0].(*ses.CreateCustomVerificationEmailTemplateOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SESDouble) fakeCreateCustomVerificationEmailTemplateWithContext(ctx context.Context, in *ses.CreateCustomVerificationEmailTemplateInput, _ ...request.Option) (*ses.CreateCustomVerificationEmailTemplateOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "CreateCustomVerificationEmailTemplate cancelled", ctx.Err())
	default:
		return d.CreateCustomVerificationEmailTemplate(in)
	}
}

func (d *SESDouble) CreateReceiptFilter(i0 *ses.CreateReceiptFilterInput) (r0 *ses.CreateReceiptFilterOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreateReceiptFilter", i0)
	r0, _ = returns[0].(*ses.CreateReceiptFilterOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SESDouble) CreateReceiptFilterRequest(i0 *ses.CreateReceiptFilterInput) (r0 *request.Request, r1 *ses.CreateReceiptFilterOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreateReceiptFilterRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*ses.CreateReceiptFilterOutput)
	return
}

func (d *SESDouble) CreateReceiptFilterWithContext(i0 context.Context, i1 *ses.CreateReceiptFilterInput, i2 ...request.Option) (r0 *ses.CreateReceiptFilterOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreateReceiptFilterWithContext", i0, i1, i2)
	r0, _ = returns[0].(*ses.CreateReceiptFilterOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SESDouble) fakeCreateReceiptFilterWithContext(ctx context.Context, in *ses.CreateReceiptFilterInput, _ ...request.Option) (*ses.CreateReceiptFilterOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "CreateReceiptFilter cancelled", ctx.Err())
	default:
		return d.CreateReceiptFilter(in)
	}
}

func (d *SESDouble) CreateReceiptRule(i0 *ses.CreateReceiptRuleInput) (r0 *ses.CreateReceiptRuleOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreateReceiptRule", i0)
	r0, _ = returns[0].(*ses.CreateReceiptRuleOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SESDouble) CreateReceiptRuleRequest(i0 *ses.CreateReceiptRuleInput) (r0 *request.Request, r1 *ses.CreateReceiptRuleOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreateReceiptRuleRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*ses.CreateReceiptRuleOutput)
	return
}

func (d *SESDouble) CreateReceiptRuleSet(i0 *ses.CreateReceiptRuleSetInput) (r0 *ses.CreateReceiptRuleSetOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreateReceiptRuleSet", i0)
	r0, _ = returns[0].(*ses.CreateReceiptRuleSetOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SESDouble) CreateReceiptRuleSetRequest(i0 *ses.CreateReceiptRuleSetInput) (r0 *request.Request, r1 *ses.CreateReceiptRuleSetOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreateReceiptRuleSetRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*ses.CreateReceiptRuleSetOutput)
	return
}

func (d *SESDouble) CreateReceiptRuleSetWithContext(i0 context.Context, i1 *ses.CreateReceiptRuleSetInput, i2 ...request.Option) (r0 *ses.CreateReceiptRuleSetOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreateReceiptRuleSetWithContext", i0, i1, i2)
	r0, _ = returns[0].(*ses.CreateReceiptRuleSetOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SESDouble) fakeCreateReceiptRuleSetWithContext(ctx context.Context, in *ses.CreateReceiptRuleSetInput, _ ...request.Option) (*ses.CreateReceiptRuleSetOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "CreateReceiptRuleSet cancelled", ctx.Err())
	default:
		return d.CreateReceiptRuleSet(in)
	}
}

func (d *SESDouble) CreateReceiptRuleWithContext(i0 context.Context, i1 *ses.CreateReceiptRuleInput, i2 ...request.Option) (r0 *ses.CreateReceiptRuleOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreateReceiptRuleWithContext", i0, i1, i2)
	r0, _ = returns[0].(*ses.CreateReceiptRuleOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SESDouble) fakeCreateReceiptRuleWithContext(ctx context.Context, in *ses.CreateReceiptRuleInput, _ ...request.Option) (*ses.CreateReceiptRuleOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "CreateReceiptRule cancelled", ctx.Err())
	default:
		return d.CreateReceiptRule(in)
	}
}

func (d *SESDouble) CreateTemplate(i0 *ses.CreateTemplateInput) (r0 *ses.CreateTemplateOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreateTemplate", i0)
	r0, _ = returns[0].(*ses.CreateTemplateOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SESDouble) CreateTemplateRequest(i0 *ses.CreateTemplateInput) (r0 *request.Request, r1 *ses.CreateTemplateOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreateTemplateRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*ses.CreateTemplateOutput)
	return
}

func (d *SESDouble) CreateTemplateWithContext(i0 context.Context, i1 *ses.CreateTemplateInput, i2 ...request.Option) (r0 *ses.CreateTemplateOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreateTemplateWithContext", i0, i1, i2)
	r0, _ = returns[0].(*ses.CreateTemplateOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SESDouble) fakeCreateTemplateWithContext(ctx context.Context, in *ses.CreateTemplateInput, _ ...request.Option) (*ses.CreateTemplateOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "CreateTemplate cancelled", ctx.Err())
	default:
		return d.CreateTemplate(in)
	}
}

func (d *SESDouble) DeleteConfigurationSet(i0 *ses.DeleteConfigurationSetInput) (r0 *ses.DeleteConfigurationSetOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteConfigurationSet", i0)
	r0, _ = returns[0].(*ses.DeleteConfigurationSetOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SESDouble) DeleteConfigurationSetEventDestination(i0 *ses.DeleteConfigurationSetEventDestinationInput) (r0 *ses.DeleteConfigurationSetEventDestinationOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteConfigurationSetEventDestination", i0)
	r0, _ = returns[0].(*ses.DeleteConfigurationSetEventDestinationOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SESDouble) DeleteConfigurationSetEventDestinationRequest(i0 *ses.DeleteConfigurationSetEventDestinationInput) (r0 *request.Request, r1 *ses.DeleteConfigurationSetEventDestinationOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteConfigurationSetEventDestinationRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*ses.DeleteConfigurationSetEventDestinationOutput)
	return
}

func (d *SESDouble) DeleteConfigurationSetEventDestinationWithContext(i0 context.Context, i1 *ses.DeleteConfigurationSetEventDestinationInput, i2 ...request.Option) (r0 *ses.DeleteConfigurationSetEventDestinationOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteConfigurationSetEventDestinationWithContext", i0, i1, i2)
	r0, _ = returns[0].(*ses.DeleteConfigurationSetEventDestinationOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SESDouble) fakeDeleteConfigurationSetEventDestinationWithContext(ctx context.Context, in *ses.DeleteConfigurationSetEventDestinationInput, _ ...request.Option) (*ses.DeleteConfigurationSetEventDestinationOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "DeleteConfigurationSetEventDestination cancelled", ctx.Err())
	default:
		return d.DeleteConfigurationSetEventDestination(in)
	}
}

func (d *SESDouble) DeleteConfigurationSetRequest(i0 *ses.DeleteConfigurationSetInput) (r0 *request.Request, r1 *ses.DeleteConfigurationSetOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteConfigurationSetRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*ses.DeleteConfigurationSetOutput)
	return
}

func (d *SESDouble) DeleteConfigurationSetTrackingOptions(i0 *ses.DeleteConfigurationSetTrackingOptionsInput) (r0 *ses.DeleteConfigurationSetTrackingOptionsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteConfigurationSetTrackingOptions", i0)
	r0, _ = returns[0].(*ses.DeleteConfigurationSetTrackingOptionsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SESDouble) DeleteConfigurationSetTrackingOptionsRequest(i0 *ses.DeleteConfigurationSetTrackingOptionsInput) (r0 *request.Request, r1 *ses.DeleteConfigurationSetTrackingOptionsOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteConfigurationSetTrackingOptionsRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*ses.DeleteConfigurationSetTrackingOptionsOutput)
	return
}

func (d *SESDouble) DeleteConfigurationSetTrackingOptionsWithContext(i0 context.Context, i1 *ses.DeleteConfigurationSetTrackingOptionsInput, i2 ...request.Option) (r0 *ses.DeleteConfigurationSetTrackingOptionsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteConfigurationSetTrackingOptionsWithContext", i0, i1, i2)
	r0, _ = returns[0].(*ses.DeleteConfigurationSetTrackingOptionsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SESDouble) fakeDeleteConfigurationSetTrackingOptionsWithContext(ctx context.Context, in *ses.DeleteConfigurationSetTrackingOptionsInput, _ ...request.Option) (*ses.DeleteConfigurationSetTrackingOptionsOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "DeleteConfigurationSetTrackingOptions cancelled", ctx.Err())
	default:
		return d.DeleteConfigurationSetTrackingOptions(in)
	}
}

func (d *SESDouble) DeleteConfigurationSetWithContext(i0 context.Context, i1 *ses.DeleteConfigurationSetInput, i2 ...request.Option) (r0 *ses.DeleteConfigurationSetOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteConfigurationSetWithContext", i0, i1, i2)
	r0, _ = returns[0].(*ses.DeleteConfigurationSetOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SESDouble) fakeDeleteConfigurationSetWithContext(ctx context.Context, in *ses.DeleteConfigurationSetInput, _ ...request.Option) (*ses.DeleteConfigurationSetOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "DeleteConfigurationSet cancelled", ctx.Err())
	default:
		return d.DeleteConfigurationSet(in)
	}
}

func (d *SESDouble) DeleteCustomVerificationEmailTemplate(i0 *ses.DeleteCustomVerificationEmailTemplateInput) (r0 *ses.DeleteCustomVerificationEmailTemplateOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteCustomVerificationEmailTemplate", i0)
	r0, _ = returns[0].(*ses.DeleteCustomVerificationEmailTemplateOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SESDouble) DeleteCustomVerificationEmailTemplateRequest(i0 *ses.DeleteCustomVerificationEmailTemplateInput) (r0 *request.Request, r1 *ses.DeleteCustomVerificationEmailTemplateOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteCustomVerificationEmailTemplateRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*ses.DeleteCustomVerificationEmailTemplateOutput)
	return
}

func (d *SESDouble) DeleteCustomVerificationEmailTemplateWithContext(i0 context.Context, i1 *ses.DeleteCustomVerificationEmailTemplateInput, i2 ...request.Option) (r0 *ses.DeleteCustomVerificationEmailTemplateOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteCustomVerificationEmailTemplateWithContext", i0, i1, i2)
	r0, _ = returns[0].(*ses.DeleteCustomVerificationEmailTemplateOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SESDouble) fakeDeleteCustomVerificationEmailTemplateWithContext(ctx context.Context, in *ses.DeleteCustomVerificationEmailTemplateInput, _ ...request.Option) (*ses.DeleteCustomVerificationEmailTemplateOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "DeleteCustomVerificationEmailTemplate cancelled", ctx.Err())
	default:
		return d.DeleteCustomVerificationEmailTemplate(in)
	}
}

func (d *SESDouble) DeleteIdentity(i0 *ses.DeleteIdentityInput) (r0 *ses.DeleteIdentityOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteIdentity", i0)
	r0, _ = returns[0].(*ses.DeleteIdentityOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SESDouble) DeleteIdentityPolicy(i0 *ses.DeleteIdentityPolicyInput) (r0 *ses.DeleteIdentityPolicyOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteIdentityPolicy", i0)
	r0, _ = returns[0].(*ses.DeleteIdentityPolicyOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SESDouble) DeleteIdentityPolicyRequest(i0 *ses.DeleteIdentityPolicyInput) (r0 *request.Request, r1 *ses.DeleteIdentityPolicyOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteIdentityPolicyRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*ses.DeleteIdentityPolicyOutput)
	return
}

func (d *SESDouble) DeleteIdentityPolicyWithContext(i0 context.Context, i1 *ses.DeleteIdentityPolicyInput, i2 ...request.Option) (r0 *ses.DeleteIdentityPolicyOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteIdentityPolicyWithContext", i0, i1, i2)
	r0, _ = returns[0].(*ses.DeleteIdentityPolicyOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SESDouble) fakeDeleteIdentityPolicyWithContext(ctx context.Context, in *ses.DeleteIdentityPolicyInput, _ ...request.Option) (*ses.DeleteIdentityPolicyOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "DeleteIdentityPolicy cancelled", ctx.Err())
	default:
		return d.DeleteIdentityPolicy(in)
	}
}

func (d *SESDouble) DeleteIdentityRequest(i0 *ses.DeleteIdentityInput) (r0 *request.Request, r1 *ses.DeleteIdentityOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteIdentityRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*ses.DeleteIdentityOutput)
	return
}

func (d *SESDouble) DeleteIdentityWithContext(i0 context.Context, i1 *ses.DeleteIdentityInput, i2 ...request.Option) (r0 *ses.DeleteIdentityOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteIdentityWithContext", i0, i1, i2)
	r0, _ = returns[0].(*ses.DeleteIdentityOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SESDouble) fakeDeleteIdentityWithContext(ctx context.Context, in *ses.DeleteIdentityInput, _ ...request.Option) (*ses.DeleteIdentityOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "DeleteIdentity cancelled", ctx.Err())
	default:
		return d.DeleteIdentity(in)
	}
}

func (d *SESDouble) DeleteReceiptFilter(i0 *ses.DeleteReceiptFilterInput) (r0 *ses.DeleteReceiptFilterOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteReceiptFilter", i0)
	r0, _ = returns[0].(*ses.DeleteReceiptFilterOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SESDouble) DeleteReceiptFilterRequest(i0 *ses.DeleteReceiptFilterInput) (r0 *request.Request, r1 *ses.DeleteReceiptFilterOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteReceiptFilterRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*ses.DeleteReceiptFilterOutput)
	return
}

func (d *SESDouble) DeleteReceiptFilterWithContext(i0 context.Context, i1 *ses.DeleteReceiptFilterInput, i2 ...request.Option) (r0 *ses.DeleteReceiptFilterOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteReceiptFilterWithContext", i0, i1, i2)
	r0, _ = returns[0].(*ses.DeleteReceiptFilterOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SESDouble) fakeDeleteReceiptFilterWithContext(ctx context.Context, in *ses.DeleteReceiptFilterInput, _ ...request.Option) (*ses.DeleteReceiptFilterOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "DeleteReceiptFilter cancelled", ctx.Err())
	default:
		return d.DeleteReceiptFilter(in)
	}
}

func (d *SESDouble) DeleteReceiptRule(i0 *ses.DeleteReceiptRuleInput) (r0 *ses.DeleteReceiptRuleOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteReceiptRule", i0)
	r0, _ = returns[0].(*ses.DeleteReceiptRuleOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SESDouble) DeleteReceiptRuleRequest(i0 *ses.DeleteReceiptRuleInput) (r0 *request.Request, r1 *ses.DeleteReceiptRuleOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteReceiptRuleRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*ses.DeleteReceiptRuleOutput)
	return
}

func (d *SESDouble) DeleteReceiptRuleSet(i0 *ses.DeleteReceiptRuleSetInput) (r0 *ses.DeleteReceiptRuleSetOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteReceiptRuleSet", i0)
	r0, _ = returns[0].(*ses.DeleteReceiptRuleSetOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SESDouble) DeleteReceiptRuleSetRequest(i0 *ses.DeleteReceiptRuleSetInput) (r0 *request.Request, r1 *ses.DeleteReceiptRuleSetOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteReceiptRuleSetRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*ses.DeleteReceiptRuleSetOutput)
	return
}

func (d *SESDouble) DeleteReceiptRuleSetWithContext(i0 context.Context, i1 *ses.DeleteReceiptRuleSetInput, i2 ...request.Option) (r0 *ses.DeleteReceiptRuleSetOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteReceiptRuleSetWithContext", i0, i1, i2)
	r0, _ = returns[0].(*ses.DeleteReceiptRuleSetOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SESDouble) fakeDeleteReceiptRuleSetWithContext(ctx context.Context, in *ses.DeleteReceiptRuleSetInput, _ ...request.Option) (*ses.DeleteReceiptRuleSetOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "DeleteReceiptRuleSet cancelled", ctx.Err())
	default:
		return d.DeleteReceiptRuleSet(in)
	}
}

func (d *SESDouble) DeleteReceiptRuleWithContext(i0 context.Context, i1 *ses.DeleteReceiptRuleInput, i2 ...request.Option) (r0 *ses.DeleteReceiptRuleOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteReceiptRuleWithContext", i0, i1, i2)
	r0, _ = returns[0].(*ses.DeleteReceiptRuleOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SESDouble) fakeDeleteReceiptRuleWithContext(ctx context.Context, in *ses.DeleteReceiptRuleInput, _ ...request.Option) (*ses.DeleteReceiptRuleOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "DeleteReceiptRule cancelled", ctx.Err())
	default:
		return d.DeleteReceiptRule(in)
	}
}

func (d *SESDouble) DeleteTemplate(i0 *ses.DeleteTemplateInput) (r0 *ses.DeleteTemplateOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteTemplate", i0)
	r0, _ = returns[0].(*ses.DeleteTemplateOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SESDouble) DeleteTemplateRequest(i0 *ses.DeleteTemplateInput) (r0 *request.Request, r1 *ses.DeleteTemplateOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteTemplateRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*ses.DeleteTemplateOutput)
	return
}

func (d *SESDouble) DeleteTemplateWithContext(i0 context.Context, i1 *ses.DeleteTemplateInput, i2 ...request.Option) (r0 *ses.DeleteTemplateOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteTemplateWithContext", i0, i1, i2)
	r0, _ = returns[0].(*ses.DeleteTemplateOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SESDouble) fakeDeleteTemplateWithContext(ctx context.Context, in *ses.DeleteTemplateInput, _ ...request.Option) (*ses.DeleteTemplateOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "DeleteTemplate cancelled", ctx.Err())
	default:
		return d.DeleteTemplate(in)
	}
}

func (d *SESDouble) DeleteVerifiedEmailAddress(i0 *ses.DeleteVerifiedEmailAddressInput) (r0 *ses.DeleteVerifiedEmailAddressOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteVerifiedEmailAddress", i0)
	r0, _ = returns[0].(*ses.DeleteVerifiedEmailAddressOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SESDouble) DeleteVerifiedEmailAddressRequest(i0 *ses.DeleteVerifiedEmailAddressInput) (r0 *request.Request, r1 *ses.DeleteVerifiedEmailAddressOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteVerifiedEmailAddressRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*ses.DeleteVerifiedEmailAddressOutput)
	return
}

func (d *SESDouble) DeleteVerifiedEmailAddressWithContext(i0 context.Context, i1 *ses.DeleteVerifiedEmailAddressInput, i2 ...request.Option) (r0 *ses.DeleteVerifiedEmailAddressOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteVerifiedEmailAddressWithContext", i0, i1, i2)
	r0, _ = returns[0].(*ses.DeleteVerifiedEmailAddressOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SESDouble) fakeDeleteVerifiedEmailAddressWithContext(ctx context.Context, in *ses.DeleteVerifiedEmailAddressInput, _ ...request.Option) (*ses.DeleteVerifiedEmailAddressOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "DeleteVerifiedEmailAddress cancelled", ctx.Err())
	default:
		return d.DeleteVerifiedEmailAddress(in)
	}
}

func (d *SESDouble) DescribeActiveReceiptRuleSet(i0 *ses.DescribeActiveReceiptRuleSetInput) (r0 *ses.DescribeActiveReceiptRuleSetOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DescribeActiveReceiptRuleSet", i0)
	r0, _ = returns[0].(*ses.DescribeActiveReceiptRuleSetOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SESDouble) DescribeActiveReceiptRuleSetRequest(i0 *ses.DescribeActiveReceiptRuleSetInput) (r0 *request.Request, r1 *ses.DescribeActiveReceiptRuleSetOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DescribeActiveReceiptRuleSetRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*ses.DescribeActiveReceiptRuleSetOutput)
	return
}

func (d *SESDouble) DescribeActiveReceiptRuleSetWithContext(i0 context.Context, i1 *ses.DescribeActiveReceiptRuleSetInput, i2 ...request.Option) (r0 *ses.DescribeActiveReceiptRuleSetOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DescribeActiveReceiptRuleSetWithContext", i0, i1, i2)
	r0, _ = returns[0].(*ses.DescribeActiveReceiptRuleSetOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SESDouble) fakeDescribeActiveReceiptRuleSetWithContext(ctx context.Context, in *ses.DescribeActiveReceiptRuleSetInput, _ ...request.Option) (*ses.DescribeActiveReceiptRuleSetOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "DescribeActiveReceiptRuleSet cancelled", ctx.Err())
	default:
		return d.DescribeActiveReceiptRuleSet(in)
	}
}

func (d *SESDouble) DescribeConfigurationSet(i0 *ses.DescribeConfigurationSetInput) (r0 *ses.DescribeConfigurationSetOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DescribeConfigurationSet", i0)
	r0, _ = returns[0].(*ses.DescribeConfigurationSetOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SESDouble) DescribeConfigurationSetRequest(i0 *ses.DescribeConfigurationSetInput) (r0 *request.Request, r1 *ses.DescribeConfigurationSetOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DescribeConfigurationSetRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*ses.DescribeConfigurationSetOutput)
	return
}

func (d *SESDouble) DescribeConfigurationSetWithContext(i0 context.Context, i1 *ses.DescribeConfigurationSetInput, i2 ...request.Option) (r0 *ses.DescribeConfigurationSetOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DescribeConfigurationSetWithContext", i0, i1, i2)
	r0, _ = returns[0].(*ses.DescribeConfigurationSetOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SESDouble) fakeDescribeConfigurationSetWithContext(ctx context.Context, in *ses.DescribeConfigurationSetInput, _ ...request.Option) (*ses.DescribeConfigurationSetOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "DescribeConfigurationSet cancelled", ctx.Err())
	default:
		return d.DescribeConfigurationSet(in)
	}
}

func (d *SESDouble) DescribeReceiptRule(i0 *ses.DescribeReceiptRuleInput) (r0 *ses.DescribeReceiptRuleOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DescribeReceiptRule", i0)
	r0, _ = returns[0].(*ses.DescribeReceiptRuleOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SESDouble) DescribeReceiptRuleRequest(i0 *ses.DescribeReceiptRuleInput) (r0 *request.Request, r1 *ses.DescribeReceiptRuleOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DescribeReceiptRuleRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*ses.DescribeReceiptRuleOutput)
	return
}

func (d *SESDouble) DescribeReceiptRuleSet(i0 *ses.DescribeReceiptRuleSetInput) (r0 *ses.DescribeReceiptRuleSetOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DescribeReceiptRuleSet", i0)
	r0, _ = returns[0].(*ses.DescribeReceiptRuleSetOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SESDouble) DescribeReceiptRuleSetRequest(i0 *ses.DescribeReceiptRuleSetInput) (r0 *request.Request, r1 *ses.DescribeReceiptRuleSetOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DescribeReceiptRuleSetRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*ses.DescribeReceiptRuleSetOutput)
	return
}

func (d *SESDouble) DescribeReceiptRuleSetWithContext(i0 context.Context, i1 *ses.DescribeReceiptRuleSetInput, i2 ...request.Option) (r0 *ses.DescribeReceiptRuleSetOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DescribeReceiptRuleSetWithContext", i0, i1, i2)
	r0, _ = returns[0].(*ses.DescribeReceiptRuleSetOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SESDouble) fakeDescribeReceiptRuleSetWithContext(ctx context.Context, in *ses.DescribeReceiptRuleSetInput, _ ...request.Option) (*ses.DescribeReceiptRuleSetOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "DescribeReceiptRuleSet cancelled", ctx.Err())
	default:
		return d.DescribeReceiptRuleSet(in)
	}
}

func (d *SESDouble) DescribeReceiptRuleWithContext(i0 context.Context, i1 *ses.DescribeReceiptRuleInput, i2 ...request.Option) (r0 *ses.DescribeReceiptRuleOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DescribeReceiptRuleWithContext", i0, i1, i2)
	r0, _ = returns[0].(*ses.DescribeReceiptRuleOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SESDouble) fakeDescribeReceiptRuleWithContext(ctx context.Context, in *ses.DescribeReceiptRuleInput, _ ...request.Option) (*ses.DescribeReceiptRuleOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "DescribeReceiptRule cancelled", ctx.Err())
	default:
		return d.DescribeReceiptRule(in)
	}
}

func (d *SESDouble) GetAccountSendingEnabled(i0 *ses.GetAccountSendingEnabledInput) (r0 *ses.GetAccountSendingEnabledOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetAccountSendingEnabled", i0)
	r0, _ = returns[0].(*ses.GetAccountSendingEnabledOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SESDouble) GetAccountSendingEnabledRequest(i0 *ses.GetAccountSendingEnabledInput) (r0 *request.Request, r1 *ses.GetAccountSendingEnabledOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetAccountSendingEnabledRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*ses.GetAccountSendingEnabledOutput)
	return
}

func (d *SESDouble) GetAccountSendingEnabledWithContext(i0 context.Context, i1 *ses.GetAccountSendingEnabledInput, i2 ...request.Option) (r0 *ses.GetAccountSendingEnabledOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetAccountSendingEnabledWithContext", i0, i1, i2)
	r0, _ = returns[0].(*ses.GetAccountSendingEnabledOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SESDouble) fakeGetAccountSendingEnabledWithContext(ctx context.Context, in *ses.GetAccountSendingEnabledInput, _ ...request.Option) (*ses.GetAccountSendingEnabledOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "GetAccountSendingEnabled cancelled", ctx.Err())
	default:
		return d.GetAccountSendingEnabled(in)
	}
}

func (d *SESDouble) GetCustomVerificationEmailTemplate(i0 *ses.GetCustomVerificationEmailTemplateInput) (r0 *ses.GetCustomVerificationEmailTemplateOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetCustomVerificationEmailTemplate", i0)
	r0, _ = returns[0].(*ses.GetCustomVerificationEmailTemplateOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SESDouble) GetCustomVerificationEmailTemplateRequest(i0 *ses.GetCustomVerificationEmailTemplateInput) (r0 *request.Request, r1 *ses.GetCustomVerificationEmailTemplateOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetCustomVerificationEmailTemplateRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*ses.GetCustomVerificationEmailTemplateOutput)
	return
}

func (d *SESDouble) GetCustomVerificationEmailTemplateWithContext(i0 context.Context, i1 *ses.GetCustomVerificationEmailTemplateInput, i2 ...request.Option) (r0 *ses.GetCustomVerificationEmailTemplateOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetCustomVerificationEmailTemplateWithContext", i0, i1, i2)
	r0, _ = returns[0].(*ses.GetCustomVerificationEmailTemplateOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SESDouble) fakeGetCustomVerificationEmailTemplateWithContext(ctx context.Context, in *ses.GetCustomVerificationEmailTemplateInput, _ ...request.Option) (*ses.GetCustomVerificationEmailTemplateOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "GetCustomVerificationEmailTemplate cancelled", ctx.Err())
	default:
		return d.GetCustomVerificationEmailTemplate(in)
	}
}

func (d *SESDouble) GetIdentityDkimAttributes(i0 *ses.GetIdentityDkimAttributesInput) (r0 *ses.GetIdentityDkimAttributesOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetIdentityDkimAttributes", i0)
	r0, _ = returns[0].(*ses.GetIdentityDkimAttributesOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SESDouble) GetIdentityDkimAttributesRequest(i0 *ses.GetIdentityDkimAttributesInput) (r0 *request.Request, r1 *ses.GetIdentityDkimAttributesOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetIdentityDkimAttributesRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*ses.GetIdentityDkimAttributesOutput)
	return
}

func (d *SESDouble) GetIdentityDkimAttributesWithContext(i0 context.Context, i1 *ses.GetIdentityDkimAttributesInput, i2 ...request.Option) (r0 *ses.GetIdentityDkimAttributesOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetIdentityDkimAttributesWithContext", i0, i1, i2)
	r0, _ = returns[0].(*ses.GetIdentityDkimAttributesOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SESDouble) fakeGetIdentityDkimAttributesWithContext(ctx context.Context, in *ses.GetIdentityDkimAttributesInput, _ ...request.Option) (*ses.GetIdentityDkimAttributesOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "GetIdentityDkimAttributes cancelled", ctx.Err())
	default:
		return d.GetIdentityDkimAttributes(in)
	}
}

func (d *SESDouble) GetIdentityMailFromDomainAttributes(i0 *ses.GetIdentityMailFromDomainAttributesInput) (r0 *ses.GetIdentityMailFromDomainAttributesOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetIdentityMailFromDomainAttributes", i0)
	r0, _ = returns[0].(*ses.GetIdentityMailFromDomainAttributesOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SESDouble) GetIdentityMailFromDomainAttributesRequest(i0 *ses.GetIdentityMailFromDomainAttributesInput) (r0 *request.Request, r1 *ses.GetIdentityMailFromDomainAttributesOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetIdentityMailFromDomainAttributesRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*ses.GetIdentityMailFromDomainAttributesOutput)
	return
}

func (d *SESDouble) GetIdentityMailFromDomainAttributesWithContext(i0 context.Context, i1 *ses.GetIdentityMailFromDomainAttributesInput, i2 ...request.Option) (r0 *ses.GetIdentityMailFromDomainAttributesOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetIdentityMailFromDomainAttributesWithContext", i0, i1, i2)
	r0, _ = returns[0].(*ses.GetIdentityMailFromDomainAttributesOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SESDouble) fakeGetIdentityMailFromDomainAttributesWithContext(ctx context.Context, in *ses.GetIdentityMailFromDomainAttributesInput, _ ...request.Option) (*ses.GetIdentityMailFromDomainAttributesOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "GetIdentityMailFromDomainAttributes cancelled", ctx.Err())
	default:
		return d.GetIdentityMailFromDomainAttributes(in)
	}
}

func (d *SESDouble) GetIdentityNotificationAttributes(i0 *ses.GetIdentityNotificationAttributesInput) (r0 *ses.GetIdentityNotificationAttributesOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetIdentityNotificationAttributes", i0)
	r0, _ = returns[0].(*ses.GetIdentityNotificationAttributesOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SESDouble) GetIdentityNotificationAttributesRequest(i0 *ses.GetIdentityNotificationAttributesInput) (r0 *request.Request, r1 *ses.GetIdentityNotificationAttributesOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetIdentityNotificationAttributesRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*ses.GetIdentityNotificationAttributesOutput)
	return
}

func (d *SESDouble) GetIdentityNotificationAttributesWithContext(i0 context.Context, i1 *ses.GetIdentityNotificationAttributesInput, i2 ...request.Option) (r0 *ses.GetIdentityNotificationAttributesOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetIdentityNotificationAttributesWithContext", i0, i1, i2)
	r0, _ = returns[0].(*ses.GetIdentityNotificationAttributesOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SESDouble) fakeGetIdentityNotificationAttributesWithContext(ctx context.Context, in *ses.GetIdentityNotificationAttributesInput, _ ...request.Option) (*ses.GetIdentityNotificationAttributesOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "GetIdentityNotificationAttributes cancelled", ctx.Err())
	default:
		return d.GetIdentityNotificationAttributes(in)
	}
}

func (d *SESDouble) GetIdentityPolicies(i0 *ses.GetIdentityPoliciesInput) (r0 *ses.GetIdentityPoliciesOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetIdentityPolicies", i0)
	r0, _ = returns[0].(*ses.GetIdentityPoliciesOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SESDouble) GetIdentityPoliciesRequest(i0 *ses.GetIdentityPoliciesInput) (r0 *request.Request, r1 *ses.GetIdentityPoliciesOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetIdentityPoliciesRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*ses.GetIdentityPoliciesOutput)
	return
}

func (d *SESDouble) GetIdentityPoliciesWithContext(i0 context.Context, i1 *ses.GetIdentityPoliciesInput, i2 ...request.Option) (r0 *ses.GetIdentityPoliciesOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetIdentityPoliciesWithContext", i0, i1, i2)
	r0, _ = returns[0].(*ses.GetIdentityPoliciesOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SESDouble) fakeGetIdentityPoliciesWithContext(ctx context.Context, in *ses.GetIdentityPoliciesInput, _ ...request.Option) (*ses.GetIdentityPoliciesOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "GetIdentityPolicies cancelled", ctx.Err())
	default:
		return d.GetIdentityPolicies(in)
	}
}

func (d *SESDouble) GetIdentityVerificationAttributes(i0 *ses.GetIdentityVerificationAttributesInput) (r0 *ses.GetIdentityVerificationAttributesOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetIdentityVerificationAttributes", i0)
	r0, _ = returns[0].(*ses.GetIdentityVerificationAttributesOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SESDouble) GetIdentityVerificationAttributesRequest(i0 *ses.GetIdentityVerificationAttributesInput) (r0 *request.Request, r1 *ses.GetIdentityVerificationAttributesOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetIdentityVerificationAttributesRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*ses.GetIdentityVerificationAttributesOutput)
	return
}

func (d *SESDouble) GetIdentityVerificationAttributesWithContext(i0 context.Context, i1 *ses.GetIdentityVerificationAttributesInput, i2 ...request.Option) (r0 *ses.GetIdentityVerificationAttributesOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetIdentityVerificationAttributesWithContext", i0, i1, i2)
	r0, _ = returns[0].(*ses.GetIdentityVerificationAttributesOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SESDouble) fakeGetIdentityVerificationAttributesWithContext(ctx context.Context, in *ses.GetIdentityVerificationAttributesInput, _ ...request.Option) (*ses.GetIdentityVerificationAttributesOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "GetIdentityVerificationAttributes cancelled", ctx.Err())
	default:
		return d.GetIdentityVerificationAttributes(in)
	}
}

func (d *SESDouble) GetSendQuota(i0 *ses.GetSendQuotaInput) (r0 *ses.GetSendQuotaOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetSendQuota", i0)
	r0, _ = returns[0].(*ses.GetSendQuotaOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SESDouble) GetSendQuotaRequest(i0 *ses.GetSendQuotaInput) (r0 *request.Request, r1 *ses.GetSendQuotaOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetSendQuotaRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*ses.GetSendQuotaOutput)
	return
}

func (d *SESDouble) GetSendQuotaWithContext(i0 context.Context, i1 *ses.GetSendQuotaInput, i2 ...request.Option) (r0 *ses.GetSendQuotaOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetSendQuotaWithContext", i0, i1, i2)
	r0, _ = returns[0].(*ses.GetSendQuotaOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SESDouble) fakeGetSendQuotaWithContext(ctx context.Context, in *ses.GetSendQuotaInput, _ ...request.Option) (*ses.GetSendQuotaOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "GetSendQuota cancelled", ctx.Err())
	default:
		return d.GetSendQuota(in)
	}
}

func (d *SESDouble) GetSendStatistics(i0 *ses.GetSendStatisticsInput) (r0 *ses.GetSendStatisticsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetSendStatistics", i0)
	r0, _ = returns[0].(*ses.GetSendStatisticsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SESDouble) GetSendStatisticsRequest(i0 *ses.GetSendStatisticsInput) (r0 *request.Request, r1 *ses.GetSendStatisticsOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetSendStatisticsRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*ses.GetSendStatisticsOutput)
	return
}

func (d *SESDouble) GetSendStatisticsWithContext(i0 context.Context, i1 *ses.GetSendStatisticsInput, i2 ...request.Option) (r0 *ses.GetSendStatisticsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetSendStatisticsWithContext", i0, i1, i2)
	r0, _ = returns[0].(*ses.GetSendStatisticsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SESDouble) fakeGetSendStatisticsWithContext(ctx context.Context, in *ses.GetSendStatisticsInput, _ ...request.Option) (*ses.GetSendStatisticsOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "GetSendStatistics cancelled", ctx.Err())
	default:
		return d.GetSendStatistics(in)
	}
}

func (d *SESDouble) GetTemplate(i0 *ses.GetTemplateInput) (r0 *ses.GetTemplateOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetTemplate", i0)
	r0, _ = returns[0].(*ses.GetTemplateOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SESDouble) GetTemplateRequest(i0 *ses.GetTemplateInput) (r0 *request.Request, r1 *ses.GetTemplateOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetTemplateRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*ses.GetTemplateOutput)
	return
}

func (d *SESDouble) GetTemplateWithContext(i0 context.Context, i1 *ses.GetTemplateInput, i2 ...request.Option) (r0 *ses.GetTemplateOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetTemplateWithContext", i0, i1, i2)
	r0, _ = returns[0].(*ses.GetTemplateOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SESDouble) fakeGetTemplateWithContext(ctx context.Context, in *ses.GetTemplateInput, _ ...request.Option) (*ses.GetTemplateOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "GetTemplate cancelled", ctx.Err())
	default:
		return d.GetTemplate(in)
	}
}

func (d *SESDouble) ListConfigurationSets(i0 *ses.ListConfigurationSetsInput) (r0 *ses.ListConfigurationSetsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListConfigurationSets", i0)
	r0, _ = returns[0].(*ses.ListConfigurationSetsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SESDouble) ListConfigurationSetsRequest(i0 *ses.ListConfigurationSetsInput) (r0 *request.Request, r1 *ses.ListConfigurationSetsOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListConfigurationSetsRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*ses.ListConfigurationSetsOutput)
	return
}

func (d *SESDouble) ListConfigurationSetsWithContext(i0 context.Context, i1 *ses.ListConfigurationSetsInput, i2 ...request.Option) (r0 *ses.ListConfigurationSetsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListConfigurationSetsWithContext", i0, i1, i2)
	r0, _ = returns[0].(*ses.ListConfigurationSetsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SESDouble) fakeListConfigurationSetsWithContext(ctx context.Context, in *ses.ListConfigurationSetsInput, _ ...request.Option) (*ses.ListConfigurationSetsOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "ListConfigurationSets cancelled", ctx.Err())
	default:
		return d.ListConfigurationSets(in)
	}
}

func (d *SESDouble) ListCustomVerificationEmailTemplates(i0 *ses.ListCustomVerificationEmailTemplatesInput) (r0 *ses.ListCustomVerificationEmailTemplatesOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListCustomVerificationEmailTemplates", i0)
	r0, _ = returns[0].(*ses.ListCustomVerificationEmailTemplatesOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SESDouble) ListCustomVerificationEmailTemplatesPages(i0 *ses.ListCustomVerificationEmailTemplatesInput, i1 func(*ses.ListCustomVerificationEmailTemplatesOutput, bool) bool) (r0 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListCustomVerificationEmailTemplatesPages", i0, i1)
	r0, _ = returns[0].(error)
	return
}

func (d *SESDouble) fakeListCustomVerificationEmailTemplatesPages(in *ses.ListCustomVerificationEmailTemplatesInput, pager func(*ses.ListCustomVerificationEmailTemplatesOutput, bool) (shouldContinue bool)) error {
	return d.Paginate("ListCustomVerificationEmailTemplates", paginators, in, pager)
}

func (d *SESDouble) ListCustomVerificationEmailTemplatesPagesWithContext(i0 context.Context, i1 *ses.ListCustomVerificationEmailTemplatesInput, i2 func(*ses.ListCustomVerificationEmailTemplatesOutput, bool) bool, i3 ...request.Option) (r0 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListCustomVerificationEmailTemplatesPagesWithContext", i0, i1, i2, i3)
	r0, _ = returns[0].(error)
	return
}

func (d *SESDouble) fakeListCustomVerificationEmailTemplatesPagesWithContext(ctx context.Context, in *ses.ListCustomVerificationEmailTemplatesInput, pager func(*ses.ListCustomVerificationEmailTemplatesOutput, bool) (shouldContinue bool), options ...request.Option) error {
	return d.PaginateWithContext("ListCustomVerificationEmailTemplates", paginators, ctx, in, pager, options...)
}

func (d *SESDouble) ListCustomVerificationEmailTemplatesRequest(i0 *ses.ListCustomVerificationEmailTemplatesInput) (r0 *request.Request, r1 *ses.ListCustomVerificationEmailTemplatesOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListCustomVerificationEmailTemplatesRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*ses.ListCustomVerificationEmailTemplatesOutput)
	return
}

func (d *SESDouble) ListCustomVerificationEmailTemplatesWithContext(i0 context.Context, i1 *ses.ListCustomVerificationEmailTemplatesInput, i2 ...request.Option) (r0 *ses.ListCustomVerificationEmailTemplatesOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListCustomVerificationEmailTemplatesWithContext", i0, i1, i2)
	r0, _ = returns[0].(*ses.ListCustomVerificationEmailTemplatesOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SESDouble) fakeListCustomVerificationEmailTemplatesWithContext(ctx context.Context, in *ses.ListCustomVerificationEmailTemplatesInput, _ ...request.Option) (*ses.ListCustomVerificationEmailTemplatesOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "ListCustomVerificationEmailTemplates cancelled", ctx.Err())
	default:
		return d.ListCustomVerificationEmailTemplates(in)
	}
}

func (d *SESDouble) ListIdentities(i0 *ses.ListIdentitiesInput) (r0 *ses.ListIdentitiesOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListIdentities", i0)
	r0, _ = returns[0].(*ses.ListIdentitiesOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SESDouble) ListIdentitiesPages(i0 *ses.ListIdentitiesInput, i1 func(*ses.ListIdentitiesOutput, bool) bool) (r0 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListIdentitiesPages", i0, i1)
	r0, _ = returns[0].(error)
	return
}

func (d *SESDouble) fakeListIdentitiesPages(in *ses.ListIdentitiesInput, pager func(*ses.ListIdentitiesOutput, bool) (shouldContinue bool)) error {
	return d.Paginate("ListIdentities", paginators, in, pager)
}

func (d *SESDouble) ListIdentitiesPagesWithContext(i0 context.Context, i1 *ses.ListIdentitiesInput, i2 func(*ses.ListIdentitiesOutput, bool) bool, i3 ...request.Option) (r0 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListIdentitiesPagesWithContext", i0, i1, i2, i3)
	r0, _ = returns[0].(error)
	return
}

func (d *SESDouble) fakeListIdentitiesPagesWithContext(ctx context.Context, in *ses.ListIdentitiesInput, pager func(*ses.ListIdentitiesOutput, bool) (shouldContinue bool), options ...request.Option) error {
	return d.PaginateWithContext("ListIdentities", paginators, ctx, in, pager, options...)
}

func (d *SESDouble) ListIdentitiesRequest(i0 *ses.ListIdentitiesInput) (r0 *request.Request, r1 *ses.ListIdentitiesOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListIdentitiesRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*ses.ListIdentitiesOutput)
	return
}

func (d *SESDouble) ListIdentitiesWithContext(i0 context.Context, i1 *ses.ListIdentitiesInput, i2 ...request.Option) (r0 *ses.ListIdentitiesOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListIdentitiesWithContext", i0, i1, i2)
	r0, _ = returns[0].(*ses.ListIdentitiesOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SESDouble) fakeListIdentitiesWithContext(ctx context.Context, in *ses.ListIdentitiesInput, _ ...request.Option) (*ses.ListIdentitiesOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "ListIdentities cancelled", ctx.Err())
	default:
		return d.ListIdentities(in)
	}
}

func (d *SESDouble) ListIdentityPolicies(i0 *ses.ListIdentityPoliciesInput) (r0 *ses.ListIdentityPoliciesOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListIdentityPolicies", i0)
	r0, _ = returns[0].(*ses.ListIdentityPoliciesOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SESDouble) ListIdentityPoliciesRequest(i0 *ses.ListIdentityPoliciesInput) (r0 *request.Request, r1 *ses.ListIdentityPoliciesOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListIdentityPoliciesRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*ses.ListIdentityPoliciesOutput)
	return
}

func (d *SESDouble) ListIdentityPoliciesWithContext(i0 context.Context, i1 *ses.ListIdentityPoliciesInput, i2 ...request.Option) (r0 *ses.ListIdentityPoliciesOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListIdentityPoliciesWithContext", i0, i1, i2)
	r0, _ = returns[0].(*ses.ListIdentityPoliciesOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SESDouble) fakeListIdentityPoliciesWithContext(ctx context.Context, in *ses.ListIdentityPoliciesInput, _ ...request.Option) (*ses.ListIdentityPoliciesOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "ListIdentityPolicies cancelled", ctx.Err())
	default:
		return d.ListIdentityPolicies(in)
	}
}

func (d *SESDouble) ListReceiptFilters(i0 *ses.ListReceiptFiltersInput) (r0 *ses.ListReceiptFiltersOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListReceiptFilters", i0)
	r0, _ = returns[0].(*ses.ListReceiptFiltersOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SESDouble) ListReceiptFiltersRequest(i0 *ses.ListReceiptFiltersInput) (r0 *request.Request, r1 *ses.ListReceiptFiltersOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListReceiptFiltersRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*ses.ListReceiptFiltersOutput)
	return
}

func (d *SESDouble) ListReceiptFiltersWithContext(i0 context.Context, i1 *ses.ListReceiptFiltersInput, i2 ...request.Option) (r0 *ses.ListReceiptFiltersOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListReceiptFiltersWithContext", i0, i1, i2)
	r0, _ = returns[0].(*ses.ListReceiptFiltersOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SESDouble) fakeListReceiptFiltersWithContext(ctx context.Context, in *ses.ListReceiptFiltersInput, _ ...request.Option) (*ses.ListReceiptFiltersOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "ListReceiptFilters cancelled", ctx.Err())
	default:
		return d.ListReceiptFilters(in)
	}
}

func (d *SESDouble) ListReceiptRuleSets(i0 *ses.ListReceiptRuleSetsInput) (r0 *ses.ListReceiptRuleSetsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListReceiptRuleSets", i0)
	r0, _ = returns[0].(*ses.ListReceiptRuleSetsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SESDouble) ListReceiptRuleSetsRequest(i0 *ses.ListReceiptRuleSetsInput) (r0 *request.Request, r1 *ses.ListReceiptRuleSetsOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListReceiptRuleSetsRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*ses.ListReceiptRuleSetsOutput)
	return
}

func (d *SESDouble) ListReceiptRuleSetsWithContext(i0 context.Context, i1 *ses.ListReceiptRuleSetsInput, i2 ...request.Option) (r0 *ses.ListReceiptRuleSetsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListReceiptRuleSetsWithContext", i0, i1, i2)
	r0, _ = returns[0].(*ses.ListReceiptRuleSetsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SESDouble) fakeListReceiptRuleSetsWithContext(ctx context.Context, in *ses.ListReceiptRuleSetsInput, _ ...request.Option) (*ses.ListReceiptRuleSetsOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "ListReceiptRuleSets cancelled", ctx.Err())
	default:
		return d.ListReceiptRuleSets(in)
	}
}

func (d *SESDouble) ListTemplates(i0 *ses.ListTemplatesInput) (r0 *ses.ListTemplatesOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListTemplates", i0)
	r0, _ = returns[0].(*ses.ListTemplatesOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SESDouble) ListTemplatesRequest(i0 *ses.ListTemplatesInput) (r0 *request.Request, r1 *ses.ListTemplatesOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListTemplatesRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*ses.ListTemplatesOutput)
	return
}

func (d *SESDouble) ListTemplatesWithContext(i0 context.Context, i1 *ses.ListTemplatesInput, i2 ...request.Option) (r0 *ses.ListTemplatesOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListTemplatesWithContext", i0, i1, i2)
	r0, _ = returns[0].(*ses.ListTemplatesOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SESDouble) fakeListTemplatesWithContext(ctx context.Context, in *ses.ListTemplatesInput, _ ...request.Option) (*ses.ListTemplatesOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "ListTemplates cancelled", ctx.Err())
	default:
		return d.ListTemplates(in)
	}
}

func (d *SESDouble) ListVerifiedEmailAddresses(i0 *ses.ListVerifiedEmailAddressesInput) (r0 *ses.ListVerifiedEmailAddressesOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListVerifiedEmailAddresses", i0)
	r0, _ = returns[0].(*ses.ListVerifiedEmailAddressesOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SESDouble) ListVerifiedEmailAddressesRequest(i0 *ses.ListVerifiedEmailAddressesInput) (r0 *request.Request, r1 *ses.ListVerifiedEmailAddressesOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListVerifiedEmailAddressesRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*ses.ListVerifiedEmailAddressesOutput)
	return
}

func (d *SESDouble) ListVerifiedEmailAddressesWithContext(i0 context.Context, i1 *ses.ListVerifiedEmailAddressesInput, i2 ...request.Option) (r0 *ses.ListVerifiedEmailAddressesOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListVerifiedEmailAddressesWithContext", i0, i1, i2)
	r0, _ = returns[0].(*ses.ListVerifiedEmailAddressesOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SESDouble) fakeListVerifiedEmailAddressesWithContext(ctx context.Context, in *ses.ListVerifiedEmailAddressesInput, _ ...request.Option) (*ses.ListVerifiedEmailAddressesOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "ListVerifiedEmailAddresses cancelled", ctx.Err())
	default:
		return d.ListVerifiedEmailAddresses(in)
	}
}

func (d *SESDouble) PutConfigurationSetDeliveryOptions(i0 *ses.PutConfigurationSetDeliveryOptionsInput) (r0 *ses.PutConfigurationSetDeliveryOptionsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("PutConfigurationSetDeliveryOptions", i0)
	r0, _ = returns[0].(*ses.PutConfigurationSetDeliveryOptionsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SESDouble) PutConfigurationSetDeliveryOptionsRequest(i0 *ses.PutConfigurationSetDeliveryOptionsInput) (r0 *request.Request, r1 *ses.PutConfigurationSetDeliveryOptionsOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("PutConfigurationSetDeliveryOptionsRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*ses.PutConfigurationSetDeliveryOptionsOutput)
	return
}

func (d *SESDouble) PutConfigurationSetDeliveryOptionsWithContext(i0 context.Context, i1 *ses.PutConfigurationSetDeliveryOptionsInput, i2 ...request.Option) (r0 *ses.PutConfigurationSetDeliveryOptionsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("PutConfigurationSetDeliveryOptionsWithContext", i0, i1, i2)
	r0, _ = returns[0].(*ses.PutConfigurationSetDeliveryOptionsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SESDouble) fakePutConfigurationSetDeliveryOptionsWithContext(ctx context.Context, in *ses.PutConfigurationSetDeliveryOptionsInput, _ ...request.Option) (*ses.PutConfigurationSetDeliveryOptionsOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "PutConfigurationSetDeliveryOptions cancelled", ctx.Err())
	default:
		return d.PutConfigurationSetDeliveryOptions(in)
	}
}

func (d *SESDouble) PutIdentityPolicy(i0 *ses.PutIdentityPolicyInput) (r0 *ses.PutIdentityPolicyOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("PutIdentityPolicy", i0)
	r0, _ = returns[0].(*ses.PutIdentityPolicyOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SESDouble) PutIdentityPolicyRequest(i0 *ses.PutIdentityPolicyInput) (r0 *request.Request, r1 *ses.PutIdentityPolicyOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("PutIdentityPolicyRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*ses.PutIdentityPolicyOutput)
	return
}

func (d *SESDouble) PutIdentityPolicyWithContext(i0 context.Context, i1 *ses.PutIdentityPolicyInput, i2 ...request.Option) (r0 *ses.PutIdentityPolicyOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("PutIdentityPolicyWithContext", i0, i1, i2)
	r0, _ = returns[0].(*ses.PutIdentityPolicyOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SESDouble) fakePutIdentityPolicyWithContext(ctx context.Context, in *ses.PutIdentityPolicyInput, _ ...request.Option) (*ses.PutIdentityPolicyOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "PutIdentityPolicy cancelled", ctx.Err())
	default:
		return d.PutIdentityPolicy(in)
	}
}

func (d *SESDouble) ReorderReceiptRuleSet(i0 *ses.ReorderReceiptRuleSetInput) (r0 *ses.ReorderReceiptRuleSetOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ReorderReceiptRuleSet", i0)
	r0, _ = returns[0].(*ses.ReorderReceiptRuleSetOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SESDouble) ReorderReceiptRuleSetRequest(i0 *ses.ReorderReceiptRuleSetInput) (r0 *request.Request, r1 *ses.ReorderReceiptRuleSetOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ReorderReceiptRuleSetRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*ses.ReorderReceiptRuleSetOutput)
	return
}

func (d *SESDouble) ReorderReceiptRuleSetWithContext(i0 context.Context, i1 *ses.ReorderReceiptRuleSetInput, i2 ...request.Option) (r0 *ses.ReorderReceiptRuleSetOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ReorderReceiptRuleSetWithContext", i0, i1, i2)
	r0, _ = returns[0].(*ses.ReorderReceiptRuleSetOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SESDouble) fakeReorderReceiptRuleSetWithContext(ctx context.Context, in *ses.ReorderReceiptRuleSetInput, _ ...request.Option) (*ses.ReorderReceiptRuleSetOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "ReorderReceiptRuleSet cancelled", ctx.Err())
	default:
		return d.ReorderReceiptRuleSet(in)
	}
}

func (d *SESDouble) SendBounce(i0 *ses.SendBounceInput) (r0 *ses.SendBounceOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("SendBounce", i0)
	r0, _ = returns[0].(*ses.SendBounceOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SESDouble) SendBounceRequest(i0 *ses.SendBounceInput) (r0 *request.Request, r1 *ses.SendBounceOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("SendBounceRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*ses.SendBounceOutput)
	return
}

func (d *SESDouble) SendBounceWithContext(i0 context.Context, i1 *ses.SendBounceInput, i2 ...request.Option) (r0 *ses.SendBounceOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("SendBounceWithContext", i0, i1, i2)
	r0, _ = returns[0].(*ses.SendBounceOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SESDouble) fakeSendBounceWithContext(ctx context.Context, in *ses.SendBounceInput, _ ...request.Option) (*ses.SendBounceOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "SendBounce cancelled", ctx.Err())
	default:
		return d.SendBounce(in)
	}
}

func (d *SESDouble) SendBulkTemplatedEmail(i0 *ses.SendBulkTemplatedEmailInput) (r0 *ses.SendBulkTemplatedEmailOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("SendBulkTemplatedEmail", i0)
	r0, _ = returns[0].(*ses.SendBulkTemplatedEmailOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SESDouble) SendBulkTemplatedEmailRequest(i0 *ses.SendBulkTemplatedEmailInput) (r0 *request.Request, r1 *ses.SendBulkTemplatedEmailOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("SendBulkTemplatedEmailRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*ses.SendBulkTemplatedEmailOutput)
	return
}

func (d *SESDouble) SendBulkTemplatedEmailWithContext(i0 context.Context, i1 *ses.SendBulkTemplatedEmailInput, i2 ...request.Option) (r0 *ses.SendBulkTemplatedEmailOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("SendBulkTemplatedEmailWithContext", i0, i1, i2)
	r0, _ = returns[0].(*ses.SendBulkTemplatedEmailOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SESDouble) fakeSendBulkTemplatedEmailWithContext(ctx context.Context, in *ses.SendBulkTemplatedEmailInput, _ ...request.Option) (*ses.SendBulkTemplatedEmailOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "SendBulkTemplatedEmail cancelled", ctx.Err())
	default:
		return d.SendBulkTemplatedEmail(in)
	}
}

func (d *SESDouble) SendCustomVerificationEmail(i0 *ses.SendCustomVerificationEmailInput) (r0 *ses.SendCustomVerificationEmailOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("SendCustomVerificationEmail", i0)
	r0, _ = returns[0].(*ses.SendCustomVerificationEmailOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SESDouble) SendCustomVerificationEmailRequest(i0 *ses.SendCustomVerificationEmailInput) (r0 *request.Request, r1 *ses.SendCustomVerificationEmailOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("SendCustomVerificationEmailRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*ses.SendCustomVerificationEmailOutput)
	return
}

func (d *SESDouble) SendCustomVerificationEmailWithContext(i0 context.Context, i1 *ses.SendCustomVerificationEmailInput, i2 ...request.Option) (r0 *ses.SendCustomVerificationEmailOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("SendCustomVerificationEmailWithContext", i0, i1, i2)
	r0, _ = returns[0].(*ses.SendCustomVerificationEmailOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SESDouble) fakeSendCustomVerificationEmailWithContext(ctx context.Context, in *ses.SendCustomVerificationEmailInput, _ ...request.Option) (*ses.SendCustomVerificationEmailOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "SendCustomVerificationEmail cancelled", ctx.Err())
	default:
		return d.SendCustomVerificationEmail(in)
	}
}

func (d *SESDouble) SendEmail(i0 *ses.SendEmailInput) (r0 *ses.SendEmailOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("SendEmail", i0)
	r0, _ = returns[0].(*ses.SendEmailOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SESDouble) SendEmailRequest(i0 *ses.SendEmailInput) (r0 *request.Request, r1 *ses.SendEmailOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("SendEmailRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*ses.SendEmailOutput)
	return
}

func (d *SESDouble) SendEmailWithContext(i0 context.Context, i1 *ses.SendEmailInput, i2 ...request.Option) (r0 *ses.SendEmailOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("SendEmailWithContext", i0, i1, i2)
	r0, _ = returns[0].(*ses.SendEmailOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SESDouble) fakeSendEmailWithContext(ctx context.Context, in *ses.SendEmailInput, _ ...request.Option) (*ses.SendEmailOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "SendEmail cancelled", ctx.Err())
	default:
		return d.SendEmail(in)
	}
}

func (d *SESDouble) SendRawEmail(i0 *ses.SendRawEmailInput) (r0 *ses.SendRawEmailOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("SendRawEmail", i0)
	r0, _ = returns[0].(*ses.SendRawEmailOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SESDouble) SendRawEmailRequest(i0 *ses.SendRawEmailInput) (r0 *request.Request, r1 *ses.SendRawEmailOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("SendRawEmailRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*ses.SendRawEmailOutput)
	return
}

func (d *SESDouble) SendRawEmailWithContext(i0 context.Context, i1 *ses.SendRawEmailInput, i2 ...request.Option) (r0 *ses.SendRawEmailOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("SendRawEmailWithContext", i0, i1, i2)
	r0, _ = returns[0].(*ses.SendRawEmailOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SESDouble) fakeSendRawEmailWithContext(ctx context.Context, in *ses.SendRawEmailInput, _ ...request.Option) (*ses.SendRawEmailOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "SendRawEmail cancelled", ctx.Err())
	default:
		return d.SendRawEmail(in)
	}
}

func (d *SESDouble) SendTemplatedEmail(i0 *ses.SendTemplatedEmailInput) (r0 *ses.SendTemplatedEmailOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("SendTemplatedEmail", i0)
	r0, _ = returns[0].(*ses.SendTemplatedEmailOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SESDouble) SendTemplatedEmailRequest(i0 *ses.SendTemplatedEmailInput) (r0 *request.Request, r1 *ses.SendTemplatedEmailOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("SendTemplatedEmailRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*ses.SendTemplatedEmailOutput)
	return
}

func (d *SESDouble) SendTemplatedEmailWithContext(i0 context.Context, i1 *ses.SendTemplatedEmailInput, i2 ...request.Option) (r0 *ses.SendTemplatedEmailOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("SendTemplatedEmailWithContext", i0, i1, i2)
	r0, _ = returns[0].(*ses.SendTemplatedEmailOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SESDouble) fakeSendTemplatedEmailWithContext(ctx context.Context, in *ses.SendTemplatedEmailInput, _ ...request.Option) (*ses.SendTemplatedEmailOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "SendTemplatedEmail cancelled", ctx.Err())
	default:
		return d.SendTemplatedEmail(in)
	}
}

func (d *SESDouble) SetActiveReceiptRuleSet(i0 *ses.SetActiveReceiptRuleSetInput) (r0 *ses.SetActiveReceiptRuleSetOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("SetActiveReceiptRuleSet", i0)
	r0, _ = returns[0].(*ses.SetActiveReceiptRuleSetOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SESDouble) SetActiveReceiptRuleSetRequest(i0 *ses.SetActiveReceiptRuleSetInput) (r0 *request.Request, r1 *ses.SetActiveReceiptRuleSetOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("SetActiveReceiptRuleSetRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*ses.SetActiveReceiptRuleSetOutput)
	return
}

func (d *SESDouble) SetActiveReceiptRuleSetWithContext(i0 context.Context, i1 *ses.SetActiveReceiptRuleSetInput, i2 ...request.Option) (r0 *ses.SetActiveReceiptRuleSetOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("SetActiveReceiptRuleSetWithContext", i0, i1, i2)
	r0, _ = returns[0].(*ses.SetActiveReceiptRuleSetOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SESDouble) fakeSetActiveReceiptRuleSetWithContext(ctx context.Context, in *ses.SetActiveReceiptRuleSetInput, _ ...request.Option) (*ses.SetActiveReceiptRuleSetOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "SetActiveReceiptRuleSet cancelled", ctx.Err())
	default:
		return d.SetActiveReceiptRuleSet(in)
	}
}

func (d *SESDouble) SetIdentityDkimEnabled(i0 *ses.SetIdentityDkimEnabledInput) (r0 *ses.SetIdentityDkimEnabledOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("SetIdentityDkimEnabled", i0)
	r0, _ = returns[0].(*ses.SetIdentityDkimEnabledOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SESDouble) SetIdentityDkimEnabledRequest(i0 *ses.SetIdentityDkimEnabledInput) (r0 *request.Request, r1 *ses.SetIdentityDkimEnabledOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("SetIdentityDkimEnabledRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*ses.SetIdentityDkimEnabledOutput)
	return
}

func (d *SESDouble) SetIdentityDkimEnabledWithContext(i0 context.Context, i1 *ses.SetIdentityDkimEnabledInput, i2 ...request.Option) (r0 *ses.SetIdentityDkimEnabledOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("SetIdentityDkimEnabledWithContext", i0, i1, i2)
	r0, _ = returns[0].(*ses.SetIdentityDkimEnabledOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SESDouble) fakeSetIdentityDkimEnabledWithContext(ctx context.Context, in *ses.SetIdentityDkimEnabledInput, _ ...request.Option) (*ses.SetIdentityDkimEnabledOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "SetIdentityDkimEnabled cancelled", ctx.Err())
	default:
		return d.SetIdentityDkimEnabled(in)
	}
}

func (d *SESDouble) SetIdentityFeedbackForwardingEnabled(i0 *ses.SetIdentityFeedbackForwardingEnabledInput) (r0 *ses.SetIdentityFeedbackForwardingEnabledOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("SetIdentityFeedbackForwardingEnabled", i0)
	r0, _ = returns[0].(*ses.SetIdentityFeedbackForwardingEnabledOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SESDouble) SetIdentityFeedbackForwardingEnabledRequest(i0 *ses.SetIdentityFeedbackForwardingEnabledInput) (r0 *request.Request, r1 *ses.SetIdentityFeedbackForwardingEnabledOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("SetIdentityFeedbackForwardingEnabledRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*ses.SetIdentityFeedbackForwardingEnabledOutput)
	return
}

func (d *SESDouble) SetIdentityFeedbackForwardingEnabledWithContext(i0 context.Context, i1 *ses.SetIdentityFeedbackForwardingEnabledInput, i2 ...request.Option) (r0 *ses.SetIdentityFeedbackForwardingEnabledOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("SetIdentityFeedbackForwardingEnabledWithContext", i0, i1, i2)
	r0, _ = returns[0].(*ses.SetIdentityFeedbackForwardingEnabledOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SESDouble) fakeSetIdentityFeedbackForwardingEnabledWithContext(ctx context.Context, in *ses.SetIdentityFeedbackForwardingEnabledInput, _ ...request.Option) (*ses.SetIdentityFeedbackForwardingEnabledOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "SetIdentityFeedbackForwardingEnabled cancelled", ctx.Err())
	default:
		return d.SetIdentityFeedbackForwardingEnabled(in)
	}
}

func (d *SESDouble) SetIdentityHeadersInNotificationsEnabled(i0 *ses.SetIdentityHeadersInNotificationsEnabledInput) (r0 *ses.SetIdentityHeadersInNotificationsEnabledOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("SetIdentityHeadersInNotificationsEnabled", i0)
	r0, _ = returns[0].(*ses.SetIdentityHeadersInNotificationsEnabledOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SESDouble) SetIdentityHeadersInNotificationsEnabledRequest(i0 *ses.SetIdentityHeadersInNotificationsEnabledInput) (r0 *request.Request, r1 *ses.SetIdentityHeadersInNotificationsEnabledOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("SetIdentityHeadersInNotificationsEnabledRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*ses.SetIdentityHeadersInNotificationsEnabledOutput)
	return
}

func (d *SESDouble) SetIdentityHeadersInNotificationsEnabledWithContext(i0 context.Context, i1 *ses.SetIdentityHeadersInNotificationsEnabledInput, i2 ...request.Option) (r0 *ses.SetIdentityHeadersInNotificationsEnabledOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("SetIdentityHeadersInNotificationsEnabledWithContext", i0, i1, i2)
	r0, _ = returns[0].(*ses.SetIdentityHeadersInNotificationsEnabledOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SESDouble) fakeSetIdentityHeadersInNotificationsEnabledWithContext(ctx context.Context, in *ses.SetIdentityHeadersInNotificationsEnabledInput, _ ...request.Option) (*ses.SetIdentityHeadersInNotificationsEnabledOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "SetIdentityHeadersInNotificationsEnabled cancelled", ctx.Err())
	default:
		return d.SetIdentityHeadersInNotificationsEnabled(in)
	}
}

func (d *SESDouble) SetIdentityMailFromDomain(i0 *ses.SetIdentityMailFromDomainInput) (r0 *ses.SetIdentityMailFromDomainOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("SetIdentityMailFromDomain", i0)
	r0, _ = returns[0].(*ses.SetIdentityMailFromDomainOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SESDouble) SetIdentityMailFromDomainRequest(i0 *ses.SetIdentityMailFromDomainInput) (r0 *request.Request, r1 *ses.SetIdentityMailFromDomainOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("SetIdentityMailFromDomainRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*ses.SetIdentityMailFromDomainOutput)
	return
}

func (d *SESDouble) SetIdentityMailFromDomainWithContext(i0 context.Context, i1 *ses.SetIdentityMailFromDomainInput, i2 ...request.Option) (r0 *ses.SetIdentityMailFromDomainOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("SetIdentityMailFromDomainWithContext", i0, i1, i2)
	r0, _ = returns[0].(*ses.SetIdentityMailFromDomainOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SESDouble) fakeSetIdentityMailFromDomainWithContext(ctx context.Context, in *ses.SetIdentityMailFromDomainInput, _ ...request.Option) (*ses.SetIdentityMailFromDomainOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "SetIdentityMailFromDomain cancelled", ctx.Err())
	default:
		return d.SetIdentityMailFromDomain(in)
	}
}

func (d *SESDouble) SetIdentityNotificationTopic(i0 *ses.SetIdentityNotificationTopicInput) (r0 *ses.SetIdentityNotificationTopicOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("SetIdentityNotificationTopic", i0)
	r0, _ = returns[0].(*ses.SetIdentityNotificationTopicOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SESDouble) SetIdentityNotificationTopicRequest(i0 *ses.SetIdentityNotificationTopicInput) (r0 *request.Request, r1 *ses.SetIdentityNotificationTopicOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("SetIdentityNotificationTopicRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*ses.SetIdentityNotificationTopicOutput)
	return
}

func (d *SESDouble) SetIdentityNotificationTopicWithContext(i0 context.Context, i1 *ses.SetIdentityNotificationTopicInput, i2 ...request.Option) (r0 *ses.SetIdentityNotificationTopicOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("SetIdentityNotificationTopicWithContext", i0, i1, i2)
	r0, _ = returns[0].(*ses.SetIdentityNotificationTopicOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SESDouble) fakeSetIdentityNotificationTopicWithContext(ctx context.Context, in *ses.SetIdentityNotificationTopicInput, _ ...request.Option) (*ses.SetIdentityNotificationTopicOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "SetIdentityNotificationTopic cancelled", ctx.Err())
	default:
		return d.SetIdentityNotificationTopic(in)
	}
}

func (d *SESDouble) SetReceiptRulePosition(i0 *ses.SetReceiptRulePositionInput) (r0 *ses.SetReceiptRulePositionOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("SetReceiptRulePosition", i0)
	r0, _ = returns[0].(*ses.SetReceiptRulePositionOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SESDouble) SetReceiptRulePositionRequest(i0 *ses.SetReceiptRulePositionInput) (r0 *request.Request, r1 *ses.SetReceiptRulePositionOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("SetReceiptRulePositionRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*ses.SetReceiptRulePositionOutput)
	return
}

func (d *SESDouble) SetReceiptRulePositionWithContext(i0 context.Context, i1 *ses.SetReceiptRulePositionInput, i2 ...request.Option) (r0 *ses.SetReceiptRulePositionOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("SetReceiptRulePositionWithContext", i0, i1, i2)
	r0, _ = returns[0].(*ses.SetReceiptRulePositionOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SESDouble) fakeSetReceiptRulePositionWithContext(ctx context.Context, in *ses.SetReceiptRulePositionInput, _ ...request.Option) (*ses.SetReceiptRulePositionOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "SetReceiptRulePosition cancelled", ctx.Err())
	default:
		return d.SetReceiptRulePosition(in)
	}
}

func (d *SESDouble) TestRenderTemplate(i0 *ses.TestRenderTemplateInput) (r0 *ses.TestRenderTemplateOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("TestRenderTemplate", i0)
	r0, _ = returns[0].(*ses.TestRenderTemplateOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SESDouble) TestRenderTemplateRequest(i0 *ses.TestRenderTemplateInput) (r0 *request.Request, r1 *ses.TestRenderTemplateOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("TestRenderTemplateRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*ses.TestRenderTemplateOutput)
	return
}

func (d *SESDouble) TestRenderTemplateWithContext(i0 context.Context, i1 *ses.TestRenderTemplateInput, i2 ...request.Option) (r0 *ses.TestRenderTemplateOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("TestRenderTemplateWithContext", i0, i1, i2)
	r0, _ = returns[0].(*ses.TestRenderTemplateOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SESDouble) fakeTestRenderTemplateWithContext(ctx context.Context, in *ses.TestRenderTemplateInput, _ ...request.Option) (*ses.TestRenderTemplateOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "TestRenderTemplate cancelled", ctx.Err())
	default:
		return d.TestRenderTemplate(in)
	}
}

func (d *SESDouble) UpdateAccountSendingEnabled(i0 *ses.UpdateAccountSendingEnabledInput) (r0 *ses.UpdateAccountSendingEnabledOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UpdateAccountSendingEnabled", i0)
	r0, _ = returns[0].(*ses.UpdateAccountSendingEnabledOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SESDouble) UpdateAccountSendingEnabledRequest(i0 *ses.UpdateAccountSendingEnabledInput) (r0 *request.Request, r1 *ses.UpdateAccountSendingEnabledOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UpdateAccountSendingEnabledRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*ses.UpdateAccountSendingEnabledOutput)
	return
}

func (d *SESDouble) UpdateAccountSendingEnabledWithContext(i0 context.Context, i1 *ses.UpdateAccountSendingEnabledInput, i2 ...request.Option) (r0 *ses.UpdateAccountSendingEnabledOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UpdateAccountSendingEnabledWithContext", i0, i1, i2)
	r0, _ = returns[0].(*ses.UpdateAccountSendingEnabledOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SESDouble) fakeUpdateAccountSendingEnabledWithContext(ctx context.Context, in *ses.UpdateAccountSendingEnabledInput, _ ...request.Option) (*ses.UpdateAccountSendingEnabledOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "UpdateAccountSendingEnabled cancelled", ctx.Err())
	default:
		return d.UpdateAccountSendingEnabled(in)
	}
}

func (d *SESDouble) UpdateConfigurationSetEventDestination(i0 *ses.UpdateConfigurationSetEventDestinationInput) (r0 *ses.UpdateConfigurationSetEventDestinationOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UpdateConfigurationSetEventDestination", i0)
	r0, _ = returns[0].(*ses.UpdateConfigurationSetEventDestinationOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SESDouble) UpdateConfigurationSetEventDestinationRequest(i0 *ses.UpdateConfigurationSetEventDestinationInput) (r0 *request.Request, r1 *ses.UpdateConfigurationSetEventDestinationOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UpdateConfigurationSetEventDestinationRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*ses.UpdateConfigurationSetEventDestinationOutput)
	return
}

func (d *SESDouble) UpdateConfigurationSetEventDestinationWithContext(i0 context.Context, i1 *ses.UpdateConfigurationSetEventDestinationInput, i2 ...request.Option) (r0 *ses.UpdateConfigurationSetEventDestinationOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UpdateConfigurationSetEventDestinationWithContext", i0, i1, i2)
	r0, _ = returns[0].(*ses.UpdateConfigurationSetEventDestinationOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SESDouble) fakeUpdateConfigurationSetEventDestinationWithContext(ctx context.Context, in *ses.UpdateConfigurationSetEventDestinationInput, _ ...request.Option) (*ses.UpdateConfigurationSetEventDestinationOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "UpdateConfigurationSetEventDestination cancelled", ctx.Err())
	default:
		return d.UpdateConfigurationSetEventDestination(in)
	}
}

func (d *SESDouble) UpdateConfigurationSetReputationMetricsEnabled(i0 *ses.UpdateConfigurationSetReputationMetricsEnabledInput) (r0 *ses.UpdateConfigurationSetReputationMetricsEnabledOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UpdateConfigurationSetReputationMetricsEnabled", i0)
	r0, _ = returns[0].(*ses.UpdateConfigurationSetReputationMetricsEnabledOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SESDouble) UpdateConfigurationSetReputationMetricsEnabledRequest(i0 *ses.UpdateConfigurationSetReputationMetricsEnabledInput) (r0 *request.Request, r1 *ses.UpdateConfigurationSetReputationMetricsEnabledOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UpdateConfigurationSetReputationMetricsEnabledRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*ses.UpdateConfigurationSetReputationMetricsEnabledOutput)
	return
}

func (d *SESDouble) UpdateConfigurationSetReputationMetricsEnabledWithContext(i0 context.Context, i1 *ses.UpdateConfigurationSetReputationMetricsEnabledInput, i2 ...request.Option) (r0 *ses.UpdateConfigurationSetReputationMetricsEnabledOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UpdateConfigurationSetReputationMetricsEnabledWithContext", i0, i1, i2)
	r0, _ = returns[0].(*ses.UpdateConfigurationSetReputationMetricsEnabledOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SESDouble) fakeUpdateConfigurationSetReputationMetricsEnabledWithContext(ctx context.Context, in *ses.UpdateConfigurationSetReputationMetricsEnabledInput, _ ...request.Option) (*ses.UpdateConfigurationSetReputationMetricsEnabledOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "UpdateConfigurationSetReputationMetricsEnabled cancelled", ctx.Err())
	default:
		return d.UpdateConfigurationSetReputationMetricsEnabled(in)
	}
}

func (d *SESDouble) UpdateConfigurationSetSendingEnabled(i0 *ses.UpdateConfigurationSetSendingEnabledInput) (r0 *ses.UpdateConfigurationSetSendingEnabledOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UpdateConfigurationSetSendingEnabled", i0)
	r0, _ = returns[0].(*ses.UpdateConfigurationSetSendingEnabledOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SESDouble) UpdateConfigurationSetSendingEnabledRequest(i0 *ses.UpdateConfigurationSetSendingEnabledInput) (r0 *request.Request, r1 *ses.UpdateConfigurationSetSendingEnabledOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UpdateConfigurationSetSendingEnabledRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*ses.UpdateConfigurationSetSendingEnabledOutput)
	return
}

func (d *SESDouble) UpdateConfigurationSetSendingEnabledWithContext(i0 context.Context, i1 *ses.UpdateConfigurationSetSendingEnabledInput, i2 ...request.Option) (r0 *ses.UpdateConfigurationSetSendingEnabledOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UpdateConfigurationSetSendingEnabledWithContext", i0, i1, i2)
	r0, _ = returns[0].(*ses.UpdateConfigurationSetSendingEnabledOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SESDouble) fakeUpdateConfigurationSetSendingEnabledWithContext(ctx context.Context, in *ses.UpdateConfigurationSetSendingEnabledInput, _ ...request.Option) (*ses.UpdateConfigurationSetSendingEnabledOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "UpdateConfigurationSetSendingEnabled cancelled", ctx.Err())
	default:
		return d.UpdateConfigurationSetSendingEnabled(in)
	}
}

func (d *SESDouble) UpdateConfigurationSetTrackingOptions(i0 *ses.UpdateConfigurationSetTrackingOptionsInput) (r0 *ses.UpdateConfigurationSetTrackingOptionsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UpdateConfigurationSetTrackingOptions", i0)
	r0, _ = returns[0].(*ses.UpdateConfigurationSetTrackingOptionsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SESDouble) UpdateConfigurationSetTrackingOptionsRequest(i0 *ses.UpdateConfigurationSetTrackingOptionsInput) (r0 *request.Request, r1 *ses.UpdateConfigurationSetTrackingOptionsOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UpdateConfigurationSetTrackingOptionsRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*ses.UpdateConfigurationSetTrackingOptionsOutput)
	return
}

func (d *SESDouble) UpdateConfigurationSetTrackingOptionsWithContext(i0 context.Context, i1 *ses.UpdateConfigurationSetTrackingOptionsInput, i2 ...request.Option) (r0 *ses.UpdateConfigurationSetTrackingOptionsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UpdateConfigurationSetTrackingOptionsWithContext", i0, i1, i2)
	r0, _ = returns[0].(*ses.UpdateConfigurationSetTrackingOptionsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SESDouble) fakeUpdateConfigurationSetTrackingOptionsWithContext(ctx context.Context, in *ses.UpdateConfigurationSetTrackingOptionsInput, _ ...request.Option) (*ses.UpdateConfigurationSetTrackingOptionsOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "UpdateConfigurationSetTrackingOptions cancelled", ctx.Err())
	default:
		return d.UpdateConfigurationSetTrackingOptions(in)
	}
}

func (d *SESDouble) UpdateCustomVerificationEmailTemplate(i0 *ses.UpdateCustomVerificationEmailTemplateInput) (r0 *ses.UpdateCustomVerificationEmailTemplateOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UpdateCustomVerificationEmailTemplate", i0)
	r0, _ = returns[0].(*ses.UpdateCustomVerificationEmailTemplateOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SESDouble) UpdateCustomVerificationEmailTemplateRequest(i0 *ses.UpdateCustomVerificationEmailTemplateInput) (r0 *request.Request, r1 *ses.UpdateCustomVerificationEmailTemplateOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UpdateCustomVerificationEmailTemplateRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*ses.UpdateCustomVerificationEmailTemplateOutput)
	return
}

func (d *SESDouble) UpdateCustomVerificationEmailTemplateWithContext(i0 context.Context, i1 *ses.UpdateCustomVerificationEmailTemplateInput, i2 ...request.Option) (r0 *ses.UpdateCustomVerificationEmailTemplateOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UpdateCustomVerificationEmailTemplateWithContext", i0, i1, i2)
	r0, _ = returns[0].(*ses.UpdateCustomVerificationEmailTemplateOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SESDouble) fakeUpdateCustomVerificationEmailTemplateWithContext(ctx context.Context, in *ses.UpdateCustomVerificationEmailTemplateInput, _ ...request.Option) (*ses.UpdateCustomVerificationEmailTemplateOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "UpdateCustomVerificationEmailTemplate cancelled", ctx.Err())
	default:
		return d.UpdateCustomVerificationEmailTemplate(in)
	}
}

func (d *SESDouble) UpdateReceiptRule(i0 *ses.UpdateReceiptRuleInput) (r0 *ses.UpdateReceiptRuleOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UpdateReceiptRule", i0)
	r0, _ = returns[0].(*ses.UpdateReceiptRuleOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SESDouble) UpdateReceiptRuleRequest(i0 *ses.UpdateReceiptRuleInput) (r0 *request.Request, r1 *ses.UpdateReceiptRuleOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UpdateReceiptRuleRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*ses.UpdateReceiptRuleOutput)
	return
}

func (d *SESDouble) UpdateReceiptRuleWithContext(i0 context.Context, i1 *ses.UpdateReceiptRuleInput, i2 ...request.Option) (r0 *ses.UpdateReceiptRuleOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UpdateReceiptRuleWithContext", i0, i1, i2)
	r0, _ = returns[0].(*ses.UpdateReceiptRuleOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SESDouble) fakeUpdateReceiptRuleWithContext(ctx context.Context, in *ses.UpdateReceiptRuleInput, _ ...request.Option) (*ses.UpdateReceiptRuleOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "UpdateReceiptRule cancelled", ctx.Err())
	default:
		return d.UpdateReceiptRule(in)
	}
}

func (d *SESDouble) UpdateTemplate(i0 *ses.UpdateTemplateInput) (r0 *ses.UpdateTemplateOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UpdateTemplate", i0)
	r0, _ = returns[0].(*ses.UpdateTemplateOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SESDouble) UpdateTemplateRequest(i0 *ses.UpdateTemplateInput) (r0 *request.Request, r1 *ses.UpdateTemplateOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UpdateTemplateRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*ses.UpdateTemplateOutput)
	return
}

func (d *SESDouble) UpdateTemplateWithContext(i0 context.Context, i1 *ses.UpdateTemplateInput, i2 ...request.Option) (r0 *ses.UpdateTemplateOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UpdateTemplateWithContext", i0, i1, i2)
	r0, _ = returns[0].(*ses.UpdateTemplateOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SESDouble) fakeUpdateTemplateWithContext(ctx context.Context, in *ses.UpdateTemplateInput, _ ...request.Option) (*ses.UpdateTemplateOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "UpdateTemplate cancelled", ctx.Err())
	default:
		return d.UpdateTemplate(in)
	}
}

func (d *SESDouble) VerifyDomainDkim(i0 *ses.VerifyDomainDkimInput) (r0 *ses.VerifyDomainDkimOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("VerifyDomainDkim", i0)
	r0, _ = returns[0].(*ses.VerifyDomainDkimOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SESDouble) VerifyDomainDkimRequest(i0 *ses.VerifyDomainDkimInput) (r0 *request.Request, r1 *ses.VerifyDomainDkimOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("VerifyDomainDkimRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*ses.VerifyDomainDkimOutput)
	return
}

func (d *SESDouble) VerifyDomainDkimWithContext(i0 context.Context, i1 *ses.VerifyDomainDkimInput, i2 ...request.Option) (r0 *ses.VerifyDomainDkimOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("VerifyDomainDkimWithContext", i0, i1, i2)
	r0, _ = returns[0].(*ses.VerifyDomainDkimOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SESDouble) fakeVerifyDomainDkimWithContext(ctx context.Context, in *ses.VerifyDomainDkimInput, _ ...request.Option) (*ses.VerifyDomainDkimOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "VerifyDomainDkim cancelled", ctx.Err())
	default:
		return d.VerifyDomainDkim(in)
	}
}

func (d *SESDouble) VerifyDomainIdentity(i0 *ses.VerifyDomainIdentityInput) (r0 *ses.VerifyDomainIdentityOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("VerifyDomainIdentity", i0)
	r0, _ = returns[0].(*ses.VerifyDomainIdentityOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SESDouble) VerifyDomainIdentityRequest(i0 *ses.VerifyDomainIdentityInput) (r0 *request.Request, r1 *ses.VerifyDomainIdentityOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("VerifyDomainIdentityRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*ses.VerifyDomainIdentityOutput)
	return
}

func (d *SESDouble) VerifyDomainIdentityWithContext(i0 context.Context, i1 *ses.VerifyDomainIdentityInput, i2 ...request.Option) (r0 *ses.VerifyDomainIdentityOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("VerifyDomainIdentityWithContext", i0, i1, i2)
	r0, _ = returns[0].(*ses.VerifyDomainIdentityOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SESDouble) fakeVerifyDomainIdentityWithContext(ctx context.Context, in *ses.VerifyDomainIdentityInput, _ ...request.Option) (*ses.VerifyDomainIdentityOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "VerifyDomainIdentity cancelled", ctx.Err())
	default:
		return d.VerifyDomainIdentity(in)
	}
}

func (d *SESDouble) VerifyEmailAddress(i0 *ses.VerifyEmailAddressInput) (r0 *ses.VerifyEmailAddressOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("VerifyEmailAddress", i0)
	r0, _ = returns[0].(*ses.VerifyEmailAddressOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SESDouble) VerifyEmailAddressRequest(i0 *ses.VerifyEmailAddressInput) (r0 *request.Request, r1 *ses.VerifyEmailAddressOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("VerifyEmailAddressRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*ses.VerifyEmailAddressOutput)
	return
}

func (d *SESDouble) VerifyEmailAddressWithContext(i0 context.Context, i1 *ses.VerifyEmailAddressInput, i2 ...request.Option) (r0 *ses.VerifyEmailAddressOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("VerifyEmailAddressWithContext", i0, i1, i2)
	r0, _ = returns[0].(*ses.VerifyEmailAddressOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SESDouble) fakeVerifyEmailAddressWithContext(ctx context.Context, in *ses.VerifyEmailAddressInput, _ ...request.Option) (*ses.VerifyEmailAddressOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "VerifyEmailAddress cancelled", ctx.Err())
	default:
		return d.VerifyEmailAddress(in)
	}
}

func (d *SESDouble) VerifyEmailIdentity(i0 *ses.VerifyEmailIdentityInput) (r0 *ses.VerifyEmailIdentityOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("VerifyEmailIdentity", i0)
	r0, _ = returns[0].(*ses.VerifyEmailIdentityOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SESDouble) VerifyEmailIdentityRequest(i0 *ses.VerifyEmailIdentityInput) (r0 *request.Request, r1 *ses.VerifyEmailIdentityOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("VerifyEmailIdentityRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*ses.VerifyEmailIdentityOutput)
	return
}

func (d *SESDouble) VerifyEmailIdentityWithContext(i0 context.Context, i1 *ses.VerifyEmailIdentityInput, i2 ...request.Option) (r0 *ses.VerifyEmailIdentityOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("VerifyEmailIdentityWithContext", i0, i1, i2)
	r0, _ = returns[0].(*ses.VerifyEmailIdentityOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SESDouble) fakeVerifyEmailIdentityWithContext(ctx context.Context, in *ses.VerifyEmailIdentityInput, _ ...request.Option) (*ses.VerifyEmailIdentityOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "VerifyEmailIdentity cancelled", ctx.Err())
	default:
		return d.VerifyEmailIdentity(in)
	}
}

func (d *SESDouble) WaitUntilIdentityExists(i0 *ses.GetIdentityVerificationAttributesInput) (r0 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("WaitUntilIdentityExists", i0)
	r0, _ = returns[0].(error)
	return
}

func (d *SESDouble) fakeWaitUntilIdentityExists(in *ses.GetIdentityVerificationAttributesInput) error {
	return d.WaitUntil("IdentityExists", waiters, in)
}

func (d *SESDouble) WaitUntilIdentityExistsWithContext(i0 context.Context, i1 *ses.GetIdentityVerificationAttributesInput, i2 ...request.WaiterOption) (r0 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("WaitUntilIdentityExistsWithContext", i0, i1, i2)
	r0, _ = returns[0].(error)
	return
}

func (d *SESDouble) fakeWaitUntilIdentityExistsWithContext(ctx context.Context, in *ses.GetIdentityVerificationAttributesInput, waitOption ...request.WaiterOption) error {
	return d.WaitWithContext("IdentityExists", waiters, ctx, in, waitOption...)
}
