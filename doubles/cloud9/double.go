// Code generated by go doublegen; DO NOT EDIT.
// This file was generated at 2020-02-14T22:11:30+11:00

// Package cloud9double provides a TestDouble implementation of cloud9iface.Cloud9API
package cloud9double

import (
	"context"

	"github.com/aws/aws-sdk-go/aws/awserr"
	"github.com/aws/aws-sdk-go/aws/request"
	"github.com/aws/aws-sdk-go/service/cloud9"
	"github.com/aws/aws-sdk-go/service/cloud9/cloud9iface"
	"github.com/lwoggardner/awsdouble"
	"github.com/lwoggardner/godouble/godouble"
)

// Cloud9Double is TestDouble for cloud9iface.Cloud9API
type Cloud9Double struct {
	cloud9iface.Cloud9API
	*awsdouble.AWSTestDouble
}

// Constructor for Cloud9Double
// Default configuration will ensure
//   * API operations not explicitly stubbed will return an empty output struct pointer, and nil error.
//     To simulate long polling, "Poll" operations will return these values after a random delay of up to 100ms.
//   * WithContext methods implement a 'Fake' method that returns a cancellation error if the context is cancelled
//      before the method is called.
//   * Pages and PagesWithContext methods similarly implement a 'Fake' method that paginates over the underlying method.
//
//    This allows tests to only stub the simple api methods and be generally unconcerned whether the SUT is using the
//      Context or Pagination forms of the API.
//
func NewDouble(t godouble.T, configurators ...func(*awsdouble.AWSTestDouble)) *Cloud9Double {
	result := &Cloud9Double{}

	configurators = append([]func(configurator *awsdouble.AWSTestDouble){func(d *awsdouble.AWSTestDouble) {
		d.SetDefaultCall(result.defaultMethodCall)
		d.SetDefaultReturnValues(result.defaultReturnValues)
	}}, configurators...)

	result.AWSTestDouble = awsdouble.NewDouble(t, (*cloud9iface.Cloud9API)(nil), configurators...)
	return result
}

func (d *Cloud9Double) defaultReturnValues(m godouble.Method) godouble.ReturnValues {
	return d.DefaultReturnValues(m)
}

func (d *Cloud9Double) defaultMethodCall(m godouble.Method) godouble.MethodCall {
	switch m.Reflect().Name {

	case "CreateEnvironmentEC2WithContext":
		return m.Fake(d.fakeCreateEnvironmentEC2WithContext)

	case "CreateEnvironmentMembershipWithContext":
		return m.Fake(d.fakeCreateEnvironmentMembershipWithContext)

	case "DeleteEnvironmentMembershipWithContext":
		return m.Fake(d.fakeDeleteEnvironmentMembershipWithContext)

	case "DeleteEnvironmentWithContext":
		return m.Fake(d.fakeDeleteEnvironmentWithContext)

	case "DescribeEnvironmentMembershipsPages":
		return m.Fake(d.fakeDescribeEnvironmentMembershipsPages)

	case "DescribeEnvironmentMembershipsPagesWithContext":
		return m.Fake(d.fakeDescribeEnvironmentMembershipsPagesWithContext)

	case "DescribeEnvironmentMembershipsWithContext":
		return m.Fake(d.fakeDescribeEnvironmentMembershipsWithContext)

	case "DescribeEnvironmentStatusWithContext":
		return m.Fake(d.fakeDescribeEnvironmentStatusWithContext)

	case "DescribeEnvironmentsWithContext":
		return m.Fake(d.fakeDescribeEnvironmentsWithContext)

	case "ListEnvironmentsPages":
		return m.Fake(d.fakeListEnvironmentsPages)

	case "ListEnvironmentsPagesWithContext":
		return m.Fake(d.fakeListEnvironmentsPagesWithContext)

	case "ListEnvironmentsWithContext":
		return m.Fake(d.fakeListEnvironmentsWithContext)

	case "UpdateEnvironmentMembershipWithContext":
		return m.Fake(d.fakeUpdateEnvironmentMembershipWithContext)

	case "UpdateEnvironmentWithContext":
		return m.Fake(d.fakeUpdateEnvironmentWithContext)

	default:
		return nil
	}
}

func (d *Cloud9Double) CreateEnvironmentEC2(i0 *cloud9.CreateEnvironmentEC2Input) (r0 *cloud9.CreateEnvironmentEC2Output, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreateEnvironmentEC2", i0)
	r0, _ = returns[0].(*cloud9.CreateEnvironmentEC2Output)
	r1, _ = returns[1].(error)
	return
}

func (d *Cloud9Double) CreateEnvironmentEC2Request(i0 *cloud9.CreateEnvironmentEC2Input) (r0 *request.Request, r1 *cloud9.CreateEnvironmentEC2Output) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreateEnvironmentEC2Request", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*cloud9.CreateEnvironmentEC2Output)
	return
}

func (d *Cloud9Double) CreateEnvironmentEC2WithContext(i0 context.Context, i1 *cloud9.CreateEnvironmentEC2Input, i2 ...request.Option) (r0 *cloud9.CreateEnvironmentEC2Output, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreateEnvironmentEC2WithContext", i0, i1, i2)
	r0, _ = returns[0].(*cloud9.CreateEnvironmentEC2Output)
	r1, _ = returns[1].(error)
	return
}

func (d *Cloud9Double) fakeCreateEnvironmentEC2WithContext(ctx context.Context, in *cloud9.CreateEnvironmentEC2Input, _ ...request.Option) (*cloud9.CreateEnvironmentEC2Output, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "CreateEnvironmentEC2 cancelled", ctx.Err())
	default:
		return d.CreateEnvironmentEC2(in)
	}
}

func (d *Cloud9Double) CreateEnvironmentMembership(i0 *cloud9.CreateEnvironmentMembershipInput) (r0 *cloud9.CreateEnvironmentMembershipOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreateEnvironmentMembership", i0)
	r0, _ = returns[0].(*cloud9.CreateEnvironmentMembershipOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *Cloud9Double) CreateEnvironmentMembershipRequest(i0 *cloud9.CreateEnvironmentMembershipInput) (r0 *request.Request, r1 *cloud9.CreateEnvironmentMembershipOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreateEnvironmentMembershipRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*cloud9.CreateEnvironmentMembershipOutput)
	return
}

func (d *Cloud9Double) CreateEnvironmentMembershipWithContext(i0 context.Context, i1 *cloud9.CreateEnvironmentMembershipInput, i2 ...request.Option) (r0 *cloud9.CreateEnvironmentMembershipOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreateEnvironmentMembershipWithContext", i0, i1, i2)
	r0, _ = returns[0].(*cloud9.CreateEnvironmentMembershipOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *Cloud9Double) fakeCreateEnvironmentMembershipWithContext(ctx context.Context, in *cloud9.CreateEnvironmentMembershipInput, _ ...request.Option) (*cloud9.CreateEnvironmentMembershipOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "CreateEnvironmentMembership cancelled", ctx.Err())
	default:
		return d.CreateEnvironmentMembership(in)
	}
}

func (d *Cloud9Double) DeleteEnvironment(i0 *cloud9.DeleteEnvironmentInput) (r0 *cloud9.DeleteEnvironmentOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteEnvironment", i0)
	r0, _ = returns[0].(*cloud9.DeleteEnvironmentOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *Cloud9Double) DeleteEnvironmentMembership(i0 *cloud9.DeleteEnvironmentMembershipInput) (r0 *cloud9.DeleteEnvironmentMembershipOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteEnvironmentMembership", i0)
	r0, _ = returns[0].(*cloud9.DeleteEnvironmentMembershipOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *Cloud9Double) DeleteEnvironmentMembershipRequest(i0 *cloud9.DeleteEnvironmentMembershipInput) (r0 *request.Request, r1 *cloud9.DeleteEnvironmentMembershipOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteEnvironmentMembershipRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*cloud9.DeleteEnvironmentMembershipOutput)
	return
}

func (d *Cloud9Double) DeleteEnvironmentMembershipWithContext(i0 context.Context, i1 *cloud9.DeleteEnvironmentMembershipInput, i2 ...request.Option) (r0 *cloud9.DeleteEnvironmentMembershipOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteEnvironmentMembershipWithContext", i0, i1, i2)
	r0, _ = returns[0].(*cloud9.DeleteEnvironmentMembershipOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *Cloud9Double) fakeDeleteEnvironmentMembershipWithContext(ctx context.Context, in *cloud9.DeleteEnvironmentMembershipInput, _ ...request.Option) (*cloud9.DeleteEnvironmentMembershipOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "DeleteEnvironmentMembership cancelled", ctx.Err())
	default:
		return d.DeleteEnvironmentMembership(in)
	}
}

func (d *Cloud9Double) DeleteEnvironmentRequest(i0 *cloud9.DeleteEnvironmentInput) (r0 *request.Request, r1 *cloud9.DeleteEnvironmentOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteEnvironmentRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*cloud9.DeleteEnvironmentOutput)
	return
}

func (d *Cloud9Double) DeleteEnvironmentWithContext(i0 context.Context, i1 *cloud9.DeleteEnvironmentInput, i2 ...request.Option) (r0 *cloud9.DeleteEnvironmentOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteEnvironmentWithContext", i0, i1, i2)
	r0, _ = returns[0].(*cloud9.DeleteEnvironmentOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *Cloud9Double) fakeDeleteEnvironmentWithContext(ctx context.Context, in *cloud9.DeleteEnvironmentInput, _ ...request.Option) (*cloud9.DeleteEnvironmentOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "DeleteEnvironment cancelled", ctx.Err())
	default:
		return d.DeleteEnvironment(in)
	}
}

func (d *Cloud9Double) DescribeEnvironmentMemberships(i0 *cloud9.DescribeEnvironmentMembershipsInput) (r0 *cloud9.DescribeEnvironmentMembershipsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DescribeEnvironmentMemberships", i0)
	r0, _ = returns[0].(*cloud9.DescribeEnvironmentMembershipsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *Cloud9Double) DescribeEnvironmentMembershipsPages(i0 *cloud9.DescribeEnvironmentMembershipsInput, i1 func(*cloud9.DescribeEnvironmentMembershipsOutput, bool) bool) (r0 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DescribeEnvironmentMembershipsPages", i0, i1)
	r0, _ = returns[0].(error)
	return
}

func (d *Cloud9Double) fakeDescribeEnvironmentMembershipsPages(in *cloud9.DescribeEnvironmentMembershipsInput, pager func(*cloud9.DescribeEnvironmentMembershipsOutput, bool) (shouldContinue bool)) error {
	return d.Paginate("DescribeEnvironmentMemberships", paginators, in, pager)
}

func (d *Cloud9Double) DescribeEnvironmentMembershipsPagesWithContext(i0 context.Context, i1 *cloud9.DescribeEnvironmentMembershipsInput, i2 func(*cloud9.DescribeEnvironmentMembershipsOutput, bool) bool, i3 ...request.Option) (r0 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DescribeEnvironmentMembershipsPagesWithContext", i0, i1, i2, i3)
	r0, _ = returns[0].(error)
	return
}

func (d *Cloud9Double) fakeDescribeEnvironmentMembershipsPagesWithContext(ctx context.Context, in *cloud9.DescribeEnvironmentMembershipsInput, pager func(*cloud9.DescribeEnvironmentMembershipsOutput, bool) (shouldContinue bool), options ...request.Option) error {
	return d.PaginateWithContext("DescribeEnvironmentMemberships", paginators, ctx, in, pager, options...)
}

func (d *Cloud9Double) DescribeEnvironmentMembershipsRequest(i0 *cloud9.DescribeEnvironmentMembershipsInput) (r0 *request.Request, r1 *cloud9.DescribeEnvironmentMembershipsOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DescribeEnvironmentMembershipsRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*cloud9.DescribeEnvironmentMembershipsOutput)
	return
}

func (d *Cloud9Double) DescribeEnvironmentMembershipsWithContext(i0 context.Context, i1 *cloud9.DescribeEnvironmentMembershipsInput, i2 ...request.Option) (r0 *cloud9.DescribeEnvironmentMembershipsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DescribeEnvironmentMembershipsWithContext", i0, i1, i2)
	r0, _ = returns[0].(*cloud9.DescribeEnvironmentMembershipsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *Cloud9Double) fakeDescribeEnvironmentMembershipsWithContext(ctx context.Context, in *cloud9.DescribeEnvironmentMembershipsInput, _ ...request.Option) (*cloud9.DescribeEnvironmentMembershipsOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "DescribeEnvironmentMemberships cancelled", ctx.Err())
	default:
		return d.DescribeEnvironmentMemberships(in)
	}
}

func (d *Cloud9Double) DescribeEnvironmentStatus(i0 *cloud9.DescribeEnvironmentStatusInput) (r0 *cloud9.DescribeEnvironmentStatusOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DescribeEnvironmentStatus", i0)
	r0, _ = returns[0].(*cloud9.DescribeEnvironmentStatusOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *Cloud9Double) DescribeEnvironmentStatusRequest(i0 *cloud9.DescribeEnvironmentStatusInput) (r0 *request.Request, r1 *cloud9.DescribeEnvironmentStatusOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DescribeEnvironmentStatusRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*cloud9.DescribeEnvironmentStatusOutput)
	return
}

func (d *Cloud9Double) DescribeEnvironmentStatusWithContext(i0 context.Context, i1 *cloud9.DescribeEnvironmentStatusInput, i2 ...request.Option) (r0 *cloud9.DescribeEnvironmentStatusOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DescribeEnvironmentStatusWithContext", i0, i1, i2)
	r0, _ = returns[0].(*cloud9.DescribeEnvironmentStatusOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *Cloud9Double) fakeDescribeEnvironmentStatusWithContext(ctx context.Context, in *cloud9.DescribeEnvironmentStatusInput, _ ...request.Option) (*cloud9.DescribeEnvironmentStatusOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "DescribeEnvironmentStatus cancelled", ctx.Err())
	default:
		return d.DescribeEnvironmentStatus(in)
	}
}

func (d *Cloud9Double) DescribeEnvironments(i0 *cloud9.DescribeEnvironmentsInput) (r0 *cloud9.DescribeEnvironmentsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DescribeEnvironments", i0)
	r0, _ = returns[0].(*cloud9.DescribeEnvironmentsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *Cloud9Double) DescribeEnvironmentsRequest(i0 *cloud9.DescribeEnvironmentsInput) (r0 *request.Request, r1 *cloud9.DescribeEnvironmentsOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DescribeEnvironmentsRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*cloud9.DescribeEnvironmentsOutput)
	return
}

func (d *Cloud9Double) DescribeEnvironmentsWithContext(i0 context.Context, i1 *cloud9.DescribeEnvironmentsInput, i2 ...request.Option) (r0 *cloud9.DescribeEnvironmentsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DescribeEnvironmentsWithContext", i0, i1, i2)
	r0, _ = returns[0].(*cloud9.DescribeEnvironmentsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *Cloud9Double) fakeDescribeEnvironmentsWithContext(ctx context.Context, in *cloud9.DescribeEnvironmentsInput, _ ...request.Option) (*cloud9.DescribeEnvironmentsOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "DescribeEnvironments cancelled", ctx.Err())
	default:
		return d.DescribeEnvironments(in)
	}
}

func (d *Cloud9Double) ListEnvironments(i0 *cloud9.ListEnvironmentsInput) (r0 *cloud9.ListEnvironmentsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListEnvironments", i0)
	r0, _ = returns[0].(*cloud9.ListEnvironmentsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *Cloud9Double) ListEnvironmentsPages(i0 *cloud9.ListEnvironmentsInput, i1 func(*cloud9.ListEnvironmentsOutput, bool) bool) (r0 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListEnvironmentsPages", i0, i1)
	r0, _ = returns[0].(error)
	return
}

func (d *Cloud9Double) fakeListEnvironmentsPages(in *cloud9.ListEnvironmentsInput, pager func(*cloud9.ListEnvironmentsOutput, bool) (shouldContinue bool)) error {
	return d.Paginate("ListEnvironments", paginators, in, pager)
}

func (d *Cloud9Double) ListEnvironmentsPagesWithContext(i0 context.Context, i1 *cloud9.ListEnvironmentsInput, i2 func(*cloud9.ListEnvironmentsOutput, bool) bool, i3 ...request.Option) (r0 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListEnvironmentsPagesWithContext", i0, i1, i2, i3)
	r0, _ = returns[0].(error)
	return
}

func (d *Cloud9Double) fakeListEnvironmentsPagesWithContext(ctx context.Context, in *cloud9.ListEnvironmentsInput, pager func(*cloud9.ListEnvironmentsOutput, bool) (shouldContinue bool), options ...request.Option) error {
	return d.PaginateWithContext("ListEnvironments", paginators, ctx, in, pager, options...)
}

func (d *Cloud9Double) ListEnvironmentsRequest(i0 *cloud9.ListEnvironmentsInput) (r0 *request.Request, r1 *cloud9.ListEnvironmentsOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListEnvironmentsRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*cloud9.ListEnvironmentsOutput)
	return
}

func (d *Cloud9Double) ListEnvironmentsWithContext(i0 context.Context, i1 *cloud9.ListEnvironmentsInput, i2 ...request.Option) (r0 *cloud9.ListEnvironmentsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListEnvironmentsWithContext", i0, i1, i2)
	r0, _ = returns[0].(*cloud9.ListEnvironmentsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *Cloud9Double) fakeListEnvironmentsWithContext(ctx context.Context, in *cloud9.ListEnvironmentsInput, _ ...request.Option) (*cloud9.ListEnvironmentsOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "ListEnvironments cancelled", ctx.Err())
	default:
		return d.ListEnvironments(in)
	}
}

func (d *Cloud9Double) UpdateEnvironment(i0 *cloud9.UpdateEnvironmentInput) (r0 *cloud9.UpdateEnvironmentOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UpdateEnvironment", i0)
	r0, _ = returns[0].(*cloud9.UpdateEnvironmentOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *Cloud9Double) UpdateEnvironmentMembership(i0 *cloud9.UpdateEnvironmentMembershipInput) (r0 *cloud9.UpdateEnvironmentMembershipOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UpdateEnvironmentMembership", i0)
	r0, _ = returns[0].(*cloud9.UpdateEnvironmentMembershipOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *Cloud9Double) UpdateEnvironmentMembershipRequest(i0 *cloud9.UpdateEnvironmentMembershipInput) (r0 *request.Request, r1 *cloud9.UpdateEnvironmentMembershipOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UpdateEnvironmentMembershipRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*cloud9.UpdateEnvironmentMembershipOutput)
	return
}

func (d *Cloud9Double) UpdateEnvironmentMembershipWithContext(i0 context.Context, i1 *cloud9.UpdateEnvironmentMembershipInput, i2 ...request.Option) (r0 *cloud9.UpdateEnvironmentMembershipOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UpdateEnvironmentMembershipWithContext", i0, i1, i2)
	r0, _ = returns[0].(*cloud9.UpdateEnvironmentMembershipOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *Cloud9Double) fakeUpdateEnvironmentMembershipWithContext(ctx context.Context, in *cloud9.UpdateEnvironmentMembershipInput, _ ...request.Option) (*cloud9.UpdateEnvironmentMembershipOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "UpdateEnvironmentMembership cancelled", ctx.Err())
	default:
		return d.UpdateEnvironmentMembership(in)
	}
}

func (d *Cloud9Double) UpdateEnvironmentRequest(i0 *cloud9.UpdateEnvironmentInput) (r0 *request.Request, r1 *cloud9.UpdateEnvironmentOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UpdateEnvironmentRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*cloud9.UpdateEnvironmentOutput)
	return
}

func (d *Cloud9Double) UpdateEnvironmentWithContext(i0 context.Context, i1 *cloud9.UpdateEnvironmentInput, i2 ...request.Option) (r0 *cloud9.UpdateEnvironmentOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UpdateEnvironmentWithContext", i0, i1, i2)
	r0, _ = returns[0].(*cloud9.UpdateEnvironmentOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *Cloud9Double) fakeUpdateEnvironmentWithContext(ctx context.Context, in *cloud9.UpdateEnvironmentInput, _ ...request.Option) (*cloud9.UpdateEnvironmentOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "UpdateEnvironment cancelled", ctx.Err())
	default:
		return d.UpdateEnvironment(in)
	}
}
