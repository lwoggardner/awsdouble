// Code generated by go doublegen; DO NOT EDIT.
// This file was generated at 2020-02-14T22:15:00+11:00

// Package servicequotasdouble provides a TestDouble implementation of servicequotasiface.ServiceQuotasAPI
package servicequotasdouble

import (
	"context"

	"github.com/aws/aws-sdk-go/aws/awserr"
	"github.com/aws/aws-sdk-go/aws/request"
	"github.com/aws/aws-sdk-go/service/servicequotas"
	"github.com/aws/aws-sdk-go/service/servicequotas/servicequotasiface"
	"github.com/lwoggardner/awsdouble"
	"github.com/lwoggardner/godouble/godouble"
)

// ServiceQuotasDouble is TestDouble for servicequotasiface.ServiceQuotasAPI
type ServiceQuotasDouble struct {
	servicequotasiface.ServiceQuotasAPI
	*awsdouble.AWSTestDouble
}

// Constructor for ServiceQuotasDouble
// Default configuration will ensure
//   * API operations not explicitly stubbed will return an empty output struct pointer, and nil error.
//     To simulate long polling, "Poll" operations will return these values after a random delay of up to 100ms.
//   * WithContext methods implement a 'Fake' method that returns a cancellation error if the context is cancelled
//      before the method is called.
//   * Pages and PagesWithContext methods similarly implement a 'Fake' method that paginates over the underlying method.
//
//    This allows tests to only stub the simple api methods and be generally unconcerned whether the SUT is using the
//      Context or Pagination forms of the API.
//
func NewDouble(t godouble.T, configurators ...func(*awsdouble.AWSTestDouble)) *ServiceQuotasDouble {
	result := &ServiceQuotasDouble{}

	configurators = append([]func(configurator *awsdouble.AWSTestDouble){func(d *awsdouble.AWSTestDouble) {
		d.SetDefaultCall(result.defaultMethodCall)
		d.SetDefaultReturnValues(result.defaultReturnValues)
	}}, configurators...)

	result.AWSTestDouble = awsdouble.NewDouble(t, (*servicequotasiface.ServiceQuotasAPI)(nil), configurators...)
	return result
}

func (d *ServiceQuotasDouble) defaultReturnValues(m godouble.Method) godouble.ReturnValues {
	return d.DefaultReturnValues(m)
}

func (d *ServiceQuotasDouble) defaultMethodCall(m godouble.Method) godouble.MethodCall {
	switch m.Reflect().Name {

	case "AssociateServiceQuotaTemplateWithContext":
		return m.Fake(d.fakeAssociateServiceQuotaTemplateWithContext)

	case "DeleteServiceQuotaIncreaseRequestFromTemplateWithContext":
		return m.Fake(d.fakeDeleteServiceQuotaIncreaseRequestFromTemplateWithContext)

	case "DisassociateServiceQuotaTemplateWithContext":
		return m.Fake(d.fakeDisassociateServiceQuotaTemplateWithContext)

	case "GetAWSDefaultServiceQuotaWithContext":
		return m.Fake(d.fakeGetAWSDefaultServiceQuotaWithContext)

	case "GetAssociationForServiceQuotaTemplateWithContext":
		return m.Fake(d.fakeGetAssociationForServiceQuotaTemplateWithContext)

	case "GetRequestedServiceQuotaChangeWithContext":
		return m.Fake(d.fakeGetRequestedServiceQuotaChangeWithContext)

	case "GetServiceQuotaIncreaseRequestFromTemplateWithContext":
		return m.Fake(d.fakeGetServiceQuotaIncreaseRequestFromTemplateWithContext)

	case "GetServiceQuotaWithContext":
		return m.Fake(d.fakeGetServiceQuotaWithContext)

	case "ListAWSDefaultServiceQuotasPages":
		return m.Fake(d.fakeListAWSDefaultServiceQuotasPages)

	case "ListAWSDefaultServiceQuotasPagesWithContext":
		return m.Fake(d.fakeListAWSDefaultServiceQuotasPagesWithContext)

	case "ListAWSDefaultServiceQuotasWithContext":
		return m.Fake(d.fakeListAWSDefaultServiceQuotasWithContext)

	case "ListRequestedServiceQuotaChangeHistoryByQuotaPages":
		return m.Fake(d.fakeListRequestedServiceQuotaChangeHistoryByQuotaPages)

	case "ListRequestedServiceQuotaChangeHistoryByQuotaPagesWithContext":
		return m.Fake(d.fakeListRequestedServiceQuotaChangeHistoryByQuotaPagesWithContext)

	case "ListRequestedServiceQuotaChangeHistoryByQuotaWithContext":
		return m.Fake(d.fakeListRequestedServiceQuotaChangeHistoryByQuotaWithContext)

	case "ListRequestedServiceQuotaChangeHistoryPages":
		return m.Fake(d.fakeListRequestedServiceQuotaChangeHistoryPages)

	case "ListRequestedServiceQuotaChangeHistoryPagesWithContext":
		return m.Fake(d.fakeListRequestedServiceQuotaChangeHistoryPagesWithContext)

	case "ListRequestedServiceQuotaChangeHistoryWithContext":
		return m.Fake(d.fakeListRequestedServiceQuotaChangeHistoryWithContext)

	case "ListServiceQuotaIncreaseRequestsInTemplatePages":
		return m.Fake(d.fakeListServiceQuotaIncreaseRequestsInTemplatePages)

	case "ListServiceQuotaIncreaseRequestsInTemplatePagesWithContext":
		return m.Fake(d.fakeListServiceQuotaIncreaseRequestsInTemplatePagesWithContext)

	case "ListServiceQuotaIncreaseRequestsInTemplateWithContext":
		return m.Fake(d.fakeListServiceQuotaIncreaseRequestsInTemplateWithContext)

	case "ListServiceQuotasPages":
		return m.Fake(d.fakeListServiceQuotasPages)

	case "ListServiceQuotasPagesWithContext":
		return m.Fake(d.fakeListServiceQuotasPagesWithContext)

	case "ListServiceQuotasWithContext":
		return m.Fake(d.fakeListServiceQuotasWithContext)

	case "ListServicesPages":
		return m.Fake(d.fakeListServicesPages)

	case "ListServicesPagesWithContext":
		return m.Fake(d.fakeListServicesPagesWithContext)

	case "ListServicesWithContext":
		return m.Fake(d.fakeListServicesWithContext)

	case "PutServiceQuotaIncreaseRequestIntoTemplateWithContext":
		return m.Fake(d.fakePutServiceQuotaIncreaseRequestIntoTemplateWithContext)

	case "RequestServiceQuotaIncreaseWithContext":
		return m.Fake(d.fakeRequestServiceQuotaIncreaseWithContext)

	default:
		return nil
	}
}

func (d *ServiceQuotasDouble) AssociateServiceQuotaTemplate(i0 *servicequotas.AssociateServiceQuotaTemplateInput) (r0 *servicequotas.AssociateServiceQuotaTemplateOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("AssociateServiceQuotaTemplate", i0)
	r0, _ = returns[0].(*servicequotas.AssociateServiceQuotaTemplateOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ServiceQuotasDouble) AssociateServiceQuotaTemplateRequest(i0 *servicequotas.AssociateServiceQuotaTemplateInput) (r0 *request.Request, r1 *servicequotas.AssociateServiceQuotaTemplateOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("AssociateServiceQuotaTemplateRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*servicequotas.AssociateServiceQuotaTemplateOutput)
	return
}

func (d *ServiceQuotasDouble) AssociateServiceQuotaTemplateWithContext(i0 context.Context, i1 *servicequotas.AssociateServiceQuotaTemplateInput, i2 ...request.Option) (r0 *servicequotas.AssociateServiceQuotaTemplateOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("AssociateServiceQuotaTemplateWithContext", i0, i1, i2)
	r0, _ = returns[0].(*servicequotas.AssociateServiceQuotaTemplateOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ServiceQuotasDouble) fakeAssociateServiceQuotaTemplateWithContext(ctx context.Context, in *servicequotas.AssociateServiceQuotaTemplateInput, _ ...request.Option) (*servicequotas.AssociateServiceQuotaTemplateOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "AssociateServiceQuotaTemplate cancelled", ctx.Err())
	default:
		return d.AssociateServiceQuotaTemplate(in)
	}
}

func (d *ServiceQuotasDouble) DeleteServiceQuotaIncreaseRequestFromTemplate(i0 *servicequotas.DeleteServiceQuotaIncreaseRequestFromTemplateInput) (r0 *servicequotas.DeleteServiceQuotaIncreaseRequestFromTemplateOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteServiceQuotaIncreaseRequestFromTemplate", i0)
	r0, _ = returns[0].(*servicequotas.DeleteServiceQuotaIncreaseRequestFromTemplateOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ServiceQuotasDouble) DeleteServiceQuotaIncreaseRequestFromTemplateRequest(i0 *servicequotas.DeleteServiceQuotaIncreaseRequestFromTemplateInput) (r0 *request.Request, r1 *servicequotas.DeleteServiceQuotaIncreaseRequestFromTemplateOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteServiceQuotaIncreaseRequestFromTemplateRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*servicequotas.DeleteServiceQuotaIncreaseRequestFromTemplateOutput)
	return
}

func (d *ServiceQuotasDouble) DeleteServiceQuotaIncreaseRequestFromTemplateWithContext(i0 context.Context, i1 *servicequotas.DeleteServiceQuotaIncreaseRequestFromTemplateInput, i2 ...request.Option) (r0 *servicequotas.DeleteServiceQuotaIncreaseRequestFromTemplateOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteServiceQuotaIncreaseRequestFromTemplateWithContext", i0, i1, i2)
	r0, _ = returns[0].(*servicequotas.DeleteServiceQuotaIncreaseRequestFromTemplateOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ServiceQuotasDouble) fakeDeleteServiceQuotaIncreaseRequestFromTemplateWithContext(ctx context.Context, in *servicequotas.DeleteServiceQuotaIncreaseRequestFromTemplateInput, _ ...request.Option) (*servicequotas.DeleteServiceQuotaIncreaseRequestFromTemplateOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "DeleteServiceQuotaIncreaseRequestFromTemplate cancelled", ctx.Err())
	default:
		return d.DeleteServiceQuotaIncreaseRequestFromTemplate(in)
	}
}

func (d *ServiceQuotasDouble) DisassociateServiceQuotaTemplate(i0 *servicequotas.DisassociateServiceQuotaTemplateInput) (r0 *servicequotas.DisassociateServiceQuotaTemplateOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DisassociateServiceQuotaTemplate", i0)
	r0, _ = returns[0].(*servicequotas.DisassociateServiceQuotaTemplateOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ServiceQuotasDouble) DisassociateServiceQuotaTemplateRequest(i0 *servicequotas.DisassociateServiceQuotaTemplateInput) (r0 *request.Request, r1 *servicequotas.DisassociateServiceQuotaTemplateOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DisassociateServiceQuotaTemplateRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*servicequotas.DisassociateServiceQuotaTemplateOutput)
	return
}

func (d *ServiceQuotasDouble) DisassociateServiceQuotaTemplateWithContext(i0 context.Context, i1 *servicequotas.DisassociateServiceQuotaTemplateInput, i2 ...request.Option) (r0 *servicequotas.DisassociateServiceQuotaTemplateOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DisassociateServiceQuotaTemplateWithContext", i0, i1, i2)
	r0, _ = returns[0].(*servicequotas.DisassociateServiceQuotaTemplateOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ServiceQuotasDouble) fakeDisassociateServiceQuotaTemplateWithContext(ctx context.Context, in *servicequotas.DisassociateServiceQuotaTemplateInput, _ ...request.Option) (*servicequotas.DisassociateServiceQuotaTemplateOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "DisassociateServiceQuotaTemplate cancelled", ctx.Err())
	default:
		return d.DisassociateServiceQuotaTemplate(in)
	}
}

func (d *ServiceQuotasDouble) GetAWSDefaultServiceQuota(i0 *servicequotas.GetAWSDefaultServiceQuotaInput) (r0 *servicequotas.GetAWSDefaultServiceQuotaOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetAWSDefaultServiceQuota", i0)
	r0, _ = returns[0].(*servicequotas.GetAWSDefaultServiceQuotaOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ServiceQuotasDouble) GetAWSDefaultServiceQuotaRequest(i0 *servicequotas.GetAWSDefaultServiceQuotaInput) (r0 *request.Request, r1 *servicequotas.GetAWSDefaultServiceQuotaOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetAWSDefaultServiceQuotaRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*servicequotas.GetAWSDefaultServiceQuotaOutput)
	return
}

func (d *ServiceQuotasDouble) GetAWSDefaultServiceQuotaWithContext(i0 context.Context, i1 *servicequotas.GetAWSDefaultServiceQuotaInput, i2 ...request.Option) (r0 *servicequotas.GetAWSDefaultServiceQuotaOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetAWSDefaultServiceQuotaWithContext", i0, i1, i2)
	r0, _ = returns[0].(*servicequotas.GetAWSDefaultServiceQuotaOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ServiceQuotasDouble) fakeGetAWSDefaultServiceQuotaWithContext(ctx context.Context, in *servicequotas.GetAWSDefaultServiceQuotaInput, _ ...request.Option) (*servicequotas.GetAWSDefaultServiceQuotaOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "GetAWSDefaultServiceQuota cancelled", ctx.Err())
	default:
		return d.GetAWSDefaultServiceQuota(in)
	}
}

func (d *ServiceQuotasDouble) GetAssociationForServiceQuotaTemplate(i0 *servicequotas.GetAssociationForServiceQuotaTemplateInput) (r0 *servicequotas.GetAssociationForServiceQuotaTemplateOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetAssociationForServiceQuotaTemplate", i0)
	r0, _ = returns[0].(*servicequotas.GetAssociationForServiceQuotaTemplateOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ServiceQuotasDouble) GetAssociationForServiceQuotaTemplateRequest(i0 *servicequotas.GetAssociationForServiceQuotaTemplateInput) (r0 *request.Request, r1 *servicequotas.GetAssociationForServiceQuotaTemplateOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetAssociationForServiceQuotaTemplateRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*servicequotas.GetAssociationForServiceQuotaTemplateOutput)
	return
}

func (d *ServiceQuotasDouble) GetAssociationForServiceQuotaTemplateWithContext(i0 context.Context, i1 *servicequotas.GetAssociationForServiceQuotaTemplateInput, i2 ...request.Option) (r0 *servicequotas.GetAssociationForServiceQuotaTemplateOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetAssociationForServiceQuotaTemplateWithContext", i0, i1, i2)
	r0, _ = returns[0].(*servicequotas.GetAssociationForServiceQuotaTemplateOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ServiceQuotasDouble) fakeGetAssociationForServiceQuotaTemplateWithContext(ctx context.Context, in *servicequotas.GetAssociationForServiceQuotaTemplateInput, _ ...request.Option) (*servicequotas.GetAssociationForServiceQuotaTemplateOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "GetAssociationForServiceQuotaTemplate cancelled", ctx.Err())
	default:
		return d.GetAssociationForServiceQuotaTemplate(in)
	}
}

func (d *ServiceQuotasDouble) GetRequestedServiceQuotaChange(i0 *servicequotas.GetRequestedServiceQuotaChangeInput) (r0 *servicequotas.GetRequestedServiceQuotaChangeOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetRequestedServiceQuotaChange", i0)
	r0, _ = returns[0].(*servicequotas.GetRequestedServiceQuotaChangeOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ServiceQuotasDouble) GetRequestedServiceQuotaChangeRequest(i0 *servicequotas.GetRequestedServiceQuotaChangeInput) (r0 *request.Request, r1 *servicequotas.GetRequestedServiceQuotaChangeOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetRequestedServiceQuotaChangeRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*servicequotas.GetRequestedServiceQuotaChangeOutput)
	return
}

func (d *ServiceQuotasDouble) GetRequestedServiceQuotaChangeWithContext(i0 context.Context, i1 *servicequotas.GetRequestedServiceQuotaChangeInput, i2 ...request.Option) (r0 *servicequotas.GetRequestedServiceQuotaChangeOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetRequestedServiceQuotaChangeWithContext", i0, i1, i2)
	r0, _ = returns[0].(*servicequotas.GetRequestedServiceQuotaChangeOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ServiceQuotasDouble) fakeGetRequestedServiceQuotaChangeWithContext(ctx context.Context, in *servicequotas.GetRequestedServiceQuotaChangeInput, _ ...request.Option) (*servicequotas.GetRequestedServiceQuotaChangeOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "GetRequestedServiceQuotaChange cancelled", ctx.Err())
	default:
		return d.GetRequestedServiceQuotaChange(in)
	}
}

func (d *ServiceQuotasDouble) GetServiceQuota(i0 *servicequotas.GetServiceQuotaInput) (r0 *servicequotas.GetServiceQuotaOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetServiceQuota", i0)
	r0, _ = returns[0].(*servicequotas.GetServiceQuotaOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ServiceQuotasDouble) GetServiceQuotaIncreaseRequestFromTemplate(i0 *servicequotas.GetServiceQuotaIncreaseRequestFromTemplateInput) (r0 *servicequotas.GetServiceQuotaIncreaseRequestFromTemplateOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetServiceQuotaIncreaseRequestFromTemplate", i0)
	r0, _ = returns[0].(*servicequotas.GetServiceQuotaIncreaseRequestFromTemplateOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ServiceQuotasDouble) GetServiceQuotaIncreaseRequestFromTemplateRequest(i0 *servicequotas.GetServiceQuotaIncreaseRequestFromTemplateInput) (r0 *request.Request, r1 *servicequotas.GetServiceQuotaIncreaseRequestFromTemplateOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetServiceQuotaIncreaseRequestFromTemplateRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*servicequotas.GetServiceQuotaIncreaseRequestFromTemplateOutput)
	return
}

func (d *ServiceQuotasDouble) GetServiceQuotaIncreaseRequestFromTemplateWithContext(i0 context.Context, i1 *servicequotas.GetServiceQuotaIncreaseRequestFromTemplateInput, i2 ...request.Option) (r0 *servicequotas.GetServiceQuotaIncreaseRequestFromTemplateOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetServiceQuotaIncreaseRequestFromTemplateWithContext", i0, i1, i2)
	r0, _ = returns[0].(*servicequotas.GetServiceQuotaIncreaseRequestFromTemplateOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ServiceQuotasDouble) fakeGetServiceQuotaIncreaseRequestFromTemplateWithContext(ctx context.Context, in *servicequotas.GetServiceQuotaIncreaseRequestFromTemplateInput, _ ...request.Option) (*servicequotas.GetServiceQuotaIncreaseRequestFromTemplateOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "GetServiceQuotaIncreaseRequestFromTemplate cancelled", ctx.Err())
	default:
		return d.GetServiceQuotaIncreaseRequestFromTemplate(in)
	}
}

func (d *ServiceQuotasDouble) GetServiceQuotaRequest(i0 *servicequotas.GetServiceQuotaInput) (r0 *request.Request, r1 *servicequotas.GetServiceQuotaOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetServiceQuotaRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*servicequotas.GetServiceQuotaOutput)
	return
}

func (d *ServiceQuotasDouble) GetServiceQuotaWithContext(i0 context.Context, i1 *servicequotas.GetServiceQuotaInput, i2 ...request.Option) (r0 *servicequotas.GetServiceQuotaOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetServiceQuotaWithContext", i0, i1, i2)
	r0, _ = returns[0].(*servicequotas.GetServiceQuotaOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ServiceQuotasDouble) fakeGetServiceQuotaWithContext(ctx context.Context, in *servicequotas.GetServiceQuotaInput, _ ...request.Option) (*servicequotas.GetServiceQuotaOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "GetServiceQuota cancelled", ctx.Err())
	default:
		return d.GetServiceQuota(in)
	}
}

func (d *ServiceQuotasDouble) ListAWSDefaultServiceQuotas(i0 *servicequotas.ListAWSDefaultServiceQuotasInput) (r0 *servicequotas.ListAWSDefaultServiceQuotasOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListAWSDefaultServiceQuotas", i0)
	r0, _ = returns[0].(*servicequotas.ListAWSDefaultServiceQuotasOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ServiceQuotasDouble) ListAWSDefaultServiceQuotasPages(i0 *servicequotas.ListAWSDefaultServiceQuotasInput, i1 func(*servicequotas.ListAWSDefaultServiceQuotasOutput, bool) bool) (r0 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListAWSDefaultServiceQuotasPages", i0, i1)
	r0, _ = returns[0].(error)
	return
}

func (d *ServiceQuotasDouble) fakeListAWSDefaultServiceQuotasPages(in *servicequotas.ListAWSDefaultServiceQuotasInput, pager func(*servicequotas.ListAWSDefaultServiceQuotasOutput, bool) (shouldContinue bool)) error {
	return d.Paginate("ListAWSDefaultServiceQuotas", paginators, in, pager)
}

func (d *ServiceQuotasDouble) ListAWSDefaultServiceQuotasPagesWithContext(i0 context.Context, i1 *servicequotas.ListAWSDefaultServiceQuotasInput, i2 func(*servicequotas.ListAWSDefaultServiceQuotasOutput, bool) bool, i3 ...request.Option) (r0 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListAWSDefaultServiceQuotasPagesWithContext", i0, i1, i2, i3)
	r0, _ = returns[0].(error)
	return
}

func (d *ServiceQuotasDouble) fakeListAWSDefaultServiceQuotasPagesWithContext(ctx context.Context, in *servicequotas.ListAWSDefaultServiceQuotasInput, pager func(*servicequotas.ListAWSDefaultServiceQuotasOutput, bool) (shouldContinue bool), options ...request.Option) error {
	return d.PaginateWithContext("ListAWSDefaultServiceQuotas", paginators, ctx, in, pager, options...)
}

func (d *ServiceQuotasDouble) ListAWSDefaultServiceQuotasRequest(i0 *servicequotas.ListAWSDefaultServiceQuotasInput) (r0 *request.Request, r1 *servicequotas.ListAWSDefaultServiceQuotasOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListAWSDefaultServiceQuotasRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*servicequotas.ListAWSDefaultServiceQuotasOutput)
	return
}

func (d *ServiceQuotasDouble) ListAWSDefaultServiceQuotasWithContext(i0 context.Context, i1 *servicequotas.ListAWSDefaultServiceQuotasInput, i2 ...request.Option) (r0 *servicequotas.ListAWSDefaultServiceQuotasOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListAWSDefaultServiceQuotasWithContext", i0, i1, i2)
	r0, _ = returns[0].(*servicequotas.ListAWSDefaultServiceQuotasOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ServiceQuotasDouble) fakeListAWSDefaultServiceQuotasWithContext(ctx context.Context, in *servicequotas.ListAWSDefaultServiceQuotasInput, _ ...request.Option) (*servicequotas.ListAWSDefaultServiceQuotasOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "ListAWSDefaultServiceQuotas cancelled", ctx.Err())
	default:
		return d.ListAWSDefaultServiceQuotas(in)
	}
}

func (d *ServiceQuotasDouble) ListRequestedServiceQuotaChangeHistory(i0 *servicequotas.ListRequestedServiceQuotaChangeHistoryInput) (r0 *servicequotas.ListRequestedServiceQuotaChangeHistoryOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListRequestedServiceQuotaChangeHistory", i0)
	r0, _ = returns[0].(*servicequotas.ListRequestedServiceQuotaChangeHistoryOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ServiceQuotasDouble) ListRequestedServiceQuotaChangeHistoryByQuota(i0 *servicequotas.ListRequestedServiceQuotaChangeHistoryByQuotaInput) (r0 *servicequotas.ListRequestedServiceQuotaChangeHistoryByQuotaOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListRequestedServiceQuotaChangeHistoryByQuota", i0)
	r0, _ = returns[0].(*servicequotas.ListRequestedServiceQuotaChangeHistoryByQuotaOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ServiceQuotasDouble) ListRequestedServiceQuotaChangeHistoryByQuotaPages(i0 *servicequotas.ListRequestedServiceQuotaChangeHistoryByQuotaInput, i1 func(*servicequotas.ListRequestedServiceQuotaChangeHistoryByQuotaOutput, bool) bool) (r0 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListRequestedServiceQuotaChangeHistoryByQuotaPages", i0, i1)
	r0, _ = returns[0].(error)
	return
}

func (d *ServiceQuotasDouble) fakeListRequestedServiceQuotaChangeHistoryByQuotaPages(in *servicequotas.ListRequestedServiceQuotaChangeHistoryByQuotaInput, pager func(*servicequotas.ListRequestedServiceQuotaChangeHistoryByQuotaOutput, bool) (shouldContinue bool)) error {
	return d.Paginate("ListRequestedServiceQuotaChangeHistoryByQuota", paginators, in, pager)
}

func (d *ServiceQuotasDouble) ListRequestedServiceQuotaChangeHistoryByQuotaPagesWithContext(i0 context.Context, i1 *servicequotas.ListRequestedServiceQuotaChangeHistoryByQuotaInput, i2 func(*servicequotas.ListRequestedServiceQuotaChangeHistoryByQuotaOutput, bool) bool, i3 ...request.Option) (r0 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListRequestedServiceQuotaChangeHistoryByQuotaPagesWithContext", i0, i1, i2, i3)
	r0, _ = returns[0].(error)
	return
}

func (d *ServiceQuotasDouble) fakeListRequestedServiceQuotaChangeHistoryByQuotaPagesWithContext(ctx context.Context, in *servicequotas.ListRequestedServiceQuotaChangeHistoryByQuotaInput, pager func(*servicequotas.ListRequestedServiceQuotaChangeHistoryByQuotaOutput, bool) (shouldContinue bool), options ...request.Option) error {
	return d.PaginateWithContext("ListRequestedServiceQuotaChangeHistoryByQuota", paginators, ctx, in, pager, options...)
}

func (d *ServiceQuotasDouble) ListRequestedServiceQuotaChangeHistoryByQuotaRequest(i0 *servicequotas.ListRequestedServiceQuotaChangeHistoryByQuotaInput) (r0 *request.Request, r1 *servicequotas.ListRequestedServiceQuotaChangeHistoryByQuotaOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListRequestedServiceQuotaChangeHistoryByQuotaRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*servicequotas.ListRequestedServiceQuotaChangeHistoryByQuotaOutput)
	return
}

func (d *ServiceQuotasDouble) ListRequestedServiceQuotaChangeHistoryByQuotaWithContext(i0 context.Context, i1 *servicequotas.ListRequestedServiceQuotaChangeHistoryByQuotaInput, i2 ...request.Option) (r0 *servicequotas.ListRequestedServiceQuotaChangeHistoryByQuotaOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListRequestedServiceQuotaChangeHistoryByQuotaWithContext", i0, i1, i2)
	r0, _ = returns[0].(*servicequotas.ListRequestedServiceQuotaChangeHistoryByQuotaOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ServiceQuotasDouble) fakeListRequestedServiceQuotaChangeHistoryByQuotaWithContext(ctx context.Context, in *servicequotas.ListRequestedServiceQuotaChangeHistoryByQuotaInput, _ ...request.Option) (*servicequotas.ListRequestedServiceQuotaChangeHistoryByQuotaOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "ListRequestedServiceQuotaChangeHistoryByQuota cancelled", ctx.Err())
	default:
		return d.ListRequestedServiceQuotaChangeHistoryByQuota(in)
	}
}

func (d *ServiceQuotasDouble) ListRequestedServiceQuotaChangeHistoryPages(i0 *servicequotas.ListRequestedServiceQuotaChangeHistoryInput, i1 func(*servicequotas.ListRequestedServiceQuotaChangeHistoryOutput, bool) bool) (r0 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListRequestedServiceQuotaChangeHistoryPages", i0, i1)
	r0, _ = returns[0].(error)
	return
}

func (d *ServiceQuotasDouble) fakeListRequestedServiceQuotaChangeHistoryPages(in *servicequotas.ListRequestedServiceQuotaChangeHistoryInput, pager func(*servicequotas.ListRequestedServiceQuotaChangeHistoryOutput, bool) (shouldContinue bool)) error {
	return d.Paginate("ListRequestedServiceQuotaChangeHistory", paginators, in, pager)
}

func (d *ServiceQuotasDouble) ListRequestedServiceQuotaChangeHistoryPagesWithContext(i0 context.Context, i1 *servicequotas.ListRequestedServiceQuotaChangeHistoryInput, i2 func(*servicequotas.ListRequestedServiceQuotaChangeHistoryOutput, bool) bool, i3 ...request.Option) (r0 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListRequestedServiceQuotaChangeHistoryPagesWithContext", i0, i1, i2, i3)
	r0, _ = returns[0].(error)
	return
}

func (d *ServiceQuotasDouble) fakeListRequestedServiceQuotaChangeHistoryPagesWithContext(ctx context.Context, in *servicequotas.ListRequestedServiceQuotaChangeHistoryInput, pager func(*servicequotas.ListRequestedServiceQuotaChangeHistoryOutput, bool) (shouldContinue bool), options ...request.Option) error {
	return d.PaginateWithContext("ListRequestedServiceQuotaChangeHistory", paginators, ctx, in, pager, options...)
}

func (d *ServiceQuotasDouble) ListRequestedServiceQuotaChangeHistoryRequest(i0 *servicequotas.ListRequestedServiceQuotaChangeHistoryInput) (r0 *request.Request, r1 *servicequotas.ListRequestedServiceQuotaChangeHistoryOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListRequestedServiceQuotaChangeHistoryRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*servicequotas.ListRequestedServiceQuotaChangeHistoryOutput)
	return
}

func (d *ServiceQuotasDouble) ListRequestedServiceQuotaChangeHistoryWithContext(i0 context.Context, i1 *servicequotas.ListRequestedServiceQuotaChangeHistoryInput, i2 ...request.Option) (r0 *servicequotas.ListRequestedServiceQuotaChangeHistoryOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListRequestedServiceQuotaChangeHistoryWithContext", i0, i1, i2)
	r0, _ = returns[0].(*servicequotas.ListRequestedServiceQuotaChangeHistoryOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ServiceQuotasDouble) fakeListRequestedServiceQuotaChangeHistoryWithContext(ctx context.Context, in *servicequotas.ListRequestedServiceQuotaChangeHistoryInput, _ ...request.Option) (*servicequotas.ListRequestedServiceQuotaChangeHistoryOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "ListRequestedServiceQuotaChangeHistory cancelled", ctx.Err())
	default:
		return d.ListRequestedServiceQuotaChangeHistory(in)
	}
}

func (d *ServiceQuotasDouble) ListServiceQuotaIncreaseRequestsInTemplate(i0 *servicequotas.ListServiceQuotaIncreaseRequestsInTemplateInput) (r0 *servicequotas.ListServiceQuotaIncreaseRequestsInTemplateOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListServiceQuotaIncreaseRequestsInTemplate", i0)
	r0, _ = returns[0].(*servicequotas.ListServiceQuotaIncreaseRequestsInTemplateOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ServiceQuotasDouble) ListServiceQuotaIncreaseRequestsInTemplatePages(i0 *servicequotas.ListServiceQuotaIncreaseRequestsInTemplateInput, i1 func(*servicequotas.ListServiceQuotaIncreaseRequestsInTemplateOutput, bool) bool) (r0 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListServiceQuotaIncreaseRequestsInTemplatePages", i0, i1)
	r0, _ = returns[0].(error)
	return
}

func (d *ServiceQuotasDouble) fakeListServiceQuotaIncreaseRequestsInTemplatePages(in *servicequotas.ListServiceQuotaIncreaseRequestsInTemplateInput, pager func(*servicequotas.ListServiceQuotaIncreaseRequestsInTemplateOutput, bool) (shouldContinue bool)) error {
	return d.Paginate("ListServiceQuotaIncreaseRequestsInTemplate", paginators, in, pager)
}

func (d *ServiceQuotasDouble) ListServiceQuotaIncreaseRequestsInTemplatePagesWithContext(i0 context.Context, i1 *servicequotas.ListServiceQuotaIncreaseRequestsInTemplateInput, i2 func(*servicequotas.ListServiceQuotaIncreaseRequestsInTemplateOutput, bool) bool, i3 ...request.Option) (r0 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListServiceQuotaIncreaseRequestsInTemplatePagesWithContext", i0, i1, i2, i3)
	r0, _ = returns[0].(error)
	return
}

func (d *ServiceQuotasDouble) fakeListServiceQuotaIncreaseRequestsInTemplatePagesWithContext(ctx context.Context, in *servicequotas.ListServiceQuotaIncreaseRequestsInTemplateInput, pager func(*servicequotas.ListServiceQuotaIncreaseRequestsInTemplateOutput, bool) (shouldContinue bool), options ...request.Option) error {
	return d.PaginateWithContext("ListServiceQuotaIncreaseRequestsInTemplate", paginators, ctx, in, pager, options...)
}

func (d *ServiceQuotasDouble) ListServiceQuotaIncreaseRequestsInTemplateRequest(i0 *servicequotas.ListServiceQuotaIncreaseRequestsInTemplateInput) (r0 *request.Request, r1 *servicequotas.ListServiceQuotaIncreaseRequestsInTemplateOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListServiceQuotaIncreaseRequestsInTemplateRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*servicequotas.ListServiceQuotaIncreaseRequestsInTemplateOutput)
	return
}

func (d *ServiceQuotasDouble) ListServiceQuotaIncreaseRequestsInTemplateWithContext(i0 context.Context, i1 *servicequotas.ListServiceQuotaIncreaseRequestsInTemplateInput, i2 ...request.Option) (r0 *servicequotas.ListServiceQuotaIncreaseRequestsInTemplateOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListServiceQuotaIncreaseRequestsInTemplateWithContext", i0, i1, i2)
	r0, _ = returns[0].(*servicequotas.ListServiceQuotaIncreaseRequestsInTemplateOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ServiceQuotasDouble) fakeListServiceQuotaIncreaseRequestsInTemplateWithContext(ctx context.Context, in *servicequotas.ListServiceQuotaIncreaseRequestsInTemplateInput, _ ...request.Option) (*servicequotas.ListServiceQuotaIncreaseRequestsInTemplateOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "ListServiceQuotaIncreaseRequestsInTemplate cancelled", ctx.Err())
	default:
		return d.ListServiceQuotaIncreaseRequestsInTemplate(in)
	}
}

func (d *ServiceQuotasDouble) ListServiceQuotas(i0 *servicequotas.ListServiceQuotasInput) (r0 *servicequotas.ListServiceQuotasOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListServiceQuotas", i0)
	r0, _ = returns[0].(*servicequotas.ListServiceQuotasOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ServiceQuotasDouble) ListServiceQuotasPages(i0 *servicequotas.ListServiceQuotasInput, i1 func(*servicequotas.ListServiceQuotasOutput, bool) bool) (r0 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListServiceQuotasPages", i0, i1)
	r0, _ = returns[0].(error)
	return
}

func (d *ServiceQuotasDouble) fakeListServiceQuotasPages(in *servicequotas.ListServiceQuotasInput, pager func(*servicequotas.ListServiceQuotasOutput, bool) (shouldContinue bool)) error {
	return d.Paginate("ListServiceQuotas", paginators, in, pager)
}

func (d *ServiceQuotasDouble) ListServiceQuotasPagesWithContext(i0 context.Context, i1 *servicequotas.ListServiceQuotasInput, i2 func(*servicequotas.ListServiceQuotasOutput, bool) bool, i3 ...request.Option) (r0 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListServiceQuotasPagesWithContext", i0, i1, i2, i3)
	r0, _ = returns[0].(error)
	return
}

func (d *ServiceQuotasDouble) fakeListServiceQuotasPagesWithContext(ctx context.Context, in *servicequotas.ListServiceQuotasInput, pager func(*servicequotas.ListServiceQuotasOutput, bool) (shouldContinue bool), options ...request.Option) error {
	return d.PaginateWithContext("ListServiceQuotas", paginators, ctx, in, pager, options...)
}

func (d *ServiceQuotasDouble) ListServiceQuotasRequest(i0 *servicequotas.ListServiceQuotasInput) (r0 *request.Request, r1 *servicequotas.ListServiceQuotasOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListServiceQuotasRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*servicequotas.ListServiceQuotasOutput)
	return
}

func (d *ServiceQuotasDouble) ListServiceQuotasWithContext(i0 context.Context, i1 *servicequotas.ListServiceQuotasInput, i2 ...request.Option) (r0 *servicequotas.ListServiceQuotasOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListServiceQuotasWithContext", i0, i1, i2)
	r0, _ = returns[0].(*servicequotas.ListServiceQuotasOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ServiceQuotasDouble) fakeListServiceQuotasWithContext(ctx context.Context, in *servicequotas.ListServiceQuotasInput, _ ...request.Option) (*servicequotas.ListServiceQuotasOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "ListServiceQuotas cancelled", ctx.Err())
	default:
		return d.ListServiceQuotas(in)
	}
}

func (d *ServiceQuotasDouble) ListServices(i0 *servicequotas.ListServicesInput) (r0 *servicequotas.ListServicesOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListServices", i0)
	r0, _ = returns[0].(*servicequotas.ListServicesOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ServiceQuotasDouble) ListServicesPages(i0 *servicequotas.ListServicesInput, i1 func(*servicequotas.ListServicesOutput, bool) bool) (r0 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListServicesPages", i0, i1)
	r0, _ = returns[0].(error)
	return
}

func (d *ServiceQuotasDouble) fakeListServicesPages(in *servicequotas.ListServicesInput, pager func(*servicequotas.ListServicesOutput, bool) (shouldContinue bool)) error {
	return d.Paginate("ListServices", paginators, in, pager)
}

func (d *ServiceQuotasDouble) ListServicesPagesWithContext(i0 context.Context, i1 *servicequotas.ListServicesInput, i2 func(*servicequotas.ListServicesOutput, bool) bool, i3 ...request.Option) (r0 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListServicesPagesWithContext", i0, i1, i2, i3)
	r0, _ = returns[0].(error)
	return
}

func (d *ServiceQuotasDouble) fakeListServicesPagesWithContext(ctx context.Context, in *servicequotas.ListServicesInput, pager func(*servicequotas.ListServicesOutput, bool) (shouldContinue bool), options ...request.Option) error {
	return d.PaginateWithContext("ListServices", paginators, ctx, in, pager, options...)
}

func (d *ServiceQuotasDouble) ListServicesRequest(i0 *servicequotas.ListServicesInput) (r0 *request.Request, r1 *servicequotas.ListServicesOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListServicesRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*servicequotas.ListServicesOutput)
	return
}

func (d *ServiceQuotasDouble) ListServicesWithContext(i0 context.Context, i1 *servicequotas.ListServicesInput, i2 ...request.Option) (r0 *servicequotas.ListServicesOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListServicesWithContext", i0, i1, i2)
	r0, _ = returns[0].(*servicequotas.ListServicesOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ServiceQuotasDouble) fakeListServicesWithContext(ctx context.Context, in *servicequotas.ListServicesInput, _ ...request.Option) (*servicequotas.ListServicesOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "ListServices cancelled", ctx.Err())
	default:
		return d.ListServices(in)
	}
}

func (d *ServiceQuotasDouble) PutServiceQuotaIncreaseRequestIntoTemplate(i0 *servicequotas.PutServiceQuotaIncreaseRequestIntoTemplateInput) (r0 *servicequotas.PutServiceQuotaIncreaseRequestIntoTemplateOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("PutServiceQuotaIncreaseRequestIntoTemplate", i0)
	r0, _ = returns[0].(*servicequotas.PutServiceQuotaIncreaseRequestIntoTemplateOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ServiceQuotasDouble) PutServiceQuotaIncreaseRequestIntoTemplateRequest(i0 *servicequotas.PutServiceQuotaIncreaseRequestIntoTemplateInput) (r0 *request.Request, r1 *servicequotas.PutServiceQuotaIncreaseRequestIntoTemplateOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("PutServiceQuotaIncreaseRequestIntoTemplateRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*servicequotas.PutServiceQuotaIncreaseRequestIntoTemplateOutput)
	return
}

func (d *ServiceQuotasDouble) PutServiceQuotaIncreaseRequestIntoTemplateWithContext(i0 context.Context, i1 *servicequotas.PutServiceQuotaIncreaseRequestIntoTemplateInput, i2 ...request.Option) (r0 *servicequotas.PutServiceQuotaIncreaseRequestIntoTemplateOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("PutServiceQuotaIncreaseRequestIntoTemplateWithContext", i0, i1, i2)
	r0, _ = returns[0].(*servicequotas.PutServiceQuotaIncreaseRequestIntoTemplateOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ServiceQuotasDouble) fakePutServiceQuotaIncreaseRequestIntoTemplateWithContext(ctx context.Context, in *servicequotas.PutServiceQuotaIncreaseRequestIntoTemplateInput, _ ...request.Option) (*servicequotas.PutServiceQuotaIncreaseRequestIntoTemplateOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "PutServiceQuotaIncreaseRequestIntoTemplate cancelled", ctx.Err())
	default:
		return d.PutServiceQuotaIncreaseRequestIntoTemplate(in)
	}
}

func (d *ServiceQuotasDouble) RequestServiceQuotaIncrease(i0 *servicequotas.RequestServiceQuotaIncreaseInput) (r0 *servicequotas.RequestServiceQuotaIncreaseOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("RequestServiceQuotaIncrease", i0)
	r0, _ = returns[0].(*servicequotas.RequestServiceQuotaIncreaseOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ServiceQuotasDouble) RequestServiceQuotaIncreaseRequest(i0 *servicequotas.RequestServiceQuotaIncreaseInput) (r0 *request.Request, r1 *servicequotas.RequestServiceQuotaIncreaseOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("RequestServiceQuotaIncreaseRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*servicequotas.RequestServiceQuotaIncreaseOutput)
	return
}

func (d *ServiceQuotasDouble) RequestServiceQuotaIncreaseWithContext(i0 context.Context, i1 *servicequotas.RequestServiceQuotaIncreaseInput, i2 ...request.Option) (r0 *servicequotas.RequestServiceQuotaIncreaseOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("RequestServiceQuotaIncreaseWithContext", i0, i1, i2)
	r0, _ = returns[0].(*servicequotas.RequestServiceQuotaIncreaseOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ServiceQuotasDouble) fakeRequestServiceQuotaIncreaseWithContext(ctx context.Context, in *servicequotas.RequestServiceQuotaIncreaseInput, _ ...request.Option) (*servicequotas.RequestServiceQuotaIncreaseOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "RequestServiceQuotaIncrease cancelled", ctx.Err())
	default:
		return d.RequestServiceQuotaIncrease(in)
	}
}
