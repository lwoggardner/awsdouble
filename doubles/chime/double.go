// Code generated by go doublegen; DO NOT EDIT.
// This file was generated at 2020-02-14T22:11:28+11:00

// Package chimedouble provides a TestDouble implementation of chimeiface.ChimeAPI
package chimedouble

import (
	"context"

	"github.com/aws/aws-sdk-go/aws/awserr"
	"github.com/aws/aws-sdk-go/aws/request"
	"github.com/aws/aws-sdk-go/service/chime"
	"github.com/aws/aws-sdk-go/service/chime/chimeiface"
	"github.com/lwoggardner/awsdouble"
	"github.com/lwoggardner/godouble/godouble"
)

// ChimeDouble is TestDouble for chimeiface.ChimeAPI
type ChimeDouble struct {
	chimeiface.ChimeAPI
	*awsdouble.AWSTestDouble
}

// Constructor for ChimeDouble
// Default configuration will ensure
//   * API operations not explicitly stubbed will return an empty output struct pointer, and nil error.
//     To simulate long polling, "Poll" operations will return these values after a random delay of up to 100ms.
//   * WithContext methods implement a 'Fake' method that returns a cancellation error if the context is cancelled
//      before the method is called.
//   * Pages and PagesWithContext methods similarly implement a 'Fake' method that paginates over the underlying method.
//
//    This allows tests to only stub the simple api methods and be generally unconcerned whether the SUT is using the
//      Context or Pagination forms of the API.
//
func NewDouble(t godouble.T, configurators ...func(*awsdouble.AWSTestDouble)) *ChimeDouble {
	result := &ChimeDouble{}

	configurators = append([]func(configurator *awsdouble.AWSTestDouble){func(d *awsdouble.AWSTestDouble) {
		d.SetDefaultCall(result.defaultMethodCall)
		d.SetDefaultReturnValues(result.defaultReturnValues)
	}}, configurators...)

	result.AWSTestDouble = awsdouble.NewDouble(t, (*chimeiface.ChimeAPI)(nil), configurators...)
	return result
}

func (d *ChimeDouble) defaultReturnValues(m godouble.Method) godouble.ReturnValues {
	return d.DefaultReturnValues(m)
}

func (d *ChimeDouble) defaultMethodCall(m godouble.Method) godouble.MethodCall {
	switch m.Reflect().Name {

	case "AssociatePhoneNumberWithUserWithContext":
		return m.Fake(d.fakeAssociatePhoneNumberWithUserWithContext)

	case "AssociatePhoneNumbersWithVoiceConnectorGroupWithContext":
		return m.Fake(d.fakeAssociatePhoneNumbersWithVoiceConnectorGroupWithContext)

	case "AssociatePhoneNumbersWithVoiceConnectorWithContext":
		return m.Fake(d.fakeAssociatePhoneNumbersWithVoiceConnectorWithContext)

	case "AssociateSigninDelegateGroupsWithAccountWithContext":
		return m.Fake(d.fakeAssociateSigninDelegateGroupsWithAccountWithContext)

	case "BatchCreateAttendeeWithContext":
		return m.Fake(d.fakeBatchCreateAttendeeWithContext)

	case "BatchCreateRoomMembershipWithContext":
		return m.Fake(d.fakeBatchCreateRoomMembershipWithContext)

	case "BatchDeletePhoneNumberWithContext":
		return m.Fake(d.fakeBatchDeletePhoneNumberWithContext)

	case "BatchSuspendUserWithContext":
		return m.Fake(d.fakeBatchSuspendUserWithContext)

	case "BatchUnsuspendUserWithContext":
		return m.Fake(d.fakeBatchUnsuspendUserWithContext)

	case "BatchUpdatePhoneNumberWithContext":
		return m.Fake(d.fakeBatchUpdatePhoneNumberWithContext)

	case "BatchUpdateUserWithContext":
		return m.Fake(d.fakeBatchUpdateUserWithContext)

	case "CreateAccountWithContext":
		return m.Fake(d.fakeCreateAccountWithContext)

	case "CreateAttendeeWithContext":
		return m.Fake(d.fakeCreateAttendeeWithContext)

	case "CreateBotWithContext":
		return m.Fake(d.fakeCreateBotWithContext)

	case "CreateMeetingWithContext":
		return m.Fake(d.fakeCreateMeetingWithContext)

	case "CreatePhoneNumberOrderWithContext":
		return m.Fake(d.fakeCreatePhoneNumberOrderWithContext)

	case "CreateRoomMembershipWithContext":
		return m.Fake(d.fakeCreateRoomMembershipWithContext)

	case "CreateRoomWithContext":
		return m.Fake(d.fakeCreateRoomWithContext)

	case "CreateUserWithContext":
		return m.Fake(d.fakeCreateUserWithContext)

	case "CreateVoiceConnectorGroupWithContext":
		return m.Fake(d.fakeCreateVoiceConnectorGroupWithContext)

	case "CreateVoiceConnectorWithContext":
		return m.Fake(d.fakeCreateVoiceConnectorWithContext)

	case "DeleteAccountWithContext":
		return m.Fake(d.fakeDeleteAccountWithContext)

	case "DeleteAttendeeWithContext":
		return m.Fake(d.fakeDeleteAttendeeWithContext)

	case "DeleteEventsConfigurationWithContext":
		return m.Fake(d.fakeDeleteEventsConfigurationWithContext)

	case "DeleteMeetingWithContext":
		return m.Fake(d.fakeDeleteMeetingWithContext)

	case "DeletePhoneNumberWithContext":
		return m.Fake(d.fakeDeletePhoneNumberWithContext)

	case "DeleteRoomMembershipWithContext":
		return m.Fake(d.fakeDeleteRoomMembershipWithContext)

	case "DeleteRoomWithContext":
		return m.Fake(d.fakeDeleteRoomWithContext)

	case "DeleteVoiceConnectorGroupWithContext":
		return m.Fake(d.fakeDeleteVoiceConnectorGroupWithContext)

	case "DeleteVoiceConnectorOriginationWithContext":
		return m.Fake(d.fakeDeleteVoiceConnectorOriginationWithContext)

	case "DeleteVoiceConnectorStreamingConfigurationWithContext":
		return m.Fake(d.fakeDeleteVoiceConnectorStreamingConfigurationWithContext)

	case "DeleteVoiceConnectorTerminationCredentialsWithContext":
		return m.Fake(d.fakeDeleteVoiceConnectorTerminationCredentialsWithContext)

	case "DeleteVoiceConnectorTerminationWithContext":
		return m.Fake(d.fakeDeleteVoiceConnectorTerminationWithContext)

	case "DeleteVoiceConnectorWithContext":
		return m.Fake(d.fakeDeleteVoiceConnectorWithContext)

	case "DisassociatePhoneNumberFromUserWithContext":
		return m.Fake(d.fakeDisassociatePhoneNumberFromUserWithContext)

	case "DisassociatePhoneNumbersFromVoiceConnectorGroupWithContext":
		return m.Fake(d.fakeDisassociatePhoneNumbersFromVoiceConnectorGroupWithContext)

	case "DisassociatePhoneNumbersFromVoiceConnectorWithContext":
		return m.Fake(d.fakeDisassociatePhoneNumbersFromVoiceConnectorWithContext)

	case "DisassociateSigninDelegateGroupsFromAccountWithContext":
		return m.Fake(d.fakeDisassociateSigninDelegateGroupsFromAccountWithContext)

	case "GetAccountSettingsWithContext":
		return m.Fake(d.fakeGetAccountSettingsWithContext)

	case "GetAccountWithContext":
		return m.Fake(d.fakeGetAccountWithContext)

	case "GetAttendeeWithContext":
		return m.Fake(d.fakeGetAttendeeWithContext)

	case "GetBotWithContext":
		return m.Fake(d.fakeGetBotWithContext)

	case "GetEventsConfigurationWithContext":
		return m.Fake(d.fakeGetEventsConfigurationWithContext)

	case "GetGlobalSettingsWithContext":
		return m.Fake(d.fakeGetGlobalSettingsWithContext)

	case "GetMeetingWithContext":
		return m.Fake(d.fakeGetMeetingWithContext)

	case "GetPhoneNumberOrderWithContext":
		return m.Fake(d.fakeGetPhoneNumberOrderWithContext)

	case "GetPhoneNumberSettingsWithContext":
		return m.Fake(d.fakeGetPhoneNumberSettingsWithContext)

	case "GetPhoneNumberWithContext":
		return m.Fake(d.fakeGetPhoneNumberWithContext)

	case "GetRoomWithContext":
		return m.Fake(d.fakeGetRoomWithContext)

	case "GetUserSettingsWithContext":
		return m.Fake(d.fakeGetUserSettingsWithContext)

	case "GetUserWithContext":
		return m.Fake(d.fakeGetUserWithContext)

	case "GetVoiceConnectorGroupWithContext":
		return m.Fake(d.fakeGetVoiceConnectorGroupWithContext)

	case "GetVoiceConnectorLoggingConfigurationWithContext":
		return m.Fake(d.fakeGetVoiceConnectorLoggingConfigurationWithContext)

	case "GetVoiceConnectorOriginationWithContext":
		return m.Fake(d.fakeGetVoiceConnectorOriginationWithContext)

	case "GetVoiceConnectorStreamingConfigurationWithContext":
		return m.Fake(d.fakeGetVoiceConnectorStreamingConfigurationWithContext)

	case "GetVoiceConnectorTerminationHealthWithContext":
		return m.Fake(d.fakeGetVoiceConnectorTerminationHealthWithContext)

	case "GetVoiceConnectorTerminationWithContext":
		return m.Fake(d.fakeGetVoiceConnectorTerminationWithContext)

	case "GetVoiceConnectorWithContext":
		return m.Fake(d.fakeGetVoiceConnectorWithContext)

	case "InviteUsersWithContext":
		return m.Fake(d.fakeInviteUsersWithContext)

	case "ListAccountsPages":
		return m.Fake(d.fakeListAccountsPages)

	case "ListAccountsPagesWithContext":
		return m.Fake(d.fakeListAccountsPagesWithContext)

	case "ListAccountsWithContext":
		return m.Fake(d.fakeListAccountsWithContext)

	case "ListAttendeesPages":
		return m.Fake(d.fakeListAttendeesPages)

	case "ListAttendeesPagesWithContext":
		return m.Fake(d.fakeListAttendeesPagesWithContext)

	case "ListAttendeesWithContext":
		return m.Fake(d.fakeListAttendeesWithContext)

	case "ListBotsPages":
		return m.Fake(d.fakeListBotsPages)

	case "ListBotsPagesWithContext":
		return m.Fake(d.fakeListBotsPagesWithContext)

	case "ListBotsWithContext":
		return m.Fake(d.fakeListBotsWithContext)

	case "ListMeetingsPages":
		return m.Fake(d.fakeListMeetingsPages)

	case "ListMeetingsPagesWithContext":
		return m.Fake(d.fakeListMeetingsPagesWithContext)

	case "ListMeetingsWithContext":
		return m.Fake(d.fakeListMeetingsWithContext)

	case "ListPhoneNumberOrdersPages":
		return m.Fake(d.fakeListPhoneNumberOrdersPages)

	case "ListPhoneNumberOrdersPagesWithContext":
		return m.Fake(d.fakeListPhoneNumberOrdersPagesWithContext)

	case "ListPhoneNumberOrdersWithContext":
		return m.Fake(d.fakeListPhoneNumberOrdersWithContext)

	case "ListPhoneNumbersPages":
		return m.Fake(d.fakeListPhoneNumbersPages)

	case "ListPhoneNumbersPagesWithContext":
		return m.Fake(d.fakeListPhoneNumbersPagesWithContext)

	case "ListPhoneNumbersWithContext":
		return m.Fake(d.fakeListPhoneNumbersWithContext)

	case "ListRoomMembershipsPages":
		return m.Fake(d.fakeListRoomMembershipsPages)

	case "ListRoomMembershipsPagesWithContext":
		return m.Fake(d.fakeListRoomMembershipsPagesWithContext)

	case "ListRoomMembershipsWithContext":
		return m.Fake(d.fakeListRoomMembershipsWithContext)

	case "ListRoomsPages":
		return m.Fake(d.fakeListRoomsPages)

	case "ListRoomsPagesWithContext":
		return m.Fake(d.fakeListRoomsPagesWithContext)

	case "ListRoomsWithContext":
		return m.Fake(d.fakeListRoomsWithContext)

	case "ListUsersPages":
		return m.Fake(d.fakeListUsersPages)

	case "ListUsersPagesWithContext":
		return m.Fake(d.fakeListUsersPagesWithContext)

	case "ListUsersWithContext":
		return m.Fake(d.fakeListUsersWithContext)

	case "ListVoiceConnectorGroupsPages":
		return m.Fake(d.fakeListVoiceConnectorGroupsPages)

	case "ListVoiceConnectorGroupsPagesWithContext":
		return m.Fake(d.fakeListVoiceConnectorGroupsPagesWithContext)

	case "ListVoiceConnectorGroupsWithContext":
		return m.Fake(d.fakeListVoiceConnectorGroupsWithContext)

	case "ListVoiceConnectorTerminationCredentialsWithContext":
		return m.Fake(d.fakeListVoiceConnectorTerminationCredentialsWithContext)

	case "ListVoiceConnectorsPages":
		return m.Fake(d.fakeListVoiceConnectorsPages)

	case "ListVoiceConnectorsPagesWithContext":
		return m.Fake(d.fakeListVoiceConnectorsPagesWithContext)

	case "ListVoiceConnectorsWithContext":
		return m.Fake(d.fakeListVoiceConnectorsWithContext)

	case "LogoutUserWithContext":
		return m.Fake(d.fakeLogoutUserWithContext)

	case "PutEventsConfigurationWithContext":
		return m.Fake(d.fakePutEventsConfigurationWithContext)

	case "PutVoiceConnectorLoggingConfigurationWithContext":
		return m.Fake(d.fakePutVoiceConnectorLoggingConfigurationWithContext)

	case "PutVoiceConnectorOriginationWithContext":
		return m.Fake(d.fakePutVoiceConnectorOriginationWithContext)

	case "PutVoiceConnectorStreamingConfigurationWithContext":
		return m.Fake(d.fakePutVoiceConnectorStreamingConfigurationWithContext)

	case "PutVoiceConnectorTerminationCredentialsWithContext":
		return m.Fake(d.fakePutVoiceConnectorTerminationCredentialsWithContext)

	case "PutVoiceConnectorTerminationWithContext":
		return m.Fake(d.fakePutVoiceConnectorTerminationWithContext)

	case "RegenerateSecurityTokenWithContext":
		return m.Fake(d.fakeRegenerateSecurityTokenWithContext)

	case "ResetPersonalPINWithContext":
		return m.Fake(d.fakeResetPersonalPINWithContext)

	case "RestorePhoneNumberWithContext":
		return m.Fake(d.fakeRestorePhoneNumberWithContext)

	case "SearchAvailablePhoneNumbersWithContext":
		return m.Fake(d.fakeSearchAvailablePhoneNumbersWithContext)

	case "UpdateAccountSettingsWithContext":
		return m.Fake(d.fakeUpdateAccountSettingsWithContext)

	case "UpdateAccountWithContext":
		return m.Fake(d.fakeUpdateAccountWithContext)

	case "UpdateBotWithContext":
		return m.Fake(d.fakeUpdateBotWithContext)

	case "UpdateGlobalSettingsWithContext":
		return m.Fake(d.fakeUpdateGlobalSettingsWithContext)

	case "UpdatePhoneNumberSettingsWithContext":
		return m.Fake(d.fakeUpdatePhoneNumberSettingsWithContext)

	case "UpdatePhoneNumberWithContext":
		return m.Fake(d.fakeUpdatePhoneNumberWithContext)

	case "UpdateRoomMembershipWithContext":
		return m.Fake(d.fakeUpdateRoomMembershipWithContext)

	case "UpdateRoomWithContext":
		return m.Fake(d.fakeUpdateRoomWithContext)

	case "UpdateUserSettingsWithContext":
		return m.Fake(d.fakeUpdateUserSettingsWithContext)

	case "UpdateUserWithContext":
		return m.Fake(d.fakeUpdateUserWithContext)

	case "UpdateVoiceConnectorGroupWithContext":
		return m.Fake(d.fakeUpdateVoiceConnectorGroupWithContext)

	case "UpdateVoiceConnectorWithContext":
		return m.Fake(d.fakeUpdateVoiceConnectorWithContext)

	default:
		return nil
	}
}

func (d *ChimeDouble) AssociatePhoneNumberWithUser(i0 *chime.AssociatePhoneNumberWithUserInput) (r0 *chime.AssociatePhoneNumberWithUserOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("AssociatePhoneNumberWithUser", i0)
	r0, _ = returns[0].(*chime.AssociatePhoneNumberWithUserOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ChimeDouble) AssociatePhoneNumberWithUserRequest(i0 *chime.AssociatePhoneNumberWithUserInput) (r0 *request.Request, r1 *chime.AssociatePhoneNumberWithUserOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("AssociatePhoneNumberWithUserRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*chime.AssociatePhoneNumberWithUserOutput)
	return
}

func (d *ChimeDouble) AssociatePhoneNumberWithUserWithContext(i0 context.Context, i1 *chime.AssociatePhoneNumberWithUserInput, i2 ...request.Option) (r0 *chime.AssociatePhoneNumberWithUserOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("AssociatePhoneNumberWithUserWithContext", i0, i1, i2)
	r0, _ = returns[0].(*chime.AssociatePhoneNumberWithUserOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ChimeDouble) fakeAssociatePhoneNumberWithUserWithContext(ctx context.Context, in *chime.AssociatePhoneNumberWithUserInput, _ ...request.Option) (*chime.AssociatePhoneNumberWithUserOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "AssociatePhoneNumberWithUser cancelled", ctx.Err())
	default:
		return d.AssociatePhoneNumberWithUser(in)
	}
}

func (d *ChimeDouble) AssociatePhoneNumbersWithVoiceConnector(i0 *chime.AssociatePhoneNumbersWithVoiceConnectorInput) (r0 *chime.AssociatePhoneNumbersWithVoiceConnectorOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("AssociatePhoneNumbersWithVoiceConnector", i0)
	r0, _ = returns[0].(*chime.AssociatePhoneNumbersWithVoiceConnectorOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ChimeDouble) AssociatePhoneNumbersWithVoiceConnectorGroup(i0 *chime.AssociatePhoneNumbersWithVoiceConnectorGroupInput) (r0 *chime.AssociatePhoneNumbersWithVoiceConnectorGroupOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("AssociatePhoneNumbersWithVoiceConnectorGroup", i0)
	r0, _ = returns[0].(*chime.AssociatePhoneNumbersWithVoiceConnectorGroupOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ChimeDouble) AssociatePhoneNumbersWithVoiceConnectorGroupRequest(i0 *chime.AssociatePhoneNumbersWithVoiceConnectorGroupInput) (r0 *request.Request, r1 *chime.AssociatePhoneNumbersWithVoiceConnectorGroupOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("AssociatePhoneNumbersWithVoiceConnectorGroupRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*chime.AssociatePhoneNumbersWithVoiceConnectorGroupOutput)
	return
}

func (d *ChimeDouble) AssociatePhoneNumbersWithVoiceConnectorGroupWithContext(i0 context.Context, i1 *chime.AssociatePhoneNumbersWithVoiceConnectorGroupInput, i2 ...request.Option) (r0 *chime.AssociatePhoneNumbersWithVoiceConnectorGroupOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("AssociatePhoneNumbersWithVoiceConnectorGroupWithContext", i0, i1, i2)
	r0, _ = returns[0].(*chime.AssociatePhoneNumbersWithVoiceConnectorGroupOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ChimeDouble) fakeAssociatePhoneNumbersWithVoiceConnectorGroupWithContext(ctx context.Context, in *chime.AssociatePhoneNumbersWithVoiceConnectorGroupInput, _ ...request.Option) (*chime.AssociatePhoneNumbersWithVoiceConnectorGroupOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "AssociatePhoneNumbersWithVoiceConnectorGroup cancelled", ctx.Err())
	default:
		return d.AssociatePhoneNumbersWithVoiceConnectorGroup(in)
	}
}

func (d *ChimeDouble) AssociatePhoneNumbersWithVoiceConnectorRequest(i0 *chime.AssociatePhoneNumbersWithVoiceConnectorInput) (r0 *request.Request, r1 *chime.AssociatePhoneNumbersWithVoiceConnectorOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("AssociatePhoneNumbersWithVoiceConnectorRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*chime.AssociatePhoneNumbersWithVoiceConnectorOutput)
	return
}

func (d *ChimeDouble) AssociatePhoneNumbersWithVoiceConnectorWithContext(i0 context.Context, i1 *chime.AssociatePhoneNumbersWithVoiceConnectorInput, i2 ...request.Option) (r0 *chime.AssociatePhoneNumbersWithVoiceConnectorOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("AssociatePhoneNumbersWithVoiceConnectorWithContext", i0, i1, i2)
	r0, _ = returns[0].(*chime.AssociatePhoneNumbersWithVoiceConnectorOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ChimeDouble) fakeAssociatePhoneNumbersWithVoiceConnectorWithContext(ctx context.Context, in *chime.AssociatePhoneNumbersWithVoiceConnectorInput, _ ...request.Option) (*chime.AssociatePhoneNumbersWithVoiceConnectorOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "AssociatePhoneNumbersWithVoiceConnector cancelled", ctx.Err())
	default:
		return d.AssociatePhoneNumbersWithVoiceConnector(in)
	}
}

func (d *ChimeDouble) AssociateSigninDelegateGroupsWithAccount(i0 *chime.AssociateSigninDelegateGroupsWithAccountInput) (r0 *chime.AssociateSigninDelegateGroupsWithAccountOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("AssociateSigninDelegateGroupsWithAccount", i0)
	r0, _ = returns[0].(*chime.AssociateSigninDelegateGroupsWithAccountOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ChimeDouble) AssociateSigninDelegateGroupsWithAccountRequest(i0 *chime.AssociateSigninDelegateGroupsWithAccountInput) (r0 *request.Request, r1 *chime.AssociateSigninDelegateGroupsWithAccountOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("AssociateSigninDelegateGroupsWithAccountRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*chime.AssociateSigninDelegateGroupsWithAccountOutput)
	return
}

func (d *ChimeDouble) AssociateSigninDelegateGroupsWithAccountWithContext(i0 context.Context, i1 *chime.AssociateSigninDelegateGroupsWithAccountInput, i2 ...request.Option) (r0 *chime.AssociateSigninDelegateGroupsWithAccountOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("AssociateSigninDelegateGroupsWithAccountWithContext", i0, i1, i2)
	r0, _ = returns[0].(*chime.AssociateSigninDelegateGroupsWithAccountOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ChimeDouble) fakeAssociateSigninDelegateGroupsWithAccountWithContext(ctx context.Context, in *chime.AssociateSigninDelegateGroupsWithAccountInput, _ ...request.Option) (*chime.AssociateSigninDelegateGroupsWithAccountOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "AssociateSigninDelegateGroupsWithAccount cancelled", ctx.Err())
	default:
		return d.AssociateSigninDelegateGroupsWithAccount(in)
	}
}

func (d *ChimeDouble) BatchCreateAttendee(i0 *chime.BatchCreateAttendeeInput) (r0 *chime.BatchCreateAttendeeOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("BatchCreateAttendee", i0)
	r0, _ = returns[0].(*chime.BatchCreateAttendeeOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ChimeDouble) BatchCreateAttendeeRequest(i0 *chime.BatchCreateAttendeeInput) (r0 *request.Request, r1 *chime.BatchCreateAttendeeOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("BatchCreateAttendeeRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*chime.BatchCreateAttendeeOutput)
	return
}

func (d *ChimeDouble) BatchCreateAttendeeWithContext(i0 context.Context, i1 *chime.BatchCreateAttendeeInput, i2 ...request.Option) (r0 *chime.BatchCreateAttendeeOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("BatchCreateAttendeeWithContext", i0, i1, i2)
	r0, _ = returns[0].(*chime.BatchCreateAttendeeOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ChimeDouble) fakeBatchCreateAttendeeWithContext(ctx context.Context, in *chime.BatchCreateAttendeeInput, _ ...request.Option) (*chime.BatchCreateAttendeeOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "BatchCreateAttendee cancelled", ctx.Err())
	default:
		return d.BatchCreateAttendee(in)
	}
}

func (d *ChimeDouble) BatchCreateRoomMembership(i0 *chime.BatchCreateRoomMembershipInput) (r0 *chime.BatchCreateRoomMembershipOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("BatchCreateRoomMembership", i0)
	r0, _ = returns[0].(*chime.BatchCreateRoomMembershipOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ChimeDouble) BatchCreateRoomMembershipRequest(i0 *chime.BatchCreateRoomMembershipInput) (r0 *request.Request, r1 *chime.BatchCreateRoomMembershipOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("BatchCreateRoomMembershipRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*chime.BatchCreateRoomMembershipOutput)
	return
}

func (d *ChimeDouble) BatchCreateRoomMembershipWithContext(i0 context.Context, i1 *chime.BatchCreateRoomMembershipInput, i2 ...request.Option) (r0 *chime.BatchCreateRoomMembershipOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("BatchCreateRoomMembershipWithContext", i0, i1, i2)
	r0, _ = returns[0].(*chime.BatchCreateRoomMembershipOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ChimeDouble) fakeBatchCreateRoomMembershipWithContext(ctx context.Context, in *chime.BatchCreateRoomMembershipInput, _ ...request.Option) (*chime.BatchCreateRoomMembershipOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "BatchCreateRoomMembership cancelled", ctx.Err())
	default:
		return d.BatchCreateRoomMembership(in)
	}
}

func (d *ChimeDouble) BatchDeletePhoneNumber(i0 *chime.BatchDeletePhoneNumberInput) (r0 *chime.BatchDeletePhoneNumberOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("BatchDeletePhoneNumber", i0)
	r0, _ = returns[0].(*chime.BatchDeletePhoneNumberOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ChimeDouble) BatchDeletePhoneNumberRequest(i0 *chime.BatchDeletePhoneNumberInput) (r0 *request.Request, r1 *chime.BatchDeletePhoneNumberOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("BatchDeletePhoneNumberRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*chime.BatchDeletePhoneNumberOutput)
	return
}

func (d *ChimeDouble) BatchDeletePhoneNumberWithContext(i0 context.Context, i1 *chime.BatchDeletePhoneNumberInput, i2 ...request.Option) (r0 *chime.BatchDeletePhoneNumberOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("BatchDeletePhoneNumberWithContext", i0, i1, i2)
	r0, _ = returns[0].(*chime.BatchDeletePhoneNumberOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ChimeDouble) fakeBatchDeletePhoneNumberWithContext(ctx context.Context, in *chime.BatchDeletePhoneNumberInput, _ ...request.Option) (*chime.BatchDeletePhoneNumberOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "BatchDeletePhoneNumber cancelled", ctx.Err())
	default:
		return d.BatchDeletePhoneNumber(in)
	}
}

func (d *ChimeDouble) BatchSuspendUser(i0 *chime.BatchSuspendUserInput) (r0 *chime.BatchSuspendUserOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("BatchSuspendUser", i0)
	r0, _ = returns[0].(*chime.BatchSuspendUserOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ChimeDouble) BatchSuspendUserRequest(i0 *chime.BatchSuspendUserInput) (r0 *request.Request, r1 *chime.BatchSuspendUserOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("BatchSuspendUserRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*chime.BatchSuspendUserOutput)
	return
}

func (d *ChimeDouble) BatchSuspendUserWithContext(i0 context.Context, i1 *chime.BatchSuspendUserInput, i2 ...request.Option) (r0 *chime.BatchSuspendUserOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("BatchSuspendUserWithContext", i0, i1, i2)
	r0, _ = returns[0].(*chime.BatchSuspendUserOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ChimeDouble) fakeBatchSuspendUserWithContext(ctx context.Context, in *chime.BatchSuspendUserInput, _ ...request.Option) (*chime.BatchSuspendUserOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "BatchSuspendUser cancelled", ctx.Err())
	default:
		return d.BatchSuspendUser(in)
	}
}

func (d *ChimeDouble) BatchUnsuspendUser(i0 *chime.BatchUnsuspendUserInput) (r0 *chime.BatchUnsuspendUserOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("BatchUnsuspendUser", i0)
	r0, _ = returns[0].(*chime.BatchUnsuspendUserOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ChimeDouble) BatchUnsuspendUserRequest(i0 *chime.BatchUnsuspendUserInput) (r0 *request.Request, r1 *chime.BatchUnsuspendUserOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("BatchUnsuspendUserRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*chime.BatchUnsuspendUserOutput)
	return
}

func (d *ChimeDouble) BatchUnsuspendUserWithContext(i0 context.Context, i1 *chime.BatchUnsuspendUserInput, i2 ...request.Option) (r0 *chime.BatchUnsuspendUserOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("BatchUnsuspendUserWithContext", i0, i1, i2)
	r0, _ = returns[0].(*chime.BatchUnsuspendUserOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ChimeDouble) fakeBatchUnsuspendUserWithContext(ctx context.Context, in *chime.BatchUnsuspendUserInput, _ ...request.Option) (*chime.BatchUnsuspendUserOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "BatchUnsuspendUser cancelled", ctx.Err())
	default:
		return d.BatchUnsuspendUser(in)
	}
}

func (d *ChimeDouble) BatchUpdatePhoneNumber(i0 *chime.BatchUpdatePhoneNumberInput) (r0 *chime.BatchUpdatePhoneNumberOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("BatchUpdatePhoneNumber", i0)
	r0, _ = returns[0].(*chime.BatchUpdatePhoneNumberOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ChimeDouble) BatchUpdatePhoneNumberRequest(i0 *chime.BatchUpdatePhoneNumberInput) (r0 *request.Request, r1 *chime.BatchUpdatePhoneNumberOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("BatchUpdatePhoneNumberRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*chime.BatchUpdatePhoneNumberOutput)
	return
}

func (d *ChimeDouble) BatchUpdatePhoneNumberWithContext(i0 context.Context, i1 *chime.BatchUpdatePhoneNumberInput, i2 ...request.Option) (r0 *chime.BatchUpdatePhoneNumberOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("BatchUpdatePhoneNumberWithContext", i0, i1, i2)
	r0, _ = returns[0].(*chime.BatchUpdatePhoneNumberOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ChimeDouble) fakeBatchUpdatePhoneNumberWithContext(ctx context.Context, in *chime.BatchUpdatePhoneNumberInput, _ ...request.Option) (*chime.BatchUpdatePhoneNumberOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "BatchUpdatePhoneNumber cancelled", ctx.Err())
	default:
		return d.BatchUpdatePhoneNumber(in)
	}
}

func (d *ChimeDouble) BatchUpdateUser(i0 *chime.BatchUpdateUserInput) (r0 *chime.BatchUpdateUserOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("BatchUpdateUser", i0)
	r0, _ = returns[0].(*chime.BatchUpdateUserOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ChimeDouble) BatchUpdateUserRequest(i0 *chime.BatchUpdateUserInput) (r0 *request.Request, r1 *chime.BatchUpdateUserOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("BatchUpdateUserRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*chime.BatchUpdateUserOutput)
	return
}

func (d *ChimeDouble) BatchUpdateUserWithContext(i0 context.Context, i1 *chime.BatchUpdateUserInput, i2 ...request.Option) (r0 *chime.BatchUpdateUserOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("BatchUpdateUserWithContext", i0, i1, i2)
	r0, _ = returns[0].(*chime.BatchUpdateUserOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ChimeDouble) fakeBatchUpdateUserWithContext(ctx context.Context, in *chime.BatchUpdateUserInput, _ ...request.Option) (*chime.BatchUpdateUserOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "BatchUpdateUser cancelled", ctx.Err())
	default:
		return d.BatchUpdateUser(in)
	}
}

func (d *ChimeDouble) CreateAccount(i0 *chime.CreateAccountInput) (r0 *chime.CreateAccountOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreateAccount", i0)
	r0, _ = returns[0].(*chime.CreateAccountOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ChimeDouble) CreateAccountRequest(i0 *chime.CreateAccountInput) (r0 *request.Request, r1 *chime.CreateAccountOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreateAccountRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*chime.CreateAccountOutput)
	return
}

func (d *ChimeDouble) CreateAccountWithContext(i0 context.Context, i1 *chime.CreateAccountInput, i2 ...request.Option) (r0 *chime.CreateAccountOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreateAccountWithContext", i0, i1, i2)
	r0, _ = returns[0].(*chime.CreateAccountOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ChimeDouble) fakeCreateAccountWithContext(ctx context.Context, in *chime.CreateAccountInput, _ ...request.Option) (*chime.CreateAccountOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "CreateAccount cancelled", ctx.Err())
	default:
		return d.CreateAccount(in)
	}
}

func (d *ChimeDouble) CreateAttendee(i0 *chime.CreateAttendeeInput) (r0 *chime.CreateAttendeeOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreateAttendee", i0)
	r0, _ = returns[0].(*chime.CreateAttendeeOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ChimeDouble) CreateAttendeeRequest(i0 *chime.CreateAttendeeInput) (r0 *request.Request, r1 *chime.CreateAttendeeOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreateAttendeeRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*chime.CreateAttendeeOutput)
	return
}

func (d *ChimeDouble) CreateAttendeeWithContext(i0 context.Context, i1 *chime.CreateAttendeeInput, i2 ...request.Option) (r0 *chime.CreateAttendeeOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreateAttendeeWithContext", i0, i1, i2)
	r0, _ = returns[0].(*chime.CreateAttendeeOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ChimeDouble) fakeCreateAttendeeWithContext(ctx context.Context, in *chime.CreateAttendeeInput, _ ...request.Option) (*chime.CreateAttendeeOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "CreateAttendee cancelled", ctx.Err())
	default:
		return d.CreateAttendee(in)
	}
}

func (d *ChimeDouble) CreateBot(i0 *chime.CreateBotInput) (r0 *chime.CreateBotOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreateBot", i0)
	r0, _ = returns[0].(*chime.CreateBotOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ChimeDouble) CreateBotRequest(i0 *chime.CreateBotInput) (r0 *request.Request, r1 *chime.CreateBotOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreateBotRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*chime.CreateBotOutput)
	return
}

func (d *ChimeDouble) CreateBotWithContext(i0 context.Context, i1 *chime.CreateBotInput, i2 ...request.Option) (r0 *chime.CreateBotOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreateBotWithContext", i0, i1, i2)
	r0, _ = returns[0].(*chime.CreateBotOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ChimeDouble) fakeCreateBotWithContext(ctx context.Context, in *chime.CreateBotInput, _ ...request.Option) (*chime.CreateBotOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "CreateBot cancelled", ctx.Err())
	default:
		return d.CreateBot(in)
	}
}

func (d *ChimeDouble) CreateMeeting(i0 *chime.CreateMeetingInput) (r0 *chime.CreateMeetingOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreateMeeting", i0)
	r0, _ = returns[0].(*chime.CreateMeetingOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ChimeDouble) CreateMeetingRequest(i0 *chime.CreateMeetingInput) (r0 *request.Request, r1 *chime.CreateMeetingOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreateMeetingRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*chime.CreateMeetingOutput)
	return
}

func (d *ChimeDouble) CreateMeetingWithContext(i0 context.Context, i1 *chime.CreateMeetingInput, i2 ...request.Option) (r0 *chime.CreateMeetingOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreateMeetingWithContext", i0, i1, i2)
	r0, _ = returns[0].(*chime.CreateMeetingOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ChimeDouble) fakeCreateMeetingWithContext(ctx context.Context, in *chime.CreateMeetingInput, _ ...request.Option) (*chime.CreateMeetingOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "CreateMeeting cancelled", ctx.Err())
	default:
		return d.CreateMeeting(in)
	}
}

func (d *ChimeDouble) CreatePhoneNumberOrder(i0 *chime.CreatePhoneNumberOrderInput) (r0 *chime.CreatePhoneNumberOrderOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreatePhoneNumberOrder", i0)
	r0, _ = returns[0].(*chime.CreatePhoneNumberOrderOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ChimeDouble) CreatePhoneNumberOrderRequest(i0 *chime.CreatePhoneNumberOrderInput) (r0 *request.Request, r1 *chime.CreatePhoneNumberOrderOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreatePhoneNumberOrderRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*chime.CreatePhoneNumberOrderOutput)
	return
}

func (d *ChimeDouble) CreatePhoneNumberOrderWithContext(i0 context.Context, i1 *chime.CreatePhoneNumberOrderInput, i2 ...request.Option) (r0 *chime.CreatePhoneNumberOrderOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreatePhoneNumberOrderWithContext", i0, i1, i2)
	r0, _ = returns[0].(*chime.CreatePhoneNumberOrderOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ChimeDouble) fakeCreatePhoneNumberOrderWithContext(ctx context.Context, in *chime.CreatePhoneNumberOrderInput, _ ...request.Option) (*chime.CreatePhoneNumberOrderOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "CreatePhoneNumberOrder cancelled", ctx.Err())
	default:
		return d.CreatePhoneNumberOrder(in)
	}
}

func (d *ChimeDouble) CreateRoom(i0 *chime.CreateRoomInput) (r0 *chime.CreateRoomOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreateRoom", i0)
	r0, _ = returns[0].(*chime.CreateRoomOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ChimeDouble) CreateRoomMembership(i0 *chime.CreateRoomMembershipInput) (r0 *chime.CreateRoomMembershipOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreateRoomMembership", i0)
	r0, _ = returns[0].(*chime.CreateRoomMembershipOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ChimeDouble) CreateRoomMembershipRequest(i0 *chime.CreateRoomMembershipInput) (r0 *request.Request, r1 *chime.CreateRoomMembershipOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreateRoomMembershipRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*chime.CreateRoomMembershipOutput)
	return
}

func (d *ChimeDouble) CreateRoomMembershipWithContext(i0 context.Context, i1 *chime.CreateRoomMembershipInput, i2 ...request.Option) (r0 *chime.CreateRoomMembershipOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreateRoomMembershipWithContext", i0, i1, i2)
	r0, _ = returns[0].(*chime.CreateRoomMembershipOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ChimeDouble) fakeCreateRoomMembershipWithContext(ctx context.Context, in *chime.CreateRoomMembershipInput, _ ...request.Option) (*chime.CreateRoomMembershipOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "CreateRoomMembership cancelled", ctx.Err())
	default:
		return d.CreateRoomMembership(in)
	}
}

func (d *ChimeDouble) CreateRoomRequest(i0 *chime.CreateRoomInput) (r0 *request.Request, r1 *chime.CreateRoomOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreateRoomRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*chime.CreateRoomOutput)
	return
}

func (d *ChimeDouble) CreateRoomWithContext(i0 context.Context, i1 *chime.CreateRoomInput, i2 ...request.Option) (r0 *chime.CreateRoomOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreateRoomWithContext", i0, i1, i2)
	r0, _ = returns[0].(*chime.CreateRoomOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ChimeDouble) fakeCreateRoomWithContext(ctx context.Context, in *chime.CreateRoomInput, _ ...request.Option) (*chime.CreateRoomOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "CreateRoom cancelled", ctx.Err())
	default:
		return d.CreateRoom(in)
	}
}

func (d *ChimeDouble) CreateUser(i0 *chime.CreateUserInput) (r0 *chime.CreateUserOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreateUser", i0)
	r0, _ = returns[0].(*chime.CreateUserOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ChimeDouble) CreateUserRequest(i0 *chime.CreateUserInput) (r0 *request.Request, r1 *chime.CreateUserOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreateUserRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*chime.CreateUserOutput)
	return
}

func (d *ChimeDouble) CreateUserWithContext(i0 context.Context, i1 *chime.CreateUserInput, i2 ...request.Option) (r0 *chime.CreateUserOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreateUserWithContext", i0, i1, i2)
	r0, _ = returns[0].(*chime.CreateUserOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ChimeDouble) fakeCreateUserWithContext(ctx context.Context, in *chime.CreateUserInput, _ ...request.Option) (*chime.CreateUserOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "CreateUser cancelled", ctx.Err())
	default:
		return d.CreateUser(in)
	}
}

func (d *ChimeDouble) CreateVoiceConnector(i0 *chime.CreateVoiceConnectorInput) (r0 *chime.CreateVoiceConnectorOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreateVoiceConnector", i0)
	r0, _ = returns[0].(*chime.CreateVoiceConnectorOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ChimeDouble) CreateVoiceConnectorGroup(i0 *chime.CreateVoiceConnectorGroupInput) (r0 *chime.CreateVoiceConnectorGroupOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreateVoiceConnectorGroup", i0)
	r0, _ = returns[0].(*chime.CreateVoiceConnectorGroupOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ChimeDouble) CreateVoiceConnectorGroupRequest(i0 *chime.CreateVoiceConnectorGroupInput) (r0 *request.Request, r1 *chime.CreateVoiceConnectorGroupOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreateVoiceConnectorGroupRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*chime.CreateVoiceConnectorGroupOutput)
	return
}

func (d *ChimeDouble) CreateVoiceConnectorGroupWithContext(i0 context.Context, i1 *chime.CreateVoiceConnectorGroupInput, i2 ...request.Option) (r0 *chime.CreateVoiceConnectorGroupOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreateVoiceConnectorGroupWithContext", i0, i1, i2)
	r0, _ = returns[0].(*chime.CreateVoiceConnectorGroupOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ChimeDouble) fakeCreateVoiceConnectorGroupWithContext(ctx context.Context, in *chime.CreateVoiceConnectorGroupInput, _ ...request.Option) (*chime.CreateVoiceConnectorGroupOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "CreateVoiceConnectorGroup cancelled", ctx.Err())
	default:
		return d.CreateVoiceConnectorGroup(in)
	}
}

func (d *ChimeDouble) CreateVoiceConnectorRequest(i0 *chime.CreateVoiceConnectorInput) (r0 *request.Request, r1 *chime.CreateVoiceConnectorOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreateVoiceConnectorRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*chime.CreateVoiceConnectorOutput)
	return
}

func (d *ChimeDouble) CreateVoiceConnectorWithContext(i0 context.Context, i1 *chime.CreateVoiceConnectorInput, i2 ...request.Option) (r0 *chime.CreateVoiceConnectorOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreateVoiceConnectorWithContext", i0, i1, i2)
	r0, _ = returns[0].(*chime.CreateVoiceConnectorOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ChimeDouble) fakeCreateVoiceConnectorWithContext(ctx context.Context, in *chime.CreateVoiceConnectorInput, _ ...request.Option) (*chime.CreateVoiceConnectorOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "CreateVoiceConnector cancelled", ctx.Err())
	default:
		return d.CreateVoiceConnector(in)
	}
}

func (d *ChimeDouble) DeleteAccount(i0 *chime.DeleteAccountInput) (r0 *chime.DeleteAccountOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteAccount", i0)
	r0, _ = returns[0].(*chime.DeleteAccountOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ChimeDouble) DeleteAccountRequest(i0 *chime.DeleteAccountInput) (r0 *request.Request, r1 *chime.DeleteAccountOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteAccountRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*chime.DeleteAccountOutput)
	return
}

func (d *ChimeDouble) DeleteAccountWithContext(i0 context.Context, i1 *chime.DeleteAccountInput, i2 ...request.Option) (r0 *chime.DeleteAccountOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteAccountWithContext", i0, i1, i2)
	r0, _ = returns[0].(*chime.DeleteAccountOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ChimeDouble) fakeDeleteAccountWithContext(ctx context.Context, in *chime.DeleteAccountInput, _ ...request.Option) (*chime.DeleteAccountOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "DeleteAccount cancelled", ctx.Err())
	default:
		return d.DeleteAccount(in)
	}
}

func (d *ChimeDouble) DeleteAttendee(i0 *chime.DeleteAttendeeInput) (r0 *chime.DeleteAttendeeOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteAttendee", i0)
	r0, _ = returns[0].(*chime.DeleteAttendeeOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ChimeDouble) DeleteAttendeeRequest(i0 *chime.DeleteAttendeeInput) (r0 *request.Request, r1 *chime.DeleteAttendeeOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteAttendeeRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*chime.DeleteAttendeeOutput)
	return
}

func (d *ChimeDouble) DeleteAttendeeWithContext(i0 context.Context, i1 *chime.DeleteAttendeeInput, i2 ...request.Option) (r0 *chime.DeleteAttendeeOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteAttendeeWithContext", i0, i1, i2)
	r0, _ = returns[0].(*chime.DeleteAttendeeOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ChimeDouble) fakeDeleteAttendeeWithContext(ctx context.Context, in *chime.DeleteAttendeeInput, _ ...request.Option) (*chime.DeleteAttendeeOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "DeleteAttendee cancelled", ctx.Err())
	default:
		return d.DeleteAttendee(in)
	}
}

func (d *ChimeDouble) DeleteEventsConfiguration(i0 *chime.DeleteEventsConfigurationInput) (r0 *chime.DeleteEventsConfigurationOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteEventsConfiguration", i0)
	r0, _ = returns[0].(*chime.DeleteEventsConfigurationOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ChimeDouble) DeleteEventsConfigurationRequest(i0 *chime.DeleteEventsConfigurationInput) (r0 *request.Request, r1 *chime.DeleteEventsConfigurationOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteEventsConfigurationRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*chime.DeleteEventsConfigurationOutput)
	return
}

func (d *ChimeDouble) DeleteEventsConfigurationWithContext(i0 context.Context, i1 *chime.DeleteEventsConfigurationInput, i2 ...request.Option) (r0 *chime.DeleteEventsConfigurationOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteEventsConfigurationWithContext", i0, i1, i2)
	r0, _ = returns[0].(*chime.DeleteEventsConfigurationOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ChimeDouble) fakeDeleteEventsConfigurationWithContext(ctx context.Context, in *chime.DeleteEventsConfigurationInput, _ ...request.Option) (*chime.DeleteEventsConfigurationOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "DeleteEventsConfiguration cancelled", ctx.Err())
	default:
		return d.DeleteEventsConfiguration(in)
	}
}

func (d *ChimeDouble) DeleteMeeting(i0 *chime.DeleteMeetingInput) (r0 *chime.DeleteMeetingOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteMeeting", i0)
	r0, _ = returns[0].(*chime.DeleteMeetingOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ChimeDouble) DeleteMeetingRequest(i0 *chime.DeleteMeetingInput) (r0 *request.Request, r1 *chime.DeleteMeetingOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteMeetingRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*chime.DeleteMeetingOutput)
	return
}

func (d *ChimeDouble) DeleteMeetingWithContext(i0 context.Context, i1 *chime.DeleteMeetingInput, i2 ...request.Option) (r0 *chime.DeleteMeetingOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteMeetingWithContext", i0, i1, i2)
	r0, _ = returns[0].(*chime.DeleteMeetingOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ChimeDouble) fakeDeleteMeetingWithContext(ctx context.Context, in *chime.DeleteMeetingInput, _ ...request.Option) (*chime.DeleteMeetingOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "DeleteMeeting cancelled", ctx.Err())
	default:
		return d.DeleteMeeting(in)
	}
}

func (d *ChimeDouble) DeletePhoneNumber(i0 *chime.DeletePhoneNumberInput) (r0 *chime.DeletePhoneNumberOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeletePhoneNumber", i0)
	r0, _ = returns[0].(*chime.DeletePhoneNumberOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ChimeDouble) DeletePhoneNumberRequest(i0 *chime.DeletePhoneNumberInput) (r0 *request.Request, r1 *chime.DeletePhoneNumberOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeletePhoneNumberRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*chime.DeletePhoneNumberOutput)
	return
}

func (d *ChimeDouble) DeletePhoneNumberWithContext(i0 context.Context, i1 *chime.DeletePhoneNumberInput, i2 ...request.Option) (r0 *chime.DeletePhoneNumberOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeletePhoneNumberWithContext", i0, i1, i2)
	r0, _ = returns[0].(*chime.DeletePhoneNumberOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ChimeDouble) fakeDeletePhoneNumberWithContext(ctx context.Context, in *chime.DeletePhoneNumberInput, _ ...request.Option) (*chime.DeletePhoneNumberOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "DeletePhoneNumber cancelled", ctx.Err())
	default:
		return d.DeletePhoneNumber(in)
	}
}

func (d *ChimeDouble) DeleteRoom(i0 *chime.DeleteRoomInput) (r0 *chime.DeleteRoomOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteRoom", i0)
	r0, _ = returns[0].(*chime.DeleteRoomOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ChimeDouble) DeleteRoomMembership(i0 *chime.DeleteRoomMembershipInput) (r0 *chime.DeleteRoomMembershipOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteRoomMembership", i0)
	r0, _ = returns[0].(*chime.DeleteRoomMembershipOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ChimeDouble) DeleteRoomMembershipRequest(i0 *chime.DeleteRoomMembershipInput) (r0 *request.Request, r1 *chime.DeleteRoomMembershipOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteRoomMembershipRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*chime.DeleteRoomMembershipOutput)
	return
}

func (d *ChimeDouble) DeleteRoomMembershipWithContext(i0 context.Context, i1 *chime.DeleteRoomMembershipInput, i2 ...request.Option) (r0 *chime.DeleteRoomMembershipOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteRoomMembershipWithContext", i0, i1, i2)
	r0, _ = returns[0].(*chime.DeleteRoomMembershipOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ChimeDouble) fakeDeleteRoomMembershipWithContext(ctx context.Context, in *chime.DeleteRoomMembershipInput, _ ...request.Option) (*chime.DeleteRoomMembershipOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "DeleteRoomMembership cancelled", ctx.Err())
	default:
		return d.DeleteRoomMembership(in)
	}
}

func (d *ChimeDouble) DeleteRoomRequest(i0 *chime.DeleteRoomInput) (r0 *request.Request, r1 *chime.DeleteRoomOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteRoomRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*chime.DeleteRoomOutput)
	return
}

func (d *ChimeDouble) DeleteRoomWithContext(i0 context.Context, i1 *chime.DeleteRoomInput, i2 ...request.Option) (r0 *chime.DeleteRoomOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteRoomWithContext", i0, i1, i2)
	r0, _ = returns[0].(*chime.DeleteRoomOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ChimeDouble) fakeDeleteRoomWithContext(ctx context.Context, in *chime.DeleteRoomInput, _ ...request.Option) (*chime.DeleteRoomOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "DeleteRoom cancelled", ctx.Err())
	default:
		return d.DeleteRoom(in)
	}
}

func (d *ChimeDouble) DeleteVoiceConnector(i0 *chime.DeleteVoiceConnectorInput) (r0 *chime.DeleteVoiceConnectorOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteVoiceConnector", i0)
	r0, _ = returns[0].(*chime.DeleteVoiceConnectorOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ChimeDouble) DeleteVoiceConnectorGroup(i0 *chime.DeleteVoiceConnectorGroupInput) (r0 *chime.DeleteVoiceConnectorGroupOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteVoiceConnectorGroup", i0)
	r0, _ = returns[0].(*chime.DeleteVoiceConnectorGroupOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ChimeDouble) DeleteVoiceConnectorGroupRequest(i0 *chime.DeleteVoiceConnectorGroupInput) (r0 *request.Request, r1 *chime.DeleteVoiceConnectorGroupOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteVoiceConnectorGroupRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*chime.DeleteVoiceConnectorGroupOutput)
	return
}

func (d *ChimeDouble) DeleteVoiceConnectorGroupWithContext(i0 context.Context, i1 *chime.DeleteVoiceConnectorGroupInput, i2 ...request.Option) (r0 *chime.DeleteVoiceConnectorGroupOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteVoiceConnectorGroupWithContext", i0, i1, i2)
	r0, _ = returns[0].(*chime.DeleteVoiceConnectorGroupOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ChimeDouble) fakeDeleteVoiceConnectorGroupWithContext(ctx context.Context, in *chime.DeleteVoiceConnectorGroupInput, _ ...request.Option) (*chime.DeleteVoiceConnectorGroupOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "DeleteVoiceConnectorGroup cancelled", ctx.Err())
	default:
		return d.DeleteVoiceConnectorGroup(in)
	}
}

func (d *ChimeDouble) DeleteVoiceConnectorOrigination(i0 *chime.DeleteVoiceConnectorOriginationInput) (r0 *chime.DeleteVoiceConnectorOriginationOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteVoiceConnectorOrigination", i0)
	r0, _ = returns[0].(*chime.DeleteVoiceConnectorOriginationOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ChimeDouble) DeleteVoiceConnectorOriginationRequest(i0 *chime.DeleteVoiceConnectorOriginationInput) (r0 *request.Request, r1 *chime.DeleteVoiceConnectorOriginationOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteVoiceConnectorOriginationRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*chime.DeleteVoiceConnectorOriginationOutput)
	return
}

func (d *ChimeDouble) DeleteVoiceConnectorOriginationWithContext(i0 context.Context, i1 *chime.DeleteVoiceConnectorOriginationInput, i2 ...request.Option) (r0 *chime.DeleteVoiceConnectorOriginationOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteVoiceConnectorOriginationWithContext", i0, i1, i2)
	r0, _ = returns[0].(*chime.DeleteVoiceConnectorOriginationOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ChimeDouble) fakeDeleteVoiceConnectorOriginationWithContext(ctx context.Context, in *chime.DeleteVoiceConnectorOriginationInput, _ ...request.Option) (*chime.DeleteVoiceConnectorOriginationOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "DeleteVoiceConnectorOrigination cancelled", ctx.Err())
	default:
		return d.DeleteVoiceConnectorOrigination(in)
	}
}

func (d *ChimeDouble) DeleteVoiceConnectorRequest(i0 *chime.DeleteVoiceConnectorInput) (r0 *request.Request, r1 *chime.DeleteVoiceConnectorOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteVoiceConnectorRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*chime.DeleteVoiceConnectorOutput)
	return
}

func (d *ChimeDouble) DeleteVoiceConnectorStreamingConfiguration(i0 *chime.DeleteVoiceConnectorStreamingConfigurationInput) (r0 *chime.DeleteVoiceConnectorStreamingConfigurationOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteVoiceConnectorStreamingConfiguration", i0)
	r0, _ = returns[0].(*chime.DeleteVoiceConnectorStreamingConfigurationOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ChimeDouble) DeleteVoiceConnectorStreamingConfigurationRequest(i0 *chime.DeleteVoiceConnectorStreamingConfigurationInput) (r0 *request.Request, r1 *chime.DeleteVoiceConnectorStreamingConfigurationOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteVoiceConnectorStreamingConfigurationRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*chime.DeleteVoiceConnectorStreamingConfigurationOutput)
	return
}

func (d *ChimeDouble) DeleteVoiceConnectorStreamingConfigurationWithContext(i0 context.Context, i1 *chime.DeleteVoiceConnectorStreamingConfigurationInput, i2 ...request.Option) (r0 *chime.DeleteVoiceConnectorStreamingConfigurationOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteVoiceConnectorStreamingConfigurationWithContext", i0, i1, i2)
	r0, _ = returns[0].(*chime.DeleteVoiceConnectorStreamingConfigurationOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ChimeDouble) fakeDeleteVoiceConnectorStreamingConfigurationWithContext(ctx context.Context, in *chime.DeleteVoiceConnectorStreamingConfigurationInput, _ ...request.Option) (*chime.DeleteVoiceConnectorStreamingConfigurationOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "DeleteVoiceConnectorStreamingConfiguration cancelled", ctx.Err())
	default:
		return d.DeleteVoiceConnectorStreamingConfiguration(in)
	}
}

func (d *ChimeDouble) DeleteVoiceConnectorTermination(i0 *chime.DeleteVoiceConnectorTerminationInput) (r0 *chime.DeleteVoiceConnectorTerminationOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteVoiceConnectorTermination", i0)
	r0, _ = returns[0].(*chime.DeleteVoiceConnectorTerminationOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ChimeDouble) DeleteVoiceConnectorTerminationCredentials(i0 *chime.DeleteVoiceConnectorTerminationCredentialsInput) (r0 *chime.DeleteVoiceConnectorTerminationCredentialsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteVoiceConnectorTerminationCredentials", i0)
	r0, _ = returns[0].(*chime.DeleteVoiceConnectorTerminationCredentialsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ChimeDouble) DeleteVoiceConnectorTerminationCredentialsRequest(i0 *chime.DeleteVoiceConnectorTerminationCredentialsInput) (r0 *request.Request, r1 *chime.DeleteVoiceConnectorTerminationCredentialsOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteVoiceConnectorTerminationCredentialsRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*chime.DeleteVoiceConnectorTerminationCredentialsOutput)
	return
}

func (d *ChimeDouble) DeleteVoiceConnectorTerminationCredentialsWithContext(i0 context.Context, i1 *chime.DeleteVoiceConnectorTerminationCredentialsInput, i2 ...request.Option) (r0 *chime.DeleteVoiceConnectorTerminationCredentialsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteVoiceConnectorTerminationCredentialsWithContext", i0, i1, i2)
	r0, _ = returns[0].(*chime.DeleteVoiceConnectorTerminationCredentialsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ChimeDouble) fakeDeleteVoiceConnectorTerminationCredentialsWithContext(ctx context.Context, in *chime.DeleteVoiceConnectorTerminationCredentialsInput, _ ...request.Option) (*chime.DeleteVoiceConnectorTerminationCredentialsOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "DeleteVoiceConnectorTerminationCredentials cancelled", ctx.Err())
	default:
		return d.DeleteVoiceConnectorTerminationCredentials(in)
	}
}

func (d *ChimeDouble) DeleteVoiceConnectorTerminationRequest(i0 *chime.DeleteVoiceConnectorTerminationInput) (r0 *request.Request, r1 *chime.DeleteVoiceConnectorTerminationOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteVoiceConnectorTerminationRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*chime.DeleteVoiceConnectorTerminationOutput)
	return
}

func (d *ChimeDouble) DeleteVoiceConnectorTerminationWithContext(i0 context.Context, i1 *chime.DeleteVoiceConnectorTerminationInput, i2 ...request.Option) (r0 *chime.DeleteVoiceConnectorTerminationOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteVoiceConnectorTerminationWithContext", i0, i1, i2)
	r0, _ = returns[0].(*chime.DeleteVoiceConnectorTerminationOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ChimeDouble) fakeDeleteVoiceConnectorTerminationWithContext(ctx context.Context, in *chime.DeleteVoiceConnectorTerminationInput, _ ...request.Option) (*chime.DeleteVoiceConnectorTerminationOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "DeleteVoiceConnectorTermination cancelled", ctx.Err())
	default:
		return d.DeleteVoiceConnectorTermination(in)
	}
}

func (d *ChimeDouble) DeleteVoiceConnectorWithContext(i0 context.Context, i1 *chime.DeleteVoiceConnectorInput, i2 ...request.Option) (r0 *chime.DeleteVoiceConnectorOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteVoiceConnectorWithContext", i0, i1, i2)
	r0, _ = returns[0].(*chime.DeleteVoiceConnectorOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ChimeDouble) fakeDeleteVoiceConnectorWithContext(ctx context.Context, in *chime.DeleteVoiceConnectorInput, _ ...request.Option) (*chime.DeleteVoiceConnectorOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "DeleteVoiceConnector cancelled", ctx.Err())
	default:
		return d.DeleteVoiceConnector(in)
	}
}

func (d *ChimeDouble) DisassociatePhoneNumberFromUser(i0 *chime.DisassociatePhoneNumberFromUserInput) (r0 *chime.DisassociatePhoneNumberFromUserOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DisassociatePhoneNumberFromUser", i0)
	r0, _ = returns[0].(*chime.DisassociatePhoneNumberFromUserOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ChimeDouble) DisassociatePhoneNumberFromUserRequest(i0 *chime.DisassociatePhoneNumberFromUserInput) (r0 *request.Request, r1 *chime.DisassociatePhoneNumberFromUserOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DisassociatePhoneNumberFromUserRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*chime.DisassociatePhoneNumberFromUserOutput)
	return
}

func (d *ChimeDouble) DisassociatePhoneNumberFromUserWithContext(i0 context.Context, i1 *chime.DisassociatePhoneNumberFromUserInput, i2 ...request.Option) (r0 *chime.DisassociatePhoneNumberFromUserOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DisassociatePhoneNumberFromUserWithContext", i0, i1, i2)
	r0, _ = returns[0].(*chime.DisassociatePhoneNumberFromUserOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ChimeDouble) fakeDisassociatePhoneNumberFromUserWithContext(ctx context.Context, in *chime.DisassociatePhoneNumberFromUserInput, _ ...request.Option) (*chime.DisassociatePhoneNumberFromUserOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "DisassociatePhoneNumberFromUser cancelled", ctx.Err())
	default:
		return d.DisassociatePhoneNumberFromUser(in)
	}
}

func (d *ChimeDouble) DisassociatePhoneNumbersFromVoiceConnector(i0 *chime.DisassociatePhoneNumbersFromVoiceConnectorInput) (r0 *chime.DisassociatePhoneNumbersFromVoiceConnectorOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DisassociatePhoneNumbersFromVoiceConnector", i0)
	r0, _ = returns[0].(*chime.DisassociatePhoneNumbersFromVoiceConnectorOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ChimeDouble) DisassociatePhoneNumbersFromVoiceConnectorGroup(i0 *chime.DisassociatePhoneNumbersFromVoiceConnectorGroupInput) (r0 *chime.DisassociatePhoneNumbersFromVoiceConnectorGroupOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DisassociatePhoneNumbersFromVoiceConnectorGroup", i0)
	r0, _ = returns[0].(*chime.DisassociatePhoneNumbersFromVoiceConnectorGroupOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ChimeDouble) DisassociatePhoneNumbersFromVoiceConnectorGroupRequest(i0 *chime.DisassociatePhoneNumbersFromVoiceConnectorGroupInput) (r0 *request.Request, r1 *chime.DisassociatePhoneNumbersFromVoiceConnectorGroupOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DisassociatePhoneNumbersFromVoiceConnectorGroupRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*chime.DisassociatePhoneNumbersFromVoiceConnectorGroupOutput)
	return
}

func (d *ChimeDouble) DisassociatePhoneNumbersFromVoiceConnectorGroupWithContext(i0 context.Context, i1 *chime.DisassociatePhoneNumbersFromVoiceConnectorGroupInput, i2 ...request.Option) (r0 *chime.DisassociatePhoneNumbersFromVoiceConnectorGroupOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DisassociatePhoneNumbersFromVoiceConnectorGroupWithContext", i0, i1, i2)
	r0, _ = returns[0].(*chime.DisassociatePhoneNumbersFromVoiceConnectorGroupOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ChimeDouble) fakeDisassociatePhoneNumbersFromVoiceConnectorGroupWithContext(ctx context.Context, in *chime.DisassociatePhoneNumbersFromVoiceConnectorGroupInput, _ ...request.Option) (*chime.DisassociatePhoneNumbersFromVoiceConnectorGroupOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "DisassociatePhoneNumbersFromVoiceConnectorGroup cancelled", ctx.Err())
	default:
		return d.DisassociatePhoneNumbersFromVoiceConnectorGroup(in)
	}
}

func (d *ChimeDouble) DisassociatePhoneNumbersFromVoiceConnectorRequest(i0 *chime.DisassociatePhoneNumbersFromVoiceConnectorInput) (r0 *request.Request, r1 *chime.DisassociatePhoneNumbersFromVoiceConnectorOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DisassociatePhoneNumbersFromVoiceConnectorRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*chime.DisassociatePhoneNumbersFromVoiceConnectorOutput)
	return
}

func (d *ChimeDouble) DisassociatePhoneNumbersFromVoiceConnectorWithContext(i0 context.Context, i1 *chime.DisassociatePhoneNumbersFromVoiceConnectorInput, i2 ...request.Option) (r0 *chime.DisassociatePhoneNumbersFromVoiceConnectorOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DisassociatePhoneNumbersFromVoiceConnectorWithContext", i0, i1, i2)
	r0, _ = returns[0].(*chime.DisassociatePhoneNumbersFromVoiceConnectorOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ChimeDouble) fakeDisassociatePhoneNumbersFromVoiceConnectorWithContext(ctx context.Context, in *chime.DisassociatePhoneNumbersFromVoiceConnectorInput, _ ...request.Option) (*chime.DisassociatePhoneNumbersFromVoiceConnectorOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "DisassociatePhoneNumbersFromVoiceConnector cancelled", ctx.Err())
	default:
		return d.DisassociatePhoneNumbersFromVoiceConnector(in)
	}
}

func (d *ChimeDouble) DisassociateSigninDelegateGroupsFromAccount(i0 *chime.DisassociateSigninDelegateGroupsFromAccountInput) (r0 *chime.DisassociateSigninDelegateGroupsFromAccountOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DisassociateSigninDelegateGroupsFromAccount", i0)
	r0, _ = returns[0].(*chime.DisassociateSigninDelegateGroupsFromAccountOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ChimeDouble) DisassociateSigninDelegateGroupsFromAccountRequest(i0 *chime.DisassociateSigninDelegateGroupsFromAccountInput) (r0 *request.Request, r1 *chime.DisassociateSigninDelegateGroupsFromAccountOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DisassociateSigninDelegateGroupsFromAccountRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*chime.DisassociateSigninDelegateGroupsFromAccountOutput)
	return
}

func (d *ChimeDouble) DisassociateSigninDelegateGroupsFromAccountWithContext(i0 context.Context, i1 *chime.DisassociateSigninDelegateGroupsFromAccountInput, i2 ...request.Option) (r0 *chime.DisassociateSigninDelegateGroupsFromAccountOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DisassociateSigninDelegateGroupsFromAccountWithContext", i0, i1, i2)
	r0, _ = returns[0].(*chime.DisassociateSigninDelegateGroupsFromAccountOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ChimeDouble) fakeDisassociateSigninDelegateGroupsFromAccountWithContext(ctx context.Context, in *chime.DisassociateSigninDelegateGroupsFromAccountInput, _ ...request.Option) (*chime.DisassociateSigninDelegateGroupsFromAccountOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "DisassociateSigninDelegateGroupsFromAccount cancelled", ctx.Err())
	default:
		return d.DisassociateSigninDelegateGroupsFromAccount(in)
	}
}

func (d *ChimeDouble) GetAccount(i0 *chime.GetAccountInput) (r0 *chime.GetAccountOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetAccount", i0)
	r0, _ = returns[0].(*chime.GetAccountOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ChimeDouble) GetAccountRequest(i0 *chime.GetAccountInput) (r0 *request.Request, r1 *chime.GetAccountOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetAccountRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*chime.GetAccountOutput)
	return
}

func (d *ChimeDouble) GetAccountSettings(i0 *chime.GetAccountSettingsInput) (r0 *chime.GetAccountSettingsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetAccountSettings", i0)
	r0, _ = returns[0].(*chime.GetAccountSettingsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ChimeDouble) GetAccountSettingsRequest(i0 *chime.GetAccountSettingsInput) (r0 *request.Request, r1 *chime.GetAccountSettingsOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetAccountSettingsRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*chime.GetAccountSettingsOutput)
	return
}

func (d *ChimeDouble) GetAccountSettingsWithContext(i0 context.Context, i1 *chime.GetAccountSettingsInput, i2 ...request.Option) (r0 *chime.GetAccountSettingsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetAccountSettingsWithContext", i0, i1, i2)
	r0, _ = returns[0].(*chime.GetAccountSettingsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ChimeDouble) fakeGetAccountSettingsWithContext(ctx context.Context, in *chime.GetAccountSettingsInput, _ ...request.Option) (*chime.GetAccountSettingsOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "GetAccountSettings cancelled", ctx.Err())
	default:
		return d.GetAccountSettings(in)
	}
}

func (d *ChimeDouble) GetAccountWithContext(i0 context.Context, i1 *chime.GetAccountInput, i2 ...request.Option) (r0 *chime.GetAccountOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetAccountWithContext", i0, i1, i2)
	r0, _ = returns[0].(*chime.GetAccountOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ChimeDouble) fakeGetAccountWithContext(ctx context.Context, in *chime.GetAccountInput, _ ...request.Option) (*chime.GetAccountOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "GetAccount cancelled", ctx.Err())
	default:
		return d.GetAccount(in)
	}
}

func (d *ChimeDouble) GetAttendee(i0 *chime.GetAttendeeInput) (r0 *chime.GetAttendeeOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetAttendee", i0)
	r0, _ = returns[0].(*chime.GetAttendeeOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ChimeDouble) GetAttendeeRequest(i0 *chime.GetAttendeeInput) (r0 *request.Request, r1 *chime.GetAttendeeOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetAttendeeRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*chime.GetAttendeeOutput)
	return
}

func (d *ChimeDouble) GetAttendeeWithContext(i0 context.Context, i1 *chime.GetAttendeeInput, i2 ...request.Option) (r0 *chime.GetAttendeeOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetAttendeeWithContext", i0, i1, i2)
	r0, _ = returns[0].(*chime.GetAttendeeOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ChimeDouble) fakeGetAttendeeWithContext(ctx context.Context, in *chime.GetAttendeeInput, _ ...request.Option) (*chime.GetAttendeeOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "GetAttendee cancelled", ctx.Err())
	default:
		return d.GetAttendee(in)
	}
}

func (d *ChimeDouble) GetBot(i0 *chime.GetBotInput) (r0 *chime.GetBotOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetBot", i0)
	r0, _ = returns[0].(*chime.GetBotOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ChimeDouble) GetBotRequest(i0 *chime.GetBotInput) (r0 *request.Request, r1 *chime.GetBotOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetBotRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*chime.GetBotOutput)
	return
}

func (d *ChimeDouble) GetBotWithContext(i0 context.Context, i1 *chime.GetBotInput, i2 ...request.Option) (r0 *chime.GetBotOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetBotWithContext", i0, i1, i2)
	r0, _ = returns[0].(*chime.GetBotOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ChimeDouble) fakeGetBotWithContext(ctx context.Context, in *chime.GetBotInput, _ ...request.Option) (*chime.GetBotOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "GetBot cancelled", ctx.Err())
	default:
		return d.GetBot(in)
	}
}

func (d *ChimeDouble) GetEventsConfiguration(i0 *chime.GetEventsConfigurationInput) (r0 *chime.GetEventsConfigurationOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetEventsConfiguration", i0)
	r0, _ = returns[0].(*chime.GetEventsConfigurationOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ChimeDouble) GetEventsConfigurationRequest(i0 *chime.GetEventsConfigurationInput) (r0 *request.Request, r1 *chime.GetEventsConfigurationOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetEventsConfigurationRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*chime.GetEventsConfigurationOutput)
	return
}

func (d *ChimeDouble) GetEventsConfigurationWithContext(i0 context.Context, i1 *chime.GetEventsConfigurationInput, i2 ...request.Option) (r0 *chime.GetEventsConfigurationOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetEventsConfigurationWithContext", i0, i1, i2)
	r0, _ = returns[0].(*chime.GetEventsConfigurationOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ChimeDouble) fakeGetEventsConfigurationWithContext(ctx context.Context, in *chime.GetEventsConfigurationInput, _ ...request.Option) (*chime.GetEventsConfigurationOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "GetEventsConfiguration cancelled", ctx.Err())
	default:
		return d.GetEventsConfiguration(in)
	}
}

func (d *ChimeDouble) GetGlobalSettings(i0 *chime.GetGlobalSettingsInput) (r0 *chime.GetGlobalSettingsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetGlobalSettings", i0)
	r0, _ = returns[0].(*chime.GetGlobalSettingsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ChimeDouble) GetGlobalSettingsRequest(i0 *chime.GetGlobalSettingsInput) (r0 *request.Request, r1 *chime.GetGlobalSettingsOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetGlobalSettingsRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*chime.GetGlobalSettingsOutput)
	return
}

func (d *ChimeDouble) GetGlobalSettingsWithContext(i0 context.Context, i1 *chime.GetGlobalSettingsInput, i2 ...request.Option) (r0 *chime.GetGlobalSettingsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetGlobalSettingsWithContext", i0, i1, i2)
	r0, _ = returns[0].(*chime.GetGlobalSettingsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ChimeDouble) fakeGetGlobalSettingsWithContext(ctx context.Context, in *chime.GetGlobalSettingsInput, _ ...request.Option) (*chime.GetGlobalSettingsOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "GetGlobalSettings cancelled", ctx.Err())
	default:
		return d.GetGlobalSettings(in)
	}
}

func (d *ChimeDouble) GetMeeting(i0 *chime.GetMeetingInput) (r0 *chime.GetMeetingOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetMeeting", i0)
	r0, _ = returns[0].(*chime.GetMeetingOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ChimeDouble) GetMeetingRequest(i0 *chime.GetMeetingInput) (r0 *request.Request, r1 *chime.GetMeetingOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetMeetingRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*chime.GetMeetingOutput)
	return
}

func (d *ChimeDouble) GetMeetingWithContext(i0 context.Context, i1 *chime.GetMeetingInput, i2 ...request.Option) (r0 *chime.GetMeetingOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetMeetingWithContext", i0, i1, i2)
	r0, _ = returns[0].(*chime.GetMeetingOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ChimeDouble) fakeGetMeetingWithContext(ctx context.Context, in *chime.GetMeetingInput, _ ...request.Option) (*chime.GetMeetingOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "GetMeeting cancelled", ctx.Err())
	default:
		return d.GetMeeting(in)
	}
}

func (d *ChimeDouble) GetPhoneNumber(i0 *chime.GetPhoneNumberInput) (r0 *chime.GetPhoneNumberOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetPhoneNumber", i0)
	r0, _ = returns[0].(*chime.GetPhoneNumberOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ChimeDouble) GetPhoneNumberOrder(i0 *chime.GetPhoneNumberOrderInput) (r0 *chime.GetPhoneNumberOrderOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetPhoneNumberOrder", i0)
	r0, _ = returns[0].(*chime.GetPhoneNumberOrderOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ChimeDouble) GetPhoneNumberOrderRequest(i0 *chime.GetPhoneNumberOrderInput) (r0 *request.Request, r1 *chime.GetPhoneNumberOrderOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetPhoneNumberOrderRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*chime.GetPhoneNumberOrderOutput)
	return
}

func (d *ChimeDouble) GetPhoneNumberOrderWithContext(i0 context.Context, i1 *chime.GetPhoneNumberOrderInput, i2 ...request.Option) (r0 *chime.GetPhoneNumberOrderOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetPhoneNumberOrderWithContext", i0, i1, i2)
	r0, _ = returns[0].(*chime.GetPhoneNumberOrderOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ChimeDouble) fakeGetPhoneNumberOrderWithContext(ctx context.Context, in *chime.GetPhoneNumberOrderInput, _ ...request.Option) (*chime.GetPhoneNumberOrderOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "GetPhoneNumberOrder cancelled", ctx.Err())
	default:
		return d.GetPhoneNumberOrder(in)
	}
}

func (d *ChimeDouble) GetPhoneNumberRequest(i0 *chime.GetPhoneNumberInput) (r0 *request.Request, r1 *chime.GetPhoneNumberOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetPhoneNumberRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*chime.GetPhoneNumberOutput)
	return
}

func (d *ChimeDouble) GetPhoneNumberSettings(i0 *chime.GetPhoneNumberSettingsInput) (r0 *chime.GetPhoneNumberSettingsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetPhoneNumberSettings", i0)
	r0, _ = returns[0].(*chime.GetPhoneNumberSettingsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ChimeDouble) GetPhoneNumberSettingsRequest(i0 *chime.GetPhoneNumberSettingsInput) (r0 *request.Request, r1 *chime.GetPhoneNumberSettingsOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetPhoneNumberSettingsRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*chime.GetPhoneNumberSettingsOutput)
	return
}

func (d *ChimeDouble) GetPhoneNumberSettingsWithContext(i0 context.Context, i1 *chime.GetPhoneNumberSettingsInput, i2 ...request.Option) (r0 *chime.GetPhoneNumberSettingsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetPhoneNumberSettingsWithContext", i0, i1, i2)
	r0, _ = returns[0].(*chime.GetPhoneNumberSettingsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ChimeDouble) fakeGetPhoneNumberSettingsWithContext(ctx context.Context, in *chime.GetPhoneNumberSettingsInput, _ ...request.Option) (*chime.GetPhoneNumberSettingsOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "GetPhoneNumberSettings cancelled", ctx.Err())
	default:
		return d.GetPhoneNumberSettings(in)
	}
}

func (d *ChimeDouble) GetPhoneNumberWithContext(i0 context.Context, i1 *chime.GetPhoneNumberInput, i2 ...request.Option) (r0 *chime.GetPhoneNumberOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetPhoneNumberWithContext", i0, i1, i2)
	r0, _ = returns[0].(*chime.GetPhoneNumberOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ChimeDouble) fakeGetPhoneNumberWithContext(ctx context.Context, in *chime.GetPhoneNumberInput, _ ...request.Option) (*chime.GetPhoneNumberOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "GetPhoneNumber cancelled", ctx.Err())
	default:
		return d.GetPhoneNumber(in)
	}
}

func (d *ChimeDouble) GetRoom(i0 *chime.GetRoomInput) (r0 *chime.GetRoomOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetRoom", i0)
	r0, _ = returns[0].(*chime.GetRoomOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ChimeDouble) GetRoomRequest(i0 *chime.GetRoomInput) (r0 *request.Request, r1 *chime.GetRoomOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetRoomRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*chime.GetRoomOutput)
	return
}

func (d *ChimeDouble) GetRoomWithContext(i0 context.Context, i1 *chime.GetRoomInput, i2 ...request.Option) (r0 *chime.GetRoomOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetRoomWithContext", i0, i1, i2)
	r0, _ = returns[0].(*chime.GetRoomOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ChimeDouble) fakeGetRoomWithContext(ctx context.Context, in *chime.GetRoomInput, _ ...request.Option) (*chime.GetRoomOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "GetRoom cancelled", ctx.Err())
	default:
		return d.GetRoom(in)
	}
}

func (d *ChimeDouble) GetUser(i0 *chime.GetUserInput) (r0 *chime.GetUserOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetUser", i0)
	r0, _ = returns[0].(*chime.GetUserOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ChimeDouble) GetUserRequest(i0 *chime.GetUserInput) (r0 *request.Request, r1 *chime.GetUserOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetUserRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*chime.GetUserOutput)
	return
}

func (d *ChimeDouble) GetUserSettings(i0 *chime.GetUserSettingsInput) (r0 *chime.GetUserSettingsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetUserSettings", i0)
	r0, _ = returns[0].(*chime.GetUserSettingsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ChimeDouble) GetUserSettingsRequest(i0 *chime.GetUserSettingsInput) (r0 *request.Request, r1 *chime.GetUserSettingsOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetUserSettingsRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*chime.GetUserSettingsOutput)
	return
}

func (d *ChimeDouble) GetUserSettingsWithContext(i0 context.Context, i1 *chime.GetUserSettingsInput, i2 ...request.Option) (r0 *chime.GetUserSettingsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetUserSettingsWithContext", i0, i1, i2)
	r0, _ = returns[0].(*chime.GetUserSettingsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ChimeDouble) fakeGetUserSettingsWithContext(ctx context.Context, in *chime.GetUserSettingsInput, _ ...request.Option) (*chime.GetUserSettingsOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "GetUserSettings cancelled", ctx.Err())
	default:
		return d.GetUserSettings(in)
	}
}

func (d *ChimeDouble) GetUserWithContext(i0 context.Context, i1 *chime.GetUserInput, i2 ...request.Option) (r0 *chime.GetUserOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetUserWithContext", i0, i1, i2)
	r0, _ = returns[0].(*chime.GetUserOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ChimeDouble) fakeGetUserWithContext(ctx context.Context, in *chime.GetUserInput, _ ...request.Option) (*chime.GetUserOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "GetUser cancelled", ctx.Err())
	default:
		return d.GetUser(in)
	}
}

func (d *ChimeDouble) GetVoiceConnector(i0 *chime.GetVoiceConnectorInput) (r0 *chime.GetVoiceConnectorOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetVoiceConnector", i0)
	r0, _ = returns[0].(*chime.GetVoiceConnectorOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ChimeDouble) GetVoiceConnectorGroup(i0 *chime.GetVoiceConnectorGroupInput) (r0 *chime.GetVoiceConnectorGroupOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetVoiceConnectorGroup", i0)
	r0, _ = returns[0].(*chime.GetVoiceConnectorGroupOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ChimeDouble) GetVoiceConnectorGroupRequest(i0 *chime.GetVoiceConnectorGroupInput) (r0 *request.Request, r1 *chime.GetVoiceConnectorGroupOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetVoiceConnectorGroupRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*chime.GetVoiceConnectorGroupOutput)
	return
}

func (d *ChimeDouble) GetVoiceConnectorGroupWithContext(i0 context.Context, i1 *chime.GetVoiceConnectorGroupInput, i2 ...request.Option) (r0 *chime.GetVoiceConnectorGroupOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetVoiceConnectorGroupWithContext", i0, i1, i2)
	r0, _ = returns[0].(*chime.GetVoiceConnectorGroupOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ChimeDouble) fakeGetVoiceConnectorGroupWithContext(ctx context.Context, in *chime.GetVoiceConnectorGroupInput, _ ...request.Option) (*chime.GetVoiceConnectorGroupOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "GetVoiceConnectorGroup cancelled", ctx.Err())
	default:
		return d.GetVoiceConnectorGroup(in)
	}
}

func (d *ChimeDouble) GetVoiceConnectorLoggingConfiguration(i0 *chime.GetVoiceConnectorLoggingConfigurationInput) (r0 *chime.GetVoiceConnectorLoggingConfigurationOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetVoiceConnectorLoggingConfiguration", i0)
	r0, _ = returns[0].(*chime.GetVoiceConnectorLoggingConfigurationOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ChimeDouble) GetVoiceConnectorLoggingConfigurationRequest(i0 *chime.GetVoiceConnectorLoggingConfigurationInput) (r0 *request.Request, r1 *chime.GetVoiceConnectorLoggingConfigurationOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetVoiceConnectorLoggingConfigurationRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*chime.GetVoiceConnectorLoggingConfigurationOutput)
	return
}

func (d *ChimeDouble) GetVoiceConnectorLoggingConfigurationWithContext(i0 context.Context, i1 *chime.GetVoiceConnectorLoggingConfigurationInput, i2 ...request.Option) (r0 *chime.GetVoiceConnectorLoggingConfigurationOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetVoiceConnectorLoggingConfigurationWithContext", i0, i1, i2)
	r0, _ = returns[0].(*chime.GetVoiceConnectorLoggingConfigurationOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ChimeDouble) fakeGetVoiceConnectorLoggingConfigurationWithContext(ctx context.Context, in *chime.GetVoiceConnectorLoggingConfigurationInput, _ ...request.Option) (*chime.GetVoiceConnectorLoggingConfigurationOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "GetVoiceConnectorLoggingConfiguration cancelled", ctx.Err())
	default:
		return d.GetVoiceConnectorLoggingConfiguration(in)
	}
}

func (d *ChimeDouble) GetVoiceConnectorOrigination(i0 *chime.GetVoiceConnectorOriginationInput) (r0 *chime.GetVoiceConnectorOriginationOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetVoiceConnectorOrigination", i0)
	r0, _ = returns[0].(*chime.GetVoiceConnectorOriginationOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ChimeDouble) GetVoiceConnectorOriginationRequest(i0 *chime.GetVoiceConnectorOriginationInput) (r0 *request.Request, r1 *chime.GetVoiceConnectorOriginationOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetVoiceConnectorOriginationRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*chime.GetVoiceConnectorOriginationOutput)
	return
}

func (d *ChimeDouble) GetVoiceConnectorOriginationWithContext(i0 context.Context, i1 *chime.GetVoiceConnectorOriginationInput, i2 ...request.Option) (r0 *chime.GetVoiceConnectorOriginationOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetVoiceConnectorOriginationWithContext", i0, i1, i2)
	r0, _ = returns[0].(*chime.GetVoiceConnectorOriginationOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ChimeDouble) fakeGetVoiceConnectorOriginationWithContext(ctx context.Context, in *chime.GetVoiceConnectorOriginationInput, _ ...request.Option) (*chime.GetVoiceConnectorOriginationOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "GetVoiceConnectorOrigination cancelled", ctx.Err())
	default:
		return d.GetVoiceConnectorOrigination(in)
	}
}

func (d *ChimeDouble) GetVoiceConnectorRequest(i0 *chime.GetVoiceConnectorInput) (r0 *request.Request, r1 *chime.GetVoiceConnectorOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetVoiceConnectorRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*chime.GetVoiceConnectorOutput)
	return
}

func (d *ChimeDouble) GetVoiceConnectorStreamingConfiguration(i0 *chime.GetVoiceConnectorStreamingConfigurationInput) (r0 *chime.GetVoiceConnectorStreamingConfigurationOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetVoiceConnectorStreamingConfiguration", i0)
	r0, _ = returns[0].(*chime.GetVoiceConnectorStreamingConfigurationOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ChimeDouble) GetVoiceConnectorStreamingConfigurationRequest(i0 *chime.GetVoiceConnectorStreamingConfigurationInput) (r0 *request.Request, r1 *chime.GetVoiceConnectorStreamingConfigurationOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetVoiceConnectorStreamingConfigurationRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*chime.GetVoiceConnectorStreamingConfigurationOutput)
	return
}

func (d *ChimeDouble) GetVoiceConnectorStreamingConfigurationWithContext(i0 context.Context, i1 *chime.GetVoiceConnectorStreamingConfigurationInput, i2 ...request.Option) (r0 *chime.GetVoiceConnectorStreamingConfigurationOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetVoiceConnectorStreamingConfigurationWithContext", i0, i1, i2)
	r0, _ = returns[0].(*chime.GetVoiceConnectorStreamingConfigurationOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ChimeDouble) fakeGetVoiceConnectorStreamingConfigurationWithContext(ctx context.Context, in *chime.GetVoiceConnectorStreamingConfigurationInput, _ ...request.Option) (*chime.GetVoiceConnectorStreamingConfigurationOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "GetVoiceConnectorStreamingConfiguration cancelled", ctx.Err())
	default:
		return d.GetVoiceConnectorStreamingConfiguration(in)
	}
}

func (d *ChimeDouble) GetVoiceConnectorTermination(i0 *chime.GetVoiceConnectorTerminationInput) (r0 *chime.GetVoiceConnectorTerminationOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetVoiceConnectorTermination", i0)
	r0, _ = returns[0].(*chime.GetVoiceConnectorTerminationOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ChimeDouble) GetVoiceConnectorTerminationHealth(i0 *chime.GetVoiceConnectorTerminationHealthInput) (r0 *chime.GetVoiceConnectorTerminationHealthOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetVoiceConnectorTerminationHealth", i0)
	r0, _ = returns[0].(*chime.GetVoiceConnectorTerminationHealthOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ChimeDouble) GetVoiceConnectorTerminationHealthRequest(i0 *chime.GetVoiceConnectorTerminationHealthInput) (r0 *request.Request, r1 *chime.GetVoiceConnectorTerminationHealthOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetVoiceConnectorTerminationHealthRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*chime.GetVoiceConnectorTerminationHealthOutput)
	return
}

func (d *ChimeDouble) GetVoiceConnectorTerminationHealthWithContext(i0 context.Context, i1 *chime.GetVoiceConnectorTerminationHealthInput, i2 ...request.Option) (r0 *chime.GetVoiceConnectorTerminationHealthOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetVoiceConnectorTerminationHealthWithContext", i0, i1, i2)
	r0, _ = returns[0].(*chime.GetVoiceConnectorTerminationHealthOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ChimeDouble) fakeGetVoiceConnectorTerminationHealthWithContext(ctx context.Context, in *chime.GetVoiceConnectorTerminationHealthInput, _ ...request.Option) (*chime.GetVoiceConnectorTerminationHealthOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "GetVoiceConnectorTerminationHealth cancelled", ctx.Err())
	default:
		return d.GetVoiceConnectorTerminationHealth(in)
	}
}

func (d *ChimeDouble) GetVoiceConnectorTerminationRequest(i0 *chime.GetVoiceConnectorTerminationInput) (r0 *request.Request, r1 *chime.GetVoiceConnectorTerminationOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetVoiceConnectorTerminationRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*chime.GetVoiceConnectorTerminationOutput)
	return
}

func (d *ChimeDouble) GetVoiceConnectorTerminationWithContext(i0 context.Context, i1 *chime.GetVoiceConnectorTerminationInput, i2 ...request.Option) (r0 *chime.GetVoiceConnectorTerminationOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetVoiceConnectorTerminationWithContext", i0, i1, i2)
	r0, _ = returns[0].(*chime.GetVoiceConnectorTerminationOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ChimeDouble) fakeGetVoiceConnectorTerminationWithContext(ctx context.Context, in *chime.GetVoiceConnectorTerminationInput, _ ...request.Option) (*chime.GetVoiceConnectorTerminationOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "GetVoiceConnectorTermination cancelled", ctx.Err())
	default:
		return d.GetVoiceConnectorTermination(in)
	}
}

func (d *ChimeDouble) GetVoiceConnectorWithContext(i0 context.Context, i1 *chime.GetVoiceConnectorInput, i2 ...request.Option) (r0 *chime.GetVoiceConnectorOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetVoiceConnectorWithContext", i0, i1, i2)
	r0, _ = returns[0].(*chime.GetVoiceConnectorOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ChimeDouble) fakeGetVoiceConnectorWithContext(ctx context.Context, in *chime.GetVoiceConnectorInput, _ ...request.Option) (*chime.GetVoiceConnectorOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "GetVoiceConnector cancelled", ctx.Err())
	default:
		return d.GetVoiceConnector(in)
	}
}

func (d *ChimeDouble) InviteUsers(i0 *chime.InviteUsersInput) (r0 *chime.InviteUsersOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("InviteUsers", i0)
	r0, _ = returns[0].(*chime.InviteUsersOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ChimeDouble) InviteUsersRequest(i0 *chime.InviteUsersInput) (r0 *request.Request, r1 *chime.InviteUsersOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("InviteUsersRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*chime.InviteUsersOutput)
	return
}

func (d *ChimeDouble) InviteUsersWithContext(i0 context.Context, i1 *chime.InviteUsersInput, i2 ...request.Option) (r0 *chime.InviteUsersOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("InviteUsersWithContext", i0, i1, i2)
	r0, _ = returns[0].(*chime.InviteUsersOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ChimeDouble) fakeInviteUsersWithContext(ctx context.Context, in *chime.InviteUsersInput, _ ...request.Option) (*chime.InviteUsersOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "InviteUsers cancelled", ctx.Err())
	default:
		return d.InviteUsers(in)
	}
}

func (d *ChimeDouble) ListAccounts(i0 *chime.ListAccountsInput) (r0 *chime.ListAccountsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListAccounts", i0)
	r0, _ = returns[0].(*chime.ListAccountsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ChimeDouble) ListAccountsPages(i0 *chime.ListAccountsInput, i1 func(*chime.ListAccountsOutput, bool) bool) (r0 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListAccountsPages", i0, i1)
	r0, _ = returns[0].(error)
	return
}

func (d *ChimeDouble) fakeListAccountsPages(in *chime.ListAccountsInput, pager func(*chime.ListAccountsOutput, bool) (shouldContinue bool)) error {
	return d.Paginate("ListAccounts", paginators, in, pager)
}

func (d *ChimeDouble) ListAccountsPagesWithContext(i0 context.Context, i1 *chime.ListAccountsInput, i2 func(*chime.ListAccountsOutput, bool) bool, i3 ...request.Option) (r0 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListAccountsPagesWithContext", i0, i1, i2, i3)
	r0, _ = returns[0].(error)
	return
}

func (d *ChimeDouble) fakeListAccountsPagesWithContext(ctx context.Context, in *chime.ListAccountsInput, pager func(*chime.ListAccountsOutput, bool) (shouldContinue bool), options ...request.Option) error {
	return d.PaginateWithContext("ListAccounts", paginators, ctx, in, pager, options...)
}

func (d *ChimeDouble) ListAccountsRequest(i0 *chime.ListAccountsInput) (r0 *request.Request, r1 *chime.ListAccountsOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListAccountsRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*chime.ListAccountsOutput)
	return
}

func (d *ChimeDouble) ListAccountsWithContext(i0 context.Context, i1 *chime.ListAccountsInput, i2 ...request.Option) (r0 *chime.ListAccountsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListAccountsWithContext", i0, i1, i2)
	r0, _ = returns[0].(*chime.ListAccountsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ChimeDouble) fakeListAccountsWithContext(ctx context.Context, in *chime.ListAccountsInput, _ ...request.Option) (*chime.ListAccountsOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "ListAccounts cancelled", ctx.Err())
	default:
		return d.ListAccounts(in)
	}
}

func (d *ChimeDouble) ListAttendees(i0 *chime.ListAttendeesInput) (r0 *chime.ListAttendeesOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListAttendees", i0)
	r0, _ = returns[0].(*chime.ListAttendeesOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ChimeDouble) ListAttendeesPages(i0 *chime.ListAttendeesInput, i1 func(*chime.ListAttendeesOutput, bool) bool) (r0 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListAttendeesPages", i0, i1)
	r0, _ = returns[0].(error)
	return
}

func (d *ChimeDouble) fakeListAttendeesPages(in *chime.ListAttendeesInput, pager func(*chime.ListAttendeesOutput, bool) (shouldContinue bool)) error {
	return d.Paginate("ListAttendees", paginators, in, pager)
}

func (d *ChimeDouble) ListAttendeesPagesWithContext(i0 context.Context, i1 *chime.ListAttendeesInput, i2 func(*chime.ListAttendeesOutput, bool) bool, i3 ...request.Option) (r0 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListAttendeesPagesWithContext", i0, i1, i2, i3)
	r0, _ = returns[0].(error)
	return
}

func (d *ChimeDouble) fakeListAttendeesPagesWithContext(ctx context.Context, in *chime.ListAttendeesInput, pager func(*chime.ListAttendeesOutput, bool) (shouldContinue bool), options ...request.Option) error {
	return d.PaginateWithContext("ListAttendees", paginators, ctx, in, pager, options...)
}

func (d *ChimeDouble) ListAttendeesRequest(i0 *chime.ListAttendeesInput) (r0 *request.Request, r1 *chime.ListAttendeesOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListAttendeesRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*chime.ListAttendeesOutput)
	return
}

func (d *ChimeDouble) ListAttendeesWithContext(i0 context.Context, i1 *chime.ListAttendeesInput, i2 ...request.Option) (r0 *chime.ListAttendeesOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListAttendeesWithContext", i0, i1, i2)
	r0, _ = returns[0].(*chime.ListAttendeesOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ChimeDouble) fakeListAttendeesWithContext(ctx context.Context, in *chime.ListAttendeesInput, _ ...request.Option) (*chime.ListAttendeesOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "ListAttendees cancelled", ctx.Err())
	default:
		return d.ListAttendees(in)
	}
}

func (d *ChimeDouble) ListBots(i0 *chime.ListBotsInput) (r0 *chime.ListBotsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListBots", i0)
	r0, _ = returns[0].(*chime.ListBotsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ChimeDouble) ListBotsPages(i0 *chime.ListBotsInput, i1 func(*chime.ListBotsOutput, bool) bool) (r0 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListBotsPages", i0, i1)
	r0, _ = returns[0].(error)
	return
}

func (d *ChimeDouble) fakeListBotsPages(in *chime.ListBotsInput, pager func(*chime.ListBotsOutput, bool) (shouldContinue bool)) error {
	return d.Paginate("ListBots", paginators, in, pager)
}

func (d *ChimeDouble) ListBotsPagesWithContext(i0 context.Context, i1 *chime.ListBotsInput, i2 func(*chime.ListBotsOutput, bool) bool, i3 ...request.Option) (r0 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListBotsPagesWithContext", i0, i1, i2, i3)
	r0, _ = returns[0].(error)
	return
}

func (d *ChimeDouble) fakeListBotsPagesWithContext(ctx context.Context, in *chime.ListBotsInput, pager func(*chime.ListBotsOutput, bool) (shouldContinue bool), options ...request.Option) error {
	return d.PaginateWithContext("ListBots", paginators, ctx, in, pager, options...)
}

func (d *ChimeDouble) ListBotsRequest(i0 *chime.ListBotsInput) (r0 *request.Request, r1 *chime.ListBotsOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListBotsRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*chime.ListBotsOutput)
	return
}

func (d *ChimeDouble) ListBotsWithContext(i0 context.Context, i1 *chime.ListBotsInput, i2 ...request.Option) (r0 *chime.ListBotsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListBotsWithContext", i0, i1, i2)
	r0, _ = returns[0].(*chime.ListBotsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ChimeDouble) fakeListBotsWithContext(ctx context.Context, in *chime.ListBotsInput, _ ...request.Option) (*chime.ListBotsOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "ListBots cancelled", ctx.Err())
	default:
		return d.ListBots(in)
	}
}

func (d *ChimeDouble) ListMeetings(i0 *chime.ListMeetingsInput) (r0 *chime.ListMeetingsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListMeetings", i0)
	r0, _ = returns[0].(*chime.ListMeetingsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ChimeDouble) ListMeetingsPages(i0 *chime.ListMeetingsInput, i1 func(*chime.ListMeetingsOutput, bool) bool) (r0 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListMeetingsPages", i0, i1)
	r0, _ = returns[0].(error)
	return
}

func (d *ChimeDouble) fakeListMeetingsPages(in *chime.ListMeetingsInput, pager func(*chime.ListMeetingsOutput, bool) (shouldContinue bool)) error {
	return d.Paginate("ListMeetings", paginators, in, pager)
}

func (d *ChimeDouble) ListMeetingsPagesWithContext(i0 context.Context, i1 *chime.ListMeetingsInput, i2 func(*chime.ListMeetingsOutput, bool) bool, i3 ...request.Option) (r0 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListMeetingsPagesWithContext", i0, i1, i2, i3)
	r0, _ = returns[0].(error)
	return
}

func (d *ChimeDouble) fakeListMeetingsPagesWithContext(ctx context.Context, in *chime.ListMeetingsInput, pager func(*chime.ListMeetingsOutput, bool) (shouldContinue bool), options ...request.Option) error {
	return d.PaginateWithContext("ListMeetings", paginators, ctx, in, pager, options...)
}

func (d *ChimeDouble) ListMeetingsRequest(i0 *chime.ListMeetingsInput) (r0 *request.Request, r1 *chime.ListMeetingsOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListMeetingsRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*chime.ListMeetingsOutput)
	return
}

func (d *ChimeDouble) ListMeetingsWithContext(i0 context.Context, i1 *chime.ListMeetingsInput, i2 ...request.Option) (r0 *chime.ListMeetingsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListMeetingsWithContext", i0, i1, i2)
	r0, _ = returns[0].(*chime.ListMeetingsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ChimeDouble) fakeListMeetingsWithContext(ctx context.Context, in *chime.ListMeetingsInput, _ ...request.Option) (*chime.ListMeetingsOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "ListMeetings cancelled", ctx.Err())
	default:
		return d.ListMeetings(in)
	}
}

func (d *ChimeDouble) ListPhoneNumberOrders(i0 *chime.ListPhoneNumberOrdersInput) (r0 *chime.ListPhoneNumberOrdersOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListPhoneNumberOrders", i0)
	r0, _ = returns[0].(*chime.ListPhoneNumberOrdersOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ChimeDouble) ListPhoneNumberOrdersPages(i0 *chime.ListPhoneNumberOrdersInput, i1 func(*chime.ListPhoneNumberOrdersOutput, bool) bool) (r0 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListPhoneNumberOrdersPages", i0, i1)
	r0, _ = returns[0].(error)
	return
}

func (d *ChimeDouble) fakeListPhoneNumberOrdersPages(in *chime.ListPhoneNumberOrdersInput, pager func(*chime.ListPhoneNumberOrdersOutput, bool) (shouldContinue bool)) error {
	return d.Paginate("ListPhoneNumberOrders", paginators, in, pager)
}

func (d *ChimeDouble) ListPhoneNumberOrdersPagesWithContext(i0 context.Context, i1 *chime.ListPhoneNumberOrdersInput, i2 func(*chime.ListPhoneNumberOrdersOutput, bool) bool, i3 ...request.Option) (r0 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListPhoneNumberOrdersPagesWithContext", i0, i1, i2, i3)
	r0, _ = returns[0].(error)
	return
}

func (d *ChimeDouble) fakeListPhoneNumberOrdersPagesWithContext(ctx context.Context, in *chime.ListPhoneNumberOrdersInput, pager func(*chime.ListPhoneNumberOrdersOutput, bool) (shouldContinue bool), options ...request.Option) error {
	return d.PaginateWithContext("ListPhoneNumberOrders", paginators, ctx, in, pager, options...)
}

func (d *ChimeDouble) ListPhoneNumberOrdersRequest(i0 *chime.ListPhoneNumberOrdersInput) (r0 *request.Request, r1 *chime.ListPhoneNumberOrdersOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListPhoneNumberOrdersRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*chime.ListPhoneNumberOrdersOutput)
	return
}

func (d *ChimeDouble) ListPhoneNumberOrdersWithContext(i0 context.Context, i1 *chime.ListPhoneNumberOrdersInput, i2 ...request.Option) (r0 *chime.ListPhoneNumberOrdersOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListPhoneNumberOrdersWithContext", i0, i1, i2)
	r0, _ = returns[0].(*chime.ListPhoneNumberOrdersOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ChimeDouble) fakeListPhoneNumberOrdersWithContext(ctx context.Context, in *chime.ListPhoneNumberOrdersInput, _ ...request.Option) (*chime.ListPhoneNumberOrdersOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "ListPhoneNumberOrders cancelled", ctx.Err())
	default:
		return d.ListPhoneNumberOrders(in)
	}
}

func (d *ChimeDouble) ListPhoneNumbers(i0 *chime.ListPhoneNumbersInput) (r0 *chime.ListPhoneNumbersOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListPhoneNumbers", i0)
	r0, _ = returns[0].(*chime.ListPhoneNumbersOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ChimeDouble) ListPhoneNumbersPages(i0 *chime.ListPhoneNumbersInput, i1 func(*chime.ListPhoneNumbersOutput, bool) bool) (r0 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListPhoneNumbersPages", i0, i1)
	r0, _ = returns[0].(error)
	return
}

func (d *ChimeDouble) fakeListPhoneNumbersPages(in *chime.ListPhoneNumbersInput, pager func(*chime.ListPhoneNumbersOutput, bool) (shouldContinue bool)) error {
	return d.Paginate("ListPhoneNumbers", paginators, in, pager)
}

func (d *ChimeDouble) ListPhoneNumbersPagesWithContext(i0 context.Context, i1 *chime.ListPhoneNumbersInput, i2 func(*chime.ListPhoneNumbersOutput, bool) bool, i3 ...request.Option) (r0 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListPhoneNumbersPagesWithContext", i0, i1, i2, i3)
	r0, _ = returns[0].(error)
	return
}

func (d *ChimeDouble) fakeListPhoneNumbersPagesWithContext(ctx context.Context, in *chime.ListPhoneNumbersInput, pager func(*chime.ListPhoneNumbersOutput, bool) (shouldContinue bool), options ...request.Option) error {
	return d.PaginateWithContext("ListPhoneNumbers", paginators, ctx, in, pager, options...)
}

func (d *ChimeDouble) ListPhoneNumbersRequest(i0 *chime.ListPhoneNumbersInput) (r0 *request.Request, r1 *chime.ListPhoneNumbersOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListPhoneNumbersRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*chime.ListPhoneNumbersOutput)
	return
}

func (d *ChimeDouble) ListPhoneNumbersWithContext(i0 context.Context, i1 *chime.ListPhoneNumbersInput, i2 ...request.Option) (r0 *chime.ListPhoneNumbersOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListPhoneNumbersWithContext", i0, i1, i2)
	r0, _ = returns[0].(*chime.ListPhoneNumbersOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ChimeDouble) fakeListPhoneNumbersWithContext(ctx context.Context, in *chime.ListPhoneNumbersInput, _ ...request.Option) (*chime.ListPhoneNumbersOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "ListPhoneNumbers cancelled", ctx.Err())
	default:
		return d.ListPhoneNumbers(in)
	}
}

func (d *ChimeDouble) ListRoomMemberships(i0 *chime.ListRoomMembershipsInput) (r0 *chime.ListRoomMembershipsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListRoomMemberships", i0)
	r0, _ = returns[0].(*chime.ListRoomMembershipsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ChimeDouble) ListRoomMembershipsPages(i0 *chime.ListRoomMembershipsInput, i1 func(*chime.ListRoomMembershipsOutput, bool) bool) (r0 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListRoomMembershipsPages", i0, i1)
	r0, _ = returns[0].(error)
	return
}

func (d *ChimeDouble) fakeListRoomMembershipsPages(in *chime.ListRoomMembershipsInput, pager func(*chime.ListRoomMembershipsOutput, bool) (shouldContinue bool)) error {
	return d.Paginate("ListRoomMemberships", paginators, in, pager)
}

func (d *ChimeDouble) ListRoomMembershipsPagesWithContext(i0 context.Context, i1 *chime.ListRoomMembershipsInput, i2 func(*chime.ListRoomMembershipsOutput, bool) bool, i3 ...request.Option) (r0 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListRoomMembershipsPagesWithContext", i0, i1, i2, i3)
	r0, _ = returns[0].(error)
	return
}

func (d *ChimeDouble) fakeListRoomMembershipsPagesWithContext(ctx context.Context, in *chime.ListRoomMembershipsInput, pager func(*chime.ListRoomMembershipsOutput, bool) (shouldContinue bool), options ...request.Option) error {
	return d.PaginateWithContext("ListRoomMemberships", paginators, ctx, in, pager, options...)
}

func (d *ChimeDouble) ListRoomMembershipsRequest(i0 *chime.ListRoomMembershipsInput) (r0 *request.Request, r1 *chime.ListRoomMembershipsOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListRoomMembershipsRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*chime.ListRoomMembershipsOutput)
	return
}

func (d *ChimeDouble) ListRoomMembershipsWithContext(i0 context.Context, i1 *chime.ListRoomMembershipsInput, i2 ...request.Option) (r0 *chime.ListRoomMembershipsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListRoomMembershipsWithContext", i0, i1, i2)
	r0, _ = returns[0].(*chime.ListRoomMembershipsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ChimeDouble) fakeListRoomMembershipsWithContext(ctx context.Context, in *chime.ListRoomMembershipsInput, _ ...request.Option) (*chime.ListRoomMembershipsOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "ListRoomMemberships cancelled", ctx.Err())
	default:
		return d.ListRoomMemberships(in)
	}
}

func (d *ChimeDouble) ListRooms(i0 *chime.ListRoomsInput) (r0 *chime.ListRoomsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListRooms", i0)
	r0, _ = returns[0].(*chime.ListRoomsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ChimeDouble) ListRoomsPages(i0 *chime.ListRoomsInput, i1 func(*chime.ListRoomsOutput, bool) bool) (r0 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListRoomsPages", i0, i1)
	r0, _ = returns[0].(error)
	return
}

func (d *ChimeDouble) fakeListRoomsPages(in *chime.ListRoomsInput, pager func(*chime.ListRoomsOutput, bool) (shouldContinue bool)) error {
	return d.Paginate("ListRooms", paginators, in, pager)
}

func (d *ChimeDouble) ListRoomsPagesWithContext(i0 context.Context, i1 *chime.ListRoomsInput, i2 func(*chime.ListRoomsOutput, bool) bool, i3 ...request.Option) (r0 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListRoomsPagesWithContext", i0, i1, i2, i3)
	r0, _ = returns[0].(error)
	return
}

func (d *ChimeDouble) fakeListRoomsPagesWithContext(ctx context.Context, in *chime.ListRoomsInput, pager func(*chime.ListRoomsOutput, bool) (shouldContinue bool), options ...request.Option) error {
	return d.PaginateWithContext("ListRooms", paginators, ctx, in, pager, options...)
}

func (d *ChimeDouble) ListRoomsRequest(i0 *chime.ListRoomsInput) (r0 *request.Request, r1 *chime.ListRoomsOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListRoomsRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*chime.ListRoomsOutput)
	return
}

func (d *ChimeDouble) ListRoomsWithContext(i0 context.Context, i1 *chime.ListRoomsInput, i2 ...request.Option) (r0 *chime.ListRoomsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListRoomsWithContext", i0, i1, i2)
	r0, _ = returns[0].(*chime.ListRoomsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ChimeDouble) fakeListRoomsWithContext(ctx context.Context, in *chime.ListRoomsInput, _ ...request.Option) (*chime.ListRoomsOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "ListRooms cancelled", ctx.Err())
	default:
		return d.ListRooms(in)
	}
}

func (d *ChimeDouble) ListUsers(i0 *chime.ListUsersInput) (r0 *chime.ListUsersOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListUsers", i0)
	r0, _ = returns[0].(*chime.ListUsersOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ChimeDouble) ListUsersPages(i0 *chime.ListUsersInput, i1 func(*chime.ListUsersOutput, bool) bool) (r0 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListUsersPages", i0, i1)
	r0, _ = returns[0].(error)
	return
}

func (d *ChimeDouble) fakeListUsersPages(in *chime.ListUsersInput, pager func(*chime.ListUsersOutput, bool) (shouldContinue bool)) error {
	return d.Paginate("ListUsers", paginators, in, pager)
}

func (d *ChimeDouble) ListUsersPagesWithContext(i0 context.Context, i1 *chime.ListUsersInput, i2 func(*chime.ListUsersOutput, bool) bool, i3 ...request.Option) (r0 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListUsersPagesWithContext", i0, i1, i2, i3)
	r0, _ = returns[0].(error)
	return
}

func (d *ChimeDouble) fakeListUsersPagesWithContext(ctx context.Context, in *chime.ListUsersInput, pager func(*chime.ListUsersOutput, bool) (shouldContinue bool), options ...request.Option) error {
	return d.PaginateWithContext("ListUsers", paginators, ctx, in, pager, options...)
}

func (d *ChimeDouble) ListUsersRequest(i0 *chime.ListUsersInput) (r0 *request.Request, r1 *chime.ListUsersOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListUsersRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*chime.ListUsersOutput)
	return
}

func (d *ChimeDouble) ListUsersWithContext(i0 context.Context, i1 *chime.ListUsersInput, i2 ...request.Option) (r0 *chime.ListUsersOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListUsersWithContext", i0, i1, i2)
	r0, _ = returns[0].(*chime.ListUsersOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ChimeDouble) fakeListUsersWithContext(ctx context.Context, in *chime.ListUsersInput, _ ...request.Option) (*chime.ListUsersOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "ListUsers cancelled", ctx.Err())
	default:
		return d.ListUsers(in)
	}
}

func (d *ChimeDouble) ListVoiceConnectorGroups(i0 *chime.ListVoiceConnectorGroupsInput) (r0 *chime.ListVoiceConnectorGroupsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListVoiceConnectorGroups", i0)
	r0, _ = returns[0].(*chime.ListVoiceConnectorGroupsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ChimeDouble) ListVoiceConnectorGroupsPages(i0 *chime.ListVoiceConnectorGroupsInput, i1 func(*chime.ListVoiceConnectorGroupsOutput, bool) bool) (r0 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListVoiceConnectorGroupsPages", i0, i1)
	r0, _ = returns[0].(error)
	return
}

func (d *ChimeDouble) fakeListVoiceConnectorGroupsPages(in *chime.ListVoiceConnectorGroupsInput, pager func(*chime.ListVoiceConnectorGroupsOutput, bool) (shouldContinue bool)) error {
	return d.Paginate("ListVoiceConnectorGroups", paginators, in, pager)
}

func (d *ChimeDouble) ListVoiceConnectorGroupsPagesWithContext(i0 context.Context, i1 *chime.ListVoiceConnectorGroupsInput, i2 func(*chime.ListVoiceConnectorGroupsOutput, bool) bool, i3 ...request.Option) (r0 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListVoiceConnectorGroupsPagesWithContext", i0, i1, i2, i3)
	r0, _ = returns[0].(error)
	return
}

func (d *ChimeDouble) fakeListVoiceConnectorGroupsPagesWithContext(ctx context.Context, in *chime.ListVoiceConnectorGroupsInput, pager func(*chime.ListVoiceConnectorGroupsOutput, bool) (shouldContinue bool), options ...request.Option) error {
	return d.PaginateWithContext("ListVoiceConnectorGroups", paginators, ctx, in, pager, options...)
}

func (d *ChimeDouble) ListVoiceConnectorGroupsRequest(i0 *chime.ListVoiceConnectorGroupsInput) (r0 *request.Request, r1 *chime.ListVoiceConnectorGroupsOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListVoiceConnectorGroupsRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*chime.ListVoiceConnectorGroupsOutput)
	return
}

func (d *ChimeDouble) ListVoiceConnectorGroupsWithContext(i0 context.Context, i1 *chime.ListVoiceConnectorGroupsInput, i2 ...request.Option) (r0 *chime.ListVoiceConnectorGroupsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListVoiceConnectorGroupsWithContext", i0, i1, i2)
	r0, _ = returns[0].(*chime.ListVoiceConnectorGroupsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ChimeDouble) fakeListVoiceConnectorGroupsWithContext(ctx context.Context, in *chime.ListVoiceConnectorGroupsInput, _ ...request.Option) (*chime.ListVoiceConnectorGroupsOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "ListVoiceConnectorGroups cancelled", ctx.Err())
	default:
		return d.ListVoiceConnectorGroups(in)
	}
}

func (d *ChimeDouble) ListVoiceConnectorTerminationCredentials(i0 *chime.ListVoiceConnectorTerminationCredentialsInput) (r0 *chime.ListVoiceConnectorTerminationCredentialsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListVoiceConnectorTerminationCredentials", i0)
	r0, _ = returns[0].(*chime.ListVoiceConnectorTerminationCredentialsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ChimeDouble) ListVoiceConnectorTerminationCredentialsRequest(i0 *chime.ListVoiceConnectorTerminationCredentialsInput) (r0 *request.Request, r1 *chime.ListVoiceConnectorTerminationCredentialsOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListVoiceConnectorTerminationCredentialsRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*chime.ListVoiceConnectorTerminationCredentialsOutput)
	return
}

func (d *ChimeDouble) ListVoiceConnectorTerminationCredentialsWithContext(i0 context.Context, i1 *chime.ListVoiceConnectorTerminationCredentialsInput, i2 ...request.Option) (r0 *chime.ListVoiceConnectorTerminationCredentialsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListVoiceConnectorTerminationCredentialsWithContext", i0, i1, i2)
	r0, _ = returns[0].(*chime.ListVoiceConnectorTerminationCredentialsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ChimeDouble) fakeListVoiceConnectorTerminationCredentialsWithContext(ctx context.Context, in *chime.ListVoiceConnectorTerminationCredentialsInput, _ ...request.Option) (*chime.ListVoiceConnectorTerminationCredentialsOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "ListVoiceConnectorTerminationCredentials cancelled", ctx.Err())
	default:
		return d.ListVoiceConnectorTerminationCredentials(in)
	}
}

func (d *ChimeDouble) ListVoiceConnectors(i0 *chime.ListVoiceConnectorsInput) (r0 *chime.ListVoiceConnectorsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListVoiceConnectors", i0)
	r0, _ = returns[0].(*chime.ListVoiceConnectorsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ChimeDouble) ListVoiceConnectorsPages(i0 *chime.ListVoiceConnectorsInput, i1 func(*chime.ListVoiceConnectorsOutput, bool) bool) (r0 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListVoiceConnectorsPages", i0, i1)
	r0, _ = returns[0].(error)
	return
}

func (d *ChimeDouble) fakeListVoiceConnectorsPages(in *chime.ListVoiceConnectorsInput, pager func(*chime.ListVoiceConnectorsOutput, bool) (shouldContinue bool)) error {
	return d.Paginate("ListVoiceConnectors", paginators, in, pager)
}

func (d *ChimeDouble) ListVoiceConnectorsPagesWithContext(i0 context.Context, i1 *chime.ListVoiceConnectorsInput, i2 func(*chime.ListVoiceConnectorsOutput, bool) bool, i3 ...request.Option) (r0 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListVoiceConnectorsPagesWithContext", i0, i1, i2, i3)
	r0, _ = returns[0].(error)
	return
}

func (d *ChimeDouble) fakeListVoiceConnectorsPagesWithContext(ctx context.Context, in *chime.ListVoiceConnectorsInput, pager func(*chime.ListVoiceConnectorsOutput, bool) (shouldContinue bool), options ...request.Option) error {
	return d.PaginateWithContext("ListVoiceConnectors", paginators, ctx, in, pager, options...)
}

func (d *ChimeDouble) ListVoiceConnectorsRequest(i0 *chime.ListVoiceConnectorsInput) (r0 *request.Request, r1 *chime.ListVoiceConnectorsOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListVoiceConnectorsRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*chime.ListVoiceConnectorsOutput)
	return
}

func (d *ChimeDouble) ListVoiceConnectorsWithContext(i0 context.Context, i1 *chime.ListVoiceConnectorsInput, i2 ...request.Option) (r0 *chime.ListVoiceConnectorsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListVoiceConnectorsWithContext", i0, i1, i2)
	r0, _ = returns[0].(*chime.ListVoiceConnectorsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ChimeDouble) fakeListVoiceConnectorsWithContext(ctx context.Context, in *chime.ListVoiceConnectorsInput, _ ...request.Option) (*chime.ListVoiceConnectorsOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "ListVoiceConnectors cancelled", ctx.Err())
	default:
		return d.ListVoiceConnectors(in)
	}
}

func (d *ChimeDouble) LogoutUser(i0 *chime.LogoutUserInput) (r0 *chime.LogoutUserOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("LogoutUser", i0)
	r0, _ = returns[0].(*chime.LogoutUserOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ChimeDouble) LogoutUserRequest(i0 *chime.LogoutUserInput) (r0 *request.Request, r1 *chime.LogoutUserOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("LogoutUserRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*chime.LogoutUserOutput)
	return
}

func (d *ChimeDouble) LogoutUserWithContext(i0 context.Context, i1 *chime.LogoutUserInput, i2 ...request.Option) (r0 *chime.LogoutUserOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("LogoutUserWithContext", i0, i1, i2)
	r0, _ = returns[0].(*chime.LogoutUserOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ChimeDouble) fakeLogoutUserWithContext(ctx context.Context, in *chime.LogoutUserInput, _ ...request.Option) (*chime.LogoutUserOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "LogoutUser cancelled", ctx.Err())
	default:
		return d.LogoutUser(in)
	}
}

func (d *ChimeDouble) PutEventsConfiguration(i0 *chime.PutEventsConfigurationInput) (r0 *chime.PutEventsConfigurationOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("PutEventsConfiguration", i0)
	r0, _ = returns[0].(*chime.PutEventsConfigurationOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ChimeDouble) PutEventsConfigurationRequest(i0 *chime.PutEventsConfigurationInput) (r0 *request.Request, r1 *chime.PutEventsConfigurationOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("PutEventsConfigurationRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*chime.PutEventsConfigurationOutput)
	return
}

func (d *ChimeDouble) PutEventsConfigurationWithContext(i0 context.Context, i1 *chime.PutEventsConfigurationInput, i2 ...request.Option) (r0 *chime.PutEventsConfigurationOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("PutEventsConfigurationWithContext", i0, i1, i2)
	r0, _ = returns[0].(*chime.PutEventsConfigurationOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ChimeDouble) fakePutEventsConfigurationWithContext(ctx context.Context, in *chime.PutEventsConfigurationInput, _ ...request.Option) (*chime.PutEventsConfigurationOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "PutEventsConfiguration cancelled", ctx.Err())
	default:
		return d.PutEventsConfiguration(in)
	}
}

func (d *ChimeDouble) PutVoiceConnectorLoggingConfiguration(i0 *chime.PutVoiceConnectorLoggingConfigurationInput) (r0 *chime.PutVoiceConnectorLoggingConfigurationOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("PutVoiceConnectorLoggingConfiguration", i0)
	r0, _ = returns[0].(*chime.PutVoiceConnectorLoggingConfigurationOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ChimeDouble) PutVoiceConnectorLoggingConfigurationRequest(i0 *chime.PutVoiceConnectorLoggingConfigurationInput) (r0 *request.Request, r1 *chime.PutVoiceConnectorLoggingConfigurationOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("PutVoiceConnectorLoggingConfigurationRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*chime.PutVoiceConnectorLoggingConfigurationOutput)
	return
}

func (d *ChimeDouble) PutVoiceConnectorLoggingConfigurationWithContext(i0 context.Context, i1 *chime.PutVoiceConnectorLoggingConfigurationInput, i2 ...request.Option) (r0 *chime.PutVoiceConnectorLoggingConfigurationOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("PutVoiceConnectorLoggingConfigurationWithContext", i0, i1, i2)
	r0, _ = returns[0].(*chime.PutVoiceConnectorLoggingConfigurationOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ChimeDouble) fakePutVoiceConnectorLoggingConfigurationWithContext(ctx context.Context, in *chime.PutVoiceConnectorLoggingConfigurationInput, _ ...request.Option) (*chime.PutVoiceConnectorLoggingConfigurationOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "PutVoiceConnectorLoggingConfiguration cancelled", ctx.Err())
	default:
		return d.PutVoiceConnectorLoggingConfiguration(in)
	}
}

func (d *ChimeDouble) PutVoiceConnectorOrigination(i0 *chime.PutVoiceConnectorOriginationInput) (r0 *chime.PutVoiceConnectorOriginationOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("PutVoiceConnectorOrigination", i0)
	r0, _ = returns[0].(*chime.PutVoiceConnectorOriginationOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ChimeDouble) PutVoiceConnectorOriginationRequest(i0 *chime.PutVoiceConnectorOriginationInput) (r0 *request.Request, r1 *chime.PutVoiceConnectorOriginationOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("PutVoiceConnectorOriginationRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*chime.PutVoiceConnectorOriginationOutput)
	return
}

func (d *ChimeDouble) PutVoiceConnectorOriginationWithContext(i0 context.Context, i1 *chime.PutVoiceConnectorOriginationInput, i2 ...request.Option) (r0 *chime.PutVoiceConnectorOriginationOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("PutVoiceConnectorOriginationWithContext", i0, i1, i2)
	r0, _ = returns[0].(*chime.PutVoiceConnectorOriginationOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ChimeDouble) fakePutVoiceConnectorOriginationWithContext(ctx context.Context, in *chime.PutVoiceConnectorOriginationInput, _ ...request.Option) (*chime.PutVoiceConnectorOriginationOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "PutVoiceConnectorOrigination cancelled", ctx.Err())
	default:
		return d.PutVoiceConnectorOrigination(in)
	}
}

func (d *ChimeDouble) PutVoiceConnectorStreamingConfiguration(i0 *chime.PutVoiceConnectorStreamingConfigurationInput) (r0 *chime.PutVoiceConnectorStreamingConfigurationOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("PutVoiceConnectorStreamingConfiguration", i0)
	r0, _ = returns[0].(*chime.PutVoiceConnectorStreamingConfigurationOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ChimeDouble) PutVoiceConnectorStreamingConfigurationRequest(i0 *chime.PutVoiceConnectorStreamingConfigurationInput) (r0 *request.Request, r1 *chime.PutVoiceConnectorStreamingConfigurationOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("PutVoiceConnectorStreamingConfigurationRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*chime.PutVoiceConnectorStreamingConfigurationOutput)
	return
}

func (d *ChimeDouble) PutVoiceConnectorStreamingConfigurationWithContext(i0 context.Context, i1 *chime.PutVoiceConnectorStreamingConfigurationInput, i2 ...request.Option) (r0 *chime.PutVoiceConnectorStreamingConfigurationOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("PutVoiceConnectorStreamingConfigurationWithContext", i0, i1, i2)
	r0, _ = returns[0].(*chime.PutVoiceConnectorStreamingConfigurationOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ChimeDouble) fakePutVoiceConnectorStreamingConfigurationWithContext(ctx context.Context, in *chime.PutVoiceConnectorStreamingConfigurationInput, _ ...request.Option) (*chime.PutVoiceConnectorStreamingConfigurationOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "PutVoiceConnectorStreamingConfiguration cancelled", ctx.Err())
	default:
		return d.PutVoiceConnectorStreamingConfiguration(in)
	}
}

func (d *ChimeDouble) PutVoiceConnectorTermination(i0 *chime.PutVoiceConnectorTerminationInput) (r0 *chime.PutVoiceConnectorTerminationOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("PutVoiceConnectorTermination", i0)
	r0, _ = returns[0].(*chime.PutVoiceConnectorTerminationOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ChimeDouble) PutVoiceConnectorTerminationCredentials(i0 *chime.PutVoiceConnectorTerminationCredentialsInput) (r0 *chime.PutVoiceConnectorTerminationCredentialsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("PutVoiceConnectorTerminationCredentials", i0)
	r0, _ = returns[0].(*chime.PutVoiceConnectorTerminationCredentialsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ChimeDouble) PutVoiceConnectorTerminationCredentialsRequest(i0 *chime.PutVoiceConnectorTerminationCredentialsInput) (r0 *request.Request, r1 *chime.PutVoiceConnectorTerminationCredentialsOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("PutVoiceConnectorTerminationCredentialsRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*chime.PutVoiceConnectorTerminationCredentialsOutput)
	return
}

func (d *ChimeDouble) PutVoiceConnectorTerminationCredentialsWithContext(i0 context.Context, i1 *chime.PutVoiceConnectorTerminationCredentialsInput, i2 ...request.Option) (r0 *chime.PutVoiceConnectorTerminationCredentialsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("PutVoiceConnectorTerminationCredentialsWithContext", i0, i1, i2)
	r0, _ = returns[0].(*chime.PutVoiceConnectorTerminationCredentialsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ChimeDouble) fakePutVoiceConnectorTerminationCredentialsWithContext(ctx context.Context, in *chime.PutVoiceConnectorTerminationCredentialsInput, _ ...request.Option) (*chime.PutVoiceConnectorTerminationCredentialsOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "PutVoiceConnectorTerminationCredentials cancelled", ctx.Err())
	default:
		return d.PutVoiceConnectorTerminationCredentials(in)
	}
}

func (d *ChimeDouble) PutVoiceConnectorTerminationRequest(i0 *chime.PutVoiceConnectorTerminationInput) (r0 *request.Request, r1 *chime.PutVoiceConnectorTerminationOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("PutVoiceConnectorTerminationRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*chime.PutVoiceConnectorTerminationOutput)
	return
}

func (d *ChimeDouble) PutVoiceConnectorTerminationWithContext(i0 context.Context, i1 *chime.PutVoiceConnectorTerminationInput, i2 ...request.Option) (r0 *chime.PutVoiceConnectorTerminationOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("PutVoiceConnectorTerminationWithContext", i0, i1, i2)
	r0, _ = returns[0].(*chime.PutVoiceConnectorTerminationOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ChimeDouble) fakePutVoiceConnectorTerminationWithContext(ctx context.Context, in *chime.PutVoiceConnectorTerminationInput, _ ...request.Option) (*chime.PutVoiceConnectorTerminationOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "PutVoiceConnectorTermination cancelled", ctx.Err())
	default:
		return d.PutVoiceConnectorTermination(in)
	}
}

func (d *ChimeDouble) RegenerateSecurityToken(i0 *chime.RegenerateSecurityTokenInput) (r0 *chime.RegenerateSecurityTokenOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("RegenerateSecurityToken", i0)
	r0, _ = returns[0].(*chime.RegenerateSecurityTokenOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ChimeDouble) RegenerateSecurityTokenRequest(i0 *chime.RegenerateSecurityTokenInput) (r0 *request.Request, r1 *chime.RegenerateSecurityTokenOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("RegenerateSecurityTokenRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*chime.RegenerateSecurityTokenOutput)
	return
}

func (d *ChimeDouble) RegenerateSecurityTokenWithContext(i0 context.Context, i1 *chime.RegenerateSecurityTokenInput, i2 ...request.Option) (r0 *chime.RegenerateSecurityTokenOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("RegenerateSecurityTokenWithContext", i0, i1, i2)
	r0, _ = returns[0].(*chime.RegenerateSecurityTokenOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ChimeDouble) fakeRegenerateSecurityTokenWithContext(ctx context.Context, in *chime.RegenerateSecurityTokenInput, _ ...request.Option) (*chime.RegenerateSecurityTokenOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "RegenerateSecurityToken cancelled", ctx.Err())
	default:
		return d.RegenerateSecurityToken(in)
	}
}

func (d *ChimeDouble) ResetPersonalPIN(i0 *chime.ResetPersonalPINInput) (r0 *chime.ResetPersonalPINOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ResetPersonalPIN", i0)
	r0, _ = returns[0].(*chime.ResetPersonalPINOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ChimeDouble) ResetPersonalPINRequest(i0 *chime.ResetPersonalPINInput) (r0 *request.Request, r1 *chime.ResetPersonalPINOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ResetPersonalPINRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*chime.ResetPersonalPINOutput)
	return
}

func (d *ChimeDouble) ResetPersonalPINWithContext(i0 context.Context, i1 *chime.ResetPersonalPINInput, i2 ...request.Option) (r0 *chime.ResetPersonalPINOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ResetPersonalPINWithContext", i0, i1, i2)
	r0, _ = returns[0].(*chime.ResetPersonalPINOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ChimeDouble) fakeResetPersonalPINWithContext(ctx context.Context, in *chime.ResetPersonalPINInput, _ ...request.Option) (*chime.ResetPersonalPINOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "ResetPersonalPIN cancelled", ctx.Err())
	default:
		return d.ResetPersonalPIN(in)
	}
}

func (d *ChimeDouble) RestorePhoneNumber(i0 *chime.RestorePhoneNumberInput) (r0 *chime.RestorePhoneNumberOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("RestorePhoneNumber", i0)
	r0, _ = returns[0].(*chime.RestorePhoneNumberOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ChimeDouble) RestorePhoneNumberRequest(i0 *chime.RestorePhoneNumberInput) (r0 *request.Request, r1 *chime.RestorePhoneNumberOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("RestorePhoneNumberRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*chime.RestorePhoneNumberOutput)
	return
}

func (d *ChimeDouble) RestorePhoneNumberWithContext(i0 context.Context, i1 *chime.RestorePhoneNumberInput, i2 ...request.Option) (r0 *chime.RestorePhoneNumberOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("RestorePhoneNumberWithContext", i0, i1, i2)
	r0, _ = returns[0].(*chime.RestorePhoneNumberOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ChimeDouble) fakeRestorePhoneNumberWithContext(ctx context.Context, in *chime.RestorePhoneNumberInput, _ ...request.Option) (*chime.RestorePhoneNumberOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "RestorePhoneNumber cancelled", ctx.Err())
	default:
		return d.RestorePhoneNumber(in)
	}
}

func (d *ChimeDouble) SearchAvailablePhoneNumbers(i0 *chime.SearchAvailablePhoneNumbersInput) (r0 *chime.SearchAvailablePhoneNumbersOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("SearchAvailablePhoneNumbers", i0)
	r0, _ = returns[0].(*chime.SearchAvailablePhoneNumbersOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ChimeDouble) SearchAvailablePhoneNumbersRequest(i0 *chime.SearchAvailablePhoneNumbersInput) (r0 *request.Request, r1 *chime.SearchAvailablePhoneNumbersOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("SearchAvailablePhoneNumbersRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*chime.SearchAvailablePhoneNumbersOutput)
	return
}

func (d *ChimeDouble) SearchAvailablePhoneNumbersWithContext(i0 context.Context, i1 *chime.SearchAvailablePhoneNumbersInput, i2 ...request.Option) (r0 *chime.SearchAvailablePhoneNumbersOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("SearchAvailablePhoneNumbersWithContext", i0, i1, i2)
	r0, _ = returns[0].(*chime.SearchAvailablePhoneNumbersOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ChimeDouble) fakeSearchAvailablePhoneNumbersWithContext(ctx context.Context, in *chime.SearchAvailablePhoneNumbersInput, _ ...request.Option) (*chime.SearchAvailablePhoneNumbersOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "SearchAvailablePhoneNumbers cancelled", ctx.Err())
	default:
		return d.SearchAvailablePhoneNumbers(in)
	}
}

func (d *ChimeDouble) UpdateAccount(i0 *chime.UpdateAccountInput) (r0 *chime.UpdateAccountOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UpdateAccount", i0)
	r0, _ = returns[0].(*chime.UpdateAccountOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ChimeDouble) UpdateAccountRequest(i0 *chime.UpdateAccountInput) (r0 *request.Request, r1 *chime.UpdateAccountOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UpdateAccountRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*chime.UpdateAccountOutput)
	return
}

func (d *ChimeDouble) UpdateAccountSettings(i0 *chime.UpdateAccountSettingsInput) (r0 *chime.UpdateAccountSettingsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UpdateAccountSettings", i0)
	r0, _ = returns[0].(*chime.UpdateAccountSettingsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ChimeDouble) UpdateAccountSettingsRequest(i0 *chime.UpdateAccountSettingsInput) (r0 *request.Request, r1 *chime.UpdateAccountSettingsOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UpdateAccountSettingsRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*chime.UpdateAccountSettingsOutput)
	return
}

func (d *ChimeDouble) UpdateAccountSettingsWithContext(i0 context.Context, i1 *chime.UpdateAccountSettingsInput, i2 ...request.Option) (r0 *chime.UpdateAccountSettingsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UpdateAccountSettingsWithContext", i0, i1, i2)
	r0, _ = returns[0].(*chime.UpdateAccountSettingsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ChimeDouble) fakeUpdateAccountSettingsWithContext(ctx context.Context, in *chime.UpdateAccountSettingsInput, _ ...request.Option) (*chime.UpdateAccountSettingsOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "UpdateAccountSettings cancelled", ctx.Err())
	default:
		return d.UpdateAccountSettings(in)
	}
}

func (d *ChimeDouble) UpdateAccountWithContext(i0 context.Context, i1 *chime.UpdateAccountInput, i2 ...request.Option) (r0 *chime.UpdateAccountOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UpdateAccountWithContext", i0, i1, i2)
	r0, _ = returns[0].(*chime.UpdateAccountOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ChimeDouble) fakeUpdateAccountWithContext(ctx context.Context, in *chime.UpdateAccountInput, _ ...request.Option) (*chime.UpdateAccountOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "UpdateAccount cancelled", ctx.Err())
	default:
		return d.UpdateAccount(in)
	}
}

func (d *ChimeDouble) UpdateBot(i0 *chime.UpdateBotInput) (r0 *chime.UpdateBotOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UpdateBot", i0)
	r0, _ = returns[0].(*chime.UpdateBotOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ChimeDouble) UpdateBotRequest(i0 *chime.UpdateBotInput) (r0 *request.Request, r1 *chime.UpdateBotOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UpdateBotRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*chime.UpdateBotOutput)
	return
}

func (d *ChimeDouble) UpdateBotWithContext(i0 context.Context, i1 *chime.UpdateBotInput, i2 ...request.Option) (r0 *chime.UpdateBotOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UpdateBotWithContext", i0, i1, i2)
	r0, _ = returns[0].(*chime.UpdateBotOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ChimeDouble) fakeUpdateBotWithContext(ctx context.Context, in *chime.UpdateBotInput, _ ...request.Option) (*chime.UpdateBotOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "UpdateBot cancelled", ctx.Err())
	default:
		return d.UpdateBot(in)
	}
}

func (d *ChimeDouble) UpdateGlobalSettings(i0 *chime.UpdateGlobalSettingsInput) (r0 *chime.UpdateGlobalSettingsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UpdateGlobalSettings", i0)
	r0, _ = returns[0].(*chime.UpdateGlobalSettingsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ChimeDouble) UpdateGlobalSettingsRequest(i0 *chime.UpdateGlobalSettingsInput) (r0 *request.Request, r1 *chime.UpdateGlobalSettingsOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UpdateGlobalSettingsRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*chime.UpdateGlobalSettingsOutput)
	return
}

func (d *ChimeDouble) UpdateGlobalSettingsWithContext(i0 context.Context, i1 *chime.UpdateGlobalSettingsInput, i2 ...request.Option) (r0 *chime.UpdateGlobalSettingsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UpdateGlobalSettingsWithContext", i0, i1, i2)
	r0, _ = returns[0].(*chime.UpdateGlobalSettingsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ChimeDouble) fakeUpdateGlobalSettingsWithContext(ctx context.Context, in *chime.UpdateGlobalSettingsInput, _ ...request.Option) (*chime.UpdateGlobalSettingsOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "UpdateGlobalSettings cancelled", ctx.Err())
	default:
		return d.UpdateGlobalSettings(in)
	}
}

func (d *ChimeDouble) UpdatePhoneNumber(i0 *chime.UpdatePhoneNumberInput) (r0 *chime.UpdatePhoneNumberOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UpdatePhoneNumber", i0)
	r0, _ = returns[0].(*chime.UpdatePhoneNumberOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ChimeDouble) UpdatePhoneNumberRequest(i0 *chime.UpdatePhoneNumberInput) (r0 *request.Request, r1 *chime.UpdatePhoneNumberOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UpdatePhoneNumberRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*chime.UpdatePhoneNumberOutput)
	return
}

func (d *ChimeDouble) UpdatePhoneNumberSettings(i0 *chime.UpdatePhoneNumberSettingsInput) (r0 *chime.UpdatePhoneNumberSettingsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UpdatePhoneNumberSettings", i0)
	r0, _ = returns[0].(*chime.UpdatePhoneNumberSettingsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ChimeDouble) UpdatePhoneNumberSettingsRequest(i0 *chime.UpdatePhoneNumberSettingsInput) (r0 *request.Request, r1 *chime.UpdatePhoneNumberSettingsOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UpdatePhoneNumberSettingsRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*chime.UpdatePhoneNumberSettingsOutput)
	return
}

func (d *ChimeDouble) UpdatePhoneNumberSettingsWithContext(i0 context.Context, i1 *chime.UpdatePhoneNumberSettingsInput, i2 ...request.Option) (r0 *chime.UpdatePhoneNumberSettingsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UpdatePhoneNumberSettingsWithContext", i0, i1, i2)
	r0, _ = returns[0].(*chime.UpdatePhoneNumberSettingsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ChimeDouble) fakeUpdatePhoneNumberSettingsWithContext(ctx context.Context, in *chime.UpdatePhoneNumberSettingsInput, _ ...request.Option) (*chime.UpdatePhoneNumberSettingsOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "UpdatePhoneNumberSettings cancelled", ctx.Err())
	default:
		return d.UpdatePhoneNumberSettings(in)
	}
}

func (d *ChimeDouble) UpdatePhoneNumberWithContext(i0 context.Context, i1 *chime.UpdatePhoneNumberInput, i2 ...request.Option) (r0 *chime.UpdatePhoneNumberOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UpdatePhoneNumberWithContext", i0, i1, i2)
	r0, _ = returns[0].(*chime.UpdatePhoneNumberOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ChimeDouble) fakeUpdatePhoneNumberWithContext(ctx context.Context, in *chime.UpdatePhoneNumberInput, _ ...request.Option) (*chime.UpdatePhoneNumberOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "UpdatePhoneNumber cancelled", ctx.Err())
	default:
		return d.UpdatePhoneNumber(in)
	}
}

func (d *ChimeDouble) UpdateRoom(i0 *chime.UpdateRoomInput) (r0 *chime.UpdateRoomOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UpdateRoom", i0)
	r0, _ = returns[0].(*chime.UpdateRoomOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ChimeDouble) UpdateRoomMembership(i0 *chime.UpdateRoomMembershipInput) (r0 *chime.UpdateRoomMembershipOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UpdateRoomMembership", i0)
	r0, _ = returns[0].(*chime.UpdateRoomMembershipOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ChimeDouble) UpdateRoomMembershipRequest(i0 *chime.UpdateRoomMembershipInput) (r0 *request.Request, r1 *chime.UpdateRoomMembershipOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UpdateRoomMembershipRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*chime.UpdateRoomMembershipOutput)
	return
}

func (d *ChimeDouble) UpdateRoomMembershipWithContext(i0 context.Context, i1 *chime.UpdateRoomMembershipInput, i2 ...request.Option) (r0 *chime.UpdateRoomMembershipOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UpdateRoomMembershipWithContext", i0, i1, i2)
	r0, _ = returns[0].(*chime.UpdateRoomMembershipOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ChimeDouble) fakeUpdateRoomMembershipWithContext(ctx context.Context, in *chime.UpdateRoomMembershipInput, _ ...request.Option) (*chime.UpdateRoomMembershipOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "UpdateRoomMembership cancelled", ctx.Err())
	default:
		return d.UpdateRoomMembership(in)
	}
}

func (d *ChimeDouble) UpdateRoomRequest(i0 *chime.UpdateRoomInput) (r0 *request.Request, r1 *chime.UpdateRoomOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UpdateRoomRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*chime.UpdateRoomOutput)
	return
}

func (d *ChimeDouble) UpdateRoomWithContext(i0 context.Context, i1 *chime.UpdateRoomInput, i2 ...request.Option) (r0 *chime.UpdateRoomOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UpdateRoomWithContext", i0, i1, i2)
	r0, _ = returns[0].(*chime.UpdateRoomOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ChimeDouble) fakeUpdateRoomWithContext(ctx context.Context, in *chime.UpdateRoomInput, _ ...request.Option) (*chime.UpdateRoomOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "UpdateRoom cancelled", ctx.Err())
	default:
		return d.UpdateRoom(in)
	}
}

func (d *ChimeDouble) UpdateUser(i0 *chime.UpdateUserInput) (r0 *chime.UpdateUserOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UpdateUser", i0)
	r0, _ = returns[0].(*chime.UpdateUserOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ChimeDouble) UpdateUserRequest(i0 *chime.UpdateUserInput) (r0 *request.Request, r1 *chime.UpdateUserOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UpdateUserRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*chime.UpdateUserOutput)
	return
}

func (d *ChimeDouble) UpdateUserSettings(i0 *chime.UpdateUserSettingsInput) (r0 *chime.UpdateUserSettingsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UpdateUserSettings", i0)
	r0, _ = returns[0].(*chime.UpdateUserSettingsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ChimeDouble) UpdateUserSettingsRequest(i0 *chime.UpdateUserSettingsInput) (r0 *request.Request, r1 *chime.UpdateUserSettingsOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UpdateUserSettingsRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*chime.UpdateUserSettingsOutput)
	return
}

func (d *ChimeDouble) UpdateUserSettingsWithContext(i0 context.Context, i1 *chime.UpdateUserSettingsInput, i2 ...request.Option) (r0 *chime.UpdateUserSettingsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UpdateUserSettingsWithContext", i0, i1, i2)
	r0, _ = returns[0].(*chime.UpdateUserSettingsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ChimeDouble) fakeUpdateUserSettingsWithContext(ctx context.Context, in *chime.UpdateUserSettingsInput, _ ...request.Option) (*chime.UpdateUserSettingsOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "UpdateUserSettings cancelled", ctx.Err())
	default:
		return d.UpdateUserSettings(in)
	}
}

func (d *ChimeDouble) UpdateUserWithContext(i0 context.Context, i1 *chime.UpdateUserInput, i2 ...request.Option) (r0 *chime.UpdateUserOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UpdateUserWithContext", i0, i1, i2)
	r0, _ = returns[0].(*chime.UpdateUserOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ChimeDouble) fakeUpdateUserWithContext(ctx context.Context, in *chime.UpdateUserInput, _ ...request.Option) (*chime.UpdateUserOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "UpdateUser cancelled", ctx.Err())
	default:
		return d.UpdateUser(in)
	}
}

func (d *ChimeDouble) UpdateVoiceConnector(i0 *chime.UpdateVoiceConnectorInput) (r0 *chime.UpdateVoiceConnectorOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UpdateVoiceConnector", i0)
	r0, _ = returns[0].(*chime.UpdateVoiceConnectorOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ChimeDouble) UpdateVoiceConnectorGroup(i0 *chime.UpdateVoiceConnectorGroupInput) (r0 *chime.UpdateVoiceConnectorGroupOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UpdateVoiceConnectorGroup", i0)
	r0, _ = returns[0].(*chime.UpdateVoiceConnectorGroupOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ChimeDouble) UpdateVoiceConnectorGroupRequest(i0 *chime.UpdateVoiceConnectorGroupInput) (r0 *request.Request, r1 *chime.UpdateVoiceConnectorGroupOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UpdateVoiceConnectorGroupRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*chime.UpdateVoiceConnectorGroupOutput)
	return
}

func (d *ChimeDouble) UpdateVoiceConnectorGroupWithContext(i0 context.Context, i1 *chime.UpdateVoiceConnectorGroupInput, i2 ...request.Option) (r0 *chime.UpdateVoiceConnectorGroupOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UpdateVoiceConnectorGroupWithContext", i0, i1, i2)
	r0, _ = returns[0].(*chime.UpdateVoiceConnectorGroupOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ChimeDouble) fakeUpdateVoiceConnectorGroupWithContext(ctx context.Context, in *chime.UpdateVoiceConnectorGroupInput, _ ...request.Option) (*chime.UpdateVoiceConnectorGroupOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "UpdateVoiceConnectorGroup cancelled", ctx.Err())
	default:
		return d.UpdateVoiceConnectorGroup(in)
	}
}

func (d *ChimeDouble) UpdateVoiceConnectorRequest(i0 *chime.UpdateVoiceConnectorInput) (r0 *request.Request, r1 *chime.UpdateVoiceConnectorOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UpdateVoiceConnectorRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*chime.UpdateVoiceConnectorOutput)
	return
}

func (d *ChimeDouble) UpdateVoiceConnectorWithContext(i0 context.Context, i1 *chime.UpdateVoiceConnectorInput, i2 ...request.Option) (r0 *chime.UpdateVoiceConnectorOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UpdateVoiceConnectorWithContext", i0, i1, i2)
	r0, _ = returns[0].(*chime.UpdateVoiceConnectorOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ChimeDouble) fakeUpdateVoiceConnectorWithContext(ctx context.Context, in *chime.UpdateVoiceConnectorInput, _ ...request.Option) (*chime.UpdateVoiceConnectorOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "UpdateVoiceConnector cancelled", ctx.Err())
	default:
		return d.UpdateVoiceConnector(in)
	}
}
