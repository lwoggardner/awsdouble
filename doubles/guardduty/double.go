// Code generated by go doublegen; DO NOT EDIT.
// This file was generated at 2020-02-14T22:13:04+11:00

// Package guarddutydouble provides a TestDouble implementation of guarddutyiface.GuardDutyAPI
package guarddutydouble

import (
	"context"

	"github.com/aws/aws-sdk-go/aws/awserr"
	"github.com/aws/aws-sdk-go/aws/request"
	"github.com/aws/aws-sdk-go/service/guardduty"
	"github.com/aws/aws-sdk-go/service/guardduty/guarddutyiface"
	"github.com/lwoggardner/awsdouble"
	"github.com/lwoggardner/godouble/godouble"
)

// GuardDutyDouble is TestDouble for guarddutyiface.GuardDutyAPI
type GuardDutyDouble struct {
	guarddutyiface.GuardDutyAPI
	*awsdouble.AWSTestDouble
}

// Constructor for GuardDutyDouble
// Default configuration will ensure
//   * API operations not explicitly stubbed will return an empty output struct pointer, and nil error.
//     To simulate long polling, "Poll" operations will return these values after a random delay of up to 100ms.
//   * WithContext methods implement a 'Fake' method that returns a cancellation error if the context is cancelled
//      before the method is called.
//   * Pages and PagesWithContext methods similarly implement a 'Fake' method that paginates over the underlying method.
//
//    This allows tests to only stub the simple api methods and be generally unconcerned whether the SUT is using the
//      Context or Pagination forms of the API.
//
func NewDouble(t godouble.T, configurators ...func(*awsdouble.AWSTestDouble)) *GuardDutyDouble {
	result := &GuardDutyDouble{}

	configurators = append([]func(configurator *awsdouble.AWSTestDouble){func(d *awsdouble.AWSTestDouble) {
		d.SetDefaultCall(result.defaultMethodCall)
		d.SetDefaultReturnValues(result.defaultReturnValues)
	}}, configurators...)

	result.AWSTestDouble = awsdouble.NewDouble(t, (*guarddutyiface.GuardDutyAPI)(nil), configurators...)
	return result
}

func (d *GuardDutyDouble) defaultReturnValues(m godouble.Method) godouble.ReturnValues {
	return d.DefaultReturnValues(m)
}

func (d *GuardDutyDouble) defaultMethodCall(m godouble.Method) godouble.MethodCall {
	switch m.Reflect().Name {

	case "AcceptInvitationWithContext":
		return m.Fake(d.fakeAcceptInvitationWithContext)

	case "ArchiveFindingsWithContext":
		return m.Fake(d.fakeArchiveFindingsWithContext)

	case "CreateDetectorWithContext":
		return m.Fake(d.fakeCreateDetectorWithContext)

	case "CreateFilterWithContext":
		return m.Fake(d.fakeCreateFilterWithContext)

	case "CreateIPSetWithContext":
		return m.Fake(d.fakeCreateIPSetWithContext)

	case "CreateMembersWithContext":
		return m.Fake(d.fakeCreateMembersWithContext)

	case "CreatePublishingDestinationWithContext":
		return m.Fake(d.fakeCreatePublishingDestinationWithContext)

	case "CreateSampleFindingsWithContext":
		return m.Fake(d.fakeCreateSampleFindingsWithContext)

	case "CreateThreatIntelSetWithContext":
		return m.Fake(d.fakeCreateThreatIntelSetWithContext)

	case "DeclineInvitationsWithContext":
		return m.Fake(d.fakeDeclineInvitationsWithContext)

	case "DeleteDetectorWithContext":
		return m.Fake(d.fakeDeleteDetectorWithContext)

	case "DeleteFilterWithContext":
		return m.Fake(d.fakeDeleteFilterWithContext)

	case "DeleteIPSetWithContext":
		return m.Fake(d.fakeDeleteIPSetWithContext)

	case "DeleteInvitationsWithContext":
		return m.Fake(d.fakeDeleteInvitationsWithContext)

	case "DeleteMembersWithContext":
		return m.Fake(d.fakeDeleteMembersWithContext)

	case "DeletePublishingDestinationWithContext":
		return m.Fake(d.fakeDeletePublishingDestinationWithContext)

	case "DeleteThreatIntelSetWithContext":
		return m.Fake(d.fakeDeleteThreatIntelSetWithContext)

	case "DescribePublishingDestinationWithContext":
		return m.Fake(d.fakeDescribePublishingDestinationWithContext)

	case "DisassociateFromMasterAccountWithContext":
		return m.Fake(d.fakeDisassociateFromMasterAccountWithContext)

	case "DisassociateMembersWithContext":
		return m.Fake(d.fakeDisassociateMembersWithContext)

	case "GetDetectorWithContext":
		return m.Fake(d.fakeGetDetectorWithContext)

	case "GetFilterWithContext":
		return m.Fake(d.fakeGetFilterWithContext)

	case "GetFindingsStatisticsWithContext":
		return m.Fake(d.fakeGetFindingsStatisticsWithContext)

	case "GetFindingsWithContext":
		return m.Fake(d.fakeGetFindingsWithContext)

	case "GetIPSetWithContext":
		return m.Fake(d.fakeGetIPSetWithContext)

	case "GetInvitationsCountWithContext":
		return m.Fake(d.fakeGetInvitationsCountWithContext)

	case "GetMasterAccountWithContext":
		return m.Fake(d.fakeGetMasterAccountWithContext)

	case "GetMembersWithContext":
		return m.Fake(d.fakeGetMembersWithContext)

	case "GetThreatIntelSetWithContext":
		return m.Fake(d.fakeGetThreatIntelSetWithContext)

	case "InviteMembersWithContext":
		return m.Fake(d.fakeInviteMembersWithContext)

	case "ListDetectorsPages":
		return m.Fake(d.fakeListDetectorsPages)

	case "ListDetectorsPagesWithContext":
		return m.Fake(d.fakeListDetectorsPagesWithContext)

	case "ListDetectorsWithContext":
		return m.Fake(d.fakeListDetectorsWithContext)

	case "ListFiltersPages":
		return m.Fake(d.fakeListFiltersPages)

	case "ListFiltersPagesWithContext":
		return m.Fake(d.fakeListFiltersPagesWithContext)

	case "ListFiltersWithContext":
		return m.Fake(d.fakeListFiltersWithContext)

	case "ListFindingsPages":
		return m.Fake(d.fakeListFindingsPages)

	case "ListFindingsPagesWithContext":
		return m.Fake(d.fakeListFindingsPagesWithContext)

	case "ListFindingsWithContext":
		return m.Fake(d.fakeListFindingsWithContext)

	case "ListIPSetsPages":
		return m.Fake(d.fakeListIPSetsPages)

	case "ListIPSetsPagesWithContext":
		return m.Fake(d.fakeListIPSetsPagesWithContext)

	case "ListIPSetsWithContext":
		return m.Fake(d.fakeListIPSetsWithContext)

	case "ListInvitationsPages":
		return m.Fake(d.fakeListInvitationsPages)

	case "ListInvitationsPagesWithContext":
		return m.Fake(d.fakeListInvitationsPagesWithContext)

	case "ListInvitationsWithContext":
		return m.Fake(d.fakeListInvitationsWithContext)

	case "ListMembersPages":
		return m.Fake(d.fakeListMembersPages)

	case "ListMembersPagesWithContext":
		return m.Fake(d.fakeListMembersPagesWithContext)

	case "ListMembersWithContext":
		return m.Fake(d.fakeListMembersWithContext)

	case "ListPublishingDestinationsPages":
		return m.Fake(d.fakeListPublishingDestinationsPages)

	case "ListPublishingDestinationsPagesWithContext":
		return m.Fake(d.fakeListPublishingDestinationsPagesWithContext)

	case "ListPublishingDestinationsWithContext":
		return m.Fake(d.fakeListPublishingDestinationsWithContext)

	case "ListTagsForResourceWithContext":
		return m.Fake(d.fakeListTagsForResourceWithContext)

	case "ListThreatIntelSetsPages":
		return m.Fake(d.fakeListThreatIntelSetsPages)

	case "ListThreatIntelSetsPagesWithContext":
		return m.Fake(d.fakeListThreatIntelSetsPagesWithContext)

	case "ListThreatIntelSetsWithContext":
		return m.Fake(d.fakeListThreatIntelSetsWithContext)

	case "StartMonitoringMembersWithContext":
		return m.Fake(d.fakeStartMonitoringMembersWithContext)

	case "StopMonitoringMembersWithContext":
		return m.Fake(d.fakeStopMonitoringMembersWithContext)

	case "TagResourceWithContext":
		return m.Fake(d.fakeTagResourceWithContext)

	case "UnarchiveFindingsWithContext":
		return m.Fake(d.fakeUnarchiveFindingsWithContext)

	case "UntagResourceWithContext":
		return m.Fake(d.fakeUntagResourceWithContext)

	case "UpdateDetectorWithContext":
		return m.Fake(d.fakeUpdateDetectorWithContext)

	case "UpdateFilterWithContext":
		return m.Fake(d.fakeUpdateFilterWithContext)

	case "UpdateFindingsFeedbackWithContext":
		return m.Fake(d.fakeUpdateFindingsFeedbackWithContext)

	case "UpdateIPSetWithContext":
		return m.Fake(d.fakeUpdateIPSetWithContext)

	case "UpdatePublishingDestinationWithContext":
		return m.Fake(d.fakeUpdatePublishingDestinationWithContext)

	case "UpdateThreatIntelSetWithContext":
		return m.Fake(d.fakeUpdateThreatIntelSetWithContext)

	default:
		return nil
	}
}

func (d *GuardDutyDouble) AcceptInvitation(i0 *guardduty.AcceptInvitationInput) (r0 *guardduty.AcceptInvitationOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("AcceptInvitation", i0)
	r0, _ = returns[0].(*guardduty.AcceptInvitationOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *GuardDutyDouble) AcceptInvitationRequest(i0 *guardduty.AcceptInvitationInput) (r0 *request.Request, r1 *guardduty.AcceptInvitationOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("AcceptInvitationRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*guardduty.AcceptInvitationOutput)
	return
}

func (d *GuardDutyDouble) AcceptInvitationWithContext(i0 context.Context, i1 *guardduty.AcceptInvitationInput, i2 ...request.Option) (r0 *guardduty.AcceptInvitationOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("AcceptInvitationWithContext", i0, i1, i2)
	r0, _ = returns[0].(*guardduty.AcceptInvitationOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *GuardDutyDouble) fakeAcceptInvitationWithContext(ctx context.Context, in *guardduty.AcceptInvitationInput, _ ...request.Option) (*guardduty.AcceptInvitationOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "AcceptInvitation cancelled", ctx.Err())
	default:
		return d.AcceptInvitation(in)
	}
}

func (d *GuardDutyDouble) ArchiveFindings(i0 *guardduty.ArchiveFindingsInput) (r0 *guardduty.ArchiveFindingsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ArchiveFindings", i0)
	r0, _ = returns[0].(*guardduty.ArchiveFindingsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *GuardDutyDouble) ArchiveFindingsRequest(i0 *guardduty.ArchiveFindingsInput) (r0 *request.Request, r1 *guardduty.ArchiveFindingsOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ArchiveFindingsRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*guardduty.ArchiveFindingsOutput)
	return
}

func (d *GuardDutyDouble) ArchiveFindingsWithContext(i0 context.Context, i1 *guardduty.ArchiveFindingsInput, i2 ...request.Option) (r0 *guardduty.ArchiveFindingsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ArchiveFindingsWithContext", i0, i1, i2)
	r0, _ = returns[0].(*guardduty.ArchiveFindingsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *GuardDutyDouble) fakeArchiveFindingsWithContext(ctx context.Context, in *guardduty.ArchiveFindingsInput, _ ...request.Option) (*guardduty.ArchiveFindingsOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "ArchiveFindings cancelled", ctx.Err())
	default:
		return d.ArchiveFindings(in)
	}
}

func (d *GuardDutyDouble) CreateDetector(i0 *guardduty.CreateDetectorInput) (r0 *guardduty.CreateDetectorOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreateDetector", i0)
	r0, _ = returns[0].(*guardduty.CreateDetectorOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *GuardDutyDouble) CreateDetectorRequest(i0 *guardduty.CreateDetectorInput) (r0 *request.Request, r1 *guardduty.CreateDetectorOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreateDetectorRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*guardduty.CreateDetectorOutput)
	return
}

func (d *GuardDutyDouble) CreateDetectorWithContext(i0 context.Context, i1 *guardduty.CreateDetectorInput, i2 ...request.Option) (r0 *guardduty.CreateDetectorOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreateDetectorWithContext", i0, i1, i2)
	r0, _ = returns[0].(*guardduty.CreateDetectorOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *GuardDutyDouble) fakeCreateDetectorWithContext(ctx context.Context, in *guardduty.CreateDetectorInput, _ ...request.Option) (*guardduty.CreateDetectorOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "CreateDetector cancelled", ctx.Err())
	default:
		return d.CreateDetector(in)
	}
}

func (d *GuardDutyDouble) CreateFilter(i0 *guardduty.CreateFilterInput) (r0 *guardduty.CreateFilterOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreateFilter", i0)
	r0, _ = returns[0].(*guardduty.CreateFilterOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *GuardDutyDouble) CreateFilterRequest(i0 *guardduty.CreateFilterInput) (r0 *request.Request, r1 *guardduty.CreateFilterOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreateFilterRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*guardduty.CreateFilterOutput)
	return
}

func (d *GuardDutyDouble) CreateFilterWithContext(i0 context.Context, i1 *guardduty.CreateFilterInput, i2 ...request.Option) (r0 *guardduty.CreateFilterOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreateFilterWithContext", i0, i1, i2)
	r0, _ = returns[0].(*guardduty.CreateFilterOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *GuardDutyDouble) fakeCreateFilterWithContext(ctx context.Context, in *guardduty.CreateFilterInput, _ ...request.Option) (*guardduty.CreateFilterOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "CreateFilter cancelled", ctx.Err())
	default:
		return d.CreateFilter(in)
	}
}

func (d *GuardDutyDouble) CreateIPSet(i0 *guardduty.CreateIPSetInput) (r0 *guardduty.CreateIPSetOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreateIPSet", i0)
	r0, _ = returns[0].(*guardduty.CreateIPSetOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *GuardDutyDouble) CreateIPSetRequest(i0 *guardduty.CreateIPSetInput) (r0 *request.Request, r1 *guardduty.CreateIPSetOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreateIPSetRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*guardduty.CreateIPSetOutput)
	return
}

func (d *GuardDutyDouble) CreateIPSetWithContext(i0 context.Context, i1 *guardduty.CreateIPSetInput, i2 ...request.Option) (r0 *guardduty.CreateIPSetOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreateIPSetWithContext", i0, i1, i2)
	r0, _ = returns[0].(*guardduty.CreateIPSetOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *GuardDutyDouble) fakeCreateIPSetWithContext(ctx context.Context, in *guardduty.CreateIPSetInput, _ ...request.Option) (*guardduty.CreateIPSetOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "CreateIPSet cancelled", ctx.Err())
	default:
		return d.CreateIPSet(in)
	}
}

func (d *GuardDutyDouble) CreateMembers(i0 *guardduty.CreateMembersInput) (r0 *guardduty.CreateMembersOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreateMembers", i0)
	r0, _ = returns[0].(*guardduty.CreateMembersOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *GuardDutyDouble) CreateMembersRequest(i0 *guardduty.CreateMembersInput) (r0 *request.Request, r1 *guardduty.CreateMembersOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreateMembersRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*guardduty.CreateMembersOutput)
	return
}

func (d *GuardDutyDouble) CreateMembersWithContext(i0 context.Context, i1 *guardduty.CreateMembersInput, i2 ...request.Option) (r0 *guardduty.CreateMembersOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreateMembersWithContext", i0, i1, i2)
	r0, _ = returns[0].(*guardduty.CreateMembersOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *GuardDutyDouble) fakeCreateMembersWithContext(ctx context.Context, in *guardduty.CreateMembersInput, _ ...request.Option) (*guardduty.CreateMembersOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "CreateMembers cancelled", ctx.Err())
	default:
		return d.CreateMembers(in)
	}
}

func (d *GuardDutyDouble) CreatePublishingDestination(i0 *guardduty.CreatePublishingDestinationInput) (r0 *guardduty.CreatePublishingDestinationOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreatePublishingDestination", i0)
	r0, _ = returns[0].(*guardduty.CreatePublishingDestinationOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *GuardDutyDouble) CreatePublishingDestinationRequest(i0 *guardduty.CreatePublishingDestinationInput) (r0 *request.Request, r1 *guardduty.CreatePublishingDestinationOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreatePublishingDestinationRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*guardduty.CreatePublishingDestinationOutput)
	return
}

func (d *GuardDutyDouble) CreatePublishingDestinationWithContext(i0 context.Context, i1 *guardduty.CreatePublishingDestinationInput, i2 ...request.Option) (r0 *guardduty.CreatePublishingDestinationOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreatePublishingDestinationWithContext", i0, i1, i2)
	r0, _ = returns[0].(*guardduty.CreatePublishingDestinationOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *GuardDutyDouble) fakeCreatePublishingDestinationWithContext(ctx context.Context, in *guardduty.CreatePublishingDestinationInput, _ ...request.Option) (*guardduty.CreatePublishingDestinationOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "CreatePublishingDestination cancelled", ctx.Err())
	default:
		return d.CreatePublishingDestination(in)
	}
}

func (d *GuardDutyDouble) CreateSampleFindings(i0 *guardduty.CreateSampleFindingsInput) (r0 *guardduty.CreateSampleFindingsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreateSampleFindings", i0)
	r0, _ = returns[0].(*guardduty.CreateSampleFindingsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *GuardDutyDouble) CreateSampleFindingsRequest(i0 *guardduty.CreateSampleFindingsInput) (r0 *request.Request, r1 *guardduty.CreateSampleFindingsOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreateSampleFindingsRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*guardduty.CreateSampleFindingsOutput)
	return
}

func (d *GuardDutyDouble) CreateSampleFindingsWithContext(i0 context.Context, i1 *guardduty.CreateSampleFindingsInput, i2 ...request.Option) (r0 *guardduty.CreateSampleFindingsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreateSampleFindingsWithContext", i0, i1, i2)
	r0, _ = returns[0].(*guardduty.CreateSampleFindingsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *GuardDutyDouble) fakeCreateSampleFindingsWithContext(ctx context.Context, in *guardduty.CreateSampleFindingsInput, _ ...request.Option) (*guardduty.CreateSampleFindingsOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "CreateSampleFindings cancelled", ctx.Err())
	default:
		return d.CreateSampleFindings(in)
	}
}

func (d *GuardDutyDouble) CreateThreatIntelSet(i0 *guardduty.CreateThreatIntelSetInput) (r0 *guardduty.CreateThreatIntelSetOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreateThreatIntelSet", i0)
	r0, _ = returns[0].(*guardduty.CreateThreatIntelSetOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *GuardDutyDouble) CreateThreatIntelSetRequest(i0 *guardduty.CreateThreatIntelSetInput) (r0 *request.Request, r1 *guardduty.CreateThreatIntelSetOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreateThreatIntelSetRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*guardduty.CreateThreatIntelSetOutput)
	return
}

func (d *GuardDutyDouble) CreateThreatIntelSetWithContext(i0 context.Context, i1 *guardduty.CreateThreatIntelSetInput, i2 ...request.Option) (r0 *guardduty.CreateThreatIntelSetOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreateThreatIntelSetWithContext", i0, i1, i2)
	r0, _ = returns[0].(*guardduty.CreateThreatIntelSetOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *GuardDutyDouble) fakeCreateThreatIntelSetWithContext(ctx context.Context, in *guardduty.CreateThreatIntelSetInput, _ ...request.Option) (*guardduty.CreateThreatIntelSetOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "CreateThreatIntelSet cancelled", ctx.Err())
	default:
		return d.CreateThreatIntelSet(in)
	}
}

func (d *GuardDutyDouble) DeclineInvitations(i0 *guardduty.DeclineInvitationsInput) (r0 *guardduty.DeclineInvitationsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeclineInvitations", i0)
	r0, _ = returns[0].(*guardduty.DeclineInvitationsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *GuardDutyDouble) DeclineInvitationsRequest(i0 *guardduty.DeclineInvitationsInput) (r0 *request.Request, r1 *guardduty.DeclineInvitationsOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeclineInvitationsRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*guardduty.DeclineInvitationsOutput)
	return
}

func (d *GuardDutyDouble) DeclineInvitationsWithContext(i0 context.Context, i1 *guardduty.DeclineInvitationsInput, i2 ...request.Option) (r0 *guardduty.DeclineInvitationsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeclineInvitationsWithContext", i0, i1, i2)
	r0, _ = returns[0].(*guardduty.DeclineInvitationsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *GuardDutyDouble) fakeDeclineInvitationsWithContext(ctx context.Context, in *guardduty.DeclineInvitationsInput, _ ...request.Option) (*guardduty.DeclineInvitationsOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "DeclineInvitations cancelled", ctx.Err())
	default:
		return d.DeclineInvitations(in)
	}
}

func (d *GuardDutyDouble) DeleteDetector(i0 *guardduty.DeleteDetectorInput) (r0 *guardduty.DeleteDetectorOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteDetector", i0)
	r0, _ = returns[0].(*guardduty.DeleteDetectorOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *GuardDutyDouble) DeleteDetectorRequest(i0 *guardduty.DeleteDetectorInput) (r0 *request.Request, r1 *guardduty.DeleteDetectorOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteDetectorRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*guardduty.DeleteDetectorOutput)
	return
}

func (d *GuardDutyDouble) DeleteDetectorWithContext(i0 context.Context, i1 *guardduty.DeleteDetectorInput, i2 ...request.Option) (r0 *guardduty.DeleteDetectorOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteDetectorWithContext", i0, i1, i2)
	r0, _ = returns[0].(*guardduty.DeleteDetectorOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *GuardDutyDouble) fakeDeleteDetectorWithContext(ctx context.Context, in *guardduty.DeleteDetectorInput, _ ...request.Option) (*guardduty.DeleteDetectorOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "DeleteDetector cancelled", ctx.Err())
	default:
		return d.DeleteDetector(in)
	}
}

func (d *GuardDutyDouble) DeleteFilter(i0 *guardduty.DeleteFilterInput) (r0 *guardduty.DeleteFilterOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteFilter", i0)
	r0, _ = returns[0].(*guardduty.DeleteFilterOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *GuardDutyDouble) DeleteFilterRequest(i0 *guardduty.DeleteFilterInput) (r0 *request.Request, r1 *guardduty.DeleteFilterOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteFilterRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*guardduty.DeleteFilterOutput)
	return
}

func (d *GuardDutyDouble) DeleteFilterWithContext(i0 context.Context, i1 *guardduty.DeleteFilterInput, i2 ...request.Option) (r0 *guardduty.DeleteFilterOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteFilterWithContext", i0, i1, i2)
	r0, _ = returns[0].(*guardduty.DeleteFilterOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *GuardDutyDouble) fakeDeleteFilterWithContext(ctx context.Context, in *guardduty.DeleteFilterInput, _ ...request.Option) (*guardduty.DeleteFilterOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "DeleteFilter cancelled", ctx.Err())
	default:
		return d.DeleteFilter(in)
	}
}

func (d *GuardDutyDouble) DeleteIPSet(i0 *guardduty.DeleteIPSetInput) (r0 *guardduty.DeleteIPSetOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteIPSet", i0)
	r0, _ = returns[0].(*guardduty.DeleteIPSetOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *GuardDutyDouble) DeleteIPSetRequest(i0 *guardduty.DeleteIPSetInput) (r0 *request.Request, r1 *guardduty.DeleteIPSetOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteIPSetRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*guardduty.DeleteIPSetOutput)
	return
}

func (d *GuardDutyDouble) DeleteIPSetWithContext(i0 context.Context, i1 *guardduty.DeleteIPSetInput, i2 ...request.Option) (r0 *guardduty.DeleteIPSetOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteIPSetWithContext", i0, i1, i2)
	r0, _ = returns[0].(*guardduty.DeleteIPSetOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *GuardDutyDouble) fakeDeleteIPSetWithContext(ctx context.Context, in *guardduty.DeleteIPSetInput, _ ...request.Option) (*guardduty.DeleteIPSetOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "DeleteIPSet cancelled", ctx.Err())
	default:
		return d.DeleteIPSet(in)
	}
}

func (d *GuardDutyDouble) DeleteInvitations(i0 *guardduty.DeleteInvitationsInput) (r0 *guardduty.DeleteInvitationsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteInvitations", i0)
	r0, _ = returns[0].(*guardduty.DeleteInvitationsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *GuardDutyDouble) DeleteInvitationsRequest(i0 *guardduty.DeleteInvitationsInput) (r0 *request.Request, r1 *guardduty.DeleteInvitationsOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteInvitationsRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*guardduty.DeleteInvitationsOutput)
	return
}

func (d *GuardDutyDouble) DeleteInvitationsWithContext(i0 context.Context, i1 *guardduty.DeleteInvitationsInput, i2 ...request.Option) (r0 *guardduty.DeleteInvitationsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteInvitationsWithContext", i0, i1, i2)
	r0, _ = returns[0].(*guardduty.DeleteInvitationsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *GuardDutyDouble) fakeDeleteInvitationsWithContext(ctx context.Context, in *guardduty.DeleteInvitationsInput, _ ...request.Option) (*guardduty.DeleteInvitationsOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "DeleteInvitations cancelled", ctx.Err())
	default:
		return d.DeleteInvitations(in)
	}
}

func (d *GuardDutyDouble) DeleteMembers(i0 *guardduty.DeleteMembersInput) (r0 *guardduty.DeleteMembersOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteMembers", i0)
	r0, _ = returns[0].(*guardduty.DeleteMembersOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *GuardDutyDouble) DeleteMembersRequest(i0 *guardduty.DeleteMembersInput) (r0 *request.Request, r1 *guardduty.DeleteMembersOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteMembersRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*guardduty.DeleteMembersOutput)
	return
}

func (d *GuardDutyDouble) DeleteMembersWithContext(i0 context.Context, i1 *guardduty.DeleteMembersInput, i2 ...request.Option) (r0 *guardduty.DeleteMembersOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteMembersWithContext", i0, i1, i2)
	r0, _ = returns[0].(*guardduty.DeleteMembersOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *GuardDutyDouble) fakeDeleteMembersWithContext(ctx context.Context, in *guardduty.DeleteMembersInput, _ ...request.Option) (*guardduty.DeleteMembersOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "DeleteMembers cancelled", ctx.Err())
	default:
		return d.DeleteMembers(in)
	}
}

func (d *GuardDutyDouble) DeletePublishingDestination(i0 *guardduty.DeletePublishingDestinationInput) (r0 *guardduty.DeletePublishingDestinationOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeletePublishingDestination", i0)
	r0, _ = returns[0].(*guardduty.DeletePublishingDestinationOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *GuardDutyDouble) DeletePublishingDestinationRequest(i0 *guardduty.DeletePublishingDestinationInput) (r0 *request.Request, r1 *guardduty.DeletePublishingDestinationOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeletePublishingDestinationRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*guardduty.DeletePublishingDestinationOutput)
	return
}

func (d *GuardDutyDouble) DeletePublishingDestinationWithContext(i0 context.Context, i1 *guardduty.DeletePublishingDestinationInput, i2 ...request.Option) (r0 *guardduty.DeletePublishingDestinationOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeletePublishingDestinationWithContext", i0, i1, i2)
	r0, _ = returns[0].(*guardduty.DeletePublishingDestinationOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *GuardDutyDouble) fakeDeletePublishingDestinationWithContext(ctx context.Context, in *guardduty.DeletePublishingDestinationInput, _ ...request.Option) (*guardduty.DeletePublishingDestinationOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "DeletePublishingDestination cancelled", ctx.Err())
	default:
		return d.DeletePublishingDestination(in)
	}
}

func (d *GuardDutyDouble) DeleteThreatIntelSet(i0 *guardduty.DeleteThreatIntelSetInput) (r0 *guardduty.DeleteThreatIntelSetOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteThreatIntelSet", i0)
	r0, _ = returns[0].(*guardduty.DeleteThreatIntelSetOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *GuardDutyDouble) DeleteThreatIntelSetRequest(i0 *guardduty.DeleteThreatIntelSetInput) (r0 *request.Request, r1 *guardduty.DeleteThreatIntelSetOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteThreatIntelSetRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*guardduty.DeleteThreatIntelSetOutput)
	return
}

func (d *GuardDutyDouble) DeleteThreatIntelSetWithContext(i0 context.Context, i1 *guardduty.DeleteThreatIntelSetInput, i2 ...request.Option) (r0 *guardduty.DeleteThreatIntelSetOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteThreatIntelSetWithContext", i0, i1, i2)
	r0, _ = returns[0].(*guardduty.DeleteThreatIntelSetOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *GuardDutyDouble) fakeDeleteThreatIntelSetWithContext(ctx context.Context, in *guardduty.DeleteThreatIntelSetInput, _ ...request.Option) (*guardduty.DeleteThreatIntelSetOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "DeleteThreatIntelSet cancelled", ctx.Err())
	default:
		return d.DeleteThreatIntelSet(in)
	}
}

func (d *GuardDutyDouble) DescribePublishingDestination(i0 *guardduty.DescribePublishingDestinationInput) (r0 *guardduty.DescribePublishingDestinationOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DescribePublishingDestination", i0)
	r0, _ = returns[0].(*guardduty.DescribePublishingDestinationOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *GuardDutyDouble) DescribePublishingDestinationRequest(i0 *guardduty.DescribePublishingDestinationInput) (r0 *request.Request, r1 *guardduty.DescribePublishingDestinationOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DescribePublishingDestinationRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*guardduty.DescribePublishingDestinationOutput)
	return
}

func (d *GuardDutyDouble) DescribePublishingDestinationWithContext(i0 context.Context, i1 *guardduty.DescribePublishingDestinationInput, i2 ...request.Option) (r0 *guardduty.DescribePublishingDestinationOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DescribePublishingDestinationWithContext", i0, i1, i2)
	r0, _ = returns[0].(*guardduty.DescribePublishingDestinationOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *GuardDutyDouble) fakeDescribePublishingDestinationWithContext(ctx context.Context, in *guardduty.DescribePublishingDestinationInput, _ ...request.Option) (*guardduty.DescribePublishingDestinationOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "DescribePublishingDestination cancelled", ctx.Err())
	default:
		return d.DescribePublishingDestination(in)
	}
}

func (d *GuardDutyDouble) DisassociateFromMasterAccount(i0 *guardduty.DisassociateFromMasterAccountInput) (r0 *guardduty.DisassociateFromMasterAccountOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DisassociateFromMasterAccount", i0)
	r0, _ = returns[0].(*guardduty.DisassociateFromMasterAccountOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *GuardDutyDouble) DisassociateFromMasterAccountRequest(i0 *guardduty.DisassociateFromMasterAccountInput) (r0 *request.Request, r1 *guardduty.DisassociateFromMasterAccountOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DisassociateFromMasterAccountRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*guardduty.DisassociateFromMasterAccountOutput)
	return
}

func (d *GuardDutyDouble) DisassociateFromMasterAccountWithContext(i0 context.Context, i1 *guardduty.DisassociateFromMasterAccountInput, i2 ...request.Option) (r0 *guardduty.DisassociateFromMasterAccountOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DisassociateFromMasterAccountWithContext", i0, i1, i2)
	r0, _ = returns[0].(*guardduty.DisassociateFromMasterAccountOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *GuardDutyDouble) fakeDisassociateFromMasterAccountWithContext(ctx context.Context, in *guardduty.DisassociateFromMasterAccountInput, _ ...request.Option) (*guardduty.DisassociateFromMasterAccountOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "DisassociateFromMasterAccount cancelled", ctx.Err())
	default:
		return d.DisassociateFromMasterAccount(in)
	}
}

func (d *GuardDutyDouble) DisassociateMembers(i0 *guardduty.DisassociateMembersInput) (r0 *guardduty.DisassociateMembersOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DisassociateMembers", i0)
	r0, _ = returns[0].(*guardduty.DisassociateMembersOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *GuardDutyDouble) DisassociateMembersRequest(i0 *guardduty.DisassociateMembersInput) (r0 *request.Request, r1 *guardduty.DisassociateMembersOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DisassociateMembersRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*guardduty.DisassociateMembersOutput)
	return
}

func (d *GuardDutyDouble) DisassociateMembersWithContext(i0 context.Context, i1 *guardduty.DisassociateMembersInput, i2 ...request.Option) (r0 *guardduty.DisassociateMembersOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DisassociateMembersWithContext", i0, i1, i2)
	r0, _ = returns[0].(*guardduty.DisassociateMembersOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *GuardDutyDouble) fakeDisassociateMembersWithContext(ctx context.Context, in *guardduty.DisassociateMembersInput, _ ...request.Option) (*guardduty.DisassociateMembersOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "DisassociateMembers cancelled", ctx.Err())
	default:
		return d.DisassociateMembers(in)
	}
}

func (d *GuardDutyDouble) GetDetector(i0 *guardduty.GetDetectorInput) (r0 *guardduty.GetDetectorOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetDetector", i0)
	r0, _ = returns[0].(*guardduty.GetDetectorOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *GuardDutyDouble) GetDetectorRequest(i0 *guardduty.GetDetectorInput) (r0 *request.Request, r1 *guardduty.GetDetectorOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetDetectorRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*guardduty.GetDetectorOutput)
	return
}

func (d *GuardDutyDouble) GetDetectorWithContext(i0 context.Context, i1 *guardduty.GetDetectorInput, i2 ...request.Option) (r0 *guardduty.GetDetectorOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetDetectorWithContext", i0, i1, i2)
	r0, _ = returns[0].(*guardduty.GetDetectorOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *GuardDutyDouble) fakeGetDetectorWithContext(ctx context.Context, in *guardduty.GetDetectorInput, _ ...request.Option) (*guardduty.GetDetectorOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "GetDetector cancelled", ctx.Err())
	default:
		return d.GetDetector(in)
	}
}

func (d *GuardDutyDouble) GetFilter(i0 *guardduty.GetFilterInput) (r0 *guardduty.GetFilterOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetFilter", i0)
	r0, _ = returns[0].(*guardduty.GetFilterOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *GuardDutyDouble) GetFilterRequest(i0 *guardduty.GetFilterInput) (r0 *request.Request, r1 *guardduty.GetFilterOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetFilterRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*guardduty.GetFilterOutput)
	return
}

func (d *GuardDutyDouble) GetFilterWithContext(i0 context.Context, i1 *guardduty.GetFilterInput, i2 ...request.Option) (r0 *guardduty.GetFilterOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetFilterWithContext", i0, i1, i2)
	r0, _ = returns[0].(*guardduty.GetFilterOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *GuardDutyDouble) fakeGetFilterWithContext(ctx context.Context, in *guardduty.GetFilterInput, _ ...request.Option) (*guardduty.GetFilterOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "GetFilter cancelled", ctx.Err())
	default:
		return d.GetFilter(in)
	}
}

func (d *GuardDutyDouble) GetFindings(i0 *guardduty.GetFindingsInput) (r0 *guardduty.GetFindingsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetFindings", i0)
	r0, _ = returns[0].(*guardduty.GetFindingsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *GuardDutyDouble) GetFindingsRequest(i0 *guardduty.GetFindingsInput) (r0 *request.Request, r1 *guardduty.GetFindingsOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetFindingsRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*guardduty.GetFindingsOutput)
	return
}

func (d *GuardDutyDouble) GetFindingsStatistics(i0 *guardduty.GetFindingsStatisticsInput) (r0 *guardduty.GetFindingsStatisticsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetFindingsStatistics", i0)
	r0, _ = returns[0].(*guardduty.GetFindingsStatisticsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *GuardDutyDouble) GetFindingsStatisticsRequest(i0 *guardduty.GetFindingsStatisticsInput) (r0 *request.Request, r1 *guardduty.GetFindingsStatisticsOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetFindingsStatisticsRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*guardduty.GetFindingsStatisticsOutput)
	return
}

func (d *GuardDutyDouble) GetFindingsStatisticsWithContext(i0 context.Context, i1 *guardduty.GetFindingsStatisticsInput, i2 ...request.Option) (r0 *guardduty.GetFindingsStatisticsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetFindingsStatisticsWithContext", i0, i1, i2)
	r0, _ = returns[0].(*guardduty.GetFindingsStatisticsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *GuardDutyDouble) fakeGetFindingsStatisticsWithContext(ctx context.Context, in *guardduty.GetFindingsStatisticsInput, _ ...request.Option) (*guardduty.GetFindingsStatisticsOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "GetFindingsStatistics cancelled", ctx.Err())
	default:
		return d.GetFindingsStatistics(in)
	}
}

func (d *GuardDutyDouble) GetFindingsWithContext(i0 context.Context, i1 *guardduty.GetFindingsInput, i2 ...request.Option) (r0 *guardduty.GetFindingsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetFindingsWithContext", i0, i1, i2)
	r0, _ = returns[0].(*guardduty.GetFindingsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *GuardDutyDouble) fakeGetFindingsWithContext(ctx context.Context, in *guardduty.GetFindingsInput, _ ...request.Option) (*guardduty.GetFindingsOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "GetFindings cancelled", ctx.Err())
	default:
		return d.GetFindings(in)
	}
}

func (d *GuardDutyDouble) GetIPSet(i0 *guardduty.GetIPSetInput) (r0 *guardduty.GetIPSetOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetIPSet", i0)
	r0, _ = returns[0].(*guardduty.GetIPSetOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *GuardDutyDouble) GetIPSetRequest(i0 *guardduty.GetIPSetInput) (r0 *request.Request, r1 *guardduty.GetIPSetOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetIPSetRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*guardduty.GetIPSetOutput)
	return
}

func (d *GuardDutyDouble) GetIPSetWithContext(i0 context.Context, i1 *guardduty.GetIPSetInput, i2 ...request.Option) (r0 *guardduty.GetIPSetOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetIPSetWithContext", i0, i1, i2)
	r0, _ = returns[0].(*guardduty.GetIPSetOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *GuardDutyDouble) fakeGetIPSetWithContext(ctx context.Context, in *guardduty.GetIPSetInput, _ ...request.Option) (*guardduty.GetIPSetOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "GetIPSet cancelled", ctx.Err())
	default:
		return d.GetIPSet(in)
	}
}

func (d *GuardDutyDouble) GetInvitationsCount(i0 *guardduty.GetInvitationsCountInput) (r0 *guardduty.GetInvitationsCountOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetInvitationsCount", i0)
	r0, _ = returns[0].(*guardduty.GetInvitationsCountOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *GuardDutyDouble) GetInvitationsCountRequest(i0 *guardduty.GetInvitationsCountInput) (r0 *request.Request, r1 *guardduty.GetInvitationsCountOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetInvitationsCountRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*guardduty.GetInvitationsCountOutput)
	return
}

func (d *GuardDutyDouble) GetInvitationsCountWithContext(i0 context.Context, i1 *guardduty.GetInvitationsCountInput, i2 ...request.Option) (r0 *guardduty.GetInvitationsCountOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetInvitationsCountWithContext", i0, i1, i2)
	r0, _ = returns[0].(*guardduty.GetInvitationsCountOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *GuardDutyDouble) fakeGetInvitationsCountWithContext(ctx context.Context, in *guardduty.GetInvitationsCountInput, _ ...request.Option) (*guardduty.GetInvitationsCountOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "GetInvitationsCount cancelled", ctx.Err())
	default:
		return d.GetInvitationsCount(in)
	}
}

func (d *GuardDutyDouble) GetMasterAccount(i0 *guardduty.GetMasterAccountInput) (r0 *guardduty.GetMasterAccountOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetMasterAccount", i0)
	r0, _ = returns[0].(*guardduty.GetMasterAccountOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *GuardDutyDouble) GetMasterAccountRequest(i0 *guardduty.GetMasterAccountInput) (r0 *request.Request, r1 *guardduty.GetMasterAccountOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetMasterAccountRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*guardduty.GetMasterAccountOutput)
	return
}

func (d *GuardDutyDouble) GetMasterAccountWithContext(i0 context.Context, i1 *guardduty.GetMasterAccountInput, i2 ...request.Option) (r0 *guardduty.GetMasterAccountOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetMasterAccountWithContext", i0, i1, i2)
	r0, _ = returns[0].(*guardduty.GetMasterAccountOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *GuardDutyDouble) fakeGetMasterAccountWithContext(ctx context.Context, in *guardduty.GetMasterAccountInput, _ ...request.Option) (*guardduty.GetMasterAccountOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "GetMasterAccount cancelled", ctx.Err())
	default:
		return d.GetMasterAccount(in)
	}
}

func (d *GuardDutyDouble) GetMembers(i0 *guardduty.GetMembersInput) (r0 *guardduty.GetMembersOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetMembers", i0)
	r0, _ = returns[0].(*guardduty.GetMembersOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *GuardDutyDouble) GetMembersRequest(i0 *guardduty.GetMembersInput) (r0 *request.Request, r1 *guardduty.GetMembersOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetMembersRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*guardduty.GetMembersOutput)
	return
}

func (d *GuardDutyDouble) GetMembersWithContext(i0 context.Context, i1 *guardduty.GetMembersInput, i2 ...request.Option) (r0 *guardduty.GetMembersOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetMembersWithContext", i0, i1, i2)
	r0, _ = returns[0].(*guardduty.GetMembersOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *GuardDutyDouble) fakeGetMembersWithContext(ctx context.Context, in *guardduty.GetMembersInput, _ ...request.Option) (*guardduty.GetMembersOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "GetMembers cancelled", ctx.Err())
	default:
		return d.GetMembers(in)
	}
}

func (d *GuardDutyDouble) GetThreatIntelSet(i0 *guardduty.GetThreatIntelSetInput) (r0 *guardduty.GetThreatIntelSetOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetThreatIntelSet", i0)
	r0, _ = returns[0].(*guardduty.GetThreatIntelSetOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *GuardDutyDouble) GetThreatIntelSetRequest(i0 *guardduty.GetThreatIntelSetInput) (r0 *request.Request, r1 *guardduty.GetThreatIntelSetOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetThreatIntelSetRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*guardduty.GetThreatIntelSetOutput)
	return
}

func (d *GuardDutyDouble) GetThreatIntelSetWithContext(i0 context.Context, i1 *guardduty.GetThreatIntelSetInput, i2 ...request.Option) (r0 *guardduty.GetThreatIntelSetOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetThreatIntelSetWithContext", i0, i1, i2)
	r0, _ = returns[0].(*guardduty.GetThreatIntelSetOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *GuardDutyDouble) fakeGetThreatIntelSetWithContext(ctx context.Context, in *guardduty.GetThreatIntelSetInput, _ ...request.Option) (*guardduty.GetThreatIntelSetOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "GetThreatIntelSet cancelled", ctx.Err())
	default:
		return d.GetThreatIntelSet(in)
	}
}

func (d *GuardDutyDouble) InviteMembers(i0 *guardduty.InviteMembersInput) (r0 *guardduty.InviteMembersOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("InviteMembers", i0)
	r0, _ = returns[0].(*guardduty.InviteMembersOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *GuardDutyDouble) InviteMembersRequest(i0 *guardduty.InviteMembersInput) (r0 *request.Request, r1 *guardduty.InviteMembersOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("InviteMembersRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*guardduty.InviteMembersOutput)
	return
}

func (d *GuardDutyDouble) InviteMembersWithContext(i0 context.Context, i1 *guardduty.InviteMembersInput, i2 ...request.Option) (r0 *guardduty.InviteMembersOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("InviteMembersWithContext", i0, i1, i2)
	r0, _ = returns[0].(*guardduty.InviteMembersOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *GuardDutyDouble) fakeInviteMembersWithContext(ctx context.Context, in *guardduty.InviteMembersInput, _ ...request.Option) (*guardduty.InviteMembersOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "InviteMembers cancelled", ctx.Err())
	default:
		return d.InviteMembers(in)
	}
}

func (d *GuardDutyDouble) ListDetectors(i0 *guardduty.ListDetectorsInput) (r0 *guardduty.ListDetectorsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListDetectors", i0)
	r0, _ = returns[0].(*guardduty.ListDetectorsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *GuardDutyDouble) ListDetectorsPages(i0 *guardduty.ListDetectorsInput, i1 func(*guardduty.ListDetectorsOutput, bool) bool) (r0 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListDetectorsPages", i0, i1)
	r0, _ = returns[0].(error)
	return
}

func (d *GuardDutyDouble) fakeListDetectorsPages(in *guardduty.ListDetectorsInput, pager func(*guardduty.ListDetectorsOutput, bool) (shouldContinue bool)) error {
	return d.Paginate("ListDetectors", paginators, in, pager)
}

func (d *GuardDutyDouble) ListDetectorsPagesWithContext(i0 context.Context, i1 *guardduty.ListDetectorsInput, i2 func(*guardduty.ListDetectorsOutput, bool) bool, i3 ...request.Option) (r0 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListDetectorsPagesWithContext", i0, i1, i2, i3)
	r0, _ = returns[0].(error)
	return
}

func (d *GuardDutyDouble) fakeListDetectorsPagesWithContext(ctx context.Context, in *guardduty.ListDetectorsInput, pager func(*guardduty.ListDetectorsOutput, bool) (shouldContinue bool), options ...request.Option) error {
	return d.PaginateWithContext("ListDetectors", paginators, ctx, in, pager, options...)
}

func (d *GuardDutyDouble) ListDetectorsRequest(i0 *guardduty.ListDetectorsInput) (r0 *request.Request, r1 *guardduty.ListDetectorsOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListDetectorsRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*guardduty.ListDetectorsOutput)
	return
}

func (d *GuardDutyDouble) ListDetectorsWithContext(i0 context.Context, i1 *guardduty.ListDetectorsInput, i2 ...request.Option) (r0 *guardduty.ListDetectorsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListDetectorsWithContext", i0, i1, i2)
	r0, _ = returns[0].(*guardduty.ListDetectorsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *GuardDutyDouble) fakeListDetectorsWithContext(ctx context.Context, in *guardduty.ListDetectorsInput, _ ...request.Option) (*guardduty.ListDetectorsOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "ListDetectors cancelled", ctx.Err())
	default:
		return d.ListDetectors(in)
	}
}

func (d *GuardDutyDouble) ListFilters(i0 *guardduty.ListFiltersInput) (r0 *guardduty.ListFiltersOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListFilters", i0)
	r0, _ = returns[0].(*guardduty.ListFiltersOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *GuardDutyDouble) ListFiltersPages(i0 *guardduty.ListFiltersInput, i1 func(*guardduty.ListFiltersOutput, bool) bool) (r0 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListFiltersPages", i0, i1)
	r0, _ = returns[0].(error)
	return
}

func (d *GuardDutyDouble) fakeListFiltersPages(in *guardduty.ListFiltersInput, pager func(*guardduty.ListFiltersOutput, bool) (shouldContinue bool)) error {
	return d.Paginate("ListFilters", paginators, in, pager)
}

func (d *GuardDutyDouble) ListFiltersPagesWithContext(i0 context.Context, i1 *guardduty.ListFiltersInput, i2 func(*guardduty.ListFiltersOutput, bool) bool, i3 ...request.Option) (r0 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListFiltersPagesWithContext", i0, i1, i2, i3)
	r0, _ = returns[0].(error)
	return
}

func (d *GuardDutyDouble) fakeListFiltersPagesWithContext(ctx context.Context, in *guardduty.ListFiltersInput, pager func(*guardduty.ListFiltersOutput, bool) (shouldContinue bool), options ...request.Option) error {
	return d.PaginateWithContext("ListFilters", paginators, ctx, in, pager, options...)
}

func (d *GuardDutyDouble) ListFiltersRequest(i0 *guardduty.ListFiltersInput) (r0 *request.Request, r1 *guardduty.ListFiltersOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListFiltersRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*guardduty.ListFiltersOutput)
	return
}

func (d *GuardDutyDouble) ListFiltersWithContext(i0 context.Context, i1 *guardduty.ListFiltersInput, i2 ...request.Option) (r0 *guardduty.ListFiltersOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListFiltersWithContext", i0, i1, i2)
	r0, _ = returns[0].(*guardduty.ListFiltersOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *GuardDutyDouble) fakeListFiltersWithContext(ctx context.Context, in *guardduty.ListFiltersInput, _ ...request.Option) (*guardduty.ListFiltersOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "ListFilters cancelled", ctx.Err())
	default:
		return d.ListFilters(in)
	}
}

func (d *GuardDutyDouble) ListFindings(i0 *guardduty.ListFindingsInput) (r0 *guardduty.ListFindingsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListFindings", i0)
	r0, _ = returns[0].(*guardduty.ListFindingsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *GuardDutyDouble) ListFindingsPages(i0 *guardduty.ListFindingsInput, i1 func(*guardduty.ListFindingsOutput, bool) bool) (r0 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListFindingsPages", i0, i1)
	r0, _ = returns[0].(error)
	return
}

func (d *GuardDutyDouble) fakeListFindingsPages(in *guardduty.ListFindingsInput, pager func(*guardduty.ListFindingsOutput, bool) (shouldContinue bool)) error {
	return d.Paginate("ListFindings", paginators, in, pager)
}

func (d *GuardDutyDouble) ListFindingsPagesWithContext(i0 context.Context, i1 *guardduty.ListFindingsInput, i2 func(*guardduty.ListFindingsOutput, bool) bool, i3 ...request.Option) (r0 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListFindingsPagesWithContext", i0, i1, i2, i3)
	r0, _ = returns[0].(error)
	return
}

func (d *GuardDutyDouble) fakeListFindingsPagesWithContext(ctx context.Context, in *guardduty.ListFindingsInput, pager func(*guardduty.ListFindingsOutput, bool) (shouldContinue bool), options ...request.Option) error {
	return d.PaginateWithContext("ListFindings", paginators, ctx, in, pager, options...)
}

func (d *GuardDutyDouble) ListFindingsRequest(i0 *guardduty.ListFindingsInput) (r0 *request.Request, r1 *guardduty.ListFindingsOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListFindingsRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*guardduty.ListFindingsOutput)
	return
}

func (d *GuardDutyDouble) ListFindingsWithContext(i0 context.Context, i1 *guardduty.ListFindingsInput, i2 ...request.Option) (r0 *guardduty.ListFindingsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListFindingsWithContext", i0, i1, i2)
	r0, _ = returns[0].(*guardduty.ListFindingsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *GuardDutyDouble) fakeListFindingsWithContext(ctx context.Context, in *guardduty.ListFindingsInput, _ ...request.Option) (*guardduty.ListFindingsOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "ListFindings cancelled", ctx.Err())
	default:
		return d.ListFindings(in)
	}
}

func (d *GuardDutyDouble) ListIPSets(i0 *guardduty.ListIPSetsInput) (r0 *guardduty.ListIPSetsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListIPSets", i0)
	r0, _ = returns[0].(*guardduty.ListIPSetsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *GuardDutyDouble) ListIPSetsPages(i0 *guardduty.ListIPSetsInput, i1 func(*guardduty.ListIPSetsOutput, bool) bool) (r0 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListIPSetsPages", i0, i1)
	r0, _ = returns[0].(error)
	return
}

func (d *GuardDutyDouble) fakeListIPSetsPages(in *guardduty.ListIPSetsInput, pager func(*guardduty.ListIPSetsOutput, bool) (shouldContinue bool)) error {
	return d.Paginate("ListIPSets", paginators, in, pager)
}

func (d *GuardDutyDouble) ListIPSetsPagesWithContext(i0 context.Context, i1 *guardduty.ListIPSetsInput, i2 func(*guardduty.ListIPSetsOutput, bool) bool, i3 ...request.Option) (r0 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListIPSetsPagesWithContext", i0, i1, i2, i3)
	r0, _ = returns[0].(error)
	return
}

func (d *GuardDutyDouble) fakeListIPSetsPagesWithContext(ctx context.Context, in *guardduty.ListIPSetsInput, pager func(*guardduty.ListIPSetsOutput, bool) (shouldContinue bool), options ...request.Option) error {
	return d.PaginateWithContext("ListIPSets", paginators, ctx, in, pager, options...)
}

func (d *GuardDutyDouble) ListIPSetsRequest(i0 *guardduty.ListIPSetsInput) (r0 *request.Request, r1 *guardduty.ListIPSetsOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListIPSetsRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*guardduty.ListIPSetsOutput)
	return
}

func (d *GuardDutyDouble) ListIPSetsWithContext(i0 context.Context, i1 *guardduty.ListIPSetsInput, i2 ...request.Option) (r0 *guardduty.ListIPSetsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListIPSetsWithContext", i0, i1, i2)
	r0, _ = returns[0].(*guardduty.ListIPSetsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *GuardDutyDouble) fakeListIPSetsWithContext(ctx context.Context, in *guardduty.ListIPSetsInput, _ ...request.Option) (*guardduty.ListIPSetsOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "ListIPSets cancelled", ctx.Err())
	default:
		return d.ListIPSets(in)
	}
}

func (d *GuardDutyDouble) ListInvitations(i0 *guardduty.ListInvitationsInput) (r0 *guardduty.ListInvitationsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListInvitations", i0)
	r0, _ = returns[0].(*guardduty.ListInvitationsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *GuardDutyDouble) ListInvitationsPages(i0 *guardduty.ListInvitationsInput, i1 func(*guardduty.ListInvitationsOutput, bool) bool) (r0 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListInvitationsPages", i0, i1)
	r0, _ = returns[0].(error)
	return
}

func (d *GuardDutyDouble) fakeListInvitationsPages(in *guardduty.ListInvitationsInput, pager func(*guardduty.ListInvitationsOutput, bool) (shouldContinue bool)) error {
	return d.Paginate("ListInvitations", paginators, in, pager)
}

func (d *GuardDutyDouble) ListInvitationsPagesWithContext(i0 context.Context, i1 *guardduty.ListInvitationsInput, i2 func(*guardduty.ListInvitationsOutput, bool) bool, i3 ...request.Option) (r0 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListInvitationsPagesWithContext", i0, i1, i2, i3)
	r0, _ = returns[0].(error)
	return
}

func (d *GuardDutyDouble) fakeListInvitationsPagesWithContext(ctx context.Context, in *guardduty.ListInvitationsInput, pager func(*guardduty.ListInvitationsOutput, bool) (shouldContinue bool), options ...request.Option) error {
	return d.PaginateWithContext("ListInvitations", paginators, ctx, in, pager, options...)
}

func (d *GuardDutyDouble) ListInvitationsRequest(i0 *guardduty.ListInvitationsInput) (r0 *request.Request, r1 *guardduty.ListInvitationsOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListInvitationsRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*guardduty.ListInvitationsOutput)
	return
}

func (d *GuardDutyDouble) ListInvitationsWithContext(i0 context.Context, i1 *guardduty.ListInvitationsInput, i2 ...request.Option) (r0 *guardduty.ListInvitationsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListInvitationsWithContext", i0, i1, i2)
	r0, _ = returns[0].(*guardduty.ListInvitationsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *GuardDutyDouble) fakeListInvitationsWithContext(ctx context.Context, in *guardduty.ListInvitationsInput, _ ...request.Option) (*guardduty.ListInvitationsOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "ListInvitations cancelled", ctx.Err())
	default:
		return d.ListInvitations(in)
	}
}

func (d *GuardDutyDouble) ListMembers(i0 *guardduty.ListMembersInput) (r0 *guardduty.ListMembersOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListMembers", i0)
	r0, _ = returns[0].(*guardduty.ListMembersOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *GuardDutyDouble) ListMembersPages(i0 *guardduty.ListMembersInput, i1 func(*guardduty.ListMembersOutput, bool) bool) (r0 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListMembersPages", i0, i1)
	r0, _ = returns[0].(error)
	return
}

func (d *GuardDutyDouble) fakeListMembersPages(in *guardduty.ListMembersInput, pager func(*guardduty.ListMembersOutput, bool) (shouldContinue bool)) error {
	return d.Paginate("ListMembers", paginators, in, pager)
}

func (d *GuardDutyDouble) ListMembersPagesWithContext(i0 context.Context, i1 *guardduty.ListMembersInput, i2 func(*guardduty.ListMembersOutput, bool) bool, i3 ...request.Option) (r0 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListMembersPagesWithContext", i0, i1, i2, i3)
	r0, _ = returns[0].(error)
	return
}

func (d *GuardDutyDouble) fakeListMembersPagesWithContext(ctx context.Context, in *guardduty.ListMembersInput, pager func(*guardduty.ListMembersOutput, bool) (shouldContinue bool), options ...request.Option) error {
	return d.PaginateWithContext("ListMembers", paginators, ctx, in, pager, options...)
}

func (d *GuardDutyDouble) ListMembersRequest(i0 *guardduty.ListMembersInput) (r0 *request.Request, r1 *guardduty.ListMembersOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListMembersRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*guardduty.ListMembersOutput)
	return
}

func (d *GuardDutyDouble) ListMembersWithContext(i0 context.Context, i1 *guardduty.ListMembersInput, i2 ...request.Option) (r0 *guardduty.ListMembersOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListMembersWithContext", i0, i1, i2)
	r0, _ = returns[0].(*guardduty.ListMembersOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *GuardDutyDouble) fakeListMembersWithContext(ctx context.Context, in *guardduty.ListMembersInput, _ ...request.Option) (*guardduty.ListMembersOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "ListMembers cancelled", ctx.Err())
	default:
		return d.ListMembers(in)
	}
}

func (d *GuardDutyDouble) ListPublishingDestinations(i0 *guardduty.ListPublishingDestinationsInput) (r0 *guardduty.ListPublishingDestinationsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListPublishingDestinations", i0)
	r0, _ = returns[0].(*guardduty.ListPublishingDestinationsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *GuardDutyDouble) ListPublishingDestinationsPages(i0 *guardduty.ListPublishingDestinationsInput, i1 func(*guardduty.ListPublishingDestinationsOutput, bool) bool) (r0 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListPublishingDestinationsPages", i0, i1)
	r0, _ = returns[0].(error)
	return
}

func (d *GuardDutyDouble) fakeListPublishingDestinationsPages(in *guardduty.ListPublishingDestinationsInput, pager func(*guardduty.ListPublishingDestinationsOutput, bool) (shouldContinue bool)) error {
	return d.Paginate("ListPublishingDestinations", paginators, in, pager)
}

func (d *GuardDutyDouble) ListPublishingDestinationsPagesWithContext(i0 context.Context, i1 *guardduty.ListPublishingDestinationsInput, i2 func(*guardduty.ListPublishingDestinationsOutput, bool) bool, i3 ...request.Option) (r0 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListPublishingDestinationsPagesWithContext", i0, i1, i2, i3)
	r0, _ = returns[0].(error)
	return
}

func (d *GuardDutyDouble) fakeListPublishingDestinationsPagesWithContext(ctx context.Context, in *guardduty.ListPublishingDestinationsInput, pager func(*guardduty.ListPublishingDestinationsOutput, bool) (shouldContinue bool), options ...request.Option) error {
	return d.PaginateWithContext("ListPublishingDestinations", paginators, ctx, in, pager, options...)
}

func (d *GuardDutyDouble) ListPublishingDestinationsRequest(i0 *guardduty.ListPublishingDestinationsInput) (r0 *request.Request, r1 *guardduty.ListPublishingDestinationsOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListPublishingDestinationsRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*guardduty.ListPublishingDestinationsOutput)
	return
}

func (d *GuardDutyDouble) ListPublishingDestinationsWithContext(i0 context.Context, i1 *guardduty.ListPublishingDestinationsInput, i2 ...request.Option) (r0 *guardduty.ListPublishingDestinationsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListPublishingDestinationsWithContext", i0, i1, i2)
	r0, _ = returns[0].(*guardduty.ListPublishingDestinationsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *GuardDutyDouble) fakeListPublishingDestinationsWithContext(ctx context.Context, in *guardduty.ListPublishingDestinationsInput, _ ...request.Option) (*guardduty.ListPublishingDestinationsOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "ListPublishingDestinations cancelled", ctx.Err())
	default:
		return d.ListPublishingDestinations(in)
	}
}

func (d *GuardDutyDouble) ListTagsForResource(i0 *guardduty.ListTagsForResourceInput) (r0 *guardduty.ListTagsForResourceOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListTagsForResource", i0)
	r0, _ = returns[0].(*guardduty.ListTagsForResourceOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *GuardDutyDouble) ListTagsForResourceRequest(i0 *guardduty.ListTagsForResourceInput) (r0 *request.Request, r1 *guardduty.ListTagsForResourceOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListTagsForResourceRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*guardduty.ListTagsForResourceOutput)
	return
}

func (d *GuardDutyDouble) ListTagsForResourceWithContext(i0 context.Context, i1 *guardduty.ListTagsForResourceInput, i2 ...request.Option) (r0 *guardduty.ListTagsForResourceOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListTagsForResourceWithContext", i0, i1, i2)
	r0, _ = returns[0].(*guardduty.ListTagsForResourceOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *GuardDutyDouble) fakeListTagsForResourceWithContext(ctx context.Context, in *guardduty.ListTagsForResourceInput, _ ...request.Option) (*guardduty.ListTagsForResourceOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "ListTagsForResource cancelled", ctx.Err())
	default:
		return d.ListTagsForResource(in)
	}
}

func (d *GuardDutyDouble) ListThreatIntelSets(i0 *guardduty.ListThreatIntelSetsInput) (r0 *guardduty.ListThreatIntelSetsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListThreatIntelSets", i0)
	r0, _ = returns[0].(*guardduty.ListThreatIntelSetsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *GuardDutyDouble) ListThreatIntelSetsPages(i0 *guardduty.ListThreatIntelSetsInput, i1 func(*guardduty.ListThreatIntelSetsOutput, bool) bool) (r0 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListThreatIntelSetsPages", i0, i1)
	r0, _ = returns[0].(error)
	return
}

func (d *GuardDutyDouble) fakeListThreatIntelSetsPages(in *guardduty.ListThreatIntelSetsInput, pager func(*guardduty.ListThreatIntelSetsOutput, bool) (shouldContinue bool)) error {
	return d.Paginate("ListThreatIntelSets", paginators, in, pager)
}

func (d *GuardDutyDouble) ListThreatIntelSetsPagesWithContext(i0 context.Context, i1 *guardduty.ListThreatIntelSetsInput, i2 func(*guardduty.ListThreatIntelSetsOutput, bool) bool, i3 ...request.Option) (r0 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListThreatIntelSetsPagesWithContext", i0, i1, i2, i3)
	r0, _ = returns[0].(error)
	return
}

func (d *GuardDutyDouble) fakeListThreatIntelSetsPagesWithContext(ctx context.Context, in *guardduty.ListThreatIntelSetsInput, pager func(*guardduty.ListThreatIntelSetsOutput, bool) (shouldContinue bool), options ...request.Option) error {
	return d.PaginateWithContext("ListThreatIntelSets", paginators, ctx, in, pager, options...)
}

func (d *GuardDutyDouble) ListThreatIntelSetsRequest(i0 *guardduty.ListThreatIntelSetsInput) (r0 *request.Request, r1 *guardduty.ListThreatIntelSetsOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListThreatIntelSetsRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*guardduty.ListThreatIntelSetsOutput)
	return
}

func (d *GuardDutyDouble) ListThreatIntelSetsWithContext(i0 context.Context, i1 *guardduty.ListThreatIntelSetsInput, i2 ...request.Option) (r0 *guardduty.ListThreatIntelSetsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListThreatIntelSetsWithContext", i0, i1, i2)
	r0, _ = returns[0].(*guardduty.ListThreatIntelSetsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *GuardDutyDouble) fakeListThreatIntelSetsWithContext(ctx context.Context, in *guardduty.ListThreatIntelSetsInput, _ ...request.Option) (*guardduty.ListThreatIntelSetsOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "ListThreatIntelSets cancelled", ctx.Err())
	default:
		return d.ListThreatIntelSets(in)
	}
}

func (d *GuardDutyDouble) StartMonitoringMembers(i0 *guardduty.StartMonitoringMembersInput) (r0 *guardduty.StartMonitoringMembersOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("StartMonitoringMembers", i0)
	r0, _ = returns[0].(*guardduty.StartMonitoringMembersOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *GuardDutyDouble) StartMonitoringMembersRequest(i0 *guardduty.StartMonitoringMembersInput) (r0 *request.Request, r1 *guardduty.StartMonitoringMembersOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("StartMonitoringMembersRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*guardduty.StartMonitoringMembersOutput)
	return
}

func (d *GuardDutyDouble) StartMonitoringMembersWithContext(i0 context.Context, i1 *guardduty.StartMonitoringMembersInput, i2 ...request.Option) (r0 *guardduty.StartMonitoringMembersOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("StartMonitoringMembersWithContext", i0, i1, i2)
	r0, _ = returns[0].(*guardduty.StartMonitoringMembersOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *GuardDutyDouble) fakeStartMonitoringMembersWithContext(ctx context.Context, in *guardduty.StartMonitoringMembersInput, _ ...request.Option) (*guardduty.StartMonitoringMembersOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "StartMonitoringMembers cancelled", ctx.Err())
	default:
		return d.StartMonitoringMembers(in)
	}
}

func (d *GuardDutyDouble) StopMonitoringMembers(i0 *guardduty.StopMonitoringMembersInput) (r0 *guardduty.StopMonitoringMembersOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("StopMonitoringMembers", i0)
	r0, _ = returns[0].(*guardduty.StopMonitoringMembersOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *GuardDutyDouble) StopMonitoringMembersRequest(i0 *guardduty.StopMonitoringMembersInput) (r0 *request.Request, r1 *guardduty.StopMonitoringMembersOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("StopMonitoringMembersRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*guardduty.StopMonitoringMembersOutput)
	return
}

func (d *GuardDutyDouble) StopMonitoringMembersWithContext(i0 context.Context, i1 *guardduty.StopMonitoringMembersInput, i2 ...request.Option) (r0 *guardduty.StopMonitoringMembersOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("StopMonitoringMembersWithContext", i0, i1, i2)
	r0, _ = returns[0].(*guardduty.StopMonitoringMembersOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *GuardDutyDouble) fakeStopMonitoringMembersWithContext(ctx context.Context, in *guardduty.StopMonitoringMembersInput, _ ...request.Option) (*guardduty.StopMonitoringMembersOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "StopMonitoringMembers cancelled", ctx.Err())
	default:
		return d.StopMonitoringMembers(in)
	}
}

func (d *GuardDutyDouble) TagResource(i0 *guardduty.TagResourceInput) (r0 *guardduty.TagResourceOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("TagResource", i0)
	r0, _ = returns[0].(*guardduty.TagResourceOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *GuardDutyDouble) TagResourceRequest(i0 *guardduty.TagResourceInput) (r0 *request.Request, r1 *guardduty.TagResourceOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("TagResourceRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*guardduty.TagResourceOutput)
	return
}

func (d *GuardDutyDouble) TagResourceWithContext(i0 context.Context, i1 *guardduty.TagResourceInput, i2 ...request.Option) (r0 *guardduty.TagResourceOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("TagResourceWithContext", i0, i1, i2)
	r0, _ = returns[0].(*guardduty.TagResourceOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *GuardDutyDouble) fakeTagResourceWithContext(ctx context.Context, in *guardduty.TagResourceInput, _ ...request.Option) (*guardduty.TagResourceOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "TagResource cancelled", ctx.Err())
	default:
		return d.TagResource(in)
	}
}

func (d *GuardDutyDouble) UnarchiveFindings(i0 *guardduty.UnarchiveFindingsInput) (r0 *guardduty.UnarchiveFindingsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UnarchiveFindings", i0)
	r0, _ = returns[0].(*guardduty.UnarchiveFindingsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *GuardDutyDouble) UnarchiveFindingsRequest(i0 *guardduty.UnarchiveFindingsInput) (r0 *request.Request, r1 *guardduty.UnarchiveFindingsOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UnarchiveFindingsRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*guardduty.UnarchiveFindingsOutput)
	return
}

func (d *GuardDutyDouble) UnarchiveFindingsWithContext(i0 context.Context, i1 *guardduty.UnarchiveFindingsInput, i2 ...request.Option) (r0 *guardduty.UnarchiveFindingsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UnarchiveFindingsWithContext", i0, i1, i2)
	r0, _ = returns[0].(*guardduty.UnarchiveFindingsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *GuardDutyDouble) fakeUnarchiveFindingsWithContext(ctx context.Context, in *guardduty.UnarchiveFindingsInput, _ ...request.Option) (*guardduty.UnarchiveFindingsOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "UnarchiveFindings cancelled", ctx.Err())
	default:
		return d.UnarchiveFindings(in)
	}
}

func (d *GuardDutyDouble) UntagResource(i0 *guardduty.UntagResourceInput) (r0 *guardduty.UntagResourceOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UntagResource", i0)
	r0, _ = returns[0].(*guardduty.UntagResourceOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *GuardDutyDouble) UntagResourceRequest(i0 *guardduty.UntagResourceInput) (r0 *request.Request, r1 *guardduty.UntagResourceOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UntagResourceRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*guardduty.UntagResourceOutput)
	return
}

func (d *GuardDutyDouble) UntagResourceWithContext(i0 context.Context, i1 *guardduty.UntagResourceInput, i2 ...request.Option) (r0 *guardduty.UntagResourceOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UntagResourceWithContext", i0, i1, i2)
	r0, _ = returns[0].(*guardduty.UntagResourceOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *GuardDutyDouble) fakeUntagResourceWithContext(ctx context.Context, in *guardduty.UntagResourceInput, _ ...request.Option) (*guardduty.UntagResourceOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "UntagResource cancelled", ctx.Err())
	default:
		return d.UntagResource(in)
	}
}

func (d *GuardDutyDouble) UpdateDetector(i0 *guardduty.UpdateDetectorInput) (r0 *guardduty.UpdateDetectorOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UpdateDetector", i0)
	r0, _ = returns[0].(*guardduty.UpdateDetectorOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *GuardDutyDouble) UpdateDetectorRequest(i0 *guardduty.UpdateDetectorInput) (r0 *request.Request, r1 *guardduty.UpdateDetectorOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UpdateDetectorRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*guardduty.UpdateDetectorOutput)
	return
}

func (d *GuardDutyDouble) UpdateDetectorWithContext(i0 context.Context, i1 *guardduty.UpdateDetectorInput, i2 ...request.Option) (r0 *guardduty.UpdateDetectorOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UpdateDetectorWithContext", i0, i1, i2)
	r0, _ = returns[0].(*guardduty.UpdateDetectorOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *GuardDutyDouble) fakeUpdateDetectorWithContext(ctx context.Context, in *guardduty.UpdateDetectorInput, _ ...request.Option) (*guardduty.UpdateDetectorOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "UpdateDetector cancelled", ctx.Err())
	default:
		return d.UpdateDetector(in)
	}
}

func (d *GuardDutyDouble) UpdateFilter(i0 *guardduty.UpdateFilterInput) (r0 *guardduty.UpdateFilterOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UpdateFilter", i0)
	r0, _ = returns[0].(*guardduty.UpdateFilterOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *GuardDutyDouble) UpdateFilterRequest(i0 *guardduty.UpdateFilterInput) (r0 *request.Request, r1 *guardduty.UpdateFilterOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UpdateFilterRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*guardduty.UpdateFilterOutput)
	return
}

func (d *GuardDutyDouble) UpdateFilterWithContext(i0 context.Context, i1 *guardduty.UpdateFilterInput, i2 ...request.Option) (r0 *guardduty.UpdateFilterOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UpdateFilterWithContext", i0, i1, i2)
	r0, _ = returns[0].(*guardduty.UpdateFilterOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *GuardDutyDouble) fakeUpdateFilterWithContext(ctx context.Context, in *guardduty.UpdateFilterInput, _ ...request.Option) (*guardduty.UpdateFilterOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "UpdateFilter cancelled", ctx.Err())
	default:
		return d.UpdateFilter(in)
	}
}

func (d *GuardDutyDouble) UpdateFindingsFeedback(i0 *guardduty.UpdateFindingsFeedbackInput) (r0 *guardduty.UpdateFindingsFeedbackOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UpdateFindingsFeedback", i0)
	r0, _ = returns[0].(*guardduty.UpdateFindingsFeedbackOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *GuardDutyDouble) UpdateFindingsFeedbackRequest(i0 *guardduty.UpdateFindingsFeedbackInput) (r0 *request.Request, r1 *guardduty.UpdateFindingsFeedbackOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UpdateFindingsFeedbackRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*guardduty.UpdateFindingsFeedbackOutput)
	return
}

func (d *GuardDutyDouble) UpdateFindingsFeedbackWithContext(i0 context.Context, i1 *guardduty.UpdateFindingsFeedbackInput, i2 ...request.Option) (r0 *guardduty.UpdateFindingsFeedbackOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UpdateFindingsFeedbackWithContext", i0, i1, i2)
	r0, _ = returns[0].(*guardduty.UpdateFindingsFeedbackOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *GuardDutyDouble) fakeUpdateFindingsFeedbackWithContext(ctx context.Context, in *guardduty.UpdateFindingsFeedbackInput, _ ...request.Option) (*guardduty.UpdateFindingsFeedbackOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "UpdateFindingsFeedback cancelled", ctx.Err())
	default:
		return d.UpdateFindingsFeedback(in)
	}
}

func (d *GuardDutyDouble) UpdateIPSet(i0 *guardduty.UpdateIPSetInput) (r0 *guardduty.UpdateIPSetOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UpdateIPSet", i0)
	r0, _ = returns[0].(*guardduty.UpdateIPSetOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *GuardDutyDouble) UpdateIPSetRequest(i0 *guardduty.UpdateIPSetInput) (r0 *request.Request, r1 *guardduty.UpdateIPSetOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UpdateIPSetRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*guardduty.UpdateIPSetOutput)
	return
}

func (d *GuardDutyDouble) UpdateIPSetWithContext(i0 context.Context, i1 *guardduty.UpdateIPSetInput, i2 ...request.Option) (r0 *guardduty.UpdateIPSetOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UpdateIPSetWithContext", i0, i1, i2)
	r0, _ = returns[0].(*guardduty.UpdateIPSetOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *GuardDutyDouble) fakeUpdateIPSetWithContext(ctx context.Context, in *guardduty.UpdateIPSetInput, _ ...request.Option) (*guardduty.UpdateIPSetOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "UpdateIPSet cancelled", ctx.Err())
	default:
		return d.UpdateIPSet(in)
	}
}

func (d *GuardDutyDouble) UpdatePublishingDestination(i0 *guardduty.UpdatePublishingDestinationInput) (r0 *guardduty.UpdatePublishingDestinationOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UpdatePublishingDestination", i0)
	r0, _ = returns[0].(*guardduty.UpdatePublishingDestinationOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *GuardDutyDouble) UpdatePublishingDestinationRequest(i0 *guardduty.UpdatePublishingDestinationInput) (r0 *request.Request, r1 *guardduty.UpdatePublishingDestinationOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UpdatePublishingDestinationRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*guardduty.UpdatePublishingDestinationOutput)
	return
}

func (d *GuardDutyDouble) UpdatePublishingDestinationWithContext(i0 context.Context, i1 *guardduty.UpdatePublishingDestinationInput, i2 ...request.Option) (r0 *guardduty.UpdatePublishingDestinationOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UpdatePublishingDestinationWithContext", i0, i1, i2)
	r0, _ = returns[0].(*guardduty.UpdatePublishingDestinationOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *GuardDutyDouble) fakeUpdatePublishingDestinationWithContext(ctx context.Context, in *guardduty.UpdatePublishingDestinationInput, _ ...request.Option) (*guardduty.UpdatePublishingDestinationOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "UpdatePublishingDestination cancelled", ctx.Err())
	default:
		return d.UpdatePublishingDestination(in)
	}
}

func (d *GuardDutyDouble) UpdateThreatIntelSet(i0 *guardduty.UpdateThreatIntelSetInput) (r0 *guardduty.UpdateThreatIntelSetOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UpdateThreatIntelSet", i0)
	r0, _ = returns[0].(*guardduty.UpdateThreatIntelSetOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *GuardDutyDouble) UpdateThreatIntelSetRequest(i0 *guardduty.UpdateThreatIntelSetInput) (r0 *request.Request, r1 *guardduty.UpdateThreatIntelSetOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UpdateThreatIntelSetRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*guardduty.UpdateThreatIntelSetOutput)
	return
}

func (d *GuardDutyDouble) UpdateThreatIntelSetWithContext(i0 context.Context, i1 *guardduty.UpdateThreatIntelSetInput, i2 ...request.Option) (r0 *guardduty.UpdateThreatIntelSetOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UpdateThreatIntelSetWithContext", i0, i1, i2)
	r0, _ = returns[0].(*guardduty.UpdateThreatIntelSetOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *GuardDutyDouble) fakeUpdateThreatIntelSetWithContext(ctx context.Context, in *guardduty.UpdateThreatIntelSetInput, _ ...request.Option) (*guardduty.UpdateThreatIntelSetOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "UpdateThreatIntelSet cancelled", ctx.Err())
	default:
		return d.UpdateThreatIntelSet(in)
	}
}
