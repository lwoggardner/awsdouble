// Code generated by go awsdoublegen; DO NOT EDIT.
// This file was generated at 2020-01-29T21:22:05+11:00
package eksdouble

import (
	"time"

	"github.com/aws/aws-sdk-go/aws/request"
	"github.com/lwoggardner/awsdouble"
)

var waiters = map[string]*awsdouble.Waiter{

	"ClusterActive": &awsdouble.Waiter{
		OperationName: "DescribeCluster",
		Waiter: request.Waiter{
			Name:        "WaitUntilClusterActive",
			MaxAttempts: 40,
			Delay:       request.ConstantWaiterDelay(30 * time.Second),
			Acceptors: []request.WaiterAcceptor{
				{
					State:   request.FailureWaiterState,
					Matcher: request.PathWaiterMatch, Argument: "cluster.status",
					Expected: "DELETING",
				},
				{
					State:   request.FailureWaiterState,
					Matcher: request.PathWaiterMatch, Argument: "cluster.status",
					Expected: "FAILED",
				},
				{
					State:   request.SuccessWaiterState,
					Matcher: request.PathWaiterMatch, Argument: "cluster.status",
					Expected: "ACTIVE",
				},
			},
		},
	},

	"ClusterDeleted": &awsdouble.Waiter{
		OperationName: "DescribeCluster",
		Waiter: request.Waiter{
			Name:        "WaitUntilClusterDeleted",
			MaxAttempts: 40,
			Delay:       request.ConstantWaiterDelay(30 * time.Second),
			Acceptors: []request.WaiterAcceptor{
				{
					State:   request.FailureWaiterState,
					Matcher: request.PathWaiterMatch, Argument: "cluster.status",
					Expected: "ACTIVE",
				},
				{
					State:   request.FailureWaiterState,
					Matcher: request.PathWaiterMatch, Argument: "cluster.status",
					Expected: "CREATING",
				},
				{
					State:    request.SuccessWaiterState,
					Matcher:  request.ErrorWaiterMatch,
					Expected: "ResourceNotFoundException",
				},
			},
		},
	},

	"NodegroupActive": &awsdouble.Waiter{
		OperationName: "DescribeNodegroup",
		Waiter: request.Waiter{
			Name:        "WaitUntilNodegroupActive",
			MaxAttempts: 80,
			Delay:       request.ConstantWaiterDelay(30 * time.Second),
			Acceptors: []request.WaiterAcceptor{
				{
					State:   request.FailureWaiterState,
					Matcher: request.PathWaiterMatch, Argument: "nodegroup.status",
					Expected: "CREATE_FAILED",
				},
				{
					State:   request.SuccessWaiterState,
					Matcher: request.PathWaiterMatch, Argument: "nodegroup.status",
					Expected: "ACTIVE",
				},
			},
		},
	},

	"NodegroupDeleted": &awsdouble.Waiter{
		OperationName: "DescribeNodegroup",
		Waiter: request.Waiter{
			Name:        "WaitUntilNodegroupDeleted",
			MaxAttempts: 40,
			Delay:       request.ConstantWaiterDelay(30 * time.Second),
			Acceptors: []request.WaiterAcceptor{
				{
					State:   request.FailureWaiterState,
					Matcher: request.PathWaiterMatch, Argument: "nodegroup.status",
					Expected: "DELETE_FAILED",
				},
				{
					State:    request.SuccessWaiterState,
					Matcher:  request.ErrorWaiterMatch,
					Expected: "ResourceNotFoundException",
				},
			},
		},
	},
}
