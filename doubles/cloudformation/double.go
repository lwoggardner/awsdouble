// Code generated by go doublegen; DO NOT EDIT.
// This file was generated at 2020-02-14T22:11:32+11:00

// Package cloudformationdouble provides a TestDouble implementation of cloudformationiface.CloudFormationAPI
package cloudformationdouble

import (
	"context"

	"github.com/aws/aws-sdk-go/aws/awserr"
	"github.com/aws/aws-sdk-go/aws/request"
	"github.com/aws/aws-sdk-go/service/cloudformation"
	"github.com/aws/aws-sdk-go/service/cloudformation/cloudformationiface"
	"github.com/lwoggardner/awsdouble"
	"github.com/lwoggardner/godouble/godouble"
)

// CloudFormationDouble is TestDouble for cloudformationiface.CloudFormationAPI
type CloudFormationDouble struct {
	cloudformationiface.CloudFormationAPI
	*awsdouble.AWSTestDouble
}

// Constructor for CloudFormationDouble
// Default configuration will ensure
//   * API operations not explicitly stubbed will return an empty output struct pointer, and nil error.
//     To simulate long polling, "Poll" operations will return these values after a random delay of up to 100ms.
//   * WithContext methods implement a 'Fake' method that returns a cancellation error if the context is cancelled
//      before the method is called.
//   * Pages and PagesWithContext methods similarly implement a 'Fake' method that paginates over the underlying method.
//
//    This allows tests to only stub the simple api methods and be generally unconcerned whether the SUT is using the
//      Context or Pagination forms of the API.
//
func NewDouble(t godouble.T, configurators ...func(*awsdouble.AWSTestDouble)) *CloudFormationDouble {
	result := &CloudFormationDouble{}

	configurators = append([]func(configurator *awsdouble.AWSTestDouble){func(d *awsdouble.AWSTestDouble) {
		d.SetDefaultCall(result.defaultMethodCall)
		d.SetDefaultReturnValues(result.defaultReturnValues)
	}}, configurators...)

	result.AWSTestDouble = awsdouble.NewDouble(t, (*cloudformationiface.CloudFormationAPI)(nil), configurators...)
	return result
}

func (d *CloudFormationDouble) defaultReturnValues(m godouble.Method) godouble.ReturnValues {
	return d.DefaultReturnValues(m)
}

func (d *CloudFormationDouble) defaultMethodCall(m godouble.Method) godouble.MethodCall {
	switch m.Reflect().Name {

	case "CancelUpdateStackWithContext":
		return m.Fake(d.fakeCancelUpdateStackWithContext)

	case "ContinueUpdateRollbackWithContext":
		return m.Fake(d.fakeContinueUpdateRollbackWithContext)

	case "CreateChangeSetWithContext":
		return m.Fake(d.fakeCreateChangeSetWithContext)

	case "CreateStackInstancesWithContext":
		return m.Fake(d.fakeCreateStackInstancesWithContext)

	case "CreateStackSetWithContext":
		return m.Fake(d.fakeCreateStackSetWithContext)

	case "CreateStackWithContext":
		return m.Fake(d.fakeCreateStackWithContext)

	case "DeleteChangeSetWithContext":
		return m.Fake(d.fakeDeleteChangeSetWithContext)

	case "DeleteStackInstancesWithContext":
		return m.Fake(d.fakeDeleteStackInstancesWithContext)

	case "DeleteStackSetWithContext":
		return m.Fake(d.fakeDeleteStackSetWithContext)

	case "DeleteStackWithContext":
		return m.Fake(d.fakeDeleteStackWithContext)

	case "DeregisterTypeWithContext":
		return m.Fake(d.fakeDeregisterTypeWithContext)

	case "DescribeAccountLimitsWithContext":
		return m.Fake(d.fakeDescribeAccountLimitsWithContext)

	case "DescribeChangeSetWithContext":
		return m.Fake(d.fakeDescribeChangeSetWithContext)

	case "DescribeStackDriftDetectionStatusWithContext":
		return m.Fake(d.fakeDescribeStackDriftDetectionStatusWithContext)

	case "DescribeStackEventsPages":
		return m.Fake(d.fakeDescribeStackEventsPages)

	case "DescribeStackEventsPagesWithContext":
		return m.Fake(d.fakeDescribeStackEventsPagesWithContext)

	case "DescribeStackEventsWithContext":
		return m.Fake(d.fakeDescribeStackEventsWithContext)

	case "DescribeStackInstanceWithContext":
		return m.Fake(d.fakeDescribeStackInstanceWithContext)

	case "DescribeStackResourceDriftsPages":
		return m.Fake(d.fakeDescribeStackResourceDriftsPages)

	case "DescribeStackResourceDriftsPagesWithContext":
		return m.Fake(d.fakeDescribeStackResourceDriftsPagesWithContext)

	case "DescribeStackResourceDriftsWithContext":
		return m.Fake(d.fakeDescribeStackResourceDriftsWithContext)

	case "DescribeStackResourceWithContext":
		return m.Fake(d.fakeDescribeStackResourceWithContext)

	case "DescribeStackResourcesWithContext":
		return m.Fake(d.fakeDescribeStackResourcesWithContext)

	case "DescribeStackSetOperationWithContext":
		return m.Fake(d.fakeDescribeStackSetOperationWithContext)

	case "DescribeStackSetWithContext":
		return m.Fake(d.fakeDescribeStackSetWithContext)

	case "DescribeStacksPages":
		return m.Fake(d.fakeDescribeStacksPages)

	case "DescribeStacksPagesWithContext":
		return m.Fake(d.fakeDescribeStacksPagesWithContext)

	case "DescribeStacksWithContext":
		return m.Fake(d.fakeDescribeStacksWithContext)

	case "DescribeTypeRegistrationWithContext":
		return m.Fake(d.fakeDescribeTypeRegistrationWithContext)

	case "DescribeTypeWithContext":
		return m.Fake(d.fakeDescribeTypeWithContext)

	case "DetectStackDriftWithContext":
		return m.Fake(d.fakeDetectStackDriftWithContext)

	case "DetectStackResourceDriftWithContext":
		return m.Fake(d.fakeDetectStackResourceDriftWithContext)

	case "DetectStackSetDriftWithContext":
		return m.Fake(d.fakeDetectStackSetDriftWithContext)

	case "EstimateTemplateCostWithContext":
		return m.Fake(d.fakeEstimateTemplateCostWithContext)

	case "ExecuteChangeSetWithContext":
		return m.Fake(d.fakeExecuteChangeSetWithContext)

	case "GetStackPolicyWithContext":
		return m.Fake(d.fakeGetStackPolicyWithContext)

	case "GetTemplateSummaryWithContext":
		return m.Fake(d.fakeGetTemplateSummaryWithContext)

	case "GetTemplateWithContext":
		return m.Fake(d.fakeGetTemplateWithContext)

	case "ListChangeSetsWithContext":
		return m.Fake(d.fakeListChangeSetsWithContext)

	case "ListExportsPages":
		return m.Fake(d.fakeListExportsPages)

	case "ListExportsPagesWithContext":
		return m.Fake(d.fakeListExportsPagesWithContext)

	case "ListExportsWithContext":
		return m.Fake(d.fakeListExportsWithContext)

	case "ListImportsPages":
		return m.Fake(d.fakeListImportsPages)

	case "ListImportsPagesWithContext":
		return m.Fake(d.fakeListImportsPagesWithContext)

	case "ListImportsWithContext":
		return m.Fake(d.fakeListImportsWithContext)

	case "ListStackInstancesWithContext":
		return m.Fake(d.fakeListStackInstancesWithContext)

	case "ListStackResourcesPages":
		return m.Fake(d.fakeListStackResourcesPages)

	case "ListStackResourcesPagesWithContext":
		return m.Fake(d.fakeListStackResourcesPagesWithContext)

	case "ListStackResourcesWithContext":
		return m.Fake(d.fakeListStackResourcesWithContext)

	case "ListStackSetOperationResultsWithContext":
		return m.Fake(d.fakeListStackSetOperationResultsWithContext)

	case "ListStackSetOperationsWithContext":
		return m.Fake(d.fakeListStackSetOperationsWithContext)

	case "ListStackSetsWithContext":
		return m.Fake(d.fakeListStackSetsWithContext)

	case "ListStacksPages":
		return m.Fake(d.fakeListStacksPages)

	case "ListStacksPagesWithContext":
		return m.Fake(d.fakeListStacksPagesWithContext)

	case "ListStacksWithContext":
		return m.Fake(d.fakeListStacksWithContext)

	case "ListTypeRegistrationsPages":
		return m.Fake(d.fakeListTypeRegistrationsPages)

	case "ListTypeRegistrationsPagesWithContext":
		return m.Fake(d.fakeListTypeRegistrationsPagesWithContext)

	case "ListTypeRegistrationsWithContext":
		return m.Fake(d.fakeListTypeRegistrationsWithContext)

	case "ListTypeVersionsPages":
		return m.Fake(d.fakeListTypeVersionsPages)

	case "ListTypeVersionsPagesWithContext":
		return m.Fake(d.fakeListTypeVersionsPagesWithContext)

	case "ListTypeVersionsWithContext":
		return m.Fake(d.fakeListTypeVersionsWithContext)

	case "ListTypesPages":
		return m.Fake(d.fakeListTypesPages)

	case "ListTypesPagesWithContext":
		return m.Fake(d.fakeListTypesPagesWithContext)

	case "ListTypesWithContext":
		return m.Fake(d.fakeListTypesWithContext)

	case "RecordHandlerProgressWithContext":
		return m.Fake(d.fakeRecordHandlerProgressWithContext)

	case "RegisterTypeWithContext":
		return m.Fake(d.fakeRegisterTypeWithContext)

	case "SetStackPolicyWithContext":
		return m.Fake(d.fakeSetStackPolicyWithContext)

	case "SetTypeDefaultVersionWithContext":
		return m.Fake(d.fakeSetTypeDefaultVersionWithContext)

	case "SignalResourceWithContext":
		return m.Fake(d.fakeSignalResourceWithContext)

	case "StopStackSetOperationWithContext":
		return m.Fake(d.fakeStopStackSetOperationWithContext)

	case "UpdateStackInstancesWithContext":
		return m.Fake(d.fakeUpdateStackInstancesWithContext)

	case "UpdateStackSetWithContext":
		return m.Fake(d.fakeUpdateStackSetWithContext)

	case "UpdateStackWithContext":
		return m.Fake(d.fakeUpdateStackWithContext)

	case "UpdateTerminationProtectionWithContext":
		return m.Fake(d.fakeUpdateTerminationProtectionWithContext)

	case "ValidateTemplateWithContext":
		return m.Fake(d.fakeValidateTemplateWithContext)

	case "WaitUntilChangeSetCreateComplete":
		return m.Fake(d.fakeWaitUntilChangeSetCreateComplete)

	case "WaitUntilChangeSetCreateCompleteWithContext":
		return m.Fake(d.fakeWaitUntilChangeSetCreateCompleteWithContext)

	case "WaitUntilStackCreateComplete":
		return m.Fake(d.fakeWaitUntilStackCreateComplete)

	case "WaitUntilStackCreateCompleteWithContext":
		return m.Fake(d.fakeWaitUntilStackCreateCompleteWithContext)

	case "WaitUntilStackDeleteComplete":
		return m.Fake(d.fakeWaitUntilStackDeleteComplete)

	case "WaitUntilStackDeleteCompleteWithContext":
		return m.Fake(d.fakeWaitUntilStackDeleteCompleteWithContext)

	case "WaitUntilStackExists":
		return m.Fake(d.fakeWaitUntilStackExists)

	case "WaitUntilStackExistsWithContext":
		return m.Fake(d.fakeWaitUntilStackExistsWithContext)

	case "WaitUntilStackImportComplete":
		return m.Fake(d.fakeWaitUntilStackImportComplete)

	case "WaitUntilStackImportCompleteWithContext":
		return m.Fake(d.fakeWaitUntilStackImportCompleteWithContext)

	case "WaitUntilStackUpdateComplete":
		return m.Fake(d.fakeWaitUntilStackUpdateComplete)

	case "WaitUntilStackUpdateCompleteWithContext":
		return m.Fake(d.fakeWaitUntilStackUpdateCompleteWithContext)

	case "WaitUntilTypeRegistrationComplete":
		return m.Fake(d.fakeWaitUntilTypeRegistrationComplete)

	case "WaitUntilTypeRegistrationCompleteWithContext":
		return m.Fake(d.fakeWaitUntilTypeRegistrationCompleteWithContext)

	default:
		return nil
	}
}

func (d *CloudFormationDouble) CancelUpdateStack(i0 *cloudformation.CancelUpdateStackInput) (r0 *cloudformation.CancelUpdateStackOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CancelUpdateStack", i0)
	r0, _ = returns[0].(*cloudformation.CancelUpdateStackOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *CloudFormationDouble) CancelUpdateStackRequest(i0 *cloudformation.CancelUpdateStackInput) (r0 *request.Request, r1 *cloudformation.CancelUpdateStackOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CancelUpdateStackRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*cloudformation.CancelUpdateStackOutput)
	return
}

func (d *CloudFormationDouble) CancelUpdateStackWithContext(i0 context.Context, i1 *cloudformation.CancelUpdateStackInput, i2 ...request.Option) (r0 *cloudformation.CancelUpdateStackOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CancelUpdateStackWithContext", i0, i1, i2)
	r0, _ = returns[0].(*cloudformation.CancelUpdateStackOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *CloudFormationDouble) fakeCancelUpdateStackWithContext(ctx context.Context, in *cloudformation.CancelUpdateStackInput, _ ...request.Option) (*cloudformation.CancelUpdateStackOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "CancelUpdateStack cancelled", ctx.Err())
	default:
		return d.CancelUpdateStack(in)
	}
}

func (d *CloudFormationDouble) ContinueUpdateRollback(i0 *cloudformation.ContinueUpdateRollbackInput) (r0 *cloudformation.ContinueUpdateRollbackOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ContinueUpdateRollback", i0)
	r0, _ = returns[0].(*cloudformation.ContinueUpdateRollbackOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *CloudFormationDouble) ContinueUpdateRollbackRequest(i0 *cloudformation.ContinueUpdateRollbackInput) (r0 *request.Request, r1 *cloudformation.ContinueUpdateRollbackOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ContinueUpdateRollbackRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*cloudformation.ContinueUpdateRollbackOutput)
	return
}

func (d *CloudFormationDouble) ContinueUpdateRollbackWithContext(i0 context.Context, i1 *cloudformation.ContinueUpdateRollbackInput, i2 ...request.Option) (r0 *cloudformation.ContinueUpdateRollbackOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ContinueUpdateRollbackWithContext", i0, i1, i2)
	r0, _ = returns[0].(*cloudformation.ContinueUpdateRollbackOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *CloudFormationDouble) fakeContinueUpdateRollbackWithContext(ctx context.Context, in *cloudformation.ContinueUpdateRollbackInput, _ ...request.Option) (*cloudformation.ContinueUpdateRollbackOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "ContinueUpdateRollback cancelled", ctx.Err())
	default:
		return d.ContinueUpdateRollback(in)
	}
}

func (d *CloudFormationDouble) CreateChangeSet(i0 *cloudformation.CreateChangeSetInput) (r0 *cloudformation.CreateChangeSetOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreateChangeSet", i0)
	r0, _ = returns[0].(*cloudformation.CreateChangeSetOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *CloudFormationDouble) CreateChangeSetRequest(i0 *cloudformation.CreateChangeSetInput) (r0 *request.Request, r1 *cloudformation.CreateChangeSetOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreateChangeSetRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*cloudformation.CreateChangeSetOutput)
	return
}

func (d *CloudFormationDouble) CreateChangeSetWithContext(i0 context.Context, i1 *cloudformation.CreateChangeSetInput, i2 ...request.Option) (r0 *cloudformation.CreateChangeSetOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreateChangeSetWithContext", i0, i1, i2)
	r0, _ = returns[0].(*cloudformation.CreateChangeSetOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *CloudFormationDouble) fakeCreateChangeSetWithContext(ctx context.Context, in *cloudformation.CreateChangeSetInput, _ ...request.Option) (*cloudformation.CreateChangeSetOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "CreateChangeSet cancelled", ctx.Err())
	default:
		return d.CreateChangeSet(in)
	}
}

func (d *CloudFormationDouble) CreateStack(i0 *cloudformation.CreateStackInput) (r0 *cloudformation.CreateStackOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreateStack", i0)
	r0, _ = returns[0].(*cloudformation.CreateStackOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *CloudFormationDouble) CreateStackInstances(i0 *cloudformation.CreateStackInstancesInput) (r0 *cloudformation.CreateStackInstancesOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreateStackInstances", i0)
	r0, _ = returns[0].(*cloudformation.CreateStackInstancesOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *CloudFormationDouble) CreateStackInstancesRequest(i0 *cloudformation.CreateStackInstancesInput) (r0 *request.Request, r1 *cloudformation.CreateStackInstancesOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreateStackInstancesRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*cloudformation.CreateStackInstancesOutput)
	return
}

func (d *CloudFormationDouble) CreateStackInstancesWithContext(i0 context.Context, i1 *cloudformation.CreateStackInstancesInput, i2 ...request.Option) (r0 *cloudformation.CreateStackInstancesOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreateStackInstancesWithContext", i0, i1, i2)
	r0, _ = returns[0].(*cloudformation.CreateStackInstancesOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *CloudFormationDouble) fakeCreateStackInstancesWithContext(ctx context.Context, in *cloudformation.CreateStackInstancesInput, _ ...request.Option) (*cloudformation.CreateStackInstancesOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "CreateStackInstances cancelled", ctx.Err())
	default:
		return d.CreateStackInstances(in)
	}
}

func (d *CloudFormationDouble) CreateStackRequest(i0 *cloudformation.CreateStackInput) (r0 *request.Request, r1 *cloudformation.CreateStackOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreateStackRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*cloudformation.CreateStackOutput)
	return
}

func (d *CloudFormationDouble) CreateStackSet(i0 *cloudformation.CreateStackSetInput) (r0 *cloudformation.CreateStackSetOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreateStackSet", i0)
	r0, _ = returns[0].(*cloudformation.CreateStackSetOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *CloudFormationDouble) CreateStackSetRequest(i0 *cloudformation.CreateStackSetInput) (r0 *request.Request, r1 *cloudformation.CreateStackSetOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreateStackSetRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*cloudformation.CreateStackSetOutput)
	return
}

func (d *CloudFormationDouble) CreateStackSetWithContext(i0 context.Context, i1 *cloudformation.CreateStackSetInput, i2 ...request.Option) (r0 *cloudformation.CreateStackSetOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreateStackSetWithContext", i0, i1, i2)
	r0, _ = returns[0].(*cloudformation.CreateStackSetOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *CloudFormationDouble) fakeCreateStackSetWithContext(ctx context.Context, in *cloudformation.CreateStackSetInput, _ ...request.Option) (*cloudformation.CreateStackSetOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "CreateStackSet cancelled", ctx.Err())
	default:
		return d.CreateStackSet(in)
	}
}

func (d *CloudFormationDouble) CreateStackWithContext(i0 context.Context, i1 *cloudformation.CreateStackInput, i2 ...request.Option) (r0 *cloudformation.CreateStackOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreateStackWithContext", i0, i1, i2)
	r0, _ = returns[0].(*cloudformation.CreateStackOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *CloudFormationDouble) fakeCreateStackWithContext(ctx context.Context, in *cloudformation.CreateStackInput, _ ...request.Option) (*cloudformation.CreateStackOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "CreateStack cancelled", ctx.Err())
	default:
		return d.CreateStack(in)
	}
}

func (d *CloudFormationDouble) DeleteChangeSet(i0 *cloudformation.DeleteChangeSetInput) (r0 *cloudformation.DeleteChangeSetOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteChangeSet", i0)
	r0, _ = returns[0].(*cloudformation.DeleteChangeSetOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *CloudFormationDouble) DeleteChangeSetRequest(i0 *cloudformation.DeleteChangeSetInput) (r0 *request.Request, r1 *cloudformation.DeleteChangeSetOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteChangeSetRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*cloudformation.DeleteChangeSetOutput)
	return
}

func (d *CloudFormationDouble) DeleteChangeSetWithContext(i0 context.Context, i1 *cloudformation.DeleteChangeSetInput, i2 ...request.Option) (r0 *cloudformation.DeleteChangeSetOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteChangeSetWithContext", i0, i1, i2)
	r0, _ = returns[0].(*cloudformation.DeleteChangeSetOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *CloudFormationDouble) fakeDeleteChangeSetWithContext(ctx context.Context, in *cloudformation.DeleteChangeSetInput, _ ...request.Option) (*cloudformation.DeleteChangeSetOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "DeleteChangeSet cancelled", ctx.Err())
	default:
		return d.DeleteChangeSet(in)
	}
}

func (d *CloudFormationDouble) DeleteStack(i0 *cloudformation.DeleteStackInput) (r0 *cloudformation.DeleteStackOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteStack", i0)
	r0, _ = returns[0].(*cloudformation.DeleteStackOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *CloudFormationDouble) DeleteStackInstances(i0 *cloudformation.DeleteStackInstancesInput) (r0 *cloudformation.DeleteStackInstancesOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteStackInstances", i0)
	r0, _ = returns[0].(*cloudformation.DeleteStackInstancesOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *CloudFormationDouble) DeleteStackInstancesRequest(i0 *cloudformation.DeleteStackInstancesInput) (r0 *request.Request, r1 *cloudformation.DeleteStackInstancesOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteStackInstancesRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*cloudformation.DeleteStackInstancesOutput)
	return
}

func (d *CloudFormationDouble) DeleteStackInstancesWithContext(i0 context.Context, i1 *cloudformation.DeleteStackInstancesInput, i2 ...request.Option) (r0 *cloudformation.DeleteStackInstancesOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteStackInstancesWithContext", i0, i1, i2)
	r0, _ = returns[0].(*cloudformation.DeleteStackInstancesOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *CloudFormationDouble) fakeDeleteStackInstancesWithContext(ctx context.Context, in *cloudformation.DeleteStackInstancesInput, _ ...request.Option) (*cloudformation.DeleteStackInstancesOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "DeleteStackInstances cancelled", ctx.Err())
	default:
		return d.DeleteStackInstances(in)
	}
}

func (d *CloudFormationDouble) DeleteStackRequest(i0 *cloudformation.DeleteStackInput) (r0 *request.Request, r1 *cloudformation.DeleteStackOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteStackRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*cloudformation.DeleteStackOutput)
	return
}

func (d *CloudFormationDouble) DeleteStackSet(i0 *cloudformation.DeleteStackSetInput) (r0 *cloudformation.DeleteStackSetOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteStackSet", i0)
	r0, _ = returns[0].(*cloudformation.DeleteStackSetOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *CloudFormationDouble) DeleteStackSetRequest(i0 *cloudformation.DeleteStackSetInput) (r0 *request.Request, r1 *cloudformation.DeleteStackSetOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteStackSetRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*cloudformation.DeleteStackSetOutput)
	return
}

func (d *CloudFormationDouble) DeleteStackSetWithContext(i0 context.Context, i1 *cloudformation.DeleteStackSetInput, i2 ...request.Option) (r0 *cloudformation.DeleteStackSetOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteStackSetWithContext", i0, i1, i2)
	r0, _ = returns[0].(*cloudformation.DeleteStackSetOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *CloudFormationDouble) fakeDeleteStackSetWithContext(ctx context.Context, in *cloudformation.DeleteStackSetInput, _ ...request.Option) (*cloudformation.DeleteStackSetOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "DeleteStackSet cancelled", ctx.Err())
	default:
		return d.DeleteStackSet(in)
	}
}

func (d *CloudFormationDouble) DeleteStackWithContext(i0 context.Context, i1 *cloudformation.DeleteStackInput, i2 ...request.Option) (r0 *cloudformation.DeleteStackOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteStackWithContext", i0, i1, i2)
	r0, _ = returns[0].(*cloudformation.DeleteStackOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *CloudFormationDouble) fakeDeleteStackWithContext(ctx context.Context, in *cloudformation.DeleteStackInput, _ ...request.Option) (*cloudformation.DeleteStackOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "DeleteStack cancelled", ctx.Err())
	default:
		return d.DeleteStack(in)
	}
}

func (d *CloudFormationDouble) DeregisterType(i0 *cloudformation.DeregisterTypeInput) (r0 *cloudformation.DeregisterTypeOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeregisterType", i0)
	r0, _ = returns[0].(*cloudformation.DeregisterTypeOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *CloudFormationDouble) DeregisterTypeRequest(i0 *cloudformation.DeregisterTypeInput) (r0 *request.Request, r1 *cloudformation.DeregisterTypeOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeregisterTypeRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*cloudformation.DeregisterTypeOutput)
	return
}

func (d *CloudFormationDouble) DeregisterTypeWithContext(i0 context.Context, i1 *cloudformation.DeregisterTypeInput, i2 ...request.Option) (r0 *cloudformation.DeregisterTypeOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeregisterTypeWithContext", i0, i1, i2)
	r0, _ = returns[0].(*cloudformation.DeregisterTypeOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *CloudFormationDouble) fakeDeregisterTypeWithContext(ctx context.Context, in *cloudformation.DeregisterTypeInput, _ ...request.Option) (*cloudformation.DeregisterTypeOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "DeregisterType cancelled", ctx.Err())
	default:
		return d.DeregisterType(in)
	}
}

func (d *CloudFormationDouble) DescribeAccountLimits(i0 *cloudformation.DescribeAccountLimitsInput) (r0 *cloudformation.DescribeAccountLimitsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DescribeAccountLimits", i0)
	r0, _ = returns[0].(*cloudformation.DescribeAccountLimitsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *CloudFormationDouble) DescribeAccountLimitsRequest(i0 *cloudformation.DescribeAccountLimitsInput) (r0 *request.Request, r1 *cloudformation.DescribeAccountLimitsOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DescribeAccountLimitsRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*cloudformation.DescribeAccountLimitsOutput)
	return
}

func (d *CloudFormationDouble) DescribeAccountLimitsWithContext(i0 context.Context, i1 *cloudformation.DescribeAccountLimitsInput, i2 ...request.Option) (r0 *cloudformation.DescribeAccountLimitsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DescribeAccountLimitsWithContext", i0, i1, i2)
	r0, _ = returns[0].(*cloudformation.DescribeAccountLimitsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *CloudFormationDouble) fakeDescribeAccountLimitsWithContext(ctx context.Context, in *cloudformation.DescribeAccountLimitsInput, _ ...request.Option) (*cloudformation.DescribeAccountLimitsOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "DescribeAccountLimits cancelled", ctx.Err())
	default:
		return d.DescribeAccountLimits(in)
	}
}

func (d *CloudFormationDouble) DescribeChangeSet(i0 *cloudformation.DescribeChangeSetInput) (r0 *cloudformation.DescribeChangeSetOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DescribeChangeSet", i0)
	r0, _ = returns[0].(*cloudformation.DescribeChangeSetOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *CloudFormationDouble) DescribeChangeSetRequest(i0 *cloudformation.DescribeChangeSetInput) (r0 *request.Request, r1 *cloudformation.DescribeChangeSetOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DescribeChangeSetRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*cloudformation.DescribeChangeSetOutput)
	return
}

func (d *CloudFormationDouble) DescribeChangeSetWithContext(i0 context.Context, i1 *cloudformation.DescribeChangeSetInput, i2 ...request.Option) (r0 *cloudformation.DescribeChangeSetOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DescribeChangeSetWithContext", i0, i1, i2)
	r0, _ = returns[0].(*cloudformation.DescribeChangeSetOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *CloudFormationDouble) fakeDescribeChangeSetWithContext(ctx context.Context, in *cloudformation.DescribeChangeSetInput, _ ...request.Option) (*cloudformation.DescribeChangeSetOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "DescribeChangeSet cancelled", ctx.Err())
	default:
		return d.DescribeChangeSet(in)
	}
}

func (d *CloudFormationDouble) DescribeStackDriftDetectionStatus(i0 *cloudformation.DescribeStackDriftDetectionStatusInput) (r0 *cloudformation.DescribeStackDriftDetectionStatusOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DescribeStackDriftDetectionStatus", i0)
	r0, _ = returns[0].(*cloudformation.DescribeStackDriftDetectionStatusOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *CloudFormationDouble) DescribeStackDriftDetectionStatusRequest(i0 *cloudformation.DescribeStackDriftDetectionStatusInput) (r0 *request.Request, r1 *cloudformation.DescribeStackDriftDetectionStatusOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DescribeStackDriftDetectionStatusRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*cloudformation.DescribeStackDriftDetectionStatusOutput)
	return
}

func (d *CloudFormationDouble) DescribeStackDriftDetectionStatusWithContext(i0 context.Context, i1 *cloudformation.DescribeStackDriftDetectionStatusInput, i2 ...request.Option) (r0 *cloudformation.DescribeStackDriftDetectionStatusOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DescribeStackDriftDetectionStatusWithContext", i0, i1, i2)
	r0, _ = returns[0].(*cloudformation.DescribeStackDriftDetectionStatusOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *CloudFormationDouble) fakeDescribeStackDriftDetectionStatusWithContext(ctx context.Context, in *cloudformation.DescribeStackDriftDetectionStatusInput, _ ...request.Option) (*cloudformation.DescribeStackDriftDetectionStatusOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "DescribeStackDriftDetectionStatus cancelled", ctx.Err())
	default:
		return d.DescribeStackDriftDetectionStatus(in)
	}
}

func (d *CloudFormationDouble) DescribeStackEvents(i0 *cloudformation.DescribeStackEventsInput) (r0 *cloudformation.DescribeStackEventsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DescribeStackEvents", i0)
	r0, _ = returns[0].(*cloudformation.DescribeStackEventsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *CloudFormationDouble) DescribeStackEventsPages(i0 *cloudformation.DescribeStackEventsInput, i1 func(*cloudformation.DescribeStackEventsOutput, bool) bool) (r0 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DescribeStackEventsPages", i0, i1)
	r0, _ = returns[0].(error)
	return
}

func (d *CloudFormationDouble) fakeDescribeStackEventsPages(in *cloudformation.DescribeStackEventsInput, pager func(*cloudformation.DescribeStackEventsOutput, bool) (shouldContinue bool)) error {
	return d.Paginate("DescribeStackEvents", paginators, in, pager)
}

func (d *CloudFormationDouble) DescribeStackEventsPagesWithContext(i0 context.Context, i1 *cloudformation.DescribeStackEventsInput, i2 func(*cloudformation.DescribeStackEventsOutput, bool) bool, i3 ...request.Option) (r0 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DescribeStackEventsPagesWithContext", i0, i1, i2, i3)
	r0, _ = returns[0].(error)
	return
}

func (d *CloudFormationDouble) fakeDescribeStackEventsPagesWithContext(ctx context.Context, in *cloudformation.DescribeStackEventsInput, pager func(*cloudformation.DescribeStackEventsOutput, bool) (shouldContinue bool), options ...request.Option) error {
	return d.PaginateWithContext("DescribeStackEvents", paginators, ctx, in, pager, options...)
}

func (d *CloudFormationDouble) DescribeStackEventsRequest(i0 *cloudformation.DescribeStackEventsInput) (r0 *request.Request, r1 *cloudformation.DescribeStackEventsOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DescribeStackEventsRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*cloudformation.DescribeStackEventsOutput)
	return
}

func (d *CloudFormationDouble) DescribeStackEventsWithContext(i0 context.Context, i1 *cloudformation.DescribeStackEventsInput, i2 ...request.Option) (r0 *cloudformation.DescribeStackEventsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DescribeStackEventsWithContext", i0, i1, i2)
	r0, _ = returns[0].(*cloudformation.DescribeStackEventsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *CloudFormationDouble) fakeDescribeStackEventsWithContext(ctx context.Context, in *cloudformation.DescribeStackEventsInput, _ ...request.Option) (*cloudformation.DescribeStackEventsOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "DescribeStackEvents cancelled", ctx.Err())
	default:
		return d.DescribeStackEvents(in)
	}
}

func (d *CloudFormationDouble) DescribeStackInstance(i0 *cloudformation.DescribeStackInstanceInput) (r0 *cloudformation.DescribeStackInstanceOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DescribeStackInstance", i0)
	r0, _ = returns[0].(*cloudformation.DescribeStackInstanceOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *CloudFormationDouble) DescribeStackInstanceRequest(i0 *cloudformation.DescribeStackInstanceInput) (r0 *request.Request, r1 *cloudformation.DescribeStackInstanceOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DescribeStackInstanceRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*cloudformation.DescribeStackInstanceOutput)
	return
}

func (d *CloudFormationDouble) DescribeStackInstanceWithContext(i0 context.Context, i1 *cloudformation.DescribeStackInstanceInput, i2 ...request.Option) (r0 *cloudformation.DescribeStackInstanceOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DescribeStackInstanceWithContext", i0, i1, i2)
	r0, _ = returns[0].(*cloudformation.DescribeStackInstanceOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *CloudFormationDouble) fakeDescribeStackInstanceWithContext(ctx context.Context, in *cloudformation.DescribeStackInstanceInput, _ ...request.Option) (*cloudformation.DescribeStackInstanceOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "DescribeStackInstance cancelled", ctx.Err())
	default:
		return d.DescribeStackInstance(in)
	}
}

func (d *CloudFormationDouble) DescribeStackResource(i0 *cloudformation.DescribeStackResourceInput) (r0 *cloudformation.DescribeStackResourceOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DescribeStackResource", i0)
	r0, _ = returns[0].(*cloudformation.DescribeStackResourceOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *CloudFormationDouble) DescribeStackResourceDrifts(i0 *cloudformation.DescribeStackResourceDriftsInput) (r0 *cloudformation.DescribeStackResourceDriftsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DescribeStackResourceDrifts", i0)
	r0, _ = returns[0].(*cloudformation.DescribeStackResourceDriftsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *CloudFormationDouble) DescribeStackResourceDriftsPages(i0 *cloudformation.DescribeStackResourceDriftsInput, i1 func(*cloudformation.DescribeStackResourceDriftsOutput, bool) bool) (r0 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DescribeStackResourceDriftsPages", i0, i1)
	r0, _ = returns[0].(error)
	return
}

func (d *CloudFormationDouble) fakeDescribeStackResourceDriftsPages(in *cloudformation.DescribeStackResourceDriftsInput, pager func(*cloudformation.DescribeStackResourceDriftsOutput, bool) (shouldContinue bool)) error {
	return d.Paginate("DescribeStackResourceDrifts", paginators, in, pager)
}

func (d *CloudFormationDouble) DescribeStackResourceDriftsPagesWithContext(i0 context.Context, i1 *cloudformation.DescribeStackResourceDriftsInput, i2 func(*cloudformation.DescribeStackResourceDriftsOutput, bool) bool, i3 ...request.Option) (r0 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DescribeStackResourceDriftsPagesWithContext", i0, i1, i2, i3)
	r0, _ = returns[0].(error)
	return
}

func (d *CloudFormationDouble) fakeDescribeStackResourceDriftsPagesWithContext(ctx context.Context, in *cloudformation.DescribeStackResourceDriftsInput, pager func(*cloudformation.DescribeStackResourceDriftsOutput, bool) (shouldContinue bool), options ...request.Option) error {
	return d.PaginateWithContext("DescribeStackResourceDrifts", paginators, ctx, in, pager, options...)
}

func (d *CloudFormationDouble) DescribeStackResourceDriftsRequest(i0 *cloudformation.DescribeStackResourceDriftsInput) (r0 *request.Request, r1 *cloudformation.DescribeStackResourceDriftsOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DescribeStackResourceDriftsRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*cloudformation.DescribeStackResourceDriftsOutput)
	return
}

func (d *CloudFormationDouble) DescribeStackResourceDriftsWithContext(i0 context.Context, i1 *cloudformation.DescribeStackResourceDriftsInput, i2 ...request.Option) (r0 *cloudformation.DescribeStackResourceDriftsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DescribeStackResourceDriftsWithContext", i0, i1, i2)
	r0, _ = returns[0].(*cloudformation.DescribeStackResourceDriftsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *CloudFormationDouble) fakeDescribeStackResourceDriftsWithContext(ctx context.Context, in *cloudformation.DescribeStackResourceDriftsInput, _ ...request.Option) (*cloudformation.DescribeStackResourceDriftsOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "DescribeStackResourceDrifts cancelled", ctx.Err())
	default:
		return d.DescribeStackResourceDrifts(in)
	}
}

func (d *CloudFormationDouble) DescribeStackResourceRequest(i0 *cloudformation.DescribeStackResourceInput) (r0 *request.Request, r1 *cloudformation.DescribeStackResourceOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DescribeStackResourceRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*cloudformation.DescribeStackResourceOutput)
	return
}

func (d *CloudFormationDouble) DescribeStackResourceWithContext(i0 context.Context, i1 *cloudformation.DescribeStackResourceInput, i2 ...request.Option) (r0 *cloudformation.DescribeStackResourceOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DescribeStackResourceWithContext", i0, i1, i2)
	r0, _ = returns[0].(*cloudformation.DescribeStackResourceOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *CloudFormationDouble) fakeDescribeStackResourceWithContext(ctx context.Context, in *cloudformation.DescribeStackResourceInput, _ ...request.Option) (*cloudformation.DescribeStackResourceOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "DescribeStackResource cancelled", ctx.Err())
	default:
		return d.DescribeStackResource(in)
	}
}

func (d *CloudFormationDouble) DescribeStackResources(i0 *cloudformation.DescribeStackResourcesInput) (r0 *cloudformation.DescribeStackResourcesOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DescribeStackResources", i0)
	r0, _ = returns[0].(*cloudformation.DescribeStackResourcesOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *CloudFormationDouble) DescribeStackResourcesRequest(i0 *cloudformation.DescribeStackResourcesInput) (r0 *request.Request, r1 *cloudformation.DescribeStackResourcesOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DescribeStackResourcesRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*cloudformation.DescribeStackResourcesOutput)
	return
}

func (d *CloudFormationDouble) DescribeStackResourcesWithContext(i0 context.Context, i1 *cloudformation.DescribeStackResourcesInput, i2 ...request.Option) (r0 *cloudformation.DescribeStackResourcesOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DescribeStackResourcesWithContext", i0, i1, i2)
	r0, _ = returns[0].(*cloudformation.DescribeStackResourcesOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *CloudFormationDouble) fakeDescribeStackResourcesWithContext(ctx context.Context, in *cloudformation.DescribeStackResourcesInput, _ ...request.Option) (*cloudformation.DescribeStackResourcesOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "DescribeStackResources cancelled", ctx.Err())
	default:
		return d.DescribeStackResources(in)
	}
}

func (d *CloudFormationDouble) DescribeStackSet(i0 *cloudformation.DescribeStackSetInput) (r0 *cloudformation.DescribeStackSetOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DescribeStackSet", i0)
	r0, _ = returns[0].(*cloudformation.DescribeStackSetOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *CloudFormationDouble) DescribeStackSetOperation(i0 *cloudformation.DescribeStackSetOperationInput) (r0 *cloudformation.DescribeStackSetOperationOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DescribeStackSetOperation", i0)
	r0, _ = returns[0].(*cloudformation.DescribeStackSetOperationOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *CloudFormationDouble) DescribeStackSetOperationRequest(i0 *cloudformation.DescribeStackSetOperationInput) (r0 *request.Request, r1 *cloudformation.DescribeStackSetOperationOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DescribeStackSetOperationRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*cloudformation.DescribeStackSetOperationOutput)
	return
}

func (d *CloudFormationDouble) DescribeStackSetOperationWithContext(i0 context.Context, i1 *cloudformation.DescribeStackSetOperationInput, i2 ...request.Option) (r0 *cloudformation.DescribeStackSetOperationOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DescribeStackSetOperationWithContext", i0, i1, i2)
	r0, _ = returns[0].(*cloudformation.DescribeStackSetOperationOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *CloudFormationDouble) fakeDescribeStackSetOperationWithContext(ctx context.Context, in *cloudformation.DescribeStackSetOperationInput, _ ...request.Option) (*cloudformation.DescribeStackSetOperationOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "DescribeStackSetOperation cancelled", ctx.Err())
	default:
		return d.DescribeStackSetOperation(in)
	}
}

func (d *CloudFormationDouble) DescribeStackSetRequest(i0 *cloudformation.DescribeStackSetInput) (r0 *request.Request, r1 *cloudformation.DescribeStackSetOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DescribeStackSetRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*cloudformation.DescribeStackSetOutput)
	return
}

func (d *CloudFormationDouble) DescribeStackSetWithContext(i0 context.Context, i1 *cloudformation.DescribeStackSetInput, i2 ...request.Option) (r0 *cloudformation.DescribeStackSetOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DescribeStackSetWithContext", i0, i1, i2)
	r0, _ = returns[0].(*cloudformation.DescribeStackSetOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *CloudFormationDouble) fakeDescribeStackSetWithContext(ctx context.Context, in *cloudformation.DescribeStackSetInput, _ ...request.Option) (*cloudformation.DescribeStackSetOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "DescribeStackSet cancelled", ctx.Err())
	default:
		return d.DescribeStackSet(in)
	}
}

func (d *CloudFormationDouble) DescribeStacks(i0 *cloudformation.DescribeStacksInput) (r0 *cloudformation.DescribeStacksOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DescribeStacks", i0)
	r0, _ = returns[0].(*cloudformation.DescribeStacksOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *CloudFormationDouble) DescribeStacksPages(i0 *cloudformation.DescribeStacksInput, i1 func(*cloudformation.DescribeStacksOutput, bool) bool) (r0 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DescribeStacksPages", i0, i1)
	r0, _ = returns[0].(error)
	return
}

func (d *CloudFormationDouble) fakeDescribeStacksPages(in *cloudformation.DescribeStacksInput, pager func(*cloudformation.DescribeStacksOutput, bool) (shouldContinue bool)) error {
	return d.Paginate("DescribeStacks", paginators, in, pager)
}

func (d *CloudFormationDouble) DescribeStacksPagesWithContext(i0 context.Context, i1 *cloudformation.DescribeStacksInput, i2 func(*cloudformation.DescribeStacksOutput, bool) bool, i3 ...request.Option) (r0 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DescribeStacksPagesWithContext", i0, i1, i2, i3)
	r0, _ = returns[0].(error)
	return
}

func (d *CloudFormationDouble) fakeDescribeStacksPagesWithContext(ctx context.Context, in *cloudformation.DescribeStacksInput, pager func(*cloudformation.DescribeStacksOutput, bool) (shouldContinue bool), options ...request.Option) error {
	return d.PaginateWithContext("DescribeStacks", paginators, ctx, in, pager, options...)
}

func (d *CloudFormationDouble) DescribeStacksRequest(i0 *cloudformation.DescribeStacksInput) (r0 *request.Request, r1 *cloudformation.DescribeStacksOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DescribeStacksRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*cloudformation.DescribeStacksOutput)
	return
}

func (d *CloudFormationDouble) DescribeStacksWithContext(i0 context.Context, i1 *cloudformation.DescribeStacksInput, i2 ...request.Option) (r0 *cloudformation.DescribeStacksOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DescribeStacksWithContext", i0, i1, i2)
	r0, _ = returns[0].(*cloudformation.DescribeStacksOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *CloudFormationDouble) fakeDescribeStacksWithContext(ctx context.Context, in *cloudformation.DescribeStacksInput, _ ...request.Option) (*cloudformation.DescribeStacksOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "DescribeStacks cancelled", ctx.Err())
	default:
		return d.DescribeStacks(in)
	}
}

func (d *CloudFormationDouble) DescribeType(i0 *cloudformation.DescribeTypeInput) (r0 *cloudformation.DescribeTypeOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DescribeType", i0)
	r0, _ = returns[0].(*cloudformation.DescribeTypeOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *CloudFormationDouble) DescribeTypeRegistration(i0 *cloudformation.DescribeTypeRegistrationInput) (r0 *cloudformation.DescribeTypeRegistrationOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DescribeTypeRegistration", i0)
	r0, _ = returns[0].(*cloudformation.DescribeTypeRegistrationOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *CloudFormationDouble) DescribeTypeRegistrationRequest(i0 *cloudformation.DescribeTypeRegistrationInput) (r0 *request.Request, r1 *cloudformation.DescribeTypeRegistrationOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DescribeTypeRegistrationRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*cloudformation.DescribeTypeRegistrationOutput)
	return
}

func (d *CloudFormationDouble) DescribeTypeRegistrationWithContext(i0 context.Context, i1 *cloudformation.DescribeTypeRegistrationInput, i2 ...request.Option) (r0 *cloudformation.DescribeTypeRegistrationOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DescribeTypeRegistrationWithContext", i0, i1, i2)
	r0, _ = returns[0].(*cloudformation.DescribeTypeRegistrationOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *CloudFormationDouble) fakeDescribeTypeRegistrationWithContext(ctx context.Context, in *cloudformation.DescribeTypeRegistrationInput, _ ...request.Option) (*cloudformation.DescribeTypeRegistrationOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "DescribeTypeRegistration cancelled", ctx.Err())
	default:
		return d.DescribeTypeRegistration(in)
	}
}

func (d *CloudFormationDouble) DescribeTypeRequest(i0 *cloudformation.DescribeTypeInput) (r0 *request.Request, r1 *cloudformation.DescribeTypeOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DescribeTypeRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*cloudformation.DescribeTypeOutput)
	return
}

func (d *CloudFormationDouble) DescribeTypeWithContext(i0 context.Context, i1 *cloudformation.DescribeTypeInput, i2 ...request.Option) (r0 *cloudformation.DescribeTypeOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DescribeTypeWithContext", i0, i1, i2)
	r0, _ = returns[0].(*cloudformation.DescribeTypeOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *CloudFormationDouble) fakeDescribeTypeWithContext(ctx context.Context, in *cloudformation.DescribeTypeInput, _ ...request.Option) (*cloudformation.DescribeTypeOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "DescribeType cancelled", ctx.Err())
	default:
		return d.DescribeType(in)
	}
}

func (d *CloudFormationDouble) DetectStackDrift(i0 *cloudformation.DetectStackDriftInput) (r0 *cloudformation.DetectStackDriftOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DetectStackDrift", i0)
	r0, _ = returns[0].(*cloudformation.DetectStackDriftOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *CloudFormationDouble) DetectStackDriftRequest(i0 *cloudformation.DetectStackDriftInput) (r0 *request.Request, r1 *cloudformation.DetectStackDriftOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DetectStackDriftRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*cloudformation.DetectStackDriftOutput)
	return
}

func (d *CloudFormationDouble) DetectStackDriftWithContext(i0 context.Context, i1 *cloudformation.DetectStackDriftInput, i2 ...request.Option) (r0 *cloudformation.DetectStackDriftOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DetectStackDriftWithContext", i0, i1, i2)
	r0, _ = returns[0].(*cloudformation.DetectStackDriftOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *CloudFormationDouble) fakeDetectStackDriftWithContext(ctx context.Context, in *cloudformation.DetectStackDriftInput, _ ...request.Option) (*cloudformation.DetectStackDriftOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "DetectStackDrift cancelled", ctx.Err())
	default:
		return d.DetectStackDrift(in)
	}
}

func (d *CloudFormationDouble) DetectStackResourceDrift(i0 *cloudformation.DetectStackResourceDriftInput) (r0 *cloudformation.DetectStackResourceDriftOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DetectStackResourceDrift", i0)
	r0, _ = returns[0].(*cloudformation.DetectStackResourceDriftOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *CloudFormationDouble) DetectStackResourceDriftRequest(i0 *cloudformation.DetectStackResourceDriftInput) (r0 *request.Request, r1 *cloudformation.DetectStackResourceDriftOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DetectStackResourceDriftRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*cloudformation.DetectStackResourceDriftOutput)
	return
}

func (d *CloudFormationDouble) DetectStackResourceDriftWithContext(i0 context.Context, i1 *cloudformation.DetectStackResourceDriftInput, i2 ...request.Option) (r0 *cloudformation.DetectStackResourceDriftOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DetectStackResourceDriftWithContext", i0, i1, i2)
	r0, _ = returns[0].(*cloudformation.DetectStackResourceDriftOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *CloudFormationDouble) fakeDetectStackResourceDriftWithContext(ctx context.Context, in *cloudformation.DetectStackResourceDriftInput, _ ...request.Option) (*cloudformation.DetectStackResourceDriftOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "DetectStackResourceDrift cancelled", ctx.Err())
	default:
		return d.DetectStackResourceDrift(in)
	}
}

func (d *CloudFormationDouble) DetectStackSetDrift(i0 *cloudformation.DetectStackSetDriftInput) (r0 *cloudformation.DetectStackSetDriftOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DetectStackSetDrift", i0)
	r0, _ = returns[0].(*cloudformation.DetectStackSetDriftOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *CloudFormationDouble) DetectStackSetDriftRequest(i0 *cloudformation.DetectStackSetDriftInput) (r0 *request.Request, r1 *cloudformation.DetectStackSetDriftOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DetectStackSetDriftRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*cloudformation.DetectStackSetDriftOutput)
	return
}

func (d *CloudFormationDouble) DetectStackSetDriftWithContext(i0 context.Context, i1 *cloudformation.DetectStackSetDriftInput, i2 ...request.Option) (r0 *cloudformation.DetectStackSetDriftOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DetectStackSetDriftWithContext", i0, i1, i2)
	r0, _ = returns[0].(*cloudformation.DetectStackSetDriftOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *CloudFormationDouble) fakeDetectStackSetDriftWithContext(ctx context.Context, in *cloudformation.DetectStackSetDriftInput, _ ...request.Option) (*cloudformation.DetectStackSetDriftOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "DetectStackSetDrift cancelled", ctx.Err())
	default:
		return d.DetectStackSetDrift(in)
	}
}

func (d *CloudFormationDouble) EstimateTemplateCost(i0 *cloudformation.EstimateTemplateCostInput) (r0 *cloudformation.EstimateTemplateCostOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("EstimateTemplateCost", i0)
	r0, _ = returns[0].(*cloudformation.EstimateTemplateCostOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *CloudFormationDouble) EstimateTemplateCostRequest(i0 *cloudformation.EstimateTemplateCostInput) (r0 *request.Request, r1 *cloudformation.EstimateTemplateCostOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("EstimateTemplateCostRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*cloudformation.EstimateTemplateCostOutput)
	return
}

func (d *CloudFormationDouble) EstimateTemplateCostWithContext(i0 context.Context, i1 *cloudformation.EstimateTemplateCostInput, i2 ...request.Option) (r0 *cloudformation.EstimateTemplateCostOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("EstimateTemplateCostWithContext", i0, i1, i2)
	r0, _ = returns[0].(*cloudformation.EstimateTemplateCostOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *CloudFormationDouble) fakeEstimateTemplateCostWithContext(ctx context.Context, in *cloudformation.EstimateTemplateCostInput, _ ...request.Option) (*cloudformation.EstimateTemplateCostOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "EstimateTemplateCost cancelled", ctx.Err())
	default:
		return d.EstimateTemplateCost(in)
	}
}

func (d *CloudFormationDouble) ExecuteChangeSet(i0 *cloudformation.ExecuteChangeSetInput) (r0 *cloudformation.ExecuteChangeSetOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ExecuteChangeSet", i0)
	r0, _ = returns[0].(*cloudformation.ExecuteChangeSetOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *CloudFormationDouble) ExecuteChangeSetRequest(i0 *cloudformation.ExecuteChangeSetInput) (r0 *request.Request, r1 *cloudformation.ExecuteChangeSetOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ExecuteChangeSetRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*cloudformation.ExecuteChangeSetOutput)
	return
}

func (d *CloudFormationDouble) ExecuteChangeSetWithContext(i0 context.Context, i1 *cloudformation.ExecuteChangeSetInput, i2 ...request.Option) (r0 *cloudformation.ExecuteChangeSetOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ExecuteChangeSetWithContext", i0, i1, i2)
	r0, _ = returns[0].(*cloudformation.ExecuteChangeSetOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *CloudFormationDouble) fakeExecuteChangeSetWithContext(ctx context.Context, in *cloudformation.ExecuteChangeSetInput, _ ...request.Option) (*cloudformation.ExecuteChangeSetOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "ExecuteChangeSet cancelled", ctx.Err())
	default:
		return d.ExecuteChangeSet(in)
	}
}

func (d *CloudFormationDouble) GetStackPolicy(i0 *cloudformation.GetStackPolicyInput) (r0 *cloudformation.GetStackPolicyOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetStackPolicy", i0)
	r0, _ = returns[0].(*cloudformation.GetStackPolicyOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *CloudFormationDouble) GetStackPolicyRequest(i0 *cloudformation.GetStackPolicyInput) (r0 *request.Request, r1 *cloudformation.GetStackPolicyOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetStackPolicyRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*cloudformation.GetStackPolicyOutput)
	return
}

func (d *CloudFormationDouble) GetStackPolicyWithContext(i0 context.Context, i1 *cloudformation.GetStackPolicyInput, i2 ...request.Option) (r0 *cloudformation.GetStackPolicyOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetStackPolicyWithContext", i0, i1, i2)
	r0, _ = returns[0].(*cloudformation.GetStackPolicyOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *CloudFormationDouble) fakeGetStackPolicyWithContext(ctx context.Context, in *cloudformation.GetStackPolicyInput, _ ...request.Option) (*cloudformation.GetStackPolicyOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "GetStackPolicy cancelled", ctx.Err())
	default:
		return d.GetStackPolicy(in)
	}
}

func (d *CloudFormationDouble) GetTemplate(i0 *cloudformation.GetTemplateInput) (r0 *cloudformation.GetTemplateOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetTemplate", i0)
	r0, _ = returns[0].(*cloudformation.GetTemplateOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *CloudFormationDouble) GetTemplateRequest(i0 *cloudformation.GetTemplateInput) (r0 *request.Request, r1 *cloudformation.GetTemplateOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetTemplateRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*cloudformation.GetTemplateOutput)
	return
}

func (d *CloudFormationDouble) GetTemplateSummary(i0 *cloudformation.GetTemplateSummaryInput) (r0 *cloudformation.GetTemplateSummaryOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetTemplateSummary", i0)
	r0, _ = returns[0].(*cloudformation.GetTemplateSummaryOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *CloudFormationDouble) GetTemplateSummaryRequest(i0 *cloudformation.GetTemplateSummaryInput) (r0 *request.Request, r1 *cloudformation.GetTemplateSummaryOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetTemplateSummaryRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*cloudformation.GetTemplateSummaryOutput)
	return
}

func (d *CloudFormationDouble) GetTemplateSummaryWithContext(i0 context.Context, i1 *cloudformation.GetTemplateSummaryInput, i2 ...request.Option) (r0 *cloudformation.GetTemplateSummaryOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetTemplateSummaryWithContext", i0, i1, i2)
	r0, _ = returns[0].(*cloudformation.GetTemplateSummaryOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *CloudFormationDouble) fakeGetTemplateSummaryWithContext(ctx context.Context, in *cloudformation.GetTemplateSummaryInput, _ ...request.Option) (*cloudformation.GetTemplateSummaryOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "GetTemplateSummary cancelled", ctx.Err())
	default:
		return d.GetTemplateSummary(in)
	}
}

func (d *CloudFormationDouble) GetTemplateWithContext(i0 context.Context, i1 *cloudformation.GetTemplateInput, i2 ...request.Option) (r0 *cloudformation.GetTemplateOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetTemplateWithContext", i0, i1, i2)
	r0, _ = returns[0].(*cloudformation.GetTemplateOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *CloudFormationDouble) fakeGetTemplateWithContext(ctx context.Context, in *cloudformation.GetTemplateInput, _ ...request.Option) (*cloudformation.GetTemplateOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "GetTemplate cancelled", ctx.Err())
	default:
		return d.GetTemplate(in)
	}
}

func (d *CloudFormationDouble) ListChangeSets(i0 *cloudformation.ListChangeSetsInput) (r0 *cloudformation.ListChangeSetsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListChangeSets", i0)
	r0, _ = returns[0].(*cloudformation.ListChangeSetsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *CloudFormationDouble) ListChangeSetsRequest(i0 *cloudformation.ListChangeSetsInput) (r0 *request.Request, r1 *cloudformation.ListChangeSetsOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListChangeSetsRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*cloudformation.ListChangeSetsOutput)
	return
}

func (d *CloudFormationDouble) ListChangeSetsWithContext(i0 context.Context, i1 *cloudformation.ListChangeSetsInput, i2 ...request.Option) (r0 *cloudformation.ListChangeSetsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListChangeSetsWithContext", i0, i1, i2)
	r0, _ = returns[0].(*cloudformation.ListChangeSetsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *CloudFormationDouble) fakeListChangeSetsWithContext(ctx context.Context, in *cloudformation.ListChangeSetsInput, _ ...request.Option) (*cloudformation.ListChangeSetsOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "ListChangeSets cancelled", ctx.Err())
	default:
		return d.ListChangeSets(in)
	}
}

func (d *CloudFormationDouble) ListExports(i0 *cloudformation.ListExportsInput) (r0 *cloudformation.ListExportsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListExports", i0)
	r0, _ = returns[0].(*cloudformation.ListExportsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *CloudFormationDouble) ListExportsPages(i0 *cloudformation.ListExportsInput, i1 func(*cloudformation.ListExportsOutput, bool) bool) (r0 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListExportsPages", i0, i1)
	r0, _ = returns[0].(error)
	return
}

func (d *CloudFormationDouble) fakeListExportsPages(in *cloudformation.ListExportsInput, pager func(*cloudformation.ListExportsOutput, bool) (shouldContinue bool)) error {
	return d.Paginate("ListExports", paginators, in, pager)
}

func (d *CloudFormationDouble) ListExportsPagesWithContext(i0 context.Context, i1 *cloudformation.ListExportsInput, i2 func(*cloudformation.ListExportsOutput, bool) bool, i3 ...request.Option) (r0 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListExportsPagesWithContext", i0, i1, i2, i3)
	r0, _ = returns[0].(error)
	return
}

func (d *CloudFormationDouble) fakeListExportsPagesWithContext(ctx context.Context, in *cloudformation.ListExportsInput, pager func(*cloudformation.ListExportsOutput, bool) (shouldContinue bool), options ...request.Option) error {
	return d.PaginateWithContext("ListExports", paginators, ctx, in, pager, options...)
}

func (d *CloudFormationDouble) ListExportsRequest(i0 *cloudformation.ListExportsInput) (r0 *request.Request, r1 *cloudformation.ListExportsOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListExportsRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*cloudformation.ListExportsOutput)
	return
}

func (d *CloudFormationDouble) ListExportsWithContext(i0 context.Context, i1 *cloudformation.ListExportsInput, i2 ...request.Option) (r0 *cloudformation.ListExportsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListExportsWithContext", i0, i1, i2)
	r0, _ = returns[0].(*cloudformation.ListExportsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *CloudFormationDouble) fakeListExportsWithContext(ctx context.Context, in *cloudformation.ListExportsInput, _ ...request.Option) (*cloudformation.ListExportsOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "ListExports cancelled", ctx.Err())
	default:
		return d.ListExports(in)
	}
}

func (d *CloudFormationDouble) ListImports(i0 *cloudformation.ListImportsInput) (r0 *cloudformation.ListImportsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListImports", i0)
	r0, _ = returns[0].(*cloudformation.ListImportsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *CloudFormationDouble) ListImportsPages(i0 *cloudformation.ListImportsInput, i1 func(*cloudformation.ListImportsOutput, bool) bool) (r0 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListImportsPages", i0, i1)
	r0, _ = returns[0].(error)
	return
}

func (d *CloudFormationDouble) fakeListImportsPages(in *cloudformation.ListImportsInput, pager func(*cloudformation.ListImportsOutput, bool) (shouldContinue bool)) error {
	return d.Paginate("ListImports", paginators, in, pager)
}

func (d *CloudFormationDouble) ListImportsPagesWithContext(i0 context.Context, i1 *cloudformation.ListImportsInput, i2 func(*cloudformation.ListImportsOutput, bool) bool, i3 ...request.Option) (r0 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListImportsPagesWithContext", i0, i1, i2, i3)
	r0, _ = returns[0].(error)
	return
}

func (d *CloudFormationDouble) fakeListImportsPagesWithContext(ctx context.Context, in *cloudformation.ListImportsInput, pager func(*cloudformation.ListImportsOutput, bool) (shouldContinue bool), options ...request.Option) error {
	return d.PaginateWithContext("ListImports", paginators, ctx, in, pager, options...)
}

func (d *CloudFormationDouble) ListImportsRequest(i0 *cloudformation.ListImportsInput) (r0 *request.Request, r1 *cloudformation.ListImportsOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListImportsRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*cloudformation.ListImportsOutput)
	return
}

func (d *CloudFormationDouble) ListImportsWithContext(i0 context.Context, i1 *cloudformation.ListImportsInput, i2 ...request.Option) (r0 *cloudformation.ListImportsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListImportsWithContext", i0, i1, i2)
	r0, _ = returns[0].(*cloudformation.ListImportsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *CloudFormationDouble) fakeListImportsWithContext(ctx context.Context, in *cloudformation.ListImportsInput, _ ...request.Option) (*cloudformation.ListImportsOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "ListImports cancelled", ctx.Err())
	default:
		return d.ListImports(in)
	}
}

func (d *CloudFormationDouble) ListStackInstances(i0 *cloudformation.ListStackInstancesInput) (r0 *cloudformation.ListStackInstancesOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListStackInstances", i0)
	r0, _ = returns[0].(*cloudformation.ListStackInstancesOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *CloudFormationDouble) ListStackInstancesRequest(i0 *cloudformation.ListStackInstancesInput) (r0 *request.Request, r1 *cloudformation.ListStackInstancesOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListStackInstancesRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*cloudformation.ListStackInstancesOutput)
	return
}

func (d *CloudFormationDouble) ListStackInstancesWithContext(i0 context.Context, i1 *cloudformation.ListStackInstancesInput, i2 ...request.Option) (r0 *cloudformation.ListStackInstancesOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListStackInstancesWithContext", i0, i1, i2)
	r0, _ = returns[0].(*cloudformation.ListStackInstancesOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *CloudFormationDouble) fakeListStackInstancesWithContext(ctx context.Context, in *cloudformation.ListStackInstancesInput, _ ...request.Option) (*cloudformation.ListStackInstancesOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "ListStackInstances cancelled", ctx.Err())
	default:
		return d.ListStackInstances(in)
	}
}

func (d *CloudFormationDouble) ListStackResources(i0 *cloudformation.ListStackResourcesInput) (r0 *cloudformation.ListStackResourcesOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListStackResources", i0)
	r0, _ = returns[0].(*cloudformation.ListStackResourcesOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *CloudFormationDouble) ListStackResourcesPages(i0 *cloudformation.ListStackResourcesInput, i1 func(*cloudformation.ListStackResourcesOutput, bool) bool) (r0 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListStackResourcesPages", i0, i1)
	r0, _ = returns[0].(error)
	return
}

func (d *CloudFormationDouble) fakeListStackResourcesPages(in *cloudformation.ListStackResourcesInput, pager func(*cloudformation.ListStackResourcesOutput, bool) (shouldContinue bool)) error {
	return d.Paginate("ListStackResources", paginators, in, pager)
}

func (d *CloudFormationDouble) ListStackResourcesPagesWithContext(i0 context.Context, i1 *cloudformation.ListStackResourcesInput, i2 func(*cloudformation.ListStackResourcesOutput, bool) bool, i3 ...request.Option) (r0 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListStackResourcesPagesWithContext", i0, i1, i2, i3)
	r0, _ = returns[0].(error)
	return
}

func (d *CloudFormationDouble) fakeListStackResourcesPagesWithContext(ctx context.Context, in *cloudformation.ListStackResourcesInput, pager func(*cloudformation.ListStackResourcesOutput, bool) (shouldContinue bool), options ...request.Option) error {
	return d.PaginateWithContext("ListStackResources", paginators, ctx, in, pager, options...)
}

func (d *CloudFormationDouble) ListStackResourcesRequest(i0 *cloudformation.ListStackResourcesInput) (r0 *request.Request, r1 *cloudformation.ListStackResourcesOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListStackResourcesRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*cloudformation.ListStackResourcesOutput)
	return
}

func (d *CloudFormationDouble) ListStackResourcesWithContext(i0 context.Context, i1 *cloudformation.ListStackResourcesInput, i2 ...request.Option) (r0 *cloudformation.ListStackResourcesOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListStackResourcesWithContext", i0, i1, i2)
	r0, _ = returns[0].(*cloudformation.ListStackResourcesOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *CloudFormationDouble) fakeListStackResourcesWithContext(ctx context.Context, in *cloudformation.ListStackResourcesInput, _ ...request.Option) (*cloudformation.ListStackResourcesOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "ListStackResources cancelled", ctx.Err())
	default:
		return d.ListStackResources(in)
	}
}

func (d *CloudFormationDouble) ListStackSetOperationResults(i0 *cloudformation.ListStackSetOperationResultsInput) (r0 *cloudformation.ListStackSetOperationResultsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListStackSetOperationResults", i0)
	r0, _ = returns[0].(*cloudformation.ListStackSetOperationResultsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *CloudFormationDouble) ListStackSetOperationResultsRequest(i0 *cloudformation.ListStackSetOperationResultsInput) (r0 *request.Request, r1 *cloudformation.ListStackSetOperationResultsOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListStackSetOperationResultsRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*cloudformation.ListStackSetOperationResultsOutput)
	return
}

func (d *CloudFormationDouble) ListStackSetOperationResultsWithContext(i0 context.Context, i1 *cloudformation.ListStackSetOperationResultsInput, i2 ...request.Option) (r0 *cloudformation.ListStackSetOperationResultsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListStackSetOperationResultsWithContext", i0, i1, i2)
	r0, _ = returns[0].(*cloudformation.ListStackSetOperationResultsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *CloudFormationDouble) fakeListStackSetOperationResultsWithContext(ctx context.Context, in *cloudformation.ListStackSetOperationResultsInput, _ ...request.Option) (*cloudformation.ListStackSetOperationResultsOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "ListStackSetOperationResults cancelled", ctx.Err())
	default:
		return d.ListStackSetOperationResults(in)
	}
}

func (d *CloudFormationDouble) ListStackSetOperations(i0 *cloudformation.ListStackSetOperationsInput) (r0 *cloudformation.ListStackSetOperationsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListStackSetOperations", i0)
	r0, _ = returns[0].(*cloudformation.ListStackSetOperationsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *CloudFormationDouble) ListStackSetOperationsRequest(i0 *cloudformation.ListStackSetOperationsInput) (r0 *request.Request, r1 *cloudformation.ListStackSetOperationsOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListStackSetOperationsRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*cloudformation.ListStackSetOperationsOutput)
	return
}

func (d *CloudFormationDouble) ListStackSetOperationsWithContext(i0 context.Context, i1 *cloudformation.ListStackSetOperationsInput, i2 ...request.Option) (r0 *cloudformation.ListStackSetOperationsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListStackSetOperationsWithContext", i0, i1, i2)
	r0, _ = returns[0].(*cloudformation.ListStackSetOperationsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *CloudFormationDouble) fakeListStackSetOperationsWithContext(ctx context.Context, in *cloudformation.ListStackSetOperationsInput, _ ...request.Option) (*cloudformation.ListStackSetOperationsOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "ListStackSetOperations cancelled", ctx.Err())
	default:
		return d.ListStackSetOperations(in)
	}
}

func (d *CloudFormationDouble) ListStackSets(i0 *cloudformation.ListStackSetsInput) (r0 *cloudformation.ListStackSetsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListStackSets", i0)
	r0, _ = returns[0].(*cloudformation.ListStackSetsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *CloudFormationDouble) ListStackSetsRequest(i0 *cloudformation.ListStackSetsInput) (r0 *request.Request, r1 *cloudformation.ListStackSetsOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListStackSetsRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*cloudformation.ListStackSetsOutput)
	return
}

func (d *CloudFormationDouble) ListStackSetsWithContext(i0 context.Context, i1 *cloudformation.ListStackSetsInput, i2 ...request.Option) (r0 *cloudformation.ListStackSetsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListStackSetsWithContext", i0, i1, i2)
	r0, _ = returns[0].(*cloudformation.ListStackSetsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *CloudFormationDouble) fakeListStackSetsWithContext(ctx context.Context, in *cloudformation.ListStackSetsInput, _ ...request.Option) (*cloudformation.ListStackSetsOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "ListStackSets cancelled", ctx.Err())
	default:
		return d.ListStackSets(in)
	}
}

func (d *CloudFormationDouble) ListStacks(i0 *cloudformation.ListStacksInput) (r0 *cloudformation.ListStacksOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListStacks", i0)
	r0, _ = returns[0].(*cloudformation.ListStacksOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *CloudFormationDouble) ListStacksPages(i0 *cloudformation.ListStacksInput, i1 func(*cloudformation.ListStacksOutput, bool) bool) (r0 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListStacksPages", i0, i1)
	r0, _ = returns[0].(error)
	return
}

func (d *CloudFormationDouble) fakeListStacksPages(in *cloudformation.ListStacksInput, pager func(*cloudformation.ListStacksOutput, bool) (shouldContinue bool)) error {
	return d.Paginate("ListStacks", paginators, in, pager)
}

func (d *CloudFormationDouble) ListStacksPagesWithContext(i0 context.Context, i1 *cloudformation.ListStacksInput, i2 func(*cloudformation.ListStacksOutput, bool) bool, i3 ...request.Option) (r0 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListStacksPagesWithContext", i0, i1, i2, i3)
	r0, _ = returns[0].(error)
	return
}

func (d *CloudFormationDouble) fakeListStacksPagesWithContext(ctx context.Context, in *cloudformation.ListStacksInput, pager func(*cloudformation.ListStacksOutput, bool) (shouldContinue bool), options ...request.Option) error {
	return d.PaginateWithContext("ListStacks", paginators, ctx, in, pager, options...)
}

func (d *CloudFormationDouble) ListStacksRequest(i0 *cloudformation.ListStacksInput) (r0 *request.Request, r1 *cloudformation.ListStacksOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListStacksRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*cloudformation.ListStacksOutput)
	return
}

func (d *CloudFormationDouble) ListStacksWithContext(i0 context.Context, i1 *cloudformation.ListStacksInput, i2 ...request.Option) (r0 *cloudformation.ListStacksOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListStacksWithContext", i0, i1, i2)
	r0, _ = returns[0].(*cloudformation.ListStacksOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *CloudFormationDouble) fakeListStacksWithContext(ctx context.Context, in *cloudformation.ListStacksInput, _ ...request.Option) (*cloudformation.ListStacksOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "ListStacks cancelled", ctx.Err())
	default:
		return d.ListStacks(in)
	}
}

func (d *CloudFormationDouble) ListTypeRegistrations(i0 *cloudformation.ListTypeRegistrationsInput) (r0 *cloudformation.ListTypeRegistrationsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListTypeRegistrations", i0)
	r0, _ = returns[0].(*cloudformation.ListTypeRegistrationsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *CloudFormationDouble) ListTypeRegistrationsPages(i0 *cloudformation.ListTypeRegistrationsInput, i1 func(*cloudformation.ListTypeRegistrationsOutput, bool) bool) (r0 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListTypeRegistrationsPages", i0, i1)
	r0, _ = returns[0].(error)
	return
}

func (d *CloudFormationDouble) fakeListTypeRegistrationsPages(in *cloudformation.ListTypeRegistrationsInput, pager func(*cloudformation.ListTypeRegistrationsOutput, bool) (shouldContinue bool)) error {
	return d.Paginate("ListTypeRegistrations", paginators, in, pager)
}

func (d *CloudFormationDouble) ListTypeRegistrationsPagesWithContext(i0 context.Context, i1 *cloudformation.ListTypeRegistrationsInput, i2 func(*cloudformation.ListTypeRegistrationsOutput, bool) bool, i3 ...request.Option) (r0 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListTypeRegistrationsPagesWithContext", i0, i1, i2, i3)
	r0, _ = returns[0].(error)
	return
}

func (d *CloudFormationDouble) fakeListTypeRegistrationsPagesWithContext(ctx context.Context, in *cloudformation.ListTypeRegistrationsInput, pager func(*cloudformation.ListTypeRegistrationsOutput, bool) (shouldContinue bool), options ...request.Option) error {
	return d.PaginateWithContext("ListTypeRegistrations", paginators, ctx, in, pager, options...)
}

func (d *CloudFormationDouble) ListTypeRegistrationsRequest(i0 *cloudformation.ListTypeRegistrationsInput) (r0 *request.Request, r1 *cloudformation.ListTypeRegistrationsOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListTypeRegistrationsRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*cloudformation.ListTypeRegistrationsOutput)
	return
}

func (d *CloudFormationDouble) ListTypeRegistrationsWithContext(i0 context.Context, i1 *cloudformation.ListTypeRegistrationsInput, i2 ...request.Option) (r0 *cloudformation.ListTypeRegistrationsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListTypeRegistrationsWithContext", i0, i1, i2)
	r0, _ = returns[0].(*cloudformation.ListTypeRegistrationsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *CloudFormationDouble) fakeListTypeRegistrationsWithContext(ctx context.Context, in *cloudformation.ListTypeRegistrationsInput, _ ...request.Option) (*cloudformation.ListTypeRegistrationsOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "ListTypeRegistrations cancelled", ctx.Err())
	default:
		return d.ListTypeRegistrations(in)
	}
}

func (d *CloudFormationDouble) ListTypeVersions(i0 *cloudformation.ListTypeVersionsInput) (r0 *cloudformation.ListTypeVersionsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListTypeVersions", i0)
	r0, _ = returns[0].(*cloudformation.ListTypeVersionsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *CloudFormationDouble) ListTypeVersionsPages(i0 *cloudformation.ListTypeVersionsInput, i1 func(*cloudformation.ListTypeVersionsOutput, bool) bool) (r0 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListTypeVersionsPages", i0, i1)
	r0, _ = returns[0].(error)
	return
}

func (d *CloudFormationDouble) fakeListTypeVersionsPages(in *cloudformation.ListTypeVersionsInput, pager func(*cloudformation.ListTypeVersionsOutput, bool) (shouldContinue bool)) error {
	return d.Paginate("ListTypeVersions", paginators, in, pager)
}

func (d *CloudFormationDouble) ListTypeVersionsPagesWithContext(i0 context.Context, i1 *cloudformation.ListTypeVersionsInput, i2 func(*cloudformation.ListTypeVersionsOutput, bool) bool, i3 ...request.Option) (r0 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListTypeVersionsPagesWithContext", i0, i1, i2, i3)
	r0, _ = returns[0].(error)
	return
}

func (d *CloudFormationDouble) fakeListTypeVersionsPagesWithContext(ctx context.Context, in *cloudformation.ListTypeVersionsInput, pager func(*cloudformation.ListTypeVersionsOutput, bool) (shouldContinue bool), options ...request.Option) error {
	return d.PaginateWithContext("ListTypeVersions", paginators, ctx, in, pager, options...)
}

func (d *CloudFormationDouble) ListTypeVersionsRequest(i0 *cloudformation.ListTypeVersionsInput) (r0 *request.Request, r1 *cloudformation.ListTypeVersionsOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListTypeVersionsRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*cloudformation.ListTypeVersionsOutput)
	return
}

func (d *CloudFormationDouble) ListTypeVersionsWithContext(i0 context.Context, i1 *cloudformation.ListTypeVersionsInput, i2 ...request.Option) (r0 *cloudformation.ListTypeVersionsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListTypeVersionsWithContext", i0, i1, i2)
	r0, _ = returns[0].(*cloudformation.ListTypeVersionsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *CloudFormationDouble) fakeListTypeVersionsWithContext(ctx context.Context, in *cloudformation.ListTypeVersionsInput, _ ...request.Option) (*cloudformation.ListTypeVersionsOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "ListTypeVersions cancelled", ctx.Err())
	default:
		return d.ListTypeVersions(in)
	}
}

func (d *CloudFormationDouble) ListTypes(i0 *cloudformation.ListTypesInput) (r0 *cloudformation.ListTypesOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListTypes", i0)
	r0, _ = returns[0].(*cloudformation.ListTypesOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *CloudFormationDouble) ListTypesPages(i0 *cloudformation.ListTypesInput, i1 func(*cloudformation.ListTypesOutput, bool) bool) (r0 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListTypesPages", i0, i1)
	r0, _ = returns[0].(error)
	return
}

func (d *CloudFormationDouble) fakeListTypesPages(in *cloudformation.ListTypesInput, pager func(*cloudformation.ListTypesOutput, bool) (shouldContinue bool)) error {
	return d.Paginate("ListTypes", paginators, in, pager)
}

func (d *CloudFormationDouble) ListTypesPagesWithContext(i0 context.Context, i1 *cloudformation.ListTypesInput, i2 func(*cloudformation.ListTypesOutput, bool) bool, i3 ...request.Option) (r0 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListTypesPagesWithContext", i0, i1, i2, i3)
	r0, _ = returns[0].(error)
	return
}

func (d *CloudFormationDouble) fakeListTypesPagesWithContext(ctx context.Context, in *cloudformation.ListTypesInput, pager func(*cloudformation.ListTypesOutput, bool) (shouldContinue bool), options ...request.Option) error {
	return d.PaginateWithContext("ListTypes", paginators, ctx, in, pager, options...)
}

func (d *CloudFormationDouble) ListTypesRequest(i0 *cloudformation.ListTypesInput) (r0 *request.Request, r1 *cloudformation.ListTypesOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListTypesRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*cloudformation.ListTypesOutput)
	return
}

func (d *CloudFormationDouble) ListTypesWithContext(i0 context.Context, i1 *cloudformation.ListTypesInput, i2 ...request.Option) (r0 *cloudformation.ListTypesOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListTypesWithContext", i0, i1, i2)
	r0, _ = returns[0].(*cloudformation.ListTypesOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *CloudFormationDouble) fakeListTypesWithContext(ctx context.Context, in *cloudformation.ListTypesInput, _ ...request.Option) (*cloudformation.ListTypesOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "ListTypes cancelled", ctx.Err())
	default:
		return d.ListTypes(in)
	}
}

func (d *CloudFormationDouble) RecordHandlerProgress(i0 *cloudformation.RecordHandlerProgressInput) (r0 *cloudformation.RecordHandlerProgressOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("RecordHandlerProgress", i0)
	r0, _ = returns[0].(*cloudformation.RecordHandlerProgressOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *CloudFormationDouble) RecordHandlerProgressRequest(i0 *cloudformation.RecordHandlerProgressInput) (r0 *request.Request, r1 *cloudformation.RecordHandlerProgressOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("RecordHandlerProgressRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*cloudformation.RecordHandlerProgressOutput)
	return
}

func (d *CloudFormationDouble) RecordHandlerProgressWithContext(i0 context.Context, i1 *cloudformation.RecordHandlerProgressInput, i2 ...request.Option) (r0 *cloudformation.RecordHandlerProgressOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("RecordHandlerProgressWithContext", i0, i1, i2)
	r0, _ = returns[0].(*cloudformation.RecordHandlerProgressOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *CloudFormationDouble) fakeRecordHandlerProgressWithContext(ctx context.Context, in *cloudformation.RecordHandlerProgressInput, _ ...request.Option) (*cloudformation.RecordHandlerProgressOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "RecordHandlerProgress cancelled", ctx.Err())
	default:
		return d.RecordHandlerProgress(in)
	}
}

func (d *CloudFormationDouble) RegisterType(i0 *cloudformation.RegisterTypeInput) (r0 *cloudformation.RegisterTypeOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("RegisterType", i0)
	r0, _ = returns[0].(*cloudformation.RegisterTypeOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *CloudFormationDouble) RegisterTypeRequest(i0 *cloudformation.RegisterTypeInput) (r0 *request.Request, r1 *cloudformation.RegisterTypeOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("RegisterTypeRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*cloudformation.RegisterTypeOutput)
	return
}

func (d *CloudFormationDouble) RegisterTypeWithContext(i0 context.Context, i1 *cloudformation.RegisterTypeInput, i2 ...request.Option) (r0 *cloudformation.RegisterTypeOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("RegisterTypeWithContext", i0, i1, i2)
	r0, _ = returns[0].(*cloudformation.RegisterTypeOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *CloudFormationDouble) fakeRegisterTypeWithContext(ctx context.Context, in *cloudformation.RegisterTypeInput, _ ...request.Option) (*cloudformation.RegisterTypeOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "RegisterType cancelled", ctx.Err())
	default:
		return d.RegisterType(in)
	}
}

func (d *CloudFormationDouble) SetStackPolicy(i0 *cloudformation.SetStackPolicyInput) (r0 *cloudformation.SetStackPolicyOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("SetStackPolicy", i0)
	r0, _ = returns[0].(*cloudformation.SetStackPolicyOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *CloudFormationDouble) SetStackPolicyRequest(i0 *cloudformation.SetStackPolicyInput) (r0 *request.Request, r1 *cloudformation.SetStackPolicyOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("SetStackPolicyRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*cloudformation.SetStackPolicyOutput)
	return
}

func (d *CloudFormationDouble) SetStackPolicyWithContext(i0 context.Context, i1 *cloudformation.SetStackPolicyInput, i2 ...request.Option) (r0 *cloudformation.SetStackPolicyOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("SetStackPolicyWithContext", i0, i1, i2)
	r0, _ = returns[0].(*cloudformation.SetStackPolicyOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *CloudFormationDouble) fakeSetStackPolicyWithContext(ctx context.Context, in *cloudformation.SetStackPolicyInput, _ ...request.Option) (*cloudformation.SetStackPolicyOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "SetStackPolicy cancelled", ctx.Err())
	default:
		return d.SetStackPolicy(in)
	}
}

func (d *CloudFormationDouble) SetTypeDefaultVersion(i0 *cloudformation.SetTypeDefaultVersionInput) (r0 *cloudformation.SetTypeDefaultVersionOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("SetTypeDefaultVersion", i0)
	r0, _ = returns[0].(*cloudformation.SetTypeDefaultVersionOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *CloudFormationDouble) SetTypeDefaultVersionRequest(i0 *cloudformation.SetTypeDefaultVersionInput) (r0 *request.Request, r1 *cloudformation.SetTypeDefaultVersionOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("SetTypeDefaultVersionRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*cloudformation.SetTypeDefaultVersionOutput)
	return
}

func (d *CloudFormationDouble) SetTypeDefaultVersionWithContext(i0 context.Context, i1 *cloudformation.SetTypeDefaultVersionInput, i2 ...request.Option) (r0 *cloudformation.SetTypeDefaultVersionOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("SetTypeDefaultVersionWithContext", i0, i1, i2)
	r0, _ = returns[0].(*cloudformation.SetTypeDefaultVersionOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *CloudFormationDouble) fakeSetTypeDefaultVersionWithContext(ctx context.Context, in *cloudformation.SetTypeDefaultVersionInput, _ ...request.Option) (*cloudformation.SetTypeDefaultVersionOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "SetTypeDefaultVersion cancelled", ctx.Err())
	default:
		return d.SetTypeDefaultVersion(in)
	}
}

func (d *CloudFormationDouble) SignalResource(i0 *cloudformation.SignalResourceInput) (r0 *cloudformation.SignalResourceOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("SignalResource", i0)
	r0, _ = returns[0].(*cloudformation.SignalResourceOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *CloudFormationDouble) SignalResourceRequest(i0 *cloudformation.SignalResourceInput) (r0 *request.Request, r1 *cloudformation.SignalResourceOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("SignalResourceRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*cloudformation.SignalResourceOutput)
	return
}

func (d *CloudFormationDouble) SignalResourceWithContext(i0 context.Context, i1 *cloudformation.SignalResourceInput, i2 ...request.Option) (r0 *cloudformation.SignalResourceOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("SignalResourceWithContext", i0, i1, i2)
	r0, _ = returns[0].(*cloudformation.SignalResourceOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *CloudFormationDouble) fakeSignalResourceWithContext(ctx context.Context, in *cloudformation.SignalResourceInput, _ ...request.Option) (*cloudformation.SignalResourceOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "SignalResource cancelled", ctx.Err())
	default:
		return d.SignalResource(in)
	}
}

func (d *CloudFormationDouble) StopStackSetOperation(i0 *cloudformation.StopStackSetOperationInput) (r0 *cloudformation.StopStackSetOperationOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("StopStackSetOperation", i0)
	r0, _ = returns[0].(*cloudformation.StopStackSetOperationOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *CloudFormationDouble) StopStackSetOperationRequest(i0 *cloudformation.StopStackSetOperationInput) (r0 *request.Request, r1 *cloudformation.StopStackSetOperationOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("StopStackSetOperationRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*cloudformation.StopStackSetOperationOutput)
	return
}

func (d *CloudFormationDouble) StopStackSetOperationWithContext(i0 context.Context, i1 *cloudformation.StopStackSetOperationInput, i2 ...request.Option) (r0 *cloudformation.StopStackSetOperationOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("StopStackSetOperationWithContext", i0, i1, i2)
	r0, _ = returns[0].(*cloudformation.StopStackSetOperationOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *CloudFormationDouble) fakeStopStackSetOperationWithContext(ctx context.Context, in *cloudformation.StopStackSetOperationInput, _ ...request.Option) (*cloudformation.StopStackSetOperationOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "StopStackSetOperation cancelled", ctx.Err())
	default:
		return d.StopStackSetOperation(in)
	}
}

func (d *CloudFormationDouble) UpdateStack(i0 *cloudformation.UpdateStackInput) (r0 *cloudformation.UpdateStackOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UpdateStack", i0)
	r0, _ = returns[0].(*cloudformation.UpdateStackOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *CloudFormationDouble) UpdateStackInstances(i0 *cloudformation.UpdateStackInstancesInput) (r0 *cloudformation.UpdateStackInstancesOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UpdateStackInstances", i0)
	r0, _ = returns[0].(*cloudformation.UpdateStackInstancesOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *CloudFormationDouble) UpdateStackInstancesRequest(i0 *cloudformation.UpdateStackInstancesInput) (r0 *request.Request, r1 *cloudformation.UpdateStackInstancesOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UpdateStackInstancesRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*cloudformation.UpdateStackInstancesOutput)
	return
}

func (d *CloudFormationDouble) UpdateStackInstancesWithContext(i0 context.Context, i1 *cloudformation.UpdateStackInstancesInput, i2 ...request.Option) (r0 *cloudformation.UpdateStackInstancesOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UpdateStackInstancesWithContext", i0, i1, i2)
	r0, _ = returns[0].(*cloudformation.UpdateStackInstancesOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *CloudFormationDouble) fakeUpdateStackInstancesWithContext(ctx context.Context, in *cloudformation.UpdateStackInstancesInput, _ ...request.Option) (*cloudformation.UpdateStackInstancesOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "UpdateStackInstances cancelled", ctx.Err())
	default:
		return d.UpdateStackInstances(in)
	}
}

func (d *CloudFormationDouble) UpdateStackRequest(i0 *cloudformation.UpdateStackInput) (r0 *request.Request, r1 *cloudformation.UpdateStackOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UpdateStackRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*cloudformation.UpdateStackOutput)
	return
}

func (d *CloudFormationDouble) UpdateStackSet(i0 *cloudformation.UpdateStackSetInput) (r0 *cloudformation.UpdateStackSetOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UpdateStackSet", i0)
	r0, _ = returns[0].(*cloudformation.UpdateStackSetOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *CloudFormationDouble) UpdateStackSetRequest(i0 *cloudformation.UpdateStackSetInput) (r0 *request.Request, r1 *cloudformation.UpdateStackSetOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UpdateStackSetRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*cloudformation.UpdateStackSetOutput)
	return
}

func (d *CloudFormationDouble) UpdateStackSetWithContext(i0 context.Context, i1 *cloudformation.UpdateStackSetInput, i2 ...request.Option) (r0 *cloudformation.UpdateStackSetOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UpdateStackSetWithContext", i0, i1, i2)
	r0, _ = returns[0].(*cloudformation.UpdateStackSetOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *CloudFormationDouble) fakeUpdateStackSetWithContext(ctx context.Context, in *cloudformation.UpdateStackSetInput, _ ...request.Option) (*cloudformation.UpdateStackSetOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "UpdateStackSet cancelled", ctx.Err())
	default:
		return d.UpdateStackSet(in)
	}
}

func (d *CloudFormationDouble) UpdateStackWithContext(i0 context.Context, i1 *cloudformation.UpdateStackInput, i2 ...request.Option) (r0 *cloudformation.UpdateStackOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UpdateStackWithContext", i0, i1, i2)
	r0, _ = returns[0].(*cloudformation.UpdateStackOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *CloudFormationDouble) fakeUpdateStackWithContext(ctx context.Context, in *cloudformation.UpdateStackInput, _ ...request.Option) (*cloudformation.UpdateStackOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "UpdateStack cancelled", ctx.Err())
	default:
		return d.UpdateStack(in)
	}
}

func (d *CloudFormationDouble) UpdateTerminationProtection(i0 *cloudformation.UpdateTerminationProtectionInput) (r0 *cloudformation.UpdateTerminationProtectionOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UpdateTerminationProtection", i0)
	r0, _ = returns[0].(*cloudformation.UpdateTerminationProtectionOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *CloudFormationDouble) UpdateTerminationProtectionRequest(i0 *cloudformation.UpdateTerminationProtectionInput) (r0 *request.Request, r1 *cloudformation.UpdateTerminationProtectionOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UpdateTerminationProtectionRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*cloudformation.UpdateTerminationProtectionOutput)
	return
}

func (d *CloudFormationDouble) UpdateTerminationProtectionWithContext(i0 context.Context, i1 *cloudformation.UpdateTerminationProtectionInput, i2 ...request.Option) (r0 *cloudformation.UpdateTerminationProtectionOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UpdateTerminationProtectionWithContext", i0, i1, i2)
	r0, _ = returns[0].(*cloudformation.UpdateTerminationProtectionOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *CloudFormationDouble) fakeUpdateTerminationProtectionWithContext(ctx context.Context, in *cloudformation.UpdateTerminationProtectionInput, _ ...request.Option) (*cloudformation.UpdateTerminationProtectionOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "UpdateTerminationProtection cancelled", ctx.Err())
	default:
		return d.UpdateTerminationProtection(in)
	}
}

func (d *CloudFormationDouble) ValidateTemplate(i0 *cloudformation.ValidateTemplateInput) (r0 *cloudformation.ValidateTemplateOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ValidateTemplate", i0)
	r0, _ = returns[0].(*cloudformation.ValidateTemplateOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *CloudFormationDouble) ValidateTemplateRequest(i0 *cloudformation.ValidateTemplateInput) (r0 *request.Request, r1 *cloudformation.ValidateTemplateOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ValidateTemplateRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*cloudformation.ValidateTemplateOutput)
	return
}

func (d *CloudFormationDouble) ValidateTemplateWithContext(i0 context.Context, i1 *cloudformation.ValidateTemplateInput, i2 ...request.Option) (r0 *cloudformation.ValidateTemplateOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ValidateTemplateWithContext", i0, i1, i2)
	r0, _ = returns[0].(*cloudformation.ValidateTemplateOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *CloudFormationDouble) fakeValidateTemplateWithContext(ctx context.Context, in *cloudformation.ValidateTemplateInput, _ ...request.Option) (*cloudformation.ValidateTemplateOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "ValidateTemplate cancelled", ctx.Err())
	default:
		return d.ValidateTemplate(in)
	}
}

func (d *CloudFormationDouble) WaitUntilChangeSetCreateComplete(i0 *cloudformation.DescribeChangeSetInput) (r0 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("WaitUntilChangeSetCreateComplete", i0)
	r0, _ = returns[0].(error)
	return
}

func (d *CloudFormationDouble) fakeWaitUntilChangeSetCreateComplete(in *cloudformation.DescribeChangeSetInput) error {
	return d.WaitUntil("ChangeSetCreateComplete", waiters, in)
}

func (d *CloudFormationDouble) WaitUntilChangeSetCreateCompleteWithContext(i0 context.Context, i1 *cloudformation.DescribeChangeSetInput, i2 ...request.WaiterOption) (r0 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("WaitUntilChangeSetCreateCompleteWithContext", i0, i1, i2)
	r0, _ = returns[0].(error)
	return
}

func (d *CloudFormationDouble) fakeWaitUntilChangeSetCreateCompleteWithContext(ctx context.Context, in *cloudformation.DescribeChangeSetInput, waitOption ...request.WaiterOption) error {
	return d.WaitWithContext("ChangeSetCreateComplete", waiters, ctx, in, waitOption...)
}

func (d *CloudFormationDouble) WaitUntilStackCreateComplete(i0 *cloudformation.DescribeStacksInput) (r0 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("WaitUntilStackCreateComplete", i0)
	r0, _ = returns[0].(error)
	return
}

func (d *CloudFormationDouble) fakeWaitUntilStackCreateComplete(in *cloudformation.DescribeStacksInput) error {
	return d.WaitUntil("StackCreateComplete", waiters, in)
}

func (d *CloudFormationDouble) WaitUntilStackCreateCompleteWithContext(i0 context.Context, i1 *cloudformation.DescribeStacksInput, i2 ...request.WaiterOption) (r0 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("WaitUntilStackCreateCompleteWithContext", i0, i1, i2)
	r0, _ = returns[0].(error)
	return
}

func (d *CloudFormationDouble) fakeWaitUntilStackCreateCompleteWithContext(ctx context.Context, in *cloudformation.DescribeStacksInput, waitOption ...request.WaiterOption) error {
	return d.WaitWithContext("StackCreateComplete", waiters, ctx, in, waitOption...)
}

func (d *CloudFormationDouble) WaitUntilStackDeleteComplete(i0 *cloudformation.DescribeStacksInput) (r0 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("WaitUntilStackDeleteComplete", i0)
	r0, _ = returns[0].(error)
	return
}

func (d *CloudFormationDouble) fakeWaitUntilStackDeleteComplete(in *cloudformation.DescribeStacksInput) error {
	return d.WaitUntil("StackDeleteComplete", waiters, in)
}

func (d *CloudFormationDouble) WaitUntilStackDeleteCompleteWithContext(i0 context.Context, i1 *cloudformation.DescribeStacksInput, i2 ...request.WaiterOption) (r0 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("WaitUntilStackDeleteCompleteWithContext", i0, i1, i2)
	r0, _ = returns[0].(error)
	return
}

func (d *CloudFormationDouble) fakeWaitUntilStackDeleteCompleteWithContext(ctx context.Context, in *cloudformation.DescribeStacksInput, waitOption ...request.WaiterOption) error {
	return d.WaitWithContext("StackDeleteComplete", waiters, ctx, in, waitOption...)
}

func (d *CloudFormationDouble) WaitUntilStackExists(i0 *cloudformation.DescribeStacksInput) (r0 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("WaitUntilStackExists", i0)
	r0, _ = returns[0].(error)
	return
}

func (d *CloudFormationDouble) fakeWaitUntilStackExists(in *cloudformation.DescribeStacksInput) error {
	return d.WaitUntil("StackExists", waiters, in)
}

func (d *CloudFormationDouble) WaitUntilStackExistsWithContext(i0 context.Context, i1 *cloudformation.DescribeStacksInput, i2 ...request.WaiterOption) (r0 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("WaitUntilStackExistsWithContext", i0, i1, i2)
	r0, _ = returns[0].(error)
	return
}

func (d *CloudFormationDouble) fakeWaitUntilStackExistsWithContext(ctx context.Context, in *cloudformation.DescribeStacksInput, waitOption ...request.WaiterOption) error {
	return d.WaitWithContext("StackExists", waiters, ctx, in, waitOption...)
}

func (d *CloudFormationDouble) WaitUntilStackImportComplete(i0 *cloudformation.DescribeStacksInput) (r0 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("WaitUntilStackImportComplete", i0)
	r0, _ = returns[0].(error)
	return
}

func (d *CloudFormationDouble) fakeWaitUntilStackImportComplete(in *cloudformation.DescribeStacksInput) error {
	return d.WaitUntil("StackImportComplete", waiters, in)
}

func (d *CloudFormationDouble) WaitUntilStackImportCompleteWithContext(i0 context.Context, i1 *cloudformation.DescribeStacksInput, i2 ...request.WaiterOption) (r0 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("WaitUntilStackImportCompleteWithContext", i0, i1, i2)
	r0, _ = returns[0].(error)
	return
}

func (d *CloudFormationDouble) fakeWaitUntilStackImportCompleteWithContext(ctx context.Context, in *cloudformation.DescribeStacksInput, waitOption ...request.WaiterOption) error {
	return d.WaitWithContext("StackImportComplete", waiters, ctx, in, waitOption...)
}

func (d *CloudFormationDouble) WaitUntilStackUpdateComplete(i0 *cloudformation.DescribeStacksInput) (r0 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("WaitUntilStackUpdateComplete", i0)
	r0, _ = returns[0].(error)
	return
}

func (d *CloudFormationDouble) fakeWaitUntilStackUpdateComplete(in *cloudformation.DescribeStacksInput) error {
	return d.WaitUntil("StackUpdateComplete", waiters, in)
}

func (d *CloudFormationDouble) WaitUntilStackUpdateCompleteWithContext(i0 context.Context, i1 *cloudformation.DescribeStacksInput, i2 ...request.WaiterOption) (r0 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("WaitUntilStackUpdateCompleteWithContext", i0, i1, i2)
	r0, _ = returns[0].(error)
	return
}

func (d *CloudFormationDouble) fakeWaitUntilStackUpdateCompleteWithContext(ctx context.Context, in *cloudformation.DescribeStacksInput, waitOption ...request.WaiterOption) error {
	return d.WaitWithContext("StackUpdateComplete", waiters, ctx, in, waitOption...)
}

func (d *CloudFormationDouble) WaitUntilTypeRegistrationComplete(i0 *cloudformation.DescribeTypeRegistrationInput) (r0 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("WaitUntilTypeRegistrationComplete", i0)
	r0, _ = returns[0].(error)
	return
}

func (d *CloudFormationDouble) fakeWaitUntilTypeRegistrationComplete(in *cloudformation.DescribeTypeRegistrationInput) error {
	return d.WaitUntil("TypeRegistrationComplete", waiters, in)
}

func (d *CloudFormationDouble) WaitUntilTypeRegistrationCompleteWithContext(i0 context.Context, i1 *cloudformation.DescribeTypeRegistrationInput, i2 ...request.WaiterOption) (r0 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("WaitUntilTypeRegistrationCompleteWithContext", i0, i1, i2)
	r0, _ = returns[0].(error)
	return
}

func (d *CloudFormationDouble) fakeWaitUntilTypeRegistrationCompleteWithContext(ctx context.Context, in *cloudformation.DescribeTypeRegistrationInput, waitOption ...request.WaiterOption) error {
	return d.WaitWithContext("TypeRegistrationComplete", waiters, ctx, in, waitOption...)
}
