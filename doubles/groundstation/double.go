// Code generated by go doublegen; DO NOT EDIT.
// This file was generated at 2020-02-14T22:13:02+11:00

// Package groundstationdouble provides a TestDouble implementation of groundstationiface.GroundStationAPI
package groundstationdouble

import (
	"context"

	"github.com/aws/aws-sdk-go/aws/awserr"
	"github.com/aws/aws-sdk-go/aws/request"
	"github.com/aws/aws-sdk-go/service/groundstation"
	"github.com/aws/aws-sdk-go/service/groundstation/groundstationiface"
	"github.com/lwoggardner/awsdouble"
	"github.com/lwoggardner/godouble/godouble"
)

// GroundStationDouble is TestDouble for groundstationiface.GroundStationAPI
type GroundStationDouble struct {
	groundstationiface.GroundStationAPI
	*awsdouble.AWSTestDouble
}

// Constructor for GroundStationDouble
// Default configuration will ensure
//   * API operations not explicitly stubbed will return an empty output struct pointer, and nil error.
//     To simulate long polling, "Poll" operations will return these values after a random delay of up to 100ms.
//   * WithContext methods implement a 'Fake' method that returns a cancellation error if the context is cancelled
//      before the method is called.
//   * Pages and PagesWithContext methods similarly implement a 'Fake' method that paginates over the underlying method.
//
//    This allows tests to only stub the simple api methods and be generally unconcerned whether the SUT is using the
//      Context or Pagination forms of the API.
//
func NewDouble(t godouble.T, configurators ...func(*awsdouble.AWSTestDouble)) *GroundStationDouble {
	result := &GroundStationDouble{}

	configurators = append([]func(configurator *awsdouble.AWSTestDouble){func(d *awsdouble.AWSTestDouble) {
		d.SetDefaultCall(result.defaultMethodCall)
		d.SetDefaultReturnValues(result.defaultReturnValues)
	}}, configurators...)

	result.AWSTestDouble = awsdouble.NewDouble(t, (*groundstationiface.GroundStationAPI)(nil), configurators...)
	return result
}

func (d *GroundStationDouble) defaultReturnValues(m godouble.Method) godouble.ReturnValues {
	return d.DefaultReturnValues(m)
}

func (d *GroundStationDouble) defaultMethodCall(m godouble.Method) godouble.MethodCall {
	switch m.Reflect().Name {

	case "CancelContactWithContext":
		return m.Fake(d.fakeCancelContactWithContext)

	case "CreateConfigWithContext":
		return m.Fake(d.fakeCreateConfigWithContext)

	case "CreateDataflowEndpointGroupWithContext":
		return m.Fake(d.fakeCreateDataflowEndpointGroupWithContext)

	case "CreateMissionProfileWithContext":
		return m.Fake(d.fakeCreateMissionProfileWithContext)

	case "DeleteConfigWithContext":
		return m.Fake(d.fakeDeleteConfigWithContext)

	case "DeleteDataflowEndpointGroupWithContext":
		return m.Fake(d.fakeDeleteDataflowEndpointGroupWithContext)

	case "DeleteMissionProfileWithContext":
		return m.Fake(d.fakeDeleteMissionProfileWithContext)

	case "DescribeContactWithContext":
		return m.Fake(d.fakeDescribeContactWithContext)

	case "GetConfigWithContext":
		return m.Fake(d.fakeGetConfigWithContext)

	case "GetDataflowEndpointGroupWithContext":
		return m.Fake(d.fakeGetDataflowEndpointGroupWithContext)

	case "GetMinuteUsageWithContext":
		return m.Fake(d.fakeGetMinuteUsageWithContext)

	case "GetMissionProfileWithContext":
		return m.Fake(d.fakeGetMissionProfileWithContext)

	case "GetSatelliteWithContext":
		return m.Fake(d.fakeGetSatelliteWithContext)

	case "ListConfigsPages":
		return m.Fake(d.fakeListConfigsPages)

	case "ListConfigsPagesWithContext":
		return m.Fake(d.fakeListConfigsPagesWithContext)

	case "ListConfigsWithContext":
		return m.Fake(d.fakeListConfigsWithContext)

	case "ListContactsPages":
		return m.Fake(d.fakeListContactsPages)

	case "ListContactsPagesWithContext":
		return m.Fake(d.fakeListContactsPagesWithContext)

	case "ListContactsWithContext":
		return m.Fake(d.fakeListContactsWithContext)

	case "ListDataflowEndpointGroupsPages":
		return m.Fake(d.fakeListDataflowEndpointGroupsPages)

	case "ListDataflowEndpointGroupsPagesWithContext":
		return m.Fake(d.fakeListDataflowEndpointGroupsPagesWithContext)

	case "ListDataflowEndpointGroupsWithContext":
		return m.Fake(d.fakeListDataflowEndpointGroupsWithContext)

	case "ListGroundStationsPages":
		return m.Fake(d.fakeListGroundStationsPages)

	case "ListGroundStationsPagesWithContext":
		return m.Fake(d.fakeListGroundStationsPagesWithContext)

	case "ListGroundStationsWithContext":
		return m.Fake(d.fakeListGroundStationsWithContext)

	case "ListMissionProfilesPages":
		return m.Fake(d.fakeListMissionProfilesPages)

	case "ListMissionProfilesPagesWithContext":
		return m.Fake(d.fakeListMissionProfilesPagesWithContext)

	case "ListMissionProfilesWithContext":
		return m.Fake(d.fakeListMissionProfilesWithContext)

	case "ListSatellitesPages":
		return m.Fake(d.fakeListSatellitesPages)

	case "ListSatellitesPagesWithContext":
		return m.Fake(d.fakeListSatellitesPagesWithContext)

	case "ListSatellitesWithContext":
		return m.Fake(d.fakeListSatellitesWithContext)

	case "ListTagsForResourceWithContext":
		return m.Fake(d.fakeListTagsForResourceWithContext)

	case "ReserveContactWithContext":
		return m.Fake(d.fakeReserveContactWithContext)

	case "TagResourceWithContext":
		return m.Fake(d.fakeTagResourceWithContext)

	case "UntagResourceWithContext":
		return m.Fake(d.fakeUntagResourceWithContext)

	case "UpdateConfigWithContext":
		return m.Fake(d.fakeUpdateConfigWithContext)

	case "UpdateMissionProfileWithContext":
		return m.Fake(d.fakeUpdateMissionProfileWithContext)

	default:
		return nil
	}
}

func (d *GroundStationDouble) CancelContact(i0 *groundstation.CancelContactInput) (r0 *groundstation.CancelContactOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CancelContact", i0)
	r0, _ = returns[0].(*groundstation.CancelContactOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *GroundStationDouble) CancelContactRequest(i0 *groundstation.CancelContactInput) (r0 *request.Request, r1 *groundstation.CancelContactOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CancelContactRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*groundstation.CancelContactOutput)
	return
}

func (d *GroundStationDouble) CancelContactWithContext(i0 context.Context, i1 *groundstation.CancelContactInput, i2 ...request.Option) (r0 *groundstation.CancelContactOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CancelContactWithContext", i0, i1, i2)
	r0, _ = returns[0].(*groundstation.CancelContactOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *GroundStationDouble) fakeCancelContactWithContext(ctx context.Context, in *groundstation.CancelContactInput, _ ...request.Option) (*groundstation.CancelContactOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "CancelContact cancelled", ctx.Err())
	default:
		return d.CancelContact(in)
	}
}

func (d *GroundStationDouble) CreateConfig(i0 *groundstation.CreateConfigInput) (r0 *groundstation.CreateConfigOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreateConfig", i0)
	r0, _ = returns[0].(*groundstation.CreateConfigOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *GroundStationDouble) CreateConfigRequest(i0 *groundstation.CreateConfigInput) (r0 *request.Request, r1 *groundstation.CreateConfigOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreateConfigRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*groundstation.CreateConfigOutput)
	return
}

func (d *GroundStationDouble) CreateConfigWithContext(i0 context.Context, i1 *groundstation.CreateConfigInput, i2 ...request.Option) (r0 *groundstation.CreateConfigOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreateConfigWithContext", i0, i1, i2)
	r0, _ = returns[0].(*groundstation.CreateConfigOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *GroundStationDouble) fakeCreateConfigWithContext(ctx context.Context, in *groundstation.CreateConfigInput, _ ...request.Option) (*groundstation.CreateConfigOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "CreateConfig cancelled", ctx.Err())
	default:
		return d.CreateConfig(in)
	}
}

func (d *GroundStationDouble) CreateDataflowEndpointGroup(i0 *groundstation.CreateDataflowEndpointGroupInput) (r0 *groundstation.CreateDataflowEndpointGroupOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreateDataflowEndpointGroup", i0)
	r0, _ = returns[0].(*groundstation.CreateDataflowEndpointGroupOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *GroundStationDouble) CreateDataflowEndpointGroupRequest(i0 *groundstation.CreateDataflowEndpointGroupInput) (r0 *request.Request, r1 *groundstation.CreateDataflowEndpointGroupOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreateDataflowEndpointGroupRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*groundstation.CreateDataflowEndpointGroupOutput)
	return
}

func (d *GroundStationDouble) CreateDataflowEndpointGroupWithContext(i0 context.Context, i1 *groundstation.CreateDataflowEndpointGroupInput, i2 ...request.Option) (r0 *groundstation.CreateDataflowEndpointGroupOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreateDataflowEndpointGroupWithContext", i0, i1, i2)
	r0, _ = returns[0].(*groundstation.CreateDataflowEndpointGroupOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *GroundStationDouble) fakeCreateDataflowEndpointGroupWithContext(ctx context.Context, in *groundstation.CreateDataflowEndpointGroupInput, _ ...request.Option) (*groundstation.CreateDataflowEndpointGroupOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "CreateDataflowEndpointGroup cancelled", ctx.Err())
	default:
		return d.CreateDataflowEndpointGroup(in)
	}
}

func (d *GroundStationDouble) CreateMissionProfile(i0 *groundstation.CreateMissionProfileInput) (r0 *groundstation.CreateMissionProfileOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreateMissionProfile", i0)
	r0, _ = returns[0].(*groundstation.CreateMissionProfileOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *GroundStationDouble) CreateMissionProfileRequest(i0 *groundstation.CreateMissionProfileInput) (r0 *request.Request, r1 *groundstation.CreateMissionProfileOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreateMissionProfileRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*groundstation.CreateMissionProfileOutput)
	return
}

func (d *GroundStationDouble) CreateMissionProfileWithContext(i0 context.Context, i1 *groundstation.CreateMissionProfileInput, i2 ...request.Option) (r0 *groundstation.CreateMissionProfileOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreateMissionProfileWithContext", i0, i1, i2)
	r0, _ = returns[0].(*groundstation.CreateMissionProfileOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *GroundStationDouble) fakeCreateMissionProfileWithContext(ctx context.Context, in *groundstation.CreateMissionProfileInput, _ ...request.Option) (*groundstation.CreateMissionProfileOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "CreateMissionProfile cancelled", ctx.Err())
	default:
		return d.CreateMissionProfile(in)
	}
}

func (d *GroundStationDouble) DeleteConfig(i0 *groundstation.DeleteConfigInput) (r0 *groundstation.DeleteConfigOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteConfig", i0)
	r0, _ = returns[0].(*groundstation.DeleteConfigOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *GroundStationDouble) DeleteConfigRequest(i0 *groundstation.DeleteConfigInput) (r0 *request.Request, r1 *groundstation.DeleteConfigOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteConfigRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*groundstation.DeleteConfigOutput)
	return
}

func (d *GroundStationDouble) DeleteConfigWithContext(i0 context.Context, i1 *groundstation.DeleteConfigInput, i2 ...request.Option) (r0 *groundstation.DeleteConfigOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteConfigWithContext", i0, i1, i2)
	r0, _ = returns[0].(*groundstation.DeleteConfigOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *GroundStationDouble) fakeDeleteConfigWithContext(ctx context.Context, in *groundstation.DeleteConfigInput, _ ...request.Option) (*groundstation.DeleteConfigOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "DeleteConfig cancelled", ctx.Err())
	default:
		return d.DeleteConfig(in)
	}
}

func (d *GroundStationDouble) DeleteDataflowEndpointGroup(i0 *groundstation.DeleteDataflowEndpointGroupInput) (r0 *groundstation.DeleteDataflowEndpointGroupOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteDataflowEndpointGroup", i0)
	r0, _ = returns[0].(*groundstation.DeleteDataflowEndpointGroupOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *GroundStationDouble) DeleteDataflowEndpointGroupRequest(i0 *groundstation.DeleteDataflowEndpointGroupInput) (r0 *request.Request, r1 *groundstation.DeleteDataflowEndpointGroupOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteDataflowEndpointGroupRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*groundstation.DeleteDataflowEndpointGroupOutput)
	return
}

func (d *GroundStationDouble) DeleteDataflowEndpointGroupWithContext(i0 context.Context, i1 *groundstation.DeleteDataflowEndpointGroupInput, i2 ...request.Option) (r0 *groundstation.DeleteDataflowEndpointGroupOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteDataflowEndpointGroupWithContext", i0, i1, i2)
	r0, _ = returns[0].(*groundstation.DeleteDataflowEndpointGroupOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *GroundStationDouble) fakeDeleteDataflowEndpointGroupWithContext(ctx context.Context, in *groundstation.DeleteDataflowEndpointGroupInput, _ ...request.Option) (*groundstation.DeleteDataflowEndpointGroupOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "DeleteDataflowEndpointGroup cancelled", ctx.Err())
	default:
		return d.DeleteDataflowEndpointGroup(in)
	}
}

func (d *GroundStationDouble) DeleteMissionProfile(i0 *groundstation.DeleteMissionProfileInput) (r0 *groundstation.DeleteMissionProfileOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteMissionProfile", i0)
	r0, _ = returns[0].(*groundstation.DeleteMissionProfileOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *GroundStationDouble) DeleteMissionProfileRequest(i0 *groundstation.DeleteMissionProfileInput) (r0 *request.Request, r1 *groundstation.DeleteMissionProfileOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteMissionProfileRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*groundstation.DeleteMissionProfileOutput)
	return
}

func (d *GroundStationDouble) DeleteMissionProfileWithContext(i0 context.Context, i1 *groundstation.DeleteMissionProfileInput, i2 ...request.Option) (r0 *groundstation.DeleteMissionProfileOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteMissionProfileWithContext", i0, i1, i2)
	r0, _ = returns[0].(*groundstation.DeleteMissionProfileOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *GroundStationDouble) fakeDeleteMissionProfileWithContext(ctx context.Context, in *groundstation.DeleteMissionProfileInput, _ ...request.Option) (*groundstation.DeleteMissionProfileOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "DeleteMissionProfile cancelled", ctx.Err())
	default:
		return d.DeleteMissionProfile(in)
	}
}

func (d *GroundStationDouble) DescribeContact(i0 *groundstation.DescribeContactInput) (r0 *groundstation.DescribeContactOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DescribeContact", i0)
	r0, _ = returns[0].(*groundstation.DescribeContactOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *GroundStationDouble) DescribeContactRequest(i0 *groundstation.DescribeContactInput) (r0 *request.Request, r1 *groundstation.DescribeContactOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DescribeContactRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*groundstation.DescribeContactOutput)
	return
}

func (d *GroundStationDouble) DescribeContactWithContext(i0 context.Context, i1 *groundstation.DescribeContactInput, i2 ...request.Option) (r0 *groundstation.DescribeContactOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DescribeContactWithContext", i0, i1, i2)
	r0, _ = returns[0].(*groundstation.DescribeContactOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *GroundStationDouble) fakeDescribeContactWithContext(ctx context.Context, in *groundstation.DescribeContactInput, _ ...request.Option) (*groundstation.DescribeContactOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "DescribeContact cancelled", ctx.Err())
	default:
		return d.DescribeContact(in)
	}
}

func (d *GroundStationDouble) GetConfig(i0 *groundstation.GetConfigInput) (r0 *groundstation.GetConfigOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetConfig", i0)
	r0, _ = returns[0].(*groundstation.GetConfigOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *GroundStationDouble) GetConfigRequest(i0 *groundstation.GetConfigInput) (r0 *request.Request, r1 *groundstation.GetConfigOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetConfigRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*groundstation.GetConfigOutput)
	return
}

func (d *GroundStationDouble) GetConfigWithContext(i0 context.Context, i1 *groundstation.GetConfigInput, i2 ...request.Option) (r0 *groundstation.GetConfigOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetConfigWithContext", i0, i1, i2)
	r0, _ = returns[0].(*groundstation.GetConfigOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *GroundStationDouble) fakeGetConfigWithContext(ctx context.Context, in *groundstation.GetConfigInput, _ ...request.Option) (*groundstation.GetConfigOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "GetConfig cancelled", ctx.Err())
	default:
		return d.GetConfig(in)
	}
}

func (d *GroundStationDouble) GetDataflowEndpointGroup(i0 *groundstation.GetDataflowEndpointGroupInput) (r0 *groundstation.GetDataflowEndpointGroupOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetDataflowEndpointGroup", i0)
	r0, _ = returns[0].(*groundstation.GetDataflowEndpointGroupOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *GroundStationDouble) GetDataflowEndpointGroupRequest(i0 *groundstation.GetDataflowEndpointGroupInput) (r0 *request.Request, r1 *groundstation.GetDataflowEndpointGroupOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetDataflowEndpointGroupRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*groundstation.GetDataflowEndpointGroupOutput)
	return
}

func (d *GroundStationDouble) GetDataflowEndpointGroupWithContext(i0 context.Context, i1 *groundstation.GetDataflowEndpointGroupInput, i2 ...request.Option) (r0 *groundstation.GetDataflowEndpointGroupOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetDataflowEndpointGroupWithContext", i0, i1, i2)
	r0, _ = returns[0].(*groundstation.GetDataflowEndpointGroupOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *GroundStationDouble) fakeGetDataflowEndpointGroupWithContext(ctx context.Context, in *groundstation.GetDataflowEndpointGroupInput, _ ...request.Option) (*groundstation.GetDataflowEndpointGroupOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "GetDataflowEndpointGroup cancelled", ctx.Err())
	default:
		return d.GetDataflowEndpointGroup(in)
	}
}

func (d *GroundStationDouble) GetMinuteUsage(i0 *groundstation.GetMinuteUsageInput) (r0 *groundstation.GetMinuteUsageOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetMinuteUsage", i0)
	r0, _ = returns[0].(*groundstation.GetMinuteUsageOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *GroundStationDouble) GetMinuteUsageRequest(i0 *groundstation.GetMinuteUsageInput) (r0 *request.Request, r1 *groundstation.GetMinuteUsageOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetMinuteUsageRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*groundstation.GetMinuteUsageOutput)
	return
}

func (d *GroundStationDouble) GetMinuteUsageWithContext(i0 context.Context, i1 *groundstation.GetMinuteUsageInput, i2 ...request.Option) (r0 *groundstation.GetMinuteUsageOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetMinuteUsageWithContext", i0, i1, i2)
	r0, _ = returns[0].(*groundstation.GetMinuteUsageOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *GroundStationDouble) fakeGetMinuteUsageWithContext(ctx context.Context, in *groundstation.GetMinuteUsageInput, _ ...request.Option) (*groundstation.GetMinuteUsageOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "GetMinuteUsage cancelled", ctx.Err())
	default:
		return d.GetMinuteUsage(in)
	}
}

func (d *GroundStationDouble) GetMissionProfile(i0 *groundstation.GetMissionProfileInput) (r0 *groundstation.GetMissionProfileOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetMissionProfile", i0)
	r0, _ = returns[0].(*groundstation.GetMissionProfileOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *GroundStationDouble) GetMissionProfileRequest(i0 *groundstation.GetMissionProfileInput) (r0 *request.Request, r1 *groundstation.GetMissionProfileOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetMissionProfileRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*groundstation.GetMissionProfileOutput)
	return
}

func (d *GroundStationDouble) GetMissionProfileWithContext(i0 context.Context, i1 *groundstation.GetMissionProfileInput, i2 ...request.Option) (r0 *groundstation.GetMissionProfileOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetMissionProfileWithContext", i0, i1, i2)
	r0, _ = returns[0].(*groundstation.GetMissionProfileOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *GroundStationDouble) fakeGetMissionProfileWithContext(ctx context.Context, in *groundstation.GetMissionProfileInput, _ ...request.Option) (*groundstation.GetMissionProfileOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "GetMissionProfile cancelled", ctx.Err())
	default:
		return d.GetMissionProfile(in)
	}
}

func (d *GroundStationDouble) GetSatellite(i0 *groundstation.GetSatelliteInput) (r0 *groundstation.GetSatelliteOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetSatellite", i0)
	r0, _ = returns[0].(*groundstation.GetSatelliteOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *GroundStationDouble) GetSatelliteRequest(i0 *groundstation.GetSatelliteInput) (r0 *request.Request, r1 *groundstation.GetSatelliteOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetSatelliteRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*groundstation.GetSatelliteOutput)
	return
}

func (d *GroundStationDouble) GetSatelliteWithContext(i0 context.Context, i1 *groundstation.GetSatelliteInput, i2 ...request.Option) (r0 *groundstation.GetSatelliteOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetSatelliteWithContext", i0, i1, i2)
	r0, _ = returns[0].(*groundstation.GetSatelliteOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *GroundStationDouble) fakeGetSatelliteWithContext(ctx context.Context, in *groundstation.GetSatelliteInput, _ ...request.Option) (*groundstation.GetSatelliteOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "GetSatellite cancelled", ctx.Err())
	default:
		return d.GetSatellite(in)
	}
}

func (d *GroundStationDouble) ListConfigs(i0 *groundstation.ListConfigsInput) (r0 *groundstation.ListConfigsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListConfigs", i0)
	r0, _ = returns[0].(*groundstation.ListConfigsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *GroundStationDouble) ListConfigsPages(i0 *groundstation.ListConfigsInput, i1 func(*groundstation.ListConfigsOutput, bool) bool) (r0 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListConfigsPages", i0, i1)
	r0, _ = returns[0].(error)
	return
}

func (d *GroundStationDouble) fakeListConfigsPages(in *groundstation.ListConfigsInput, pager func(*groundstation.ListConfigsOutput, bool) (shouldContinue bool)) error {
	return d.Paginate("ListConfigs", paginators, in, pager)
}

func (d *GroundStationDouble) ListConfigsPagesWithContext(i0 context.Context, i1 *groundstation.ListConfigsInput, i2 func(*groundstation.ListConfigsOutput, bool) bool, i3 ...request.Option) (r0 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListConfigsPagesWithContext", i0, i1, i2, i3)
	r0, _ = returns[0].(error)
	return
}

func (d *GroundStationDouble) fakeListConfigsPagesWithContext(ctx context.Context, in *groundstation.ListConfigsInput, pager func(*groundstation.ListConfigsOutput, bool) (shouldContinue bool), options ...request.Option) error {
	return d.PaginateWithContext("ListConfigs", paginators, ctx, in, pager, options...)
}

func (d *GroundStationDouble) ListConfigsRequest(i0 *groundstation.ListConfigsInput) (r0 *request.Request, r1 *groundstation.ListConfigsOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListConfigsRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*groundstation.ListConfigsOutput)
	return
}

func (d *GroundStationDouble) ListConfigsWithContext(i0 context.Context, i1 *groundstation.ListConfigsInput, i2 ...request.Option) (r0 *groundstation.ListConfigsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListConfigsWithContext", i0, i1, i2)
	r0, _ = returns[0].(*groundstation.ListConfigsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *GroundStationDouble) fakeListConfigsWithContext(ctx context.Context, in *groundstation.ListConfigsInput, _ ...request.Option) (*groundstation.ListConfigsOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "ListConfigs cancelled", ctx.Err())
	default:
		return d.ListConfigs(in)
	}
}

func (d *GroundStationDouble) ListContacts(i0 *groundstation.ListContactsInput) (r0 *groundstation.ListContactsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListContacts", i0)
	r0, _ = returns[0].(*groundstation.ListContactsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *GroundStationDouble) ListContactsPages(i0 *groundstation.ListContactsInput, i1 func(*groundstation.ListContactsOutput, bool) bool) (r0 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListContactsPages", i0, i1)
	r0, _ = returns[0].(error)
	return
}

func (d *GroundStationDouble) fakeListContactsPages(in *groundstation.ListContactsInput, pager func(*groundstation.ListContactsOutput, bool) (shouldContinue bool)) error {
	return d.Paginate("ListContacts", paginators, in, pager)
}

func (d *GroundStationDouble) ListContactsPagesWithContext(i0 context.Context, i1 *groundstation.ListContactsInput, i2 func(*groundstation.ListContactsOutput, bool) bool, i3 ...request.Option) (r0 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListContactsPagesWithContext", i0, i1, i2, i3)
	r0, _ = returns[0].(error)
	return
}

func (d *GroundStationDouble) fakeListContactsPagesWithContext(ctx context.Context, in *groundstation.ListContactsInput, pager func(*groundstation.ListContactsOutput, bool) (shouldContinue bool), options ...request.Option) error {
	return d.PaginateWithContext("ListContacts", paginators, ctx, in, pager, options...)
}

func (d *GroundStationDouble) ListContactsRequest(i0 *groundstation.ListContactsInput) (r0 *request.Request, r1 *groundstation.ListContactsOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListContactsRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*groundstation.ListContactsOutput)
	return
}

func (d *GroundStationDouble) ListContactsWithContext(i0 context.Context, i1 *groundstation.ListContactsInput, i2 ...request.Option) (r0 *groundstation.ListContactsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListContactsWithContext", i0, i1, i2)
	r0, _ = returns[0].(*groundstation.ListContactsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *GroundStationDouble) fakeListContactsWithContext(ctx context.Context, in *groundstation.ListContactsInput, _ ...request.Option) (*groundstation.ListContactsOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "ListContacts cancelled", ctx.Err())
	default:
		return d.ListContacts(in)
	}
}

func (d *GroundStationDouble) ListDataflowEndpointGroups(i0 *groundstation.ListDataflowEndpointGroupsInput) (r0 *groundstation.ListDataflowEndpointGroupsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListDataflowEndpointGroups", i0)
	r0, _ = returns[0].(*groundstation.ListDataflowEndpointGroupsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *GroundStationDouble) ListDataflowEndpointGroupsPages(i0 *groundstation.ListDataflowEndpointGroupsInput, i1 func(*groundstation.ListDataflowEndpointGroupsOutput, bool) bool) (r0 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListDataflowEndpointGroupsPages", i0, i1)
	r0, _ = returns[0].(error)
	return
}

func (d *GroundStationDouble) fakeListDataflowEndpointGroupsPages(in *groundstation.ListDataflowEndpointGroupsInput, pager func(*groundstation.ListDataflowEndpointGroupsOutput, bool) (shouldContinue bool)) error {
	return d.Paginate("ListDataflowEndpointGroups", paginators, in, pager)
}

func (d *GroundStationDouble) ListDataflowEndpointGroupsPagesWithContext(i0 context.Context, i1 *groundstation.ListDataflowEndpointGroupsInput, i2 func(*groundstation.ListDataflowEndpointGroupsOutput, bool) bool, i3 ...request.Option) (r0 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListDataflowEndpointGroupsPagesWithContext", i0, i1, i2, i3)
	r0, _ = returns[0].(error)
	return
}

func (d *GroundStationDouble) fakeListDataflowEndpointGroupsPagesWithContext(ctx context.Context, in *groundstation.ListDataflowEndpointGroupsInput, pager func(*groundstation.ListDataflowEndpointGroupsOutput, bool) (shouldContinue bool), options ...request.Option) error {
	return d.PaginateWithContext("ListDataflowEndpointGroups", paginators, ctx, in, pager, options...)
}

func (d *GroundStationDouble) ListDataflowEndpointGroupsRequest(i0 *groundstation.ListDataflowEndpointGroupsInput) (r0 *request.Request, r1 *groundstation.ListDataflowEndpointGroupsOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListDataflowEndpointGroupsRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*groundstation.ListDataflowEndpointGroupsOutput)
	return
}

func (d *GroundStationDouble) ListDataflowEndpointGroupsWithContext(i0 context.Context, i1 *groundstation.ListDataflowEndpointGroupsInput, i2 ...request.Option) (r0 *groundstation.ListDataflowEndpointGroupsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListDataflowEndpointGroupsWithContext", i0, i1, i2)
	r0, _ = returns[0].(*groundstation.ListDataflowEndpointGroupsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *GroundStationDouble) fakeListDataflowEndpointGroupsWithContext(ctx context.Context, in *groundstation.ListDataflowEndpointGroupsInput, _ ...request.Option) (*groundstation.ListDataflowEndpointGroupsOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "ListDataflowEndpointGroups cancelled", ctx.Err())
	default:
		return d.ListDataflowEndpointGroups(in)
	}
}

func (d *GroundStationDouble) ListGroundStations(i0 *groundstation.ListGroundStationsInput) (r0 *groundstation.ListGroundStationsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListGroundStations", i0)
	r0, _ = returns[0].(*groundstation.ListGroundStationsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *GroundStationDouble) ListGroundStationsPages(i0 *groundstation.ListGroundStationsInput, i1 func(*groundstation.ListGroundStationsOutput, bool) bool) (r0 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListGroundStationsPages", i0, i1)
	r0, _ = returns[0].(error)
	return
}

func (d *GroundStationDouble) fakeListGroundStationsPages(in *groundstation.ListGroundStationsInput, pager func(*groundstation.ListGroundStationsOutput, bool) (shouldContinue bool)) error {
	return d.Paginate("ListGroundStations", paginators, in, pager)
}

func (d *GroundStationDouble) ListGroundStationsPagesWithContext(i0 context.Context, i1 *groundstation.ListGroundStationsInput, i2 func(*groundstation.ListGroundStationsOutput, bool) bool, i3 ...request.Option) (r0 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListGroundStationsPagesWithContext", i0, i1, i2, i3)
	r0, _ = returns[0].(error)
	return
}

func (d *GroundStationDouble) fakeListGroundStationsPagesWithContext(ctx context.Context, in *groundstation.ListGroundStationsInput, pager func(*groundstation.ListGroundStationsOutput, bool) (shouldContinue bool), options ...request.Option) error {
	return d.PaginateWithContext("ListGroundStations", paginators, ctx, in, pager, options...)
}

func (d *GroundStationDouble) ListGroundStationsRequest(i0 *groundstation.ListGroundStationsInput) (r0 *request.Request, r1 *groundstation.ListGroundStationsOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListGroundStationsRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*groundstation.ListGroundStationsOutput)
	return
}

func (d *GroundStationDouble) ListGroundStationsWithContext(i0 context.Context, i1 *groundstation.ListGroundStationsInput, i2 ...request.Option) (r0 *groundstation.ListGroundStationsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListGroundStationsWithContext", i0, i1, i2)
	r0, _ = returns[0].(*groundstation.ListGroundStationsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *GroundStationDouble) fakeListGroundStationsWithContext(ctx context.Context, in *groundstation.ListGroundStationsInput, _ ...request.Option) (*groundstation.ListGroundStationsOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "ListGroundStations cancelled", ctx.Err())
	default:
		return d.ListGroundStations(in)
	}
}

func (d *GroundStationDouble) ListMissionProfiles(i0 *groundstation.ListMissionProfilesInput) (r0 *groundstation.ListMissionProfilesOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListMissionProfiles", i0)
	r0, _ = returns[0].(*groundstation.ListMissionProfilesOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *GroundStationDouble) ListMissionProfilesPages(i0 *groundstation.ListMissionProfilesInput, i1 func(*groundstation.ListMissionProfilesOutput, bool) bool) (r0 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListMissionProfilesPages", i0, i1)
	r0, _ = returns[0].(error)
	return
}

func (d *GroundStationDouble) fakeListMissionProfilesPages(in *groundstation.ListMissionProfilesInput, pager func(*groundstation.ListMissionProfilesOutput, bool) (shouldContinue bool)) error {
	return d.Paginate("ListMissionProfiles", paginators, in, pager)
}

func (d *GroundStationDouble) ListMissionProfilesPagesWithContext(i0 context.Context, i1 *groundstation.ListMissionProfilesInput, i2 func(*groundstation.ListMissionProfilesOutput, bool) bool, i3 ...request.Option) (r0 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListMissionProfilesPagesWithContext", i0, i1, i2, i3)
	r0, _ = returns[0].(error)
	return
}

func (d *GroundStationDouble) fakeListMissionProfilesPagesWithContext(ctx context.Context, in *groundstation.ListMissionProfilesInput, pager func(*groundstation.ListMissionProfilesOutput, bool) (shouldContinue bool), options ...request.Option) error {
	return d.PaginateWithContext("ListMissionProfiles", paginators, ctx, in, pager, options...)
}

func (d *GroundStationDouble) ListMissionProfilesRequest(i0 *groundstation.ListMissionProfilesInput) (r0 *request.Request, r1 *groundstation.ListMissionProfilesOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListMissionProfilesRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*groundstation.ListMissionProfilesOutput)
	return
}

func (d *GroundStationDouble) ListMissionProfilesWithContext(i0 context.Context, i1 *groundstation.ListMissionProfilesInput, i2 ...request.Option) (r0 *groundstation.ListMissionProfilesOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListMissionProfilesWithContext", i0, i1, i2)
	r0, _ = returns[0].(*groundstation.ListMissionProfilesOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *GroundStationDouble) fakeListMissionProfilesWithContext(ctx context.Context, in *groundstation.ListMissionProfilesInput, _ ...request.Option) (*groundstation.ListMissionProfilesOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "ListMissionProfiles cancelled", ctx.Err())
	default:
		return d.ListMissionProfiles(in)
	}
}

func (d *GroundStationDouble) ListSatellites(i0 *groundstation.ListSatellitesInput) (r0 *groundstation.ListSatellitesOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListSatellites", i0)
	r0, _ = returns[0].(*groundstation.ListSatellitesOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *GroundStationDouble) ListSatellitesPages(i0 *groundstation.ListSatellitesInput, i1 func(*groundstation.ListSatellitesOutput, bool) bool) (r0 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListSatellitesPages", i0, i1)
	r0, _ = returns[0].(error)
	return
}

func (d *GroundStationDouble) fakeListSatellitesPages(in *groundstation.ListSatellitesInput, pager func(*groundstation.ListSatellitesOutput, bool) (shouldContinue bool)) error {
	return d.Paginate("ListSatellites", paginators, in, pager)
}

func (d *GroundStationDouble) ListSatellitesPagesWithContext(i0 context.Context, i1 *groundstation.ListSatellitesInput, i2 func(*groundstation.ListSatellitesOutput, bool) bool, i3 ...request.Option) (r0 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListSatellitesPagesWithContext", i0, i1, i2, i3)
	r0, _ = returns[0].(error)
	return
}

func (d *GroundStationDouble) fakeListSatellitesPagesWithContext(ctx context.Context, in *groundstation.ListSatellitesInput, pager func(*groundstation.ListSatellitesOutput, bool) (shouldContinue bool), options ...request.Option) error {
	return d.PaginateWithContext("ListSatellites", paginators, ctx, in, pager, options...)
}

func (d *GroundStationDouble) ListSatellitesRequest(i0 *groundstation.ListSatellitesInput) (r0 *request.Request, r1 *groundstation.ListSatellitesOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListSatellitesRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*groundstation.ListSatellitesOutput)
	return
}

func (d *GroundStationDouble) ListSatellitesWithContext(i0 context.Context, i1 *groundstation.ListSatellitesInput, i2 ...request.Option) (r0 *groundstation.ListSatellitesOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListSatellitesWithContext", i0, i1, i2)
	r0, _ = returns[0].(*groundstation.ListSatellitesOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *GroundStationDouble) fakeListSatellitesWithContext(ctx context.Context, in *groundstation.ListSatellitesInput, _ ...request.Option) (*groundstation.ListSatellitesOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "ListSatellites cancelled", ctx.Err())
	default:
		return d.ListSatellites(in)
	}
}

func (d *GroundStationDouble) ListTagsForResource(i0 *groundstation.ListTagsForResourceInput) (r0 *groundstation.ListTagsForResourceOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListTagsForResource", i0)
	r0, _ = returns[0].(*groundstation.ListTagsForResourceOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *GroundStationDouble) ListTagsForResourceRequest(i0 *groundstation.ListTagsForResourceInput) (r0 *request.Request, r1 *groundstation.ListTagsForResourceOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListTagsForResourceRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*groundstation.ListTagsForResourceOutput)
	return
}

func (d *GroundStationDouble) ListTagsForResourceWithContext(i0 context.Context, i1 *groundstation.ListTagsForResourceInput, i2 ...request.Option) (r0 *groundstation.ListTagsForResourceOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListTagsForResourceWithContext", i0, i1, i2)
	r0, _ = returns[0].(*groundstation.ListTagsForResourceOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *GroundStationDouble) fakeListTagsForResourceWithContext(ctx context.Context, in *groundstation.ListTagsForResourceInput, _ ...request.Option) (*groundstation.ListTagsForResourceOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "ListTagsForResource cancelled", ctx.Err())
	default:
		return d.ListTagsForResource(in)
	}
}

func (d *GroundStationDouble) ReserveContact(i0 *groundstation.ReserveContactInput) (r0 *groundstation.ReserveContactOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ReserveContact", i0)
	r0, _ = returns[0].(*groundstation.ReserveContactOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *GroundStationDouble) ReserveContactRequest(i0 *groundstation.ReserveContactInput) (r0 *request.Request, r1 *groundstation.ReserveContactOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ReserveContactRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*groundstation.ReserveContactOutput)
	return
}

func (d *GroundStationDouble) ReserveContactWithContext(i0 context.Context, i1 *groundstation.ReserveContactInput, i2 ...request.Option) (r0 *groundstation.ReserveContactOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ReserveContactWithContext", i0, i1, i2)
	r0, _ = returns[0].(*groundstation.ReserveContactOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *GroundStationDouble) fakeReserveContactWithContext(ctx context.Context, in *groundstation.ReserveContactInput, _ ...request.Option) (*groundstation.ReserveContactOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "ReserveContact cancelled", ctx.Err())
	default:
		return d.ReserveContact(in)
	}
}

func (d *GroundStationDouble) TagResource(i0 *groundstation.TagResourceInput) (r0 *groundstation.TagResourceOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("TagResource", i0)
	r0, _ = returns[0].(*groundstation.TagResourceOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *GroundStationDouble) TagResourceRequest(i0 *groundstation.TagResourceInput) (r0 *request.Request, r1 *groundstation.TagResourceOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("TagResourceRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*groundstation.TagResourceOutput)
	return
}

func (d *GroundStationDouble) TagResourceWithContext(i0 context.Context, i1 *groundstation.TagResourceInput, i2 ...request.Option) (r0 *groundstation.TagResourceOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("TagResourceWithContext", i0, i1, i2)
	r0, _ = returns[0].(*groundstation.TagResourceOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *GroundStationDouble) fakeTagResourceWithContext(ctx context.Context, in *groundstation.TagResourceInput, _ ...request.Option) (*groundstation.TagResourceOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "TagResource cancelled", ctx.Err())
	default:
		return d.TagResource(in)
	}
}

func (d *GroundStationDouble) UntagResource(i0 *groundstation.UntagResourceInput) (r0 *groundstation.UntagResourceOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UntagResource", i0)
	r0, _ = returns[0].(*groundstation.UntagResourceOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *GroundStationDouble) UntagResourceRequest(i0 *groundstation.UntagResourceInput) (r0 *request.Request, r1 *groundstation.UntagResourceOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UntagResourceRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*groundstation.UntagResourceOutput)
	return
}

func (d *GroundStationDouble) UntagResourceWithContext(i0 context.Context, i1 *groundstation.UntagResourceInput, i2 ...request.Option) (r0 *groundstation.UntagResourceOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UntagResourceWithContext", i0, i1, i2)
	r0, _ = returns[0].(*groundstation.UntagResourceOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *GroundStationDouble) fakeUntagResourceWithContext(ctx context.Context, in *groundstation.UntagResourceInput, _ ...request.Option) (*groundstation.UntagResourceOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "UntagResource cancelled", ctx.Err())
	default:
		return d.UntagResource(in)
	}
}

func (d *GroundStationDouble) UpdateConfig(i0 *groundstation.UpdateConfigInput) (r0 *groundstation.UpdateConfigOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UpdateConfig", i0)
	r0, _ = returns[0].(*groundstation.UpdateConfigOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *GroundStationDouble) UpdateConfigRequest(i0 *groundstation.UpdateConfigInput) (r0 *request.Request, r1 *groundstation.UpdateConfigOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UpdateConfigRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*groundstation.UpdateConfigOutput)
	return
}

func (d *GroundStationDouble) UpdateConfigWithContext(i0 context.Context, i1 *groundstation.UpdateConfigInput, i2 ...request.Option) (r0 *groundstation.UpdateConfigOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UpdateConfigWithContext", i0, i1, i2)
	r0, _ = returns[0].(*groundstation.UpdateConfigOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *GroundStationDouble) fakeUpdateConfigWithContext(ctx context.Context, in *groundstation.UpdateConfigInput, _ ...request.Option) (*groundstation.UpdateConfigOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "UpdateConfig cancelled", ctx.Err())
	default:
		return d.UpdateConfig(in)
	}
}

func (d *GroundStationDouble) UpdateMissionProfile(i0 *groundstation.UpdateMissionProfileInput) (r0 *groundstation.UpdateMissionProfileOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UpdateMissionProfile", i0)
	r0, _ = returns[0].(*groundstation.UpdateMissionProfileOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *GroundStationDouble) UpdateMissionProfileRequest(i0 *groundstation.UpdateMissionProfileInput) (r0 *request.Request, r1 *groundstation.UpdateMissionProfileOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UpdateMissionProfileRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*groundstation.UpdateMissionProfileOutput)
	return
}

func (d *GroundStationDouble) UpdateMissionProfileWithContext(i0 context.Context, i1 *groundstation.UpdateMissionProfileInput, i2 ...request.Option) (r0 *groundstation.UpdateMissionProfileOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UpdateMissionProfileWithContext", i0, i1, i2)
	r0, _ = returns[0].(*groundstation.UpdateMissionProfileOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *GroundStationDouble) fakeUpdateMissionProfileWithContext(ctx context.Context, in *groundstation.UpdateMissionProfileInput, _ ...request.Option) (*groundstation.UpdateMissionProfileOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "UpdateMissionProfile cancelled", ctx.Err())
	default:
		return d.UpdateMissionProfile(in)
	}
}
