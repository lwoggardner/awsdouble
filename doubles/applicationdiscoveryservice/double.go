// Code generated by go doublegen; DO NOT EDIT.
// This file was generated at 2020-02-14T22:11:13+11:00

// Package applicationdiscoveryservicedouble provides a TestDouble implementation of applicationdiscoveryserviceiface.ApplicationDiscoveryServiceAPI
package applicationdiscoveryservicedouble

import (
	"context"

	"github.com/aws/aws-sdk-go/aws/awserr"
	"github.com/aws/aws-sdk-go/aws/request"
	"github.com/aws/aws-sdk-go/service/applicationdiscoveryservice"
	"github.com/aws/aws-sdk-go/service/applicationdiscoveryservice/applicationdiscoveryserviceiface"
	"github.com/lwoggardner/awsdouble"
	"github.com/lwoggardner/godouble/godouble"
)

// ApplicationDiscoveryServiceDouble is TestDouble for applicationdiscoveryserviceiface.ApplicationDiscoveryServiceAPI
type ApplicationDiscoveryServiceDouble struct {
	applicationdiscoveryserviceiface.ApplicationDiscoveryServiceAPI
	*awsdouble.AWSTestDouble
}

// Constructor for ApplicationDiscoveryServiceDouble
// Default configuration will ensure
//   * API operations not explicitly stubbed will return an empty output struct pointer, and nil error.
//     To simulate long polling, "Poll" operations will return these values after a random delay of up to 100ms.
//   * WithContext methods implement a 'Fake' method that returns a cancellation error if the context is cancelled
//      before the method is called.
//   * Pages and PagesWithContext methods similarly implement a 'Fake' method that paginates over the underlying method.
//
//    This allows tests to only stub the simple api methods and be generally unconcerned whether the SUT is using the
//      Context or Pagination forms of the API.
//
func NewDouble(t godouble.T, configurators ...func(*awsdouble.AWSTestDouble)) *ApplicationDiscoveryServiceDouble {
	result := &ApplicationDiscoveryServiceDouble{}

	configurators = append([]func(configurator *awsdouble.AWSTestDouble){func(d *awsdouble.AWSTestDouble) {
		d.SetDefaultCall(result.defaultMethodCall)
		d.SetDefaultReturnValues(result.defaultReturnValues)
	}}, configurators...)

	result.AWSTestDouble = awsdouble.NewDouble(t, (*applicationdiscoveryserviceiface.ApplicationDiscoveryServiceAPI)(nil), configurators...)
	return result
}

func (d *ApplicationDiscoveryServiceDouble) defaultReturnValues(m godouble.Method) godouble.ReturnValues {
	return d.DefaultReturnValues(m)
}

func (d *ApplicationDiscoveryServiceDouble) defaultMethodCall(m godouble.Method) godouble.MethodCall {
	switch m.Reflect().Name {

	case "AssociateConfigurationItemsToApplicationWithContext":
		return m.Fake(d.fakeAssociateConfigurationItemsToApplicationWithContext)

	case "BatchDeleteImportDataWithContext":
		return m.Fake(d.fakeBatchDeleteImportDataWithContext)

	case "CreateApplicationWithContext":
		return m.Fake(d.fakeCreateApplicationWithContext)

	case "CreateTagsWithContext":
		return m.Fake(d.fakeCreateTagsWithContext)

	case "DeleteApplicationsWithContext":
		return m.Fake(d.fakeDeleteApplicationsWithContext)

	case "DeleteTagsWithContext":
		return m.Fake(d.fakeDeleteTagsWithContext)

	case "DescribeAgentsWithContext":
		return m.Fake(d.fakeDescribeAgentsWithContext)

	case "DescribeConfigurationsWithContext":
		return m.Fake(d.fakeDescribeConfigurationsWithContext)

	case "DescribeContinuousExportsPages":
		return m.Fake(d.fakeDescribeContinuousExportsPages)

	case "DescribeContinuousExportsPagesWithContext":
		return m.Fake(d.fakeDescribeContinuousExportsPagesWithContext)

	case "DescribeContinuousExportsWithContext":
		return m.Fake(d.fakeDescribeContinuousExportsWithContext)

	case "DescribeExportConfigurationsWithContext":
		return m.Fake(d.fakeDescribeExportConfigurationsWithContext)

	case "DescribeExportTasksWithContext":
		return m.Fake(d.fakeDescribeExportTasksWithContext)

	case "DescribeImportTasksPages":
		return m.Fake(d.fakeDescribeImportTasksPages)

	case "DescribeImportTasksPagesWithContext":
		return m.Fake(d.fakeDescribeImportTasksPagesWithContext)

	case "DescribeImportTasksWithContext":
		return m.Fake(d.fakeDescribeImportTasksWithContext)

	case "DescribeTagsWithContext":
		return m.Fake(d.fakeDescribeTagsWithContext)

	case "DisassociateConfigurationItemsFromApplicationWithContext":
		return m.Fake(d.fakeDisassociateConfigurationItemsFromApplicationWithContext)

	case "ExportConfigurationsWithContext":
		return m.Fake(d.fakeExportConfigurationsWithContext)

	case "GetDiscoverySummaryWithContext":
		return m.Fake(d.fakeGetDiscoverySummaryWithContext)

	case "ListConfigurationsWithContext":
		return m.Fake(d.fakeListConfigurationsWithContext)

	case "ListServerNeighborsWithContext":
		return m.Fake(d.fakeListServerNeighborsWithContext)

	case "StartContinuousExportWithContext":
		return m.Fake(d.fakeStartContinuousExportWithContext)

	case "StartDataCollectionByAgentIdsWithContext":
		return m.Fake(d.fakeStartDataCollectionByAgentIdsWithContext)

	case "StartExportTaskWithContext":
		return m.Fake(d.fakeStartExportTaskWithContext)

	case "StartImportTaskWithContext":
		return m.Fake(d.fakeStartImportTaskWithContext)

	case "StopContinuousExportWithContext":
		return m.Fake(d.fakeStopContinuousExportWithContext)

	case "StopDataCollectionByAgentIdsWithContext":
		return m.Fake(d.fakeStopDataCollectionByAgentIdsWithContext)

	case "UpdateApplicationWithContext":
		return m.Fake(d.fakeUpdateApplicationWithContext)

	default:
		return nil
	}
}

func (d *ApplicationDiscoveryServiceDouble) AssociateConfigurationItemsToApplication(i0 *applicationdiscoveryservice.AssociateConfigurationItemsToApplicationInput) (r0 *applicationdiscoveryservice.AssociateConfigurationItemsToApplicationOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("AssociateConfigurationItemsToApplication", i0)
	r0, _ = returns[0].(*applicationdiscoveryservice.AssociateConfigurationItemsToApplicationOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ApplicationDiscoveryServiceDouble) AssociateConfigurationItemsToApplicationRequest(i0 *applicationdiscoveryservice.AssociateConfigurationItemsToApplicationInput) (r0 *request.Request, r1 *applicationdiscoveryservice.AssociateConfigurationItemsToApplicationOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("AssociateConfigurationItemsToApplicationRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*applicationdiscoveryservice.AssociateConfigurationItemsToApplicationOutput)
	return
}

func (d *ApplicationDiscoveryServiceDouble) AssociateConfigurationItemsToApplicationWithContext(i0 context.Context, i1 *applicationdiscoveryservice.AssociateConfigurationItemsToApplicationInput, i2 ...request.Option) (r0 *applicationdiscoveryservice.AssociateConfigurationItemsToApplicationOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("AssociateConfigurationItemsToApplicationWithContext", i0, i1, i2)
	r0, _ = returns[0].(*applicationdiscoveryservice.AssociateConfigurationItemsToApplicationOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ApplicationDiscoveryServiceDouble) fakeAssociateConfigurationItemsToApplicationWithContext(ctx context.Context, in *applicationdiscoveryservice.AssociateConfigurationItemsToApplicationInput, _ ...request.Option) (*applicationdiscoveryservice.AssociateConfigurationItemsToApplicationOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "AssociateConfigurationItemsToApplication cancelled", ctx.Err())
	default:
		return d.AssociateConfigurationItemsToApplication(in)
	}
}

func (d *ApplicationDiscoveryServiceDouble) BatchDeleteImportData(i0 *applicationdiscoveryservice.BatchDeleteImportDataInput) (r0 *applicationdiscoveryservice.BatchDeleteImportDataOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("BatchDeleteImportData", i0)
	r0, _ = returns[0].(*applicationdiscoveryservice.BatchDeleteImportDataOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ApplicationDiscoveryServiceDouble) BatchDeleteImportDataRequest(i0 *applicationdiscoveryservice.BatchDeleteImportDataInput) (r0 *request.Request, r1 *applicationdiscoveryservice.BatchDeleteImportDataOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("BatchDeleteImportDataRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*applicationdiscoveryservice.BatchDeleteImportDataOutput)
	return
}

func (d *ApplicationDiscoveryServiceDouble) BatchDeleteImportDataWithContext(i0 context.Context, i1 *applicationdiscoveryservice.BatchDeleteImportDataInput, i2 ...request.Option) (r0 *applicationdiscoveryservice.BatchDeleteImportDataOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("BatchDeleteImportDataWithContext", i0, i1, i2)
	r0, _ = returns[0].(*applicationdiscoveryservice.BatchDeleteImportDataOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ApplicationDiscoveryServiceDouble) fakeBatchDeleteImportDataWithContext(ctx context.Context, in *applicationdiscoveryservice.BatchDeleteImportDataInput, _ ...request.Option) (*applicationdiscoveryservice.BatchDeleteImportDataOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "BatchDeleteImportData cancelled", ctx.Err())
	default:
		return d.BatchDeleteImportData(in)
	}
}

func (d *ApplicationDiscoveryServiceDouble) CreateApplication(i0 *applicationdiscoveryservice.CreateApplicationInput) (r0 *applicationdiscoveryservice.CreateApplicationOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreateApplication", i0)
	r0, _ = returns[0].(*applicationdiscoveryservice.CreateApplicationOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ApplicationDiscoveryServiceDouble) CreateApplicationRequest(i0 *applicationdiscoveryservice.CreateApplicationInput) (r0 *request.Request, r1 *applicationdiscoveryservice.CreateApplicationOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreateApplicationRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*applicationdiscoveryservice.CreateApplicationOutput)
	return
}

func (d *ApplicationDiscoveryServiceDouble) CreateApplicationWithContext(i0 context.Context, i1 *applicationdiscoveryservice.CreateApplicationInput, i2 ...request.Option) (r0 *applicationdiscoveryservice.CreateApplicationOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreateApplicationWithContext", i0, i1, i2)
	r0, _ = returns[0].(*applicationdiscoveryservice.CreateApplicationOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ApplicationDiscoveryServiceDouble) fakeCreateApplicationWithContext(ctx context.Context, in *applicationdiscoveryservice.CreateApplicationInput, _ ...request.Option) (*applicationdiscoveryservice.CreateApplicationOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "CreateApplication cancelled", ctx.Err())
	default:
		return d.CreateApplication(in)
	}
}

func (d *ApplicationDiscoveryServiceDouble) CreateTags(i0 *applicationdiscoveryservice.CreateTagsInput) (r0 *applicationdiscoveryservice.CreateTagsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreateTags", i0)
	r0, _ = returns[0].(*applicationdiscoveryservice.CreateTagsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ApplicationDiscoveryServiceDouble) CreateTagsRequest(i0 *applicationdiscoveryservice.CreateTagsInput) (r0 *request.Request, r1 *applicationdiscoveryservice.CreateTagsOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreateTagsRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*applicationdiscoveryservice.CreateTagsOutput)
	return
}

func (d *ApplicationDiscoveryServiceDouble) CreateTagsWithContext(i0 context.Context, i1 *applicationdiscoveryservice.CreateTagsInput, i2 ...request.Option) (r0 *applicationdiscoveryservice.CreateTagsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreateTagsWithContext", i0, i1, i2)
	r0, _ = returns[0].(*applicationdiscoveryservice.CreateTagsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ApplicationDiscoveryServiceDouble) fakeCreateTagsWithContext(ctx context.Context, in *applicationdiscoveryservice.CreateTagsInput, _ ...request.Option) (*applicationdiscoveryservice.CreateTagsOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "CreateTags cancelled", ctx.Err())
	default:
		return d.CreateTags(in)
	}
}

func (d *ApplicationDiscoveryServiceDouble) DeleteApplications(i0 *applicationdiscoveryservice.DeleteApplicationsInput) (r0 *applicationdiscoveryservice.DeleteApplicationsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteApplications", i0)
	r0, _ = returns[0].(*applicationdiscoveryservice.DeleteApplicationsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ApplicationDiscoveryServiceDouble) DeleteApplicationsRequest(i0 *applicationdiscoveryservice.DeleteApplicationsInput) (r0 *request.Request, r1 *applicationdiscoveryservice.DeleteApplicationsOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteApplicationsRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*applicationdiscoveryservice.DeleteApplicationsOutput)
	return
}

func (d *ApplicationDiscoveryServiceDouble) DeleteApplicationsWithContext(i0 context.Context, i1 *applicationdiscoveryservice.DeleteApplicationsInput, i2 ...request.Option) (r0 *applicationdiscoveryservice.DeleteApplicationsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteApplicationsWithContext", i0, i1, i2)
	r0, _ = returns[0].(*applicationdiscoveryservice.DeleteApplicationsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ApplicationDiscoveryServiceDouble) fakeDeleteApplicationsWithContext(ctx context.Context, in *applicationdiscoveryservice.DeleteApplicationsInput, _ ...request.Option) (*applicationdiscoveryservice.DeleteApplicationsOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "DeleteApplications cancelled", ctx.Err())
	default:
		return d.DeleteApplications(in)
	}
}

func (d *ApplicationDiscoveryServiceDouble) DeleteTags(i0 *applicationdiscoveryservice.DeleteTagsInput) (r0 *applicationdiscoveryservice.DeleteTagsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteTags", i0)
	r0, _ = returns[0].(*applicationdiscoveryservice.DeleteTagsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ApplicationDiscoveryServiceDouble) DeleteTagsRequest(i0 *applicationdiscoveryservice.DeleteTagsInput) (r0 *request.Request, r1 *applicationdiscoveryservice.DeleteTagsOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteTagsRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*applicationdiscoveryservice.DeleteTagsOutput)
	return
}

func (d *ApplicationDiscoveryServiceDouble) DeleteTagsWithContext(i0 context.Context, i1 *applicationdiscoveryservice.DeleteTagsInput, i2 ...request.Option) (r0 *applicationdiscoveryservice.DeleteTagsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteTagsWithContext", i0, i1, i2)
	r0, _ = returns[0].(*applicationdiscoveryservice.DeleteTagsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ApplicationDiscoveryServiceDouble) fakeDeleteTagsWithContext(ctx context.Context, in *applicationdiscoveryservice.DeleteTagsInput, _ ...request.Option) (*applicationdiscoveryservice.DeleteTagsOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "DeleteTags cancelled", ctx.Err())
	default:
		return d.DeleteTags(in)
	}
}

func (d *ApplicationDiscoveryServiceDouble) DescribeAgents(i0 *applicationdiscoveryservice.DescribeAgentsInput) (r0 *applicationdiscoveryservice.DescribeAgentsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DescribeAgents", i0)
	r0, _ = returns[0].(*applicationdiscoveryservice.DescribeAgentsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ApplicationDiscoveryServiceDouble) DescribeAgentsRequest(i0 *applicationdiscoveryservice.DescribeAgentsInput) (r0 *request.Request, r1 *applicationdiscoveryservice.DescribeAgentsOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DescribeAgentsRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*applicationdiscoveryservice.DescribeAgentsOutput)
	return
}

func (d *ApplicationDiscoveryServiceDouble) DescribeAgentsWithContext(i0 context.Context, i1 *applicationdiscoveryservice.DescribeAgentsInput, i2 ...request.Option) (r0 *applicationdiscoveryservice.DescribeAgentsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DescribeAgentsWithContext", i0, i1, i2)
	r0, _ = returns[0].(*applicationdiscoveryservice.DescribeAgentsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ApplicationDiscoveryServiceDouble) fakeDescribeAgentsWithContext(ctx context.Context, in *applicationdiscoveryservice.DescribeAgentsInput, _ ...request.Option) (*applicationdiscoveryservice.DescribeAgentsOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "DescribeAgents cancelled", ctx.Err())
	default:
		return d.DescribeAgents(in)
	}
}

func (d *ApplicationDiscoveryServiceDouble) DescribeConfigurations(i0 *applicationdiscoveryservice.DescribeConfigurationsInput) (r0 *applicationdiscoveryservice.DescribeConfigurationsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DescribeConfigurations", i0)
	r0, _ = returns[0].(*applicationdiscoveryservice.DescribeConfigurationsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ApplicationDiscoveryServiceDouble) DescribeConfigurationsRequest(i0 *applicationdiscoveryservice.DescribeConfigurationsInput) (r0 *request.Request, r1 *applicationdiscoveryservice.DescribeConfigurationsOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DescribeConfigurationsRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*applicationdiscoveryservice.DescribeConfigurationsOutput)
	return
}

func (d *ApplicationDiscoveryServiceDouble) DescribeConfigurationsWithContext(i0 context.Context, i1 *applicationdiscoveryservice.DescribeConfigurationsInput, i2 ...request.Option) (r0 *applicationdiscoveryservice.DescribeConfigurationsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DescribeConfigurationsWithContext", i0, i1, i2)
	r0, _ = returns[0].(*applicationdiscoveryservice.DescribeConfigurationsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ApplicationDiscoveryServiceDouble) fakeDescribeConfigurationsWithContext(ctx context.Context, in *applicationdiscoveryservice.DescribeConfigurationsInput, _ ...request.Option) (*applicationdiscoveryservice.DescribeConfigurationsOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "DescribeConfigurations cancelled", ctx.Err())
	default:
		return d.DescribeConfigurations(in)
	}
}

func (d *ApplicationDiscoveryServiceDouble) DescribeContinuousExports(i0 *applicationdiscoveryservice.DescribeContinuousExportsInput) (r0 *applicationdiscoveryservice.DescribeContinuousExportsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DescribeContinuousExports", i0)
	r0, _ = returns[0].(*applicationdiscoveryservice.DescribeContinuousExportsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ApplicationDiscoveryServiceDouble) DescribeContinuousExportsPages(i0 *applicationdiscoveryservice.DescribeContinuousExportsInput, i1 func(*applicationdiscoveryservice.DescribeContinuousExportsOutput, bool) bool) (r0 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DescribeContinuousExportsPages", i0, i1)
	r0, _ = returns[0].(error)
	return
}

func (d *ApplicationDiscoveryServiceDouble) fakeDescribeContinuousExportsPages(in *applicationdiscoveryservice.DescribeContinuousExportsInput, pager func(*applicationdiscoveryservice.DescribeContinuousExportsOutput, bool) (shouldContinue bool)) error {
	return d.Paginate("DescribeContinuousExports", paginators, in, pager)
}

func (d *ApplicationDiscoveryServiceDouble) DescribeContinuousExportsPagesWithContext(i0 context.Context, i1 *applicationdiscoveryservice.DescribeContinuousExportsInput, i2 func(*applicationdiscoveryservice.DescribeContinuousExportsOutput, bool) bool, i3 ...request.Option) (r0 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DescribeContinuousExportsPagesWithContext", i0, i1, i2, i3)
	r0, _ = returns[0].(error)
	return
}

func (d *ApplicationDiscoveryServiceDouble) fakeDescribeContinuousExportsPagesWithContext(ctx context.Context, in *applicationdiscoveryservice.DescribeContinuousExportsInput, pager func(*applicationdiscoveryservice.DescribeContinuousExportsOutput, bool) (shouldContinue bool), options ...request.Option) error {
	return d.PaginateWithContext("DescribeContinuousExports", paginators, ctx, in, pager, options...)
}

func (d *ApplicationDiscoveryServiceDouble) DescribeContinuousExportsRequest(i0 *applicationdiscoveryservice.DescribeContinuousExportsInput) (r0 *request.Request, r1 *applicationdiscoveryservice.DescribeContinuousExportsOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DescribeContinuousExportsRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*applicationdiscoveryservice.DescribeContinuousExportsOutput)
	return
}

func (d *ApplicationDiscoveryServiceDouble) DescribeContinuousExportsWithContext(i0 context.Context, i1 *applicationdiscoveryservice.DescribeContinuousExportsInput, i2 ...request.Option) (r0 *applicationdiscoveryservice.DescribeContinuousExportsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DescribeContinuousExportsWithContext", i0, i1, i2)
	r0, _ = returns[0].(*applicationdiscoveryservice.DescribeContinuousExportsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ApplicationDiscoveryServiceDouble) fakeDescribeContinuousExportsWithContext(ctx context.Context, in *applicationdiscoveryservice.DescribeContinuousExportsInput, _ ...request.Option) (*applicationdiscoveryservice.DescribeContinuousExportsOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "DescribeContinuousExports cancelled", ctx.Err())
	default:
		return d.DescribeContinuousExports(in)
	}
}

func (d *ApplicationDiscoveryServiceDouble) DescribeExportConfigurations(i0 *applicationdiscoveryservice.DescribeExportConfigurationsInput) (r0 *applicationdiscoveryservice.DescribeExportConfigurationsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DescribeExportConfigurations", i0)
	r0, _ = returns[0].(*applicationdiscoveryservice.DescribeExportConfigurationsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ApplicationDiscoveryServiceDouble) DescribeExportConfigurationsRequest(i0 *applicationdiscoveryservice.DescribeExportConfigurationsInput) (r0 *request.Request, r1 *applicationdiscoveryservice.DescribeExportConfigurationsOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DescribeExportConfigurationsRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*applicationdiscoveryservice.DescribeExportConfigurationsOutput)
	return
}

func (d *ApplicationDiscoveryServiceDouble) DescribeExportConfigurationsWithContext(i0 context.Context, i1 *applicationdiscoveryservice.DescribeExportConfigurationsInput, i2 ...request.Option) (r0 *applicationdiscoveryservice.DescribeExportConfigurationsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DescribeExportConfigurationsWithContext", i0, i1, i2)
	r0, _ = returns[0].(*applicationdiscoveryservice.DescribeExportConfigurationsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ApplicationDiscoveryServiceDouble) fakeDescribeExportConfigurationsWithContext(ctx context.Context, in *applicationdiscoveryservice.DescribeExportConfigurationsInput, _ ...request.Option) (*applicationdiscoveryservice.DescribeExportConfigurationsOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "DescribeExportConfigurations cancelled", ctx.Err())
	default:
		return d.DescribeExportConfigurations(in)
	}
}

func (d *ApplicationDiscoveryServiceDouble) DescribeExportTasks(i0 *applicationdiscoveryservice.DescribeExportTasksInput) (r0 *applicationdiscoveryservice.DescribeExportTasksOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DescribeExportTasks", i0)
	r0, _ = returns[0].(*applicationdiscoveryservice.DescribeExportTasksOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ApplicationDiscoveryServiceDouble) DescribeExportTasksRequest(i0 *applicationdiscoveryservice.DescribeExportTasksInput) (r0 *request.Request, r1 *applicationdiscoveryservice.DescribeExportTasksOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DescribeExportTasksRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*applicationdiscoveryservice.DescribeExportTasksOutput)
	return
}

func (d *ApplicationDiscoveryServiceDouble) DescribeExportTasksWithContext(i0 context.Context, i1 *applicationdiscoveryservice.DescribeExportTasksInput, i2 ...request.Option) (r0 *applicationdiscoveryservice.DescribeExportTasksOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DescribeExportTasksWithContext", i0, i1, i2)
	r0, _ = returns[0].(*applicationdiscoveryservice.DescribeExportTasksOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ApplicationDiscoveryServiceDouble) fakeDescribeExportTasksWithContext(ctx context.Context, in *applicationdiscoveryservice.DescribeExportTasksInput, _ ...request.Option) (*applicationdiscoveryservice.DescribeExportTasksOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "DescribeExportTasks cancelled", ctx.Err())
	default:
		return d.DescribeExportTasks(in)
	}
}

func (d *ApplicationDiscoveryServiceDouble) DescribeImportTasks(i0 *applicationdiscoveryservice.DescribeImportTasksInput) (r0 *applicationdiscoveryservice.DescribeImportTasksOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DescribeImportTasks", i0)
	r0, _ = returns[0].(*applicationdiscoveryservice.DescribeImportTasksOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ApplicationDiscoveryServiceDouble) DescribeImportTasksPages(i0 *applicationdiscoveryservice.DescribeImportTasksInput, i1 func(*applicationdiscoveryservice.DescribeImportTasksOutput, bool) bool) (r0 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DescribeImportTasksPages", i0, i1)
	r0, _ = returns[0].(error)
	return
}

func (d *ApplicationDiscoveryServiceDouble) fakeDescribeImportTasksPages(in *applicationdiscoveryservice.DescribeImportTasksInput, pager func(*applicationdiscoveryservice.DescribeImportTasksOutput, bool) (shouldContinue bool)) error {
	return d.Paginate("DescribeImportTasks", paginators, in, pager)
}

func (d *ApplicationDiscoveryServiceDouble) DescribeImportTasksPagesWithContext(i0 context.Context, i1 *applicationdiscoveryservice.DescribeImportTasksInput, i2 func(*applicationdiscoveryservice.DescribeImportTasksOutput, bool) bool, i3 ...request.Option) (r0 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DescribeImportTasksPagesWithContext", i0, i1, i2, i3)
	r0, _ = returns[0].(error)
	return
}

func (d *ApplicationDiscoveryServiceDouble) fakeDescribeImportTasksPagesWithContext(ctx context.Context, in *applicationdiscoveryservice.DescribeImportTasksInput, pager func(*applicationdiscoveryservice.DescribeImportTasksOutput, bool) (shouldContinue bool), options ...request.Option) error {
	return d.PaginateWithContext("DescribeImportTasks", paginators, ctx, in, pager, options...)
}

func (d *ApplicationDiscoveryServiceDouble) DescribeImportTasksRequest(i0 *applicationdiscoveryservice.DescribeImportTasksInput) (r0 *request.Request, r1 *applicationdiscoveryservice.DescribeImportTasksOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DescribeImportTasksRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*applicationdiscoveryservice.DescribeImportTasksOutput)
	return
}

func (d *ApplicationDiscoveryServiceDouble) DescribeImportTasksWithContext(i0 context.Context, i1 *applicationdiscoveryservice.DescribeImportTasksInput, i2 ...request.Option) (r0 *applicationdiscoveryservice.DescribeImportTasksOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DescribeImportTasksWithContext", i0, i1, i2)
	r0, _ = returns[0].(*applicationdiscoveryservice.DescribeImportTasksOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ApplicationDiscoveryServiceDouble) fakeDescribeImportTasksWithContext(ctx context.Context, in *applicationdiscoveryservice.DescribeImportTasksInput, _ ...request.Option) (*applicationdiscoveryservice.DescribeImportTasksOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "DescribeImportTasks cancelled", ctx.Err())
	default:
		return d.DescribeImportTasks(in)
	}
}

func (d *ApplicationDiscoveryServiceDouble) DescribeTags(i0 *applicationdiscoveryservice.DescribeTagsInput) (r0 *applicationdiscoveryservice.DescribeTagsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DescribeTags", i0)
	r0, _ = returns[0].(*applicationdiscoveryservice.DescribeTagsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ApplicationDiscoveryServiceDouble) DescribeTagsRequest(i0 *applicationdiscoveryservice.DescribeTagsInput) (r0 *request.Request, r1 *applicationdiscoveryservice.DescribeTagsOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DescribeTagsRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*applicationdiscoveryservice.DescribeTagsOutput)
	return
}

func (d *ApplicationDiscoveryServiceDouble) DescribeTagsWithContext(i0 context.Context, i1 *applicationdiscoveryservice.DescribeTagsInput, i2 ...request.Option) (r0 *applicationdiscoveryservice.DescribeTagsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DescribeTagsWithContext", i0, i1, i2)
	r0, _ = returns[0].(*applicationdiscoveryservice.DescribeTagsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ApplicationDiscoveryServiceDouble) fakeDescribeTagsWithContext(ctx context.Context, in *applicationdiscoveryservice.DescribeTagsInput, _ ...request.Option) (*applicationdiscoveryservice.DescribeTagsOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "DescribeTags cancelled", ctx.Err())
	default:
		return d.DescribeTags(in)
	}
}

func (d *ApplicationDiscoveryServiceDouble) DisassociateConfigurationItemsFromApplication(i0 *applicationdiscoveryservice.DisassociateConfigurationItemsFromApplicationInput) (r0 *applicationdiscoveryservice.DisassociateConfigurationItemsFromApplicationOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DisassociateConfigurationItemsFromApplication", i0)
	r0, _ = returns[0].(*applicationdiscoveryservice.DisassociateConfigurationItemsFromApplicationOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ApplicationDiscoveryServiceDouble) DisassociateConfigurationItemsFromApplicationRequest(i0 *applicationdiscoveryservice.DisassociateConfigurationItemsFromApplicationInput) (r0 *request.Request, r1 *applicationdiscoveryservice.DisassociateConfigurationItemsFromApplicationOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DisassociateConfigurationItemsFromApplicationRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*applicationdiscoveryservice.DisassociateConfigurationItemsFromApplicationOutput)
	return
}

func (d *ApplicationDiscoveryServiceDouble) DisassociateConfigurationItemsFromApplicationWithContext(i0 context.Context, i1 *applicationdiscoveryservice.DisassociateConfigurationItemsFromApplicationInput, i2 ...request.Option) (r0 *applicationdiscoveryservice.DisassociateConfigurationItemsFromApplicationOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DisassociateConfigurationItemsFromApplicationWithContext", i0, i1, i2)
	r0, _ = returns[0].(*applicationdiscoveryservice.DisassociateConfigurationItemsFromApplicationOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ApplicationDiscoveryServiceDouble) fakeDisassociateConfigurationItemsFromApplicationWithContext(ctx context.Context, in *applicationdiscoveryservice.DisassociateConfigurationItemsFromApplicationInput, _ ...request.Option) (*applicationdiscoveryservice.DisassociateConfigurationItemsFromApplicationOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "DisassociateConfigurationItemsFromApplication cancelled", ctx.Err())
	default:
		return d.DisassociateConfigurationItemsFromApplication(in)
	}
}

func (d *ApplicationDiscoveryServiceDouble) ExportConfigurations(i0 *applicationdiscoveryservice.ExportConfigurationsInput) (r0 *applicationdiscoveryservice.ExportConfigurationsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ExportConfigurations", i0)
	r0, _ = returns[0].(*applicationdiscoveryservice.ExportConfigurationsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ApplicationDiscoveryServiceDouble) ExportConfigurationsRequest(i0 *applicationdiscoveryservice.ExportConfigurationsInput) (r0 *request.Request, r1 *applicationdiscoveryservice.ExportConfigurationsOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ExportConfigurationsRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*applicationdiscoveryservice.ExportConfigurationsOutput)
	return
}

func (d *ApplicationDiscoveryServiceDouble) ExportConfigurationsWithContext(i0 context.Context, i1 *applicationdiscoveryservice.ExportConfigurationsInput, i2 ...request.Option) (r0 *applicationdiscoveryservice.ExportConfigurationsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ExportConfigurationsWithContext", i0, i1, i2)
	r0, _ = returns[0].(*applicationdiscoveryservice.ExportConfigurationsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ApplicationDiscoveryServiceDouble) fakeExportConfigurationsWithContext(ctx context.Context, in *applicationdiscoveryservice.ExportConfigurationsInput, _ ...request.Option) (*applicationdiscoveryservice.ExportConfigurationsOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "ExportConfigurations cancelled", ctx.Err())
	default:
		return d.ExportConfigurations(in)
	}
}

func (d *ApplicationDiscoveryServiceDouble) GetDiscoverySummary(i0 *applicationdiscoveryservice.GetDiscoverySummaryInput) (r0 *applicationdiscoveryservice.GetDiscoverySummaryOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetDiscoverySummary", i0)
	r0, _ = returns[0].(*applicationdiscoveryservice.GetDiscoverySummaryOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ApplicationDiscoveryServiceDouble) GetDiscoverySummaryRequest(i0 *applicationdiscoveryservice.GetDiscoverySummaryInput) (r0 *request.Request, r1 *applicationdiscoveryservice.GetDiscoverySummaryOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetDiscoverySummaryRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*applicationdiscoveryservice.GetDiscoverySummaryOutput)
	return
}

func (d *ApplicationDiscoveryServiceDouble) GetDiscoverySummaryWithContext(i0 context.Context, i1 *applicationdiscoveryservice.GetDiscoverySummaryInput, i2 ...request.Option) (r0 *applicationdiscoveryservice.GetDiscoverySummaryOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetDiscoverySummaryWithContext", i0, i1, i2)
	r0, _ = returns[0].(*applicationdiscoveryservice.GetDiscoverySummaryOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ApplicationDiscoveryServiceDouble) fakeGetDiscoverySummaryWithContext(ctx context.Context, in *applicationdiscoveryservice.GetDiscoverySummaryInput, _ ...request.Option) (*applicationdiscoveryservice.GetDiscoverySummaryOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "GetDiscoverySummary cancelled", ctx.Err())
	default:
		return d.GetDiscoverySummary(in)
	}
}

func (d *ApplicationDiscoveryServiceDouble) ListConfigurations(i0 *applicationdiscoveryservice.ListConfigurationsInput) (r0 *applicationdiscoveryservice.ListConfigurationsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListConfigurations", i0)
	r0, _ = returns[0].(*applicationdiscoveryservice.ListConfigurationsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ApplicationDiscoveryServiceDouble) ListConfigurationsRequest(i0 *applicationdiscoveryservice.ListConfigurationsInput) (r0 *request.Request, r1 *applicationdiscoveryservice.ListConfigurationsOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListConfigurationsRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*applicationdiscoveryservice.ListConfigurationsOutput)
	return
}

func (d *ApplicationDiscoveryServiceDouble) ListConfigurationsWithContext(i0 context.Context, i1 *applicationdiscoveryservice.ListConfigurationsInput, i2 ...request.Option) (r0 *applicationdiscoveryservice.ListConfigurationsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListConfigurationsWithContext", i0, i1, i2)
	r0, _ = returns[0].(*applicationdiscoveryservice.ListConfigurationsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ApplicationDiscoveryServiceDouble) fakeListConfigurationsWithContext(ctx context.Context, in *applicationdiscoveryservice.ListConfigurationsInput, _ ...request.Option) (*applicationdiscoveryservice.ListConfigurationsOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "ListConfigurations cancelled", ctx.Err())
	default:
		return d.ListConfigurations(in)
	}
}

func (d *ApplicationDiscoveryServiceDouble) ListServerNeighbors(i0 *applicationdiscoveryservice.ListServerNeighborsInput) (r0 *applicationdiscoveryservice.ListServerNeighborsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListServerNeighbors", i0)
	r0, _ = returns[0].(*applicationdiscoveryservice.ListServerNeighborsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ApplicationDiscoveryServiceDouble) ListServerNeighborsRequest(i0 *applicationdiscoveryservice.ListServerNeighborsInput) (r0 *request.Request, r1 *applicationdiscoveryservice.ListServerNeighborsOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListServerNeighborsRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*applicationdiscoveryservice.ListServerNeighborsOutput)
	return
}

func (d *ApplicationDiscoveryServiceDouble) ListServerNeighborsWithContext(i0 context.Context, i1 *applicationdiscoveryservice.ListServerNeighborsInput, i2 ...request.Option) (r0 *applicationdiscoveryservice.ListServerNeighborsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListServerNeighborsWithContext", i0, i1, i2)
	r0, _ = returns[0].(*applicationdiscoveryservice.ListServerNeighborsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ApplicationDiscoveryServiceDouble) fakeListServerNeighborsWithContext(ctx context.Context, in *applicationdiscoveryservice.ListServerNeighborsInput, _ ...request.Option) (*applicationdiscoveryservice.ListServerNeighborsOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "ListServerNeighbors cancelled", ctx.Err())
	default:
		return d.ListServerNeighbors(in)
	}
}

func (d *ApplicationDiscoveryServiceDouble) StartContinuousExport(i0 *applicationdiscoveryservice.StartContinuousExportInput) (r0 *applicationdiscoveryservice.StartContinuousExportOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("StartContinuousExport", i0)
	r0, _ = returns[0].(*applicationdiscoveryservice.StartContinuousExportOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ApplicationDiscoveryServiceDouble) StartContinuousExportRequest(i0 *applicationdiscoveryservice.StartContinuousExportInput) (r0 *request.Request, r1 *applicationdiscoveryservice.StartContinuousExportOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("StartContinuousExportRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*applicationdiscoveryservice.StartContinuousExportOutput)
	return
}

func (d *ApplicationDiscoveryServiceDouble) StartContinuousExportWithContext(i0 context.Context, i1 *applicationdiscoveryservice.StartContinuousExportInput, i2 ...request.Option) (r0 *applicationdiscoveryservice.StartContinuousExportOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("StartContinuousExportWithContext", i0, i1, i2)
	r0, _ = returns[0].(*applicationdiscoveryservice.StartContinuousExportOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ApplicationDiscoveryServiceDouble) fakeStartContinuousExportWithContext(ctx context.Context, in *applicationdiscoveryservice.StartContinuousExportInput, _ ...request.Option) (*applicationdiscoveryservice.StartContinuousExportOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "StartContinuousExport cancelled", ctx.Err())
	default:
		return d.StartContinuousExport(in)
	}
}

func (d *ApplicationDiscoveryServiceDouble) StartDataCollectionByAgentIds(i0 *applicationdiscoveryservice.StartDataCollectionByAgentIdsInput) (r0 *applicationdiscoveryservice.StartDataCollectionByAgentIdsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("StartDataCollectionByAgentIds", i0)
	r0, _ = returns[0].(*applicationdiscoveryservice.StartDataCollectionByAgentIdsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ApplicationDiscoveryServiceDouble) StartDataCollectionByAgentIdsRequest(i0 *applicationdiscoveryservice.StartDataCollectionByAgentIdsInput) (r0 *request.Request, r1 *applicationdiscoveryservice.StartDataCollectionByAgentIdsOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("StartDataCollectionByAgentIdsRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*applicationdiscoveryservice.StartDataCollectionByAgentIdsOutput)
	return
}

func (d *ApplicationDiscoveryServiceDouble) StartDataCollectionByAgentIdsWithContext(i0 context.Context, i1 *applicationdiscoveryservice.StartDataCollectionByAgentIdsInput, i2 ...request.Option) (r0 *applicationdiscoveryservice.StartDataCollectionByAgentIdsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("StartDataCollectionByAgentIdsWithContext", i0, i1, i2)
	r0, _ = returns[0].(*applicationdiscoveryservice.StartDataCollectionByAgentIdsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ApplicationDiscoveryServiceDouble) fakeStartDataCollectionByAgentIdsWithContext(ctx context.Context, in *applicationdiscoveryservice.StartDataCollectionByAgentIdsInput, _ ...request.Option) (*applicationdiscoveryservice.StartDataCollectionByAgentIdsOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "StartDataCollectionByAgentIds cancelled", ctx.Err())
	default:
		return d.StartDataCollectionByAgentIds(in)
	}
}

func (d *ApplicationDiscoveryServiceDouble) StartExportTask(i0 *applicationdiscoveryservice.StartExportTaskInput) (r0 *applicationdiscoveryservice.StartExportTaskOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("StartExportTask", i0)
	r0, _ = returns[0].(*applicationdiscoveryservice.StartExportTaskOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ApplicationDiscoveryServiceDouble) StartExportTaskRequest(i0 *applicationdiscoveryservice.StartExportTaskInput) (r0 *request.Request, r1 *applicationdiscoveryservice.StartExportTaskOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("StartExportTaskRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*applicationdiscoveryservice.StartExportTaskOutput)
	return
}

func (d *ApplicationDiscoveryServiceDouble) StartExportTaskWithContext(i0 context.Context, i1 *applicationdiscoveryservice.StartExportTaskInput, i2 ...request.Option) (r0 *applicationdiscoveryservice.StartExportTaskOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("StartExportTaskWithContext", i0, i1, i2)
	r0, _ = returns[0].(*applicationdiscoveryservice.StartExportTaskOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ApplicationDiscoveryServiceDouble) fakeStartExportTaskWithContext(ctx context.Context, in *applicationdiscoveryservice.StartExportTaskInput, _ ...request.Option) (*applicationdiscoveryservice.StartExportTaskOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "StartExportTask cancelled", ctx.Err())
	default:
		return d.StartExportTask(in)
	}
}

func (d *ApplicationDiscoveryServiceDouble) StartImportTask(i0 *applicationdiscoveryservice.StartImportTaskInput) (r0 *applicationdiscoveryservice.StartImportTaskOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("StartImportTask", i0)
	r0, _ = returns[0].(*applicationdiscoveryservice.StartImportTaskOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ApplicationDiscoveryServiceDouble) StartImportTaskRequest(i0 *applicationdiscoveryservice.StartImportTaskInput) (r0 *request.Request, r1 *applicationdiscoveryservice.StartImportTaskOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("StartImportTaskRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*applicationdiscoveryservice.StartImportTaskOutput)
	return
}

func (d *ApplicationDiscoveryServiceDouble) StartImportTaskWithContext(i0 context.Context, i1 *applicationdiscoveryservice.StartImportTaskInput, i2 ...request.Option) (r0 *applicationdiscoveryservice.StartImportTaskOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("StartImportTaskWithContext", i0, i1, i2)
	r0, _ = returns[0].(*applicationdiscoveryservice.StartImportTaskOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ApplicationDiscoveryServiceDouble) fakeStartImportTaskWithContext(ctx context.Context, in *applicationdiscoveryservice.StartImportTaskInput, _ ...request.Option) (*applicationdiscoveryservice.StartImportTaskOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "StartImportTask cancelled", ctx.Err())
	default:
		return d.StartImportTask(in)
	}
}

func (d *ApplicationDiscoveryServiceDouble) StopContinuousExport(i0 *applicationdiscoveryservice.StopContinuousExportInput) (r0 *applicationdiscoveryservice.StopContinuousExportOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("StopContinuousExport", i0)
	r0, _ = returns[0].(*applicationdiscoveryservice.StopContinuousExportOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ApplicationDiscoveryServiceDouble) StopContinuousExportRequest(i0 *applicationdiscoveryservice.StopContinuousExportInput) (r0 *request.Request, r1 *applicationdiscoveryservice.StopContinuousExportOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("StopContinuousExportRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*applicationdiscoveryservice.StopContinuousExportOutput)
	return
}

func (d *ApplicationDiscoveryServiceDouble) StopContinuousExportWithContext(i0 context.Context, i1 *applicationdiscoveryservice.StopContinuousExportInput, i2 ...request.Option) (r0 *applicationdiscoveryservice.StopContinuousExportOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("StopContinuousExportWithContext", i0, i1, i2)
	r0, _ = returns[0].(*applicationdiscoveryservice.StopContinuousExportOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ApplicationDiscoveryServiceDouble) fakeStopContinuousExportWithContext(ctx context.Context, in *applicationdiscoveryservice.StopContinuousExportInput, _ ...request.Option) (*applicationdiscoveryservice.StopContinuousExportOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "StopContinuousExport cancelled", ctx.Err())
	default:
		return d.StopContinuousExport(in)
	}
}

func (d *ApplicationDiscoveryServiceDouble) StopDataCollectionByAgentIds(i0 *applicationdiscoveryservice.StopDataCollectionByAgentIdsInput) (r0 *applicationdiscoveryservice.StopDataCollectionByAgentIdsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("StopDataCollectionByAgentIds", i0)
	r0, _ = returns[0].(*applicationdiscoveryservice.StopDataCollectionByAgentIdsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ApplicationDiscoveryServiceDouble) StopDataCollectionByAgentIdsRequest(i0 *applicationdiscoveryservice.StopDataCollectionByAgentIdsInput) (r0 *request.Request, r1 *applicationdiscoveryservice.StopDataCollectionByAgentIdsOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("StopDataCollectionByAgentIdsRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*applicationdiscoveryservice.StopDataCollectionByAgentIdsOutput)
	return
}

func (d *ApplicationDiscoveryServiceDouble) StopDataCollectionByAgentIdsWithContext(i0 context.Context, i1 *applicationdiscoveryservice.StopDataCollectionByAgentIdsInput, i2 ...request.Option) (r0 *applicationdiscoveryservice.StopDataCollectionByAgentIdsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("StopDataCollectionByAgentIdsWithContext", i0, i1, i2)
	r0, _ = returns[0].(*applicationdiscoveryservice.StopDataCollectionByAgentIdsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ApplicationDiscoveryServiceDouble) fakeStopDataCollectionByAgentIdsWithContext(ctx context.Context, in *applicationdiscoveryservice.StopDataCollectionByAgentIdsInput, _ ...request.Option) (*applicationdiscoveryservice.StopDataCollectionByAgentIdsOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "StopDataCollectionByAgentIds cancelled", ctx.Err())
	default:
		return d.StopDataCollectionByAgentIds(in)
	}
}

func (d *ApplicationDiscoveryServiceDouble) UpdateApplication(i0 *applicationdiscoveryservice.UpdateApplicationInput) (r0 *applicationdiscoveryservice.UpdateApplicationOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UpdateApplication", i0)
	r0, _ = returns[0].(*applicationdiscoveryservice.UpdateApplicationOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ApplicationDiscoveryServiceDouble) UpdateApplicationRequest(i0 *applicationdiscoveryservice.UpdateApplicationInput) (r0 *request.Request, r1 *applicationdiscoveryservice.UpdateApplicationOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UpdateApplicationRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*applicationdiscoveryservice.UpdateApplicationOutput)
	return
}

func (d *ApplicationDiscoveryServiceDouble) UpdateApplicationWithContext(i0 context.Context, i1 *applicationdiscoveryservice.UpdateApplicationInput, i2 ...request.Option) (r0 *applicationdiscoveryservice.UpdateApplicationOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UpdateApplicationWithContext", i0, i1, i2)
	r0, _ = returns[0].(*applicationdiscoveryservice.UpdateApplicationOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *ApplicationDiscoveryServiceDouble) fakeUpdateApplicationWithContext(ctx context.Context, in *applicationdiscoveryservice.UpdateApplicationInput, _ ...request.Option) (*applicationdiscoveryservice.UpdateApplicationOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "UpdateApplication cancelled", ctx.Err())
	default:
		return d.UpdateApplication(in)
	}
}
