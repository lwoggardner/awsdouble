// Code generated by go doublegen; DO NOT EDIT.
// This file was generated at 2020-02-14T22:15:02+11:00

// Package sesv2double provides a TestDouble implementation of sesv2iface.SESV2API
package sesv2double

import (
	"context"

	"github.com/aws/aws-sdk-go/aws/awserr"
	"github.com/aws/aws-sdk-go/aws/request"
	"github.com/aws/aws-sdk-go/service/sesv2"
	"github.com/aws/aws-sdk-go/service/sesv2/sesv2iface"
	"github.com/lwoggardner/awsdouble"
	"github.com/lwoggardner/godouble/godouble"
)

// SESV2Double is TestDouble for sesv2iface.SESV2API
type SESV2Double struct {
	sesv2iface.SESV2API
	*awsdouble.AWSTestDouble
}

// Constructor for SESV2Double
// Default configuration will ensure
//   * API operations not explicitly stubbed will return an empty output struct pointer, and nil error.
//     To simulate long polling, "Poll" operations will return these values after a random delay of up to 100ms.
//   * WithContext methods implement a 'Fake' method that returns a cancellation error if the context is cancelled
//      before the method is called.
//   * Pages and PagesWithContext methods similarly implement a 'Fake' method that paginates over the underlying method.
//
//    This allows tests to only stub the simple api methods and be generally unconcerned whether the SUT is using the
//      Context or Pagination forms of the API.
//
func NewDouble(t godouble.T, configurators ...func(*awsdouble.AWSTestDouble)) *SESV2Double {
	result := &SESV2Double{}

	configurators = append([]func(configurator *awsdouble.AWSTestDouble){func(d *awsdouble.AWSTestDouble) {
		d.SetDefaultCall(result.defaultMethodCall)
		d.SetDefaultReturnValues(result.defaultReturnValues)
	}}, configurators...)

	result.AWSTestDouble = awsdouble.NewDouble(t, (*sesv2iface.SESV2API)(nil), configurators...)
	return result
}

func (d *SESV2Double) defaultReturnValues(m godouble.Method) godouble.ReturnValues {
	return d.DefaultReturnValues(m)
}

func (d *SESV2Double) defaultMethodCall(m godouble.Method) godouble.MethodCall {
	switch m.Reflect().Name {

	case "CreateConfigurationSetEventDestinationWithContext":
		return m.Fake(d.fakeCreateConfigurationSetEventDestinationWithContext)

	case "CreateConfigurationSetWithContext":
		return m.Fake(d.fakeCreateConfigurationSetWithContext)

	case "CreateDedicatedIpPoolWithContext":
		return m.Fake(d.fakeCreateDedicatedIpPoolWithContext)

	case "CreateDeliverabilityTestReportWithContext":
		return m.Fake(d.fakeCreateDeliverabilityTestReportWithContext)

	case "CreateEmailIdentityWithContext":
		return m.Fake(d.fakeCreateEmailIdentityWithContext)

	case "DeleteConfigurationSetEventDestinationWithContext":
		return m.Fake(d.fakeDeleteConfigurationSetEventDestinationWithContext)

	case "DeleteConfigurationSetWithContext":
		return m.Fake(d.fakeDeleteConfigurationSetWithContext)

	case "DeleteDedicatedIpPoolWithContext":
		return m.Fake(d.fakeDeleteDedicatedIpPoolWithContext)

	case "DeleteEmailIdentityWithContext":
		return m.Fake(d.fakeDeleteEmailIdentityWithContext)

	case "DeleteSuppressedDestinationWithContext":
		return m.Fake(d.fakeDeleteSuppressedDestinationWithContext)

	case "GetAccountWithContext":
		return m.Fake(d.fakeGetAccountWithContext)

	case "GetBlacklistReportsWithContext":
		return m.Fake(d.fakeGetBlacklistReportsWithContext)

	case "GetConfigurationSetEventDestinationsWithContext":
		return m.Fake(d.fakeGetConfigurationSetEventDestinationsWithContext)

	case "GetConfigurationSetWithContext":
		return m.Fake(d.fakeGetConfigurationSetWithContext)

	case "GetDedicatedIpWithContext":
		return m.Fake(d.fakeGetDedicatedIpWithContext)

	case "GetDedicatedIpsPages":
		return m.Fake(d.fakeGetDedicatedIpsPages)

	case "GetDedicatedIpsPagesWithContext":
		return m.Fake(d.fakeGetDedicatedIpsPagesWithContext)

	case "GetDedicatedIpsWithContext":
		return m.Fake(d.fakeGetDedicatedIpsWithContext)

	case "GetDeliverabilityDashboardOptionsWithContext":
		return m.Fake(d.fakeGetDeliverabilityDashboardOptionsWithContext)

	case "GetDeliverabilityTestReportWithContext":
		return m.Fake(d.fakeGetDeliverabilityTestReportWithContext)

	case "GetDomainDeliverabilityCampaignWithContext":
		return m.Fake(d.fakeGetDomainDeliverabilityCampaignWithContext)

	case "GetDomainStatisticsReportWithContext":
		return m.Fake(d.fakeGetDomainStatisticsReportWithContext)

	case "GetEmailIdentityWithContext":
		return m.Fake(d.fakeGetEmailIdentityWithContext)

	case "GetSuppressedDestinationWithContext":
		return m.Fake(d.fakeGetSuppressedDestinationWithContext)

	case "ListConfigurationSetsPages":
		return m.Fake(d.fakeListConfigurationSetsPages)

	case "ListConfigurationSetsPagesWithContext":
		return m.Fake(d.fakeListConfigurationSetsPagesWithContext)

	case "ListConfigurationSetsWithContext":
		return m.Fake(d.fakeListConfigurationSetsWithContext)

	case "ListDedicatedIpPoolsPages":
		return m.Fake(d.fakeListDedicatedIpPoolsPages)

	case "ListDedicatedIpPoolsPagesWithContext":
		return m.Fake(d.fakeListDedicatedIpPoolsPagesWithContext)

	case "ListDedicatedIpPoolsWithContext":
		return m.Fake(d.fakeListDedicatedIpPoolsWithContext)

	case "ListDeliverabilityTestReportsPages":
		return m.Fake(d.fakeListDeliverabilityTestReportsPages)

	case "ListDeliverabilityTestReportsPagesWithContext":
		return m.Fake(d.fakeListDeliverabilityTestReportsPagesWithContext)

	case "ListDeliverabilityTestReportsWithContext":
		return m.Fake(d.fakeListDeliverabilityTestReportsWithContext)

	case "ListDomainDeliverabilityCampaignsPages":
		return m.Fake(d.fakeListDomainDeliverabilityCampaignsPages)

	case "ListDomainDeliverabilityCampaignsPagesWithContext":
		return m.Fake(d.fakeListDomainDeliverabilityCampaignsPagesWithContext)

	case "ListDomainDeliverabilityCampaignsWithContext":
		return m.Fake(d.fakeListDomainDeliverabilityCampaignsWithContext)

	case "ListEmailIdentitiesPages":
		return m.Fake(d.fakeListEmailIdentitiesPages)

	case "ListEmailIdentitiesPagesWithContext":
		return m.Fake(d.fakeListEmailIdentitiesPagesWithContext)

	case "ListEmailIdentitiesWithContext":
		return m.Fake(d.fakeListEmailIdentitiesWithContext)

	case "ListSuppressedDestinationsPages":
		return m.Fake(d.fakeListSuppressedDestinationsPages)

	case "ListSuppressedDestinationsPagesWithContext":
		return m.Fake(d.fakeListSuppressedDestinationsPagesWithContext)

	case "ListSuppressedDestinationsWithContext":
		return m.Fake(d.fakeListSuppressedDestinationsWithContext)

	case "ListTagsForResourceWithContext":
		return m.Fake(d.fakeListTagsForResourceWithContext)

	case "PutAccountDedicatedIpWarmupAttributesWithContext":
		return m.Fake(d.fakePutAccountDedicatedIpWarmupAttributesWithContext)

	case "PutAccountSendingAttributesWithContext":
		return m.Fake(d.fakePutAccountSendingAttributesWithContext)

	case "PutAccountSuppressionAttributesWithContext":
		return m.Fake(d.fakePutAccountSuppressionAttributesWithContext)

	case "PutConfigurationSetDeliveryOptionsWithContext":
		return m.Fake(d.fakePutConfigurationSetDeliveryOptionsWithContext)

	case "PutConfigurationSetReputationOptionsWithContext":
		return m.Fake(d.fakePutConfigurationSetReputationOptionsWithContext)

	case "PutConfigurationSetSendingOptionsWithContext":
		return m.Fake(d.fakePutConfigurationSetSendingOptionsWithContext)

	case "PutConfigurationSetSuppressionOptionsWithContext":
		return m.Fake(d.fakePutConfigurationSetSuppressionOptionsWithContext)

	case "PutConfigurationSetTrackingOptionsWithContext":
		return m.Fake(d.fakePutConfigurationSetTrackingOptionsWithContext)

	case "PutDedicatedIpInPoolWithContext":
		return m.Fake(d.fakePutDedicatedIpInPoolWithContext)

	case "PutDedicatedIpWarmupAttributesWithContext":
		return m.Fake(d.fakePutDedicatedIpWarmupAttributesWithContext)

	case "PutDeliverabilityDashboardOptionWithContext":
		return m.Fake(d.fakePutDeliverabilityDashboardOptionWithContext)

	case "PutEmailIdentityDkimAttributesWithContext":
		return m.Fake(d.fakePutEmailIdentityDkimAttributesWithContext)

	case "PutEmailIdentityDkimSigningAttributesWithContext":
		return m.Fake(d.fakePutEmailIdentityDkimSigningAttributesWithContext)

	case "PutEmailIdentityFeedbackAttributesWithContext":
		return m.Fake(d.fakePutEmailIdentityFeedbackAttributesWithContext)

	case "PutEmailIdentityMailFromAttributesWithContext":
		return m.Fake(d.fakePutEmailIdentityMailFromAttributesWithContext)

	case "PutSuppressedDestinationWithContext":
		return m.Fake(d.fakePutSuppressedDestinationWithContext)

	case "SendEmailWithContext":
		return m.Fake(d.fakeSendEmailWithContext)

	case "TagResourceWithContext":
		return m.Fake(d.fakeTagResourceWithContext)

	case "UntagResourceWithContext":
		return m.Fake(d.fakeUntagResourceWithContext)

	case "UpdateConfigurationSetEventDestinationWithContext":
		return m.Fake(d.fakeUpdateConfigurationSetEventDestinationWithContext)

	default:
		return nil
	}
}

func (d *SESV2Double) CreateConfigurationSet(i0 *sesv2.CreateConfigurationSetInput) (r0 *sesv2.CreateConfigurationSetOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreateConfigurationSet", i0)
	r0, _ = returns[0].(*sesv2.CreateConfigurationSetOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SESV2Double) CreateConfigurationSetEventDestination(i0 *sesv2.CreateConfigurationSetEventDestinationInput) (r0 *sesv2.CreateConfigurationSetEventDestinationOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreateConfigurationSetEventDestination", i0)
	r0, _ = returns[0].(*sesv2.CreateConfigurationSetEventDestinationOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SESV2Double) CreateConfigurationSetEventDestinationRequest(i0 *sesv2.CreateConfigurationSetEventDestinationInput) (r0 *request.Request, r1 *sesv2.CreateConfigurationSetEventDestinationOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreateConfigurationSetEventDestinationRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*sesv2.CreateConfigurationSetEventDestinationOutput)
	return
}

func (d *SESV2Double) CreateConfigurationSetEventDestinationWithContext(i0 context.Context, i1 *sesv2.CreateConfigurationSetEventDestinationInput, i2 ...request.Option) (r0 *sesv2.CreateConfigurationSetEventDestinationOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreateConfigurationSetEventDestinationWithContext", i0, i1, i2)
	r0, _ = returns[0].(*sesv2.CreateConfigurationSetEventDestinationOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SESV2Double) fakeCreateConfigurationSetEventDestinationWithContext(ctx context.Context, in *sesv2.CreateConfigurationSetEventDestinationInput, _ ...request.Option) (*sesv2.CreateConfigurationSetEventDestinationOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "CreateConfigurationSetEventDestination cancelled", ctx.Err())
	default:
		return d.CreateConfigurationSetEventDestination(in)
	}
}

func (d *SESV2Double) CreateConfigurationSetRequest(i0 *sesv2.CreateConfigurationSetInput) (r0 *request.Request, r1 *sesv2.CreateConfigurationSetOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreateConfigurationSetRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*sesv2.CreateConfigurationSetOutput)
	return
}

func (d *SESV2Double) CreateConfigurationSetWithContext(i0 context.Context, i1 *sesv2.CreateConfigurationSetInput, i2 ...request.Option) (r0 *sesv2.CreateConfigurationSetOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreateConfigurationSetWithContext", i0, i1, i2)
	r0, _ = returns[0].(*sesv2.CreateConfigurationSetOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SESV2Double) fakeCreateConfigurationSetWithContext(ctx context.Context, in *sesv2.CreateConfigurationSetInput, _ ...request.Option) (*sesv2.CreateConfigurationSetOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "CreateConfigurationSet cancelled", ctx.Err())
	default:
		return d.CreateConfigurationSet(in)
	}
}

func (d *SESV2Double) CreateDedicatedIpPool(i0 *sesv2.CreateDedicatedIpPoolInput) (r0 *sesv2.CreateDedicatedIpPoolOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreateDedicatedIpPool", i0)
	r0, _ = returns[0].(*sesv2.CreateDedicatedIpPoolOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SESV2Double) CreateDedicatedIpPoolRequest(i0 *sesv2.CreateDedicatedIpPoolInput) (r0 *request.Request, r1 *sesv2.CreateDedicatedIpPoolOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreateDedicatedIpPoolRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*sesv2.CreateDedicatedIpPoolOutput)
	return
}

func (d *SESV2Double) CreateDedicatedIpPoolWithContext(i0 context.Context, i1 *sesv2.CreateDedicatedIpPoolInput, i2 ...request.Option) (r0 *sesv2.CreateDedicatedIpPoolOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreateDedicatedIpPoolWithContext", i0, i1, i2)
	r0, _ = returns[0].(*sesv2.CreateDedicatedIpPoolOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SESV2Double) fakeCreateDedicatedIpPoolWithContext(ctx context.Context, in *sesv2.CreateDedicatedIpPoolInput, _ ...request.Option) (*sesv2.CreateDedicatedIpPoolOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "CreateDedicatedIpPool cancelled", ctx.Err())
	default:
		return d.CreateDedicatedIpPool(in)
	}
}

func (d *SESV2Double) CreateDeliverabilityTestReport(i0 *sesv2.CreateDeliverabilityTestReportInput) (r0 *sesv2.CreateDeliverabilityTestReportOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreateDeliverabilityTestReport", i0)
	r0, _ = returns[0].(*sesv2.CreateDeliverabilityTestReportOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SESV2Double) CreateDeliverabilityTestReportRequest(i0 *sesv2.CreateDeliverabilityTestReportInput) (r0 *request.Request, r1 *sesv2.CreateDeliverabilityTestReportOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreateDeliverabilityTestReportRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*sesv2.CreateDeliverabilityTestReportOutput)
	return
}

func (d *SESV2Double) CreateDeliverabilityTestReportWithContext(i0 context.Context, i1 *sesv2.CreateDeliverabilityTestReportInput, i2 ...request.Option) (r0 *sesv2.CreateDeliverabilityTestReportOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreateDeliverabilityTestReportWithContext", i0, i1, i2)
	r0, _ = returns[0].(*sesv2.CreateDeliverabilityTestReportOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SESV2Double) fakeCreateDeliverabilityTestReportWithContext(ctx context.Context, in *sesv2.CreateDeliverabilityTestReportInput, _ ...request.Option) (*sesv2.CreateDeliverabilityTestReportOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "CreateDeliverabilityTestReport cancelled", ctx.Err())
	default:
		return d.CreateDeliverabilityTestReport(in)
	}
}

func (d *SESV2Double) CreateEmailIdentity(i0 *sesv2.CreateEmailIdentityInput) (r0 *sesv2.CreateEmailIdentityOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreateEmailIdentity", i0)
	r0, _ = returns[0].(*sesv2.CreateEmailIdentityOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SESV2Double) CreateEmailIdentityRequest(i0 *sesv2.CreateEmailIdentityInput) (r0 *request.Request, r1 *sesv2.CreateEmailIdentityOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreateEmailIdentityRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*sesv2.CreateEmailIdentityOutput)
	return
}

func (d *SESV2Double) CreateEmailIdentityWithContext(i0 context.Context, i1 *sesv2.CreateEmailIdentityInput, i2 ...request.Option) (r0 *sesv2.CreateEmailIdentityOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreateEmailIdentityWithContext", i0, i1, i2)
	r0, _ = returns[0].(*sesv2.CreateEmailIdentityOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SESV2Double) fakeCreateEmailIdentityWithContext(ctx context.Context, in *sesv2.CreateEmailIdentityInput, _ ...request.Option) (*sesv2.CreateEmailIdentityOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "CreateEmailIdentity cancelled", ctx.Err())
	default:
		return d.CreateEmailIdentity(in)
	}
}

func (d *SESV2Double) DeleteConfigurationSet(i0 *sesv2.DeleteConfigurationSetInput) (r0 *sesv2.DeleteConfigurationSetOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteConfigurationSet", i0)
	r0, _ = returns[0].(*sesv2.DeleteConfigurationSetOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SESV2Double) DeleteConfigurationSetEventDestination(i0 *sesv2.DeleteConfigurationSetEventDestinationInput) (r0 *sesv2.DeleteConfigurationSetEventDestinationOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteConfigurationSetEventDestination", i0)
	r0, _ = returns[0].(*sesv2.DeleteConfigurationSetEventDestinationOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SESV2Double) DeleteConfigurationSetEventDestinationRequest(i0 *sesv2.DeleteConfigurationSetEventDestinationInput) (r0 *request.Request, r1 *sesv2.DeleteConfigurationSetEventDestinationOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteConfigurationSetEventDestinationRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*sesv2.DeleteConfigurationSetEventDestinationOutput)
	return
}

func (d *SESV2Double) DeleteConfigurationSetEventDestinationWithContext(i0 context.Context, i1 *sesv2.DeleteConfigurationSetEventDestinationInput, i2 ...request.Option) (r0 *sesv2.DeleteConfigurationSetEventDestinationOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteConfigurationSetEventDestinationWithContext", i0, i1, i2)
	r0, _ = returns[0].(*sesv2.DeleteConfigurationSetEventDestinationOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SESV2Double) fakeDeleteConfigurationSetEventDestinationWithContext(ctx context.Context, in *sesv2.DeleteConfigurationSetEventDestinationInput, _ ...request.Option) (*sesv2.DeleteConfigurationSetEventDestinationOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "DeleteConfigurationSetEventDestination cancelled", ctx.Err())
	default:
		return d.DeleteConfigurationSetEventDestination(in)
	}
}

func (d *SESV2Double) DeleteConfigurationSetRequest(i0 *sesv2.DeleteConfigurationSetInput) (r0 *request.Request, r1 *sesv2.DeleteConfigurationSetOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteConfigurationSetRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*sesv2.DeleteConfigurationSetOutput)
	return
}

func (d *SESV2Double) DeleteConfigurationSetWithContext(i0 context.Context, i1 *sesv2.DeleteConfigurationSetInput, i2 ...request.Option) (r0 *sesv2.DeleteConfigurationSetOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteConfigurationSetWithContext", i0, i1, i2)
	r0, _ = returns[0].(*sesv2.DeleteConfigurationSetOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SESV2Double) fakeDeleteConfigurationSetWithContext(ctx context.Context, in *sesv2.DeleteConfigurationSetInput, _ ...request.Option) (*sesv2.DeleteConfigurationSetOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "DeleteConfigurationSet cancelled", ctx.Err())
	default:
		return d.DeleteConfigurationSet(in)
	}
}

func (d *SESV2Double) DeleteDedicatedIpPool(i0 *sesv2.DeleteDedicatedIpPoolInput) (r0 *sesv2.DeleteDedicatedIpPoolOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteDedicatedIpPool", i0)
	r0, _ = returns[0].(*sesv2.DeleteDedicatedIpPoolOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SESV2Double) DeleteDedicatedIpPoolRequest(i0 *sesv2.DeleteDedicatedIpPoolInput) (r0 *request.Request, r1 *sesv2.DeleteDedicatedIpPoolOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteDedicatedIpPoolRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*sesv2.DeleteDedicatedIpPoolOutput)
	return
}

func (d *SESV2Double) DeleteDedicatedIpPoolWithContext(i0 context.Context, i1 *sesv2.DeleteDedicatedIpPoolInput, i2 ...request.Option) (r0 *sesv2.DeleteDedicatedIpPoolOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteDedicatedIpPoolWithContext", i0, i1, i2)
	r0, _ = returns[0].(*sesv2.DeleteDedicatedIpPoolOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SESV2Double) fakeDeleteDedicatedIpPoolWithContext(ctx context.Context, in *sesv2.DeleteDedicatedIpPoolInput, _ ...request.Option) (*sesv2.DeleteDedicatedIpPoolOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "DeleteDedicatedIpPool cancelled", ctx.Err())
	default:
		return d.DeleteDedicatedIpPool(in)
	}
}

func (d *SESV2Double) DeleteEmailIdentity(i0 *sesv2.DeleteEmailIdentityInput) (r0 *sesv2.DeleteEmailIdentityOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteEmailIdentity", i0)
	r0, _ = returns[0].(*sesv2.DeleteEmailIdentityOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SESV2Double) DeleteEmailIdentityRequest(i0 *sesv2.DeleteEmailIdentityInput) (r0 *request.Request, r1 *sesv2.DeleteEmailIdentityOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteEmailIdentityRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*sesv2.DeleteEmailIdentityOutput)
	return
}

func (d *SESV2Double) DeleteEmailIdentityWithContext(i0 context.Context, i1 *sesv2.DeleteEmailIdentityInput, i2 ...request.Option) (r0 *sesv2.DeleteEmailIdentityOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteEmailIdentityWithContext", i0, i1, i2)
	r0, _ = returns[0].(*sesv2.DeleteEmailIdentityOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SESV2Double) fakeDeleteEmailIdentityWithContext(ctx context.Context, in *sesv2.DeleteEmailIdentityInput, _ ...request.Option) (*sesv2.DeleteEmailIdentityOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "DeleteEmailIdentity cancelled", ctx.Err())
	default:
		return d.DeleteEmailIdentity(in)
	}
}

func (d *SESV2Double) DeleteSuppressedDestination(i0 *sesv2.DeleteSuppressedDestinationInput) (r0 *sesv2.DeleteSuppressedDestinationOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteSuppressedDestination", i0)
	r0, _ = returns[0].(*sesv2.DeleteSuppressedDestinationOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SESV2Double) DeleteSuppressedDestinationRequest(i0 *sesv2.DeleteSuppressedDestinationInput) (r0 *request.Request, r1 *sesv2.DeleteSuppressedDestinationOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteSuppressedDestinationRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*sesv2.DeleteSuppressedDestinationOutput)
	return
}

func (d *SESV2Double) DeleteSuppressedDestinationWithContext(i0 context.Context, i1 *sesv2.DeleteSuppressedDestinationInput, i2 ...request.Option) (r0 *sesv2.DeleteSuppressedDestinationOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteSuppressedDestinationWithContext", i0, i1, i2)
	r0, _ = returns[0].(*sesv2.DeleteSuppressedDestinationOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SESV2Double) fakeDeleteSuppressedDestinationWithContext(ctx context.Context, in *sesv2.DeleteSuppressedDestinationInput, _ ...request.Option) (*sesv2.DeleteSuppressedDestinationOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "DeleteSuppressedDestination cancelled", ctx.Err())
	default:
		return d.DeleteSuppressedDestination(in)
	}
}

func (d *SESV2Double) GetAccount(i0 *sesv2.GetAccountInput) (r0 *sesv2.GetAccountOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetAccount", i0)
	r0, _ = returns[0].(*sesv2.GetAccountOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SESV2Double) GetAccountRequest(i0 *sesv2.GetAccountInput) (r0 *request.Request, r1 *sesv2.GetAccountOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetAccountRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*sesv2.GetAccountOutput)
	return
}

func (d *SESV2Double) GetAccountWithContext(i0 context.Context, i1 *sesv2.GetAccountInput, i2 ...request.Option) (r0 *sesv2.GetAccountOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetAccountWithContext", i0, i1, i2)
	r0, _ = returns[0].(*sesv2.GetAccountOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SESV2Double) fakeGetAccountWithContext(ctx context.Context, in *sesv2.GetAccountInput, _ ...request.Option) (*sesv2.GetAccountOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "GetAccount cancelled", ctx.Err())
	default:
		return d.GetAccount(in)
	}
}

func (d *SESV2Double) GetBlacklistReports(i0 *sesv2.GetBlacklistReportsInput) (r0 *sesv2.GetBlacklistReportsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetBlacklistReports", i0)
	r0, _ = returns[0].(*sesv2.GetBlacklistReportsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SESV2Double) GetBlacklistReportsRequest(i0 *sesv2.GetBlacklistReportsInput) (r0 *request.Request, r1 *sesv2.GetBlacklistReportsOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetBlacklistReportsRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*sesv2.GetBlacklistReportsOutput)
	return
}

func (d *SESV2Double) GetBlacklistReportsWithContext(i0 context.Context, i1 *sesv2.GetBlacklistReportsInput, i2 ...request.Option) (r0 *sesv2.GetBlacklistReportsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetBlacklistReportsWithContext", i0, i1, i2)
	r0, _ = returns[0].(*sesv2.GetBlacklistReportsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SESV2Double) fakeGetBlacklistReportsWithContext(ctx context.Context, in *sesv2.GetBlacklistReportsInput, _ ...request.Option) (*sesv2.GetBlacklistReportsOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "GetBlacklistReports cancelled", ctx.Err())
	default:
		return d.GetBlacklistReports(in)
	}
}

func (d *SESV2Double) GetConfigurationSet(i0 *sesv2.GetConfigurationSetInput) (r0 *sesv2.GetConfigurationSetOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetConfigurationSet", i0)
	r0, _ = returns[0].(*sesv2.GetConfigurationSetOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SESV2Double) GetConfigurationSetEventDestinations(i0 *sesv2.GetConfigurationSetEventDestinationsInput) (r0 *sesv2.GetConfigurationSetEventDestinationsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetConfigurationSetEventDestinations", i0)
	r0, _ = returns[0].(*sesv2.GetConfigurationSetEventDestinationsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SESV2Double) GetConfigurationSetEventDestinationsRequest(i0 *sesv2.GetConfigurationSetEventDestinationsInput) (r0 *request.Request, r1 *sesv2.GetConfigurationSetEventDestinationsOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetConfigurationSetEventDestinationsRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*sesv2.GetConfigurationSetEventDestinationsOutput)
	return
}

func (d *SESV2Double) GetConfigurationSetEventDestinationsWithContext(i0 context.Context, i1 *sesv2.GetConfigurationSetEventDestinationsInput, i2 ...request.Option) (r0 *sesv2.GetConfigurationSetEventDestinationsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetConfigurationSetEventDestinationsWithContext", i0, i1, i2)
	r0, _ = returns[0].(*sesv2.GetConfigurationSetEventDestinationsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SESV2Double) fakeGetConfigurationSetEventDestinationsWithContext(ctx context.Context, in *sesv2.GetConfigurationSetEventDestinationsInput, _ ...request.Option) (*sesv2.GetConfigurationSetEventDestinationsOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "GetConfigurationSetEventDestinations cancelled", ctx.Err())
	default:
		return d.GetConfigurationSetEventDestinations(in)
	}
}

func (d *SESV2Double) GetConfigurationSetRequest(i0 *sesv2.GetConfigurationSetInput) (r0 *request.Request, r1 *sesv2.GetConfigurationSetOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetConfigurationSetRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*sesv2.GetConfigurationSetOutput)
	return
}

func (d *SESV2Double) GetConfigurationSetWithContext(i0 context.Context, i1 *sesv2.GetConfigurationSetInput, i2 ...request.Option) (r0 *sesv2.GetConfigurationSetOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetConfigurationSetWithContext", i0, i1, i2)
	r0, _ = returns[0].(*sesv2.GetConfigurationSetOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SESV2Double) fakeGetConfigurationSetWithContext(ctx context.Context, in *sesv2.GetConfigurationSetInput, _ ...request.Option) (*sesv2.GetConfigurationSetOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "GetConfigurationSet cancelled", ctx.Err())
	default:
		return d.GetConfigurationSet(in)
	}
}

func (d *SESV2Double) GetDedicatedIp(i0 *sesv2.GetDedicatedIpInput) (r0 *sesv2.GetDedicatedIpOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetDedicatedIp", i0)
	r0, _ = returns[0].(*sesv2.GetDedicatedIpOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SESV2Double) GetDedicatedIpRequest(i0 *sesv2.GetDedicatedIpInput) (r0 *request.Request, r1 *sesv2.GetDedicatedIpOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetDedicatedIpRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*sesv2.GetDedicatedIpOutput)
	return
}

func (d *SESV2Double) GetDedicatedIpWithContext(i0 context.Context, i1 *sesv2.GetDedicatedIpInput, i2 ...request.Option) (r0 *sesv2.GetDedicatedIpOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetDedicatedIpWithContext", i0, i1, i2)
	r0, _ = returns[0].(*sesv2.GetDedicatedIpOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SESV2Double) fakeGetDedicatedIpWithContext(ctx context.Context, in *sesv2.GetDedicatedIpInput, _ ...request.Option) (*sesv2.GetDedicatedIpOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "GetDedicatedIp cancelled", ctx.Err())
	default:
		return d.GetDedicatedIp(in)
	}
}

func (d *SESV2Double) GetDedicatedIps(i0 *sesv2.GetDedicatedIpsInput) (r0 *sesv2.GetDedicatedIpsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetDedicatedIps", i0)
	r0, _ = returns[0].(*sesv2.GetDedicatedIpsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SESV2Double) GetDedicatedIpsPages(i0 *sesv2.GetDedicatedIpsInput, i1 func(*sesv2.GetDedicatedIpsOutput, bool) bool) (r0 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetDedicatedIpsPages", i0, i1)
	r0, _ = returns[0].(error)
	return
}

func (d *SESV2Double) fakeGetDedicatedIpsPages(in *sesv2.GetDedicatedIpsInput, pager func(*sesv2.GetDedicatedIpsOutput, bool) (shouldContinue bool)) error {
	return d.Paginate("GetDedicatedIps", paginators, in, pager)
}

func (d *SESV2Double) GetDedicatedIpsPagesWithContext(i0 context.Context, i1 *sesv2.GetDedicatedIpsInput, i2 func(*sesv2.GetDedicatedIpsOutput, bool) bool, i3 ...request.Option) (r0 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetDedicatedIpsPagesWithContext", i0, i1, i2, i3)
	r0, _ = returns[0].(error)
	return
}

func (d *SESV2Double) fakeGetDedicatedIpsPagesWithContext(ctx context.Context, in *sesv2.GetDedicatedIpsInput, pager func(*sesv2.GetDedicatedIpsOutput, bool) (shouldContinue bool), options ...request.Option) error {
	return d.PaginateWithContext("GetDedicatedIps", paginators, ctx, in, pager, options...)
}

func (d *SESV2Double) GetDedicatedIpsRequest(i0 *sesv2.GetDedicatedIpsInput) (r0 *request.Request, r1 *sesv2.GetDedicatedIpsOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetDedicatedIpsRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*sesv2.GetDedicatedIpsOutput)
	return
}

func (d *SESV2Double) GetDedicatedIpsWithContext(i0 context.Context, i1 *sesv2.GetDedicatedIpsInput, i2 ...request.Option) (r0 *sesv2.GetDedicatedIpsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetDedicatedIpsWithContext", i0, i1, i2)
	r0, _ = returns[0].(*sesv2.GetDedicatedIpsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SESV2Double) fakeGetDedicatedIpsWithContext(ctx context.Context, in *sesv2.GetDedicatedIpsInput, _ ...request.Option) (*sesv2.GetDedicatedIpsOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "GetDedicatedIps cancelled", ctx.Err())
	default:
		return d.GetDedicatedIps(in)
	}
}

func (d *SESV2Double) GetDeliverabilityDashboardOptions(i0 *sesv2.GetDeliverabilityDashboardOptionsInput) (r0 *sesv2.GetDeliverabilityDashboardOptionsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetDeliverabilityDashboardOptions", i0)
	r0, _ = returns[0].(*sesv2.GetDeliverabilityDashboardOptionsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SESV2Double) GetDeliverabilityDashboardOptionsRequest(i0 *sesv2.GetDeliverabilityDashboardOptionsInput) (r0 *request.Request, r1 *sesv2.GetDeliverabilityDashboardOptionsOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetDeliverabilityDashboardOptionsRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*sesv2.GetDeliverabilityDashboardOptionsOutput)
	return
}

func (d *SESV2Double) GetDeliverabilityDashboardOptionsWithContext(i0 context.Context, i1 *sesv2.GetDeliverabilityDashboardOptionsInput, i2 ...request.Option) (r0 *sesv2.GetDeliverabilityDashboardOptionsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetDeliverabilityDashboardOptionsWithContext", i0, i1, i2)
	r0, _ = returns[0].(*sesv2.GetDeliverabilityDashboardOptionsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SESV2Double) fakeGetDeliverabilityDashboardOptionsWithContext(ctx context.Context, in *sesv2.GetDeliverabilityDashboardOptionsInput, _ ...request.Option) (*sesv2.GetDeliverabilityDashboardOptionsOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "GetDeliverabilityDashboardOptions cancelled", ctx.Err())
	default:
		return d.GetDeliverabilityDashboardOptions(in)
	}
}

func (d *SESV2Double) GetDeliverabilityTestReport(i0 *sesv2.GetDeliverabilityTestReportInput) (r0 *sesv2.GetDeliverabilityTestReportOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetDeliverabilityTestReport", i0)
	r0, _ = returns[0].(*sesv2.GetDeliverabilityTestReportOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SESV2Double) GetDeliverabilityTestReportRequest(i0 *sesv2.GetDeliverabilityTestReportInput) (r0 *request.Request, r1 *sesv2.GetDeliverabilityTestReportOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetDeliverabilityTestReportRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*sesv2.GetDeliverabilityTestReportOutput)
	return
}

func (d *SESV2Double) GetDeliverabilityTestReportWithContext(i0 context.Context, i1 *sesv2.GetDeliverabilityTestReportInput, i2 ...request.Option) (r0 *sesv2.GetDeliverabilityTestReportOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetDeliverabilityTestReportWithContext", i0, i1, i2)
	r0, _ = returns[0].(*sesv2.GetDeliverabilityTestReportOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SESV2Double) fakeGetDeliverabilityTestReportWithContext(ctx context.Context, in *sesv2.GetDeliverabilityTestReportInput, _ ...request.Option) (*sesv2.GetDeliverabilityTestReportOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "GetDeliverabilityTestReport cancelled", ctx.Err())
	default:
		return d.GetDeliverabilityTestReport(in)
	}
}

func (d *SESV2Double) GetDomainDeliverabilityCampaign(i0 *sesv2.GetDomainDeliverabilityCampaignInput) (r0 *sesv2.GetDomainDeliverabilityCampaignOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetDomainDeliverabilityCampaign", i0)
	r0, _ = returns[0].(*sesv2.GetDomainDeliverabilityCampaignOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SESV2Double) GetDomainDeliverabilityCampaignRequest(i0 *sesv2.GetDomainDeliverabilityCampaignInput) (r0 *request.Request, r1 *sesv2.GetDomainDeliverabilityCampaignOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetDomainDeliverabilityCampaignRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*sesv2.GetDomainDeliverabilityCampaignOutput)
	return
}

func (d *SESV2Double) GetDomainDeliverabilityCampaignWithContext(i0 context.Context, i1 *sesv2.GetDomainDeliverabilityCampaignInput, i2 ...request.Option) (r0 *sesv2.GetDomainDeliverabilityCampaignOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetDomainDeliverabilityCampaignWithContext", i0, i1, i2)
	r0, _ = returns[0].(*sesv2.GetDomainDeliverabilityCampaignOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SESV2Double) fakeGetDomainDeliverabilityCampaignWithContext(ctx context.Context, in *sesv2.GetDomainDeliverabilityCampaignInput, _ ...request.Option) (*sesv2.GetDomainDeliverabilityCampaignOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "GetDomainDeliverabilityCampaign cancelled", ctx.Err())
	default:
		return d.GetDomainDeliverabilityCampaign(in)
	}
}

func (d *SESV2Double) GetDomainStatisticsReport(i0 *sesv2.GetDomainStatisticsReportInput) (r0 *sesv2.GetDomainStatisticsReportOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetDomainStatisticsReport", i0)
	r0, _ = returns[0].(*sesv2.GetDomainStatisticsReportOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SESV2Double) GetDomainStatisticsReportRequest(i0 *sesv2.GetDomainStatisticsReportInput) (r0 *request.Request, r1 *sesv2.GetDomainStatisticsReportOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetDomainStatisticsReportRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*sesv2.GetDomainStatisticsReportOutput)
	return
}

func (d *SESV2Double) GetDomainStatisticsReportWithContext(i0 context.Context, i1 *sesv2.GetDomainStatisticsReportInput, i2 ...request.Option) (r0 *sesv2.GetDomainStatisticsReportOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetDomainStatisticsReportWithContext", i0, i1, i2)
	r0, _ = returns[0].(*sesv2.GetDomainStatisticsReportOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SESV2Double) fakeGetDomainStatisticsReportWithContext(ctx context.Context, in *sesv2.GetDomainStatisticsReportInput, _ ...request.Option) (*sesv2.GetDomainStatisticsReportOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "GetDomainStatisticsReport cancelled", ctx.Err())
	default:
		return d.GetDomainStatisticsReport(in)
	}
}

func (d *SESV2Double) GetEmailIdentity(i0 *sesv2.GetEmailIdentityInput) (r0 *sesv2.GetEmailIdentityOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetEmailIdentity", i0)
	r0, _ = returns[0].(*sesv2.GetEmailIdentityOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SESV2Double) GetEmailIdentityRequest(i0 *sesv2.GetEmailIdentityInput) (r0 *request.Request, r1 *sesv2.GetEmailIdentityOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetEmailIdentityRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*sesv2.GetEmailIdentityOutput)
	return
}

func (d *SESV2Double) GetEmailIdentityWithContext(i0 context.Context, i1 *sesv2.GetEmailIdentityInput, i2 ...request.Option) (r0 *sesv2.GetEmailIdentityOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetEmailIdentityWithContext", i0, i1, i2)
	r0, _ = returns[0].(*sesv2.GetEmailIdentityOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SESV2Double) fakeGetEmailIdentityWithContext(ctx context.Context, in *sesv2.GetEmailIdentityInput, _ ...request.Option) (*sesv2.GetEmailIdentityOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "GetEmailIdentity cancelled", ctx.Err())
	default:
		return d.GetEmailIdentity(in)
	}
}

func (d *SESV2Double) GetSuppressedDestination(i0 *sesv2.GetSuppressedDestinationInput) (r0 *sesv2.GetSuppressedDestinationOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetSuppressedDestination", i0)
	r0, _ = returns[0].(*sesv2.GetSuppressedDestinationOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SESV2Double) GetSuppressedDestinationRequest(i0 *sesv2.GetSuppressedDestinationInput) (r0 *request.Request, r1 *sesv2.GetSuppressedDestinationOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetSuppressedDestinationRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*sesv2.GetSuppressedDestinationOutput)
	return
}

func (d *SESV2Double) GetSuppressedDestinationWithContext(i0 context.Context, i1 *sesv2.GetSuppressedDestinationInput, i2 ...request.Option) (r0 *sesv2.GetSuppressedDestinationOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetSuppressedDestinationWithContext", i0, i1, i2)
	r0, _ = returns[0].(*sesv2.GetSuppressedDestinationOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SESV2Double) fakeGetSuppressedDestinationWithContext(ctx context.Context, in *sesv2.GetSuppressedDestinationInput, _ ...request.Option) (*sesv2.GetSuppressedDestinationOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "GetSuppressedDestination cancelled", ctx.Err())
	default:
		return d.GetSuppressedDestination(in)
	}
}

func (d *SESV2Double) ListConfigurationSets(i0 *sesv2.ListConfigurationSetsInput) (r0 *sesv2.ListConfigurationSetsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListConfigurationSets", i0)
	r0, _ = returns[0].(*sesv2.ListConfigurationSetsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SESV2Double) ListConfigurationSetsPages(i0 *sesv2.ListConfigurationSetsInput, i1 func(*sesv2.ListConfigurationSetsOutput, bool) bool) (r0 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListConfigurationSetsPages", i0, i1)
	r0, _ = returns[0].(error)
	return
}

func (d *SESV2Double) fakeListConfigurationSetsPages(in *sesv2.ListConfigurationSetsInput, pager func(*sesv2.ListConfigurationSetsOutput, bool) (shouldContinue bool)) error {
	return d.Paginate("ListConfigurationSets", paginators, in, pager)
}

func (d *SESV2Double) ListConfigurationSetsPagesWithContext(i0 context.Context, i1 *sesv2.ListConfigurationSetsInput, i2 func(*sesv2.ListConfigurationSetsOutput, bool) bool, i3 ...request.Option) (r0 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListConfigurationSetsPagesWithContext", i0, i1, i2, i3)
	r0, _ = returns[0].(error)
	return
}

func (d *SESV2Double) fakeListConfigurationSetsPagesWithContext(ctx context.Context, in *sesv2.ListConfigurationSetsInput, pager func(*sesv2.ListConfigurationSetsOutput, bool) (shouldContinue bool), options ...request.Option) error {
	return d.PaginateWithContext("ListConfigurationSets", paginators, ctx, in, pager, options...)
}

func (d *SESV2Double) ListConfigurationSetsRequest(i0 *sesv2.ListConfigurationSetsInput) (r0 *request.Request, r1 *sesv2.ListConfigurationSetsOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListConfigurationSetsRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*sesv2.ListConfigurationSetsOutput)
	return
}

func (d *SESV2Double) ListConfigurationSetsWithContext(i0 context.Context, i1 *sesv2.ListConfigurationSetsInput, i2 ...request.Option) (r0 *sesv2.ListConfigurationSetsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListConfigurationSetsWithContext", i0, i1, i2)
	r0, _ = returns[0].(*sesv2.ListConfigurationSetsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SESV2Double) fakeListConfigurationSetsWithContext(ctx context.Context, in *sesv2.ListConfigurationSetsInput, _ ...request.Option) (*sesv2.ListConfigurationSetsOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "ListConfigurationSets cancelled", ctx.Err())
	default:
		return d.ListConfigurationSets(in)
	}
}

func (d *SESV2Double) ListDedicatedIpPools(i0 *sesv2.ListDedicatedIpPoolsInput) (r0 *sesv2.ListDedicatedIpPoolsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListDedicatedIpPools", i0)
	r0, _ = returns[0].(*sesv2.ListDedicatedIpPoolsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SESV2Double) ListDedicatedIpPoolsPages(i0 *sesv2.ListDedicatedIpPoolsInput, i1 func(*sesv2.ListDedicatedIpPoolsOutput, bool) bool) (r0 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListDedicatedIpPoolsPages", i0, i1)
	r0, _ = returns[0].(error)
	return
}

func (d *SESV2Double) fakeListDedicatedIpPoolsPages(in *sesv2.ListDedicatedIpPoolsInput, pager func(*sesv2.ListDedicatedIpPoolsOutput, bool) (shouldContinue bool)) error {
	return d.Paginate("ListDedicatedIpPools", paginators, in, pager)
}

func (d *SESV2Double) ListDedicatedIpPoolsPagesWithContext(i0 context.Context, i1 *sesv2.ListDedicatedIpPoolsInput, i2 func(*sesv2.ListDedicatedIpPoolsOutput, bool) bool, i3 ...request.Option) (r0 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListDedicatedIpPoolsPagesWithContext", i0, i1, i2, i3)
	r0, _ = returns[0].(error)
	return
}

func (d *SESV2Double) fakeListDedicatedIpPoolsPagesWithContext(ctx context.Context, in *sesv2.ListDedicatedIpPoolsInput, pager func(*sesv2.ListDedicatedIpPoolsOutput, bool) (shouldContinue bool), options ...request.Option) error {
	return d.PaginateWithContext("ListDedicatedIpPools", paginators, ctx, in, pager, options...)
}

func (d *SESV2Double) ListDedicatedIpPoolsRequest(i0 *sesv2.ListDedicatedIpPoolsInput) (r0 *request.Request, r1 *sesv2.ListDedicatedIpPoolsOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListDedicatedIpPoolsRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*sesv2.ListDedicatedIpPoolsOutput)
	return
}

func (d *SESV2Double) ListDedicatedIpPoolsWithContext(i0 context.Context, i1 *sesv2.ListDedicatedIpPoolsInput, i2 ...request.Option) (r0 *sesv2.ListDedicatedIpPoolsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListDedicatedIpPoolsWithContext", i0, i1, i2)
	r0, _ = returns[0].(*sesv2.ListDedicatedIpPoolsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SESV2Double) fakeListDedicatedIpPoolsWithContext(ctx context.Context, in *sesv2.ListDedicatedIpPoolsInput, _ ...request.Option) (*sesv2.ListDedicatedIpPoolsOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "ListDedicatedIpPools cancelled", ctx.Err())
	default:
		return d.ListDedicatedIpPools(in)
	}
}

func (d *SESV2Double) ListDeliverabilityTestReports(i0 *sesv2.ListDeliverabilityTestReportsInput) (r0 *sesv2.ListDeliverabilityTestReportsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListDeliverabilityTestReports", i0)
	r0, _ = returns[0].(*sesv2.ListDeliverabilityTestReportsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SESV2Double) ListDeliverabilityTestReportsPages(i0 *sesv2.ListDeliverabilityTestReportsInput, i1 func(*sesv2.ListDeliverabilityTestReportsOutput, bool) bool) (r0 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListDeliverabilityTestReportsPages", i0, i1)
	r0, _ = returns[0].(error)
	return
}

func (d *SESV2Double) fakeListDeliverabilityTestReportsPages(in *sesv2.ListDeliverabilityTestReportsInput, pager func(*sesv2.ListDeliverabilityTestReportsOutput, bool) (shouldContinue bool)) error {
	return d.Paginate("ListDeliverabilityTestReports", paginators, in, pager)
}

func (d *SESV2Double) ListDeliverabilityTestReportsPagesWithContext(i0 context.Context, i1 *sesv2.ListDeliverabilityTestReportsInput, i2 func(*sesv2.ListDeliverabilityTestReportsOutput, bool) bool, i3 ...request.Option) (r0 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListDeliverabilityTestReportsPagesWithContext", i0, i1, i2, i3)
	r0, _ = returns[0].(error)
	return
}

func (d *SESV2Double) fakeListDeliverabilityTestReportsPagesWithContext(ctx context.Context, in *sesv2.ListDeliverabilityTestReportsInput, pager func(*sesv2.ListDeliverabilityTestReportsOutput, bool) (shouldContinue bool), options ...request.Option) error {
	return d.PaginateWithContext("ListDeliverabilityTestReports", paginators, ctx, in, pager, options...)
}

func (d *SESV2Double) ListDeliverabilityTestReportsRequest(i0 *sesv2.ListDeliverabilityTestReportsInput) (r0 *request.Request, r1 *sesv2.ListDeliverabilityTestReportsOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListDeliverabilityTestReportsRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*sesv2.ListDeliverabilityTestReportsOutput)
	return
}

func (d *SESV2Double) ListDeliverabilityTestReportsWithContext(i0 context.Context, i1 *sesv2.ListDeliverabilityTestReportsInput, i2 ...request.Option) (r0 *sesv2.ListDeliverabilityTestReportsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListDeliverabilityTestReportsWithContext", i0, i1, i2)
	r0, _ = returns[0].(*sesv2.ListDeliverabilityTestReportsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SESV2Double) fakeListDeliverabilityTestReportsWithContext(ctx context.Context, in *sesv2.ListDeliverabilityTestReportsInput, _ ...request.Option) (*sesv2.ListDeliverabilityTestReportsOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "ListDeliverabilityTestReports cancelled", ctx.Err())
	default:
		return d.ListDeliverabilityTestReports(in)
	}
}

func (d *SESV2Double) ListDomainDeliverabilityCampaigns(i0 *sesv2.ListDomainDeliverabilityCampaignsInput) (r0 *sesv2.ListDomainDeliverabilityCampaignsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListDomainDeliverabilityCampaigns", i0)
	r0, _ = returns[0].(*sesv2.ListDomainDeliverabilityCampaignsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SESV2Double) ListDomainDeliverabilityCampaignsPages(i0 *sesv2.ListDomainDeliverabilityCampaignsInput, i1 func(*sesv2.ListDomainDeliverabilityCampaignsOutput, bool) bool) (r0 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListDomainDeliverabilityCampaignsPages", i0, i1)
	r0, _ = returns[0].(error)
	return
}

func (d *SESV2Double) fakeListDomainDeliverabilityCampaignsPages(in *sesv2.ListDomainDeliverabilityCampaignsInput, pager func(*sesv2.ListDomainDeliverabilityCampaignsOutput, bool) (shouldContinue bool)) error {
	return d.Paginate("ListDomainDeliverabilityCampaigns", paginators, in, pager)
}

func (d *SESV2Double) ListDomainDeliverabilityCampaignsPagesWithContext(i0 context.Context, i1 *sesv2.ListDomainDeliverabilityCampaignsInput, i2 func(*sesv2.ListDomainDeliverabilityCampaignsOutput, bool) bool, i3 ...request.Option) (r0 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListDomainDeliverabilityCampaignsPagesWithContext", i0, i1, i2, i3)
	r0, _ = returns[0].(error)
	return
}

func (d *SESV2Double) fakeListDomainDeliverabilityCampaignsPagesWithContext(ctx context.Context, in *sesv2.ListDomainDeliverabilityCampaignsInput, pager func(*sesv2.ListDomainDeliverabilityCampaignsOutput, bool) (shouldContinue bool), options ...request.Option) error {
	return d.PaginateWithContext("ListDomainDeliverabilityCampaigns", paginators, ctx, in, pager, options...)
}

func (d *SESV2Double) ListDomainDeliverabilityCampaignsRequest(i0 *sesv2.ListDomainDeliverabilityCampaignsInput) (r0 *request.Request, r1 *sesv2.ListDomainDeliverabilityCampaignsOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListDomainDeliverabilityCampaignsRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*sesv2.ListDomainDeliverabilityCampaignsOutput)
	return
}

func (d *SESV2Double) ListDomainDeliverabilityCampaignsWithContext(i0 context.Context, i1 *sesv2.ListDomainDeliverabilityCampaignsInput, i2 ...request.Option) (r0 *sesv2.ListDomainDeliverabilityCampaignsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListDomainDeliverabilityCampaignsWithContext", i0, i1, i2)
	r0, _ = returns[0].(*sesv2.ListDomainDeliverabilityCampaignsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SESV2Double) fakeListDomainDeliverabilityCampaignsWithContext(ctx context.Context, in *sesv2.ListDomainDeliverabilityCampaignsInput, _ ...request.Option) (*sesv2.ListDomainDeliverabilityCampaignsOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "ListDomainDeliverabilityCampaigns cancelled", ctx.Err())
	default:
		return d.ListDomainDeliverabilityCampaigns(in)
	}
}

func (d *SESV2Double) ListEmailIdentities(i0 *sesv2.ListEmailIdentitiesInput) (r0 *sesv2.ListEmailIdentitiesOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListEmailIdentities", i0)
	r0, _ = returns[0].(*sesv2.ListEmailIdentitiesOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SESV2Double) ListEmailIdentitiesPages(i0 *sesv2.ListEmailIdentitiesInput, i1 func(*sesv2.ListEmailIdentitiesOutput, bool) bool) (r0 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListEmailIdentitiesPages", i0, i1)
	r0, _ = returns[0].(error)
	return
}

func (d *SESV2Double) fakeListEmailIdentitiesPages(in *sesv2.ListEmailIdentitiesInput, pager func(*sesv2.ListEmailIdentitiesOutput, bool) (shouldContinue bool)) error {
	return d.Paginate("ListEmailIdentities", paginators, in, pager)
}

func (d *SESV2Double) ListEmailIdentitiesPagesWithContext(i0 context.Context, i1 *sesv2.ListEmailIdentitiesInput, i2 func(*sesv2.ListEmailIdentitiesOutput, bool) bool, i3 ...request.Option) (r0 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListEmailIdentitiesPagesWithContext", i0, i1, i2, i3)
	r0, _ = returns[0].(error)
	return
}

func (d *SESV2Double) fakeListEmailIdentitiesPagesWithContext(ctx context.Context, in *sesv2.ListEmailIdentitiesInput, pager func(*sesv2.ListEmailIdentitiesOutput, bool) (shouldContinue bool), options ...request.Option) error {
	return d.PaginateWithContext("ListEmailIdentities", paginators, ctx, in, pager, options...)
}

func (d *SESV2Double) ListEmailIdentitiesRequest(i0 *sesv2.ListEmailIdentitiesInput) (r0 *request.Request, r1 *sesv2.ListEmailIdentitiesOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListEmailIdentitiesRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*sesv2.ListEmailIdentitiesOutput)
	return
}

func (d *SESV2Double) ListEmailIdentitiesWithContext(i0 context.Context, i1 *sesv2.ListEmailIdentitiesInput, i2 ...request.Option) (r0 *sesv2.ListEmailIdentitiesOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListEmailIdentitiesWithContext", i0, i1, i2)
	r0, _ = returns[0].(*sesv2.ListEmailIdentitiesOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SESV2Double) fakeListEmailIdentitiesWithContext(ctx context.Context, in *sesv2.ListEmailIdentitiesInput, _ ...request.Option) (*sesv2.ListEmailIdentitiesOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "ListEmailIdentities cancelled", ctx.Err())
	default:
		return d.ListEmailIdentities(in)
	}
}

func (d *SESV2Double) ListSuppressedDestinations(i0 *sesv2.ListSuppressedDestinationsInput) (r0 *sesv2.ListSuppressedDestinationsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListSuppressedDestinations", i0)
	r0, _ = returns[0].(*sesv2.ListSuppressedDestinationsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SESV2Double) ListSuppressedDestinationsPages(i0 *sesv2.ListSuppressedDestinationsInput, i1 func(*sesv2.ListSuppressedDestinationsOutput, bool) bool) (r0 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListSuppressedDestinationsPages", i0, i1)
	r0, _ = returns[0].(error)
	return
}

func (d *SESV2Double) fakeListSuppressedDestinationsPages(in *sesv2.ListSuppressedDestinationsInput, pager func(*sesv2.ListSuppressedDestinationsOutput, bool) (shouldContinue bool)) error {
	return d.Paginate("ListSuppressedDestinations", paginators, in, pager)
}

func (d *SESV2Double) ListSuppressedDestinationsPagesWithContext(i0 context.Context, i1 *sesv2.ListSuppressedDestinationsInput, i2 func(*sesv2.ListSuppressedDestinationsOutput, bool) bool, i3 ...request.Option) (r0 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListSuppressedDestinationsPagesWithContext", i0, i1, i2, i3)
	r0, _ = returns[0].(error)
	return
}

func (d *SESV2Double) fakeListSuppressedDestinationsPagesWithContext(ctx context.Context, in *sesv2.ListSuppressedDestinationsInput, pager func(*sesv2.ListSuppressedDestinationsOutput, bool) (shouldContinue bool), options ...request.Option) error {
	return d.PaginateWithContext("ListSuppressedDestinations", paginators, ctx, in, pager, options...)
}

func (d *SESV2Double) ListSuppressedDestinationsRequest(i0 *sesv2.ListSuppressedDestinationsInput) (r0 *request.Request, r1 *sesv2.ListSuppressedDestinationsOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListSuppressedDestinationsRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*sesv2.ListSuppressedDestinationsOutput)
	return
}

func (d *SESV2Double) ListSuppressedDestinationsWithContext(i0 context.Context, i1 *sesv2.ListSuppressedDestinationsInput, i2 ...request.Option) (r0 *sesv2.ListSuppressedDestinationsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListSuppressedDestinationsWithContext", i0, i1, i2)
	r0, _ = returns[0].(*sesv2.ListSuppressedDestinationsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SESV2Double) fakeListSuppressedDestinationsWithContext(ctx context.Context, in *sesv2.ListSuppressedDestinationsInput, _ ...request.Option) (*sesv2.ListSuppressedDestinationsOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "ListSuppressedDestinations cancelled", ctx.Err())
	default:
		return d.ListSuppressedDestinations(in)
	}
}

func (d *SESV2Double) ListTagsForResource(i0 *sesv2.ListTagsForResourceInput) (r0 *sesv2.ListTagsForResourceOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListTagsForResource", i0)
	r0, _ = returns[0].(*sesv2.ListTagsForResourceOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SESV2Double) ListTagsForResourceRequest(i0 *sesv2.ListTagsForResourceInput) (r0 *request.Request, r1 *sesv2.ListTagsForResourceOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListTagsForResourceRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*sesv2.ListTagsForResourceOutput)
	return
}

func (d *SESV2Double) ListTagsForResourceWithContext(i0 context.Context, i1 *sesv2.ListTagsForResourceInput, i2 ...request.Option) (r0 *sesv2.ListTagsForResourceOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListTagsForResourceWithContext", i0, i1, i2)
	r0, _ = returns[0].(*sesv2.ListTagsForResourceOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SESV2Double) fakeListTagsForResourceWithContext(ctx context.Context, in *sesv2.ListTagsForResourceInput, _ ...request.Option) (*sesv2.ListTagsForResourceOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "ListTagsForResource cancelled", ctx.Err())
	default:
		return d.ListTagsForResource(in)
	}
}

func (d *SESV2Double) PutAccountDedicatedIpWarmupAttributes(i0 *sesv2.PutAccountDedicatedIpWarmupAttributesInput) (r0 *sesv2.PutAccountDedicatedIpWarmupAttributesOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("PutAccountDedicatedIpWarmupAttributes", i0)
	r0, _ = returns[0].(*sesv2.PutAccountDedicatedIpWarmupAttributesOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SESV2Double) PutAccountDedicatedIpWarmupAttributesRequest(i0 *sesv2.PutAccountDedicatedIpWarmupAttributesInput) (r0 *request.Request, r1 *sesv2.PutAccountDedicatedIpWarmupAttributesOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("PutAccountDedicatedIpWarmupAttributesRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*sesv2.PutAccountDedicatedIpWarmupAttributesOutput)
	return
}

func (d *SESV2Double) PutAccountDedicatedIpWarmupAttributesWithContext(i0 context.Context, i1 *sesv2.PutAccountDedicatedIpWarmupAttributesInput, i2 ...request.Option) (r0 *sesv2.PutAccountDedicatedIpWarmupAttributesOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("PutAccountDedicatedIpWarmupAttributesWithContext", i0, i1, i2)
	r0, _ = returns[0].(*sesv2.PutAccountDedicatedIpWarmupAttributesOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SESV2Double) fakePutAccountDedicatedIpWarmupAttributesWithContext(ctx context.Context, in *sesv2.PutAccountDedicatedIpWarmupAttributesInput, _ ...request.Option) (*sesv2.PutAccountDedicatedIpWarmupAttributesOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "PutAccountDedicatedIpWarmupAttributes cancelled", ctx.Err())
	default:
		return d.PutAccountDedicatedIpWarmupAttributes(in)
	}
}

func (d *SESV2Double) PutAccountSendingAttributes(i0 *sesv2.PutAccountSendingAttributesInput) (r0 *sesv2.PutAccountSendingAttributesOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("PutAccountSendingAttributes", i0)
	r0, _ = returns[0].(*sesv2.PutAccountSendingAttributesOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SESV2Double) PutAccountSendingAttributesRequest(i0 *sesv2.PutAccountSendingAttributesInput) (r0 *request.Request, r1 *sesv2.PutAccountSendingAttributesOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("PutAccountSendingAttributesRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*sesv2.PutAccountSendingAttributesOutput)
	return
}

func (d *SESV2Double) PutAccountSendingAttributesWithContext(i0 context.Context, i1 *sesv2.PutAccountSendingAttributesInput, i2 ...request.Option) (r0 *sesv2.PutAccountSendingAttributesOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("PutAccountSendingAttributesWithContext", i0, i1, i2)
	r0, _ = returns[0].(*sesv2.PutAccountSendingAttributesOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SESV2Double) fakePutAccountSendingAttributesWithContext(ctx context.Context, in *sesv2.PutAccountSendingAttributesInput, _ ...request.Option) (*sesv2.PutAccountSendingAttributesOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "PutAccountSendingAttributes cancelled", ctx.Err())
	default:
		return d.PutAccountSendingAttributes(in)
	}
}

func (d *SESV2Double) PutAccountSuppressionAttributes(i0 *sesv2.PutAccountSuppressionAttributesInput) (r0 *sesv2.PutAccountSuppressionAttributesOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("PutAccountSuppressionAttributes", i0)
	r0, _ = returns[0].(*sesv2.PutAccountSuppressionAttributesOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SESV2Double) PutAccountSuppressionAttributesRequest(i0 *sesv2.PutAccountSuppressionAttributesInput) (r0 *request.Request, r1 *sesv2.PutAccountSuppressionAttributesOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("PutAccountSuppressionAttributesRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*sesv2.PutAccountSuppressionAttributesOutput)
	return
}

func (d *SESV2Double) PutAccountSuppressionAttributesWithContext(i0 context.Context, i1 *sesv2.PutAccountSuppressionAttributesInput, i2 ...request.Option) (r0 *sesv2.PutAccountSuppressionAttributesOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("PutAccountSuppressionAttributesWithContext", i0, i1, i2)
	r0, _ = returns[0].(*sesv2.PutAccountSuppressionAttributesOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SESV2Double) fakePutAccountSuppressionAttributesWithContext(ctx context.Context, in *sesv2.PutAccountSuppressionAttributesInput, _ ...request.Option) (*sesv2.PutAccountSuppressionAttributesOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "PutAccountSuppressionAttributes cancelled", ctx.Err())
	default:
		return d.PutAccountSuppressionAttributes(in)
	}
}

func (d *SESV2Double) PutConfigurationSetDeliveryOptions(i0 *sesv2.PutConfigurationSetDeliveryOptionsInput) (r0 *sesv2.PutConfigurationSetDeliveryOptionsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("PutConfigurationSetDeliveryOptions", i0)
	r0, _ = returns[0].(*sesv2.PutConfigurationSetDeliveryOptionsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SESV2Double) PutConfigurationSetDeliveryOptionsRequest(i0 *sesv2.PutConfigurationSetDeliveryOptionsInput) (r0 *request.Request, r1 *sesv2.PutConfigurationSetDeliveryOptionsOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("PutConfigurationSetDeliveryOptionsRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*sesv2.PutConfigurationSetDeliveryOptionsOutput)
	return
}

func (d *SESV2Double) PutConfigurationSetDeliveryOptionsWithContext(i0 context.Context, i1 *sesv2.PutConfigurationSetDeliveryOptionsInput, i2 ...request.Option) (r0 *sesv2.PutConfigurationSetDeliveryOptionsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("PutConfigurationSetDeliveryOptionsWithContext", i0, i1, i2)
	r0, _ = returns[0].(*sesv2.PutConfigurationSetDeliveryOptionsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SESV2Double) fakePutConfigurationSetDeliveryOptionsWithContext(ctx context.Context, in *sesv2.PutConfigurationSetDeliveryOptionsInput, _ ...request.Option) (*sesv2.PutConfigurationSetDeliveryOptionsOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "PutConfigurationSetDeliveryOptions cancelled", ctx.Err())
	default:
		return d.PutConfigurationSetDeliveryOptions(in)
	}
}

func (d *SESV2Double) PutConfigurationSetReputationOptions(i0 *sesv2.PutConfigurationSetReputationOptionsInput) (r0 *sesv2.PutConfigurationSetReputationOptionsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("PutConfigurationSetReputationOptions", i0)
	r0, _ = returns[0].(*sesv2.PutConfigurationSetReputationOptionsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SESV2Double) PutConfigurationSetReputationOptionsRequest(i0 *sesv2.PutConfigurationSetReputationOptionsInput) (r0 *request.Request, r1 *sesv2.PutConfigurationSetReputationOptionsOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("PutConfigurationSetReputationOptionsRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*sesv2.PutConfigurationSetReputationOptionsOutput)
	return
}

func (d *SESV2Double) PutConfigurationSetReputationOptionsWithContext(i0 context.Context, i1 *sesv2.PutConfigurationSetReputationOptionsInput, i2 ...request.Option) (r0 *sesv2.PutConfigurationSetReputationOptionsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("PutConfigurationSetReputationOptionsWithContext", i0, i1, i2)
	r0, _ = returns[0].(*sesv2.PutConfigurationSetReputationOptionsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SESV2Double) fakePutConfigurationSetReputationOptionsWithContext(ctx context.Context, in *sesv2.PutConfigurationSetReputationOptionsInput, _ ...request.Option) (*sesv2.PutConfigurationSetReputationOptionsOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "PutConfigurationSetReputationOptions cancelled", ctx.Err())
	default:
		return d.PutConfigurationSetReputationOptions(in)
	}
}

func (d *SESV2Double) PutConfigurationSetSendingOptions(i0 *sesv2.PutConfigurationSetSendingOptionsInput) (r0 *sesv2.PutConfigurationSetSendingOptionsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("PutConfigurationSetSendingOptions", i0)
	r0, _ = returns[0].(*sesv2.PutConfigurationSetSendingOptionsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SESV2Double) PutConfigurationSetSendingOptionsRequest(i0 *sesv2.PutConfigurationSetSendingOptionsInput) (r0 *request.Request, r1 *sesv2.PutConfigurationSetSendingOptionsOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("PutConfigurationSetSendingOptionsRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*sesv2.PutConfigurationSetSendingOptionsOutput)
	return
}

func (d *SESV2Double) PutConfigurationSetSendingOptionsWithContext(i0 context.Context, i1 *sesv2.PutConfigurationSetSendingOptionsInput, i2 ...request.Option) (r0 *sesv2.PutConfigurationSetSendingOptionsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("PutConfigurationSetSendingOptionsWithContext", i0, i1, i2)
	r0, _ = returns[0].(*sesv2.PutConfigurationSetSendingOptionsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SESV2Double) fakePutConfigurationSetSendingOptionsWithContext(ctx context.Context, in *sesv2.PutConfigurationSetSendingOptionsInput, _ ...request.Option) (*sesv2.PutConfigurationSetSendingOptionsOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "PutConfigurationSetSendingOptions cancelled", ctx.Err())
	default:
		return d.PutConfigurationSetSendingOptions(in)
	}
}

func (d *SESV2Double) PutConfigurationSetSuppressionOptions(i0 *sesv2.PutConfigurationSetSuppressionOptionsInput) (r0 *sesv2.PutConfigurationSetSuppressionOptionsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("PutConfigurationSetSuppressionOptions", i0)
	r0, _ = returns[0].(*sesv2.PutConfigurationSetSuppressionOptionsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SESV2Double) PutConfigurationSetSuppressionOptionsRequest(i0 *sesv2.PutConfigurationSetSuppressionOptionsInput) (r0 *request.Request, r1 *sesv2.PutConfigurationSetSuppressionOptionsOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("PutConfigurationSetSuppressionOptionsRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*sesv2.PutConfigurationSetSuppressionOptionsOutput)
	return
}

func (d *SESV2Double) PutConfigurationSetSuppressionOptionsWithContext(i0 context.Context, i1 *sesv2.PutConfigurationSetSuppressionOptionsInput, i2 ...request.Option) (r0 *sesv2.PutConfigurationSetSuppressionOptionsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("PutConfigurationSetSuppressionOptionsWithContext", i0, i1, i2)
	r0, _ = returns[0].(*sesv2.PutConfigurationSetSuppressionOptionsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SESV2Double) fakePutConfigurationSetSuppressionOptionsWithContext(ctx context.Context, in *sesv2.PutConfigurationSetSuppressionOptionsInput, _ ...request.Option) (*sesv2.PutConfigurationSetSuppressionOptionsOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "PutConfigurationSetSuppressionOptions cancelled", ctx.Err())
	default:
		return d.PutConfigurationSetSuppressionOptions(in)
	}
}

func (d *SESV2Double) PutConfigurationSetTrackingOptions(i0 *sesv2.PutConfigurationSetTrackingOptionsInput) (r0 *sesv2.PutConfigurationSetTrackingOptionsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("PutConfigurationSetTrackingOptions", i0)
	r0, _ = returns[0].(*sesv2.PutConfigurationSetTrackingOptionsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SESV2Double) PutConfigurationSetTrackingOptionsRequest(i0 *sesv2.PutConfigurationSetTrackingOptionsInput) (r0 *request.Request, r1 *sesv2.PutConfigurationSetTrackingOptionsOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("PutConfigurationSetTrackingOptionsRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*sesv2.PutConfigurationSetTrackingOptionsOutput)
	return
}

func (d *SESV2Double) PutConfigurationSetTrackingOptionsWithContext(i0 context.Context, i1 *sesv2.PutConfigurationSetTrackingOptionsInput, i2 ...request.Option) (r0 *sesv2.PutConfigurationSetTrackingOptionsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("PutConfigurationSetTrackingOptionsWithContext", i0, i1, i2)
	r0, _ = returns[0].(*sesv2.PutConfigurationSetTrackingOptionsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SESV2Double) fakePutConfigurationSetTrackingOptionsWithContext(ctx context.Context, in *sesv2.PutConfigurationSetTrackingOptionsInput, _ ...request.Option) (*sesv2.PutConfigurationSetTrackingOptionsOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "PutConfigurationSetTrackingOptions cancelled", ctx.Err())
	default:
		return d.PutConfigurationSetTrackingOptions(in)
	}
}

func (d *SESV2Double) PutDedicatedIpInPool(i0 *sesv2.PutDedicatedIpInPoolInput) (r0 *sesv2.PutDedicatedIpInPoolOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("PutDedicatedIpInPool", i0)
	r0, _ = returns[0].(*sesv2.PutDedicatedIpInPoolOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SESV2Double) PutDedicatedIpInPoolRequest(i0 *sesv2.PutDedicatedIpInPoolInput) (r0 *request.Request, r1 *sesv2.PutDedicatedIpInPoolOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("PutDedicatedIpInPoolRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*sesv2.PutDedicatedIpInPoolOutput)
	return
}

func (d *SESV2Double) PutDedicatedIpInPoolWithContext(i0 context.Context, i1 *sesv2.PutDedicatedIpInPoolInput, i2 ...request.Option) (r0 *sesv2.PutDedicatedIpInPoolOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("PutDedicatedIpInPoolWithContext", i0, i1, i2)
	r0, _ = returns[0].(*sesv2.PutDedicatedIpInPoolOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SESV2Double) fakePutDedicatedIpInPoolWithContext(ctx context.Context, in *sesv2.PutDedicatedIpInPoolInput, _ ...request.Option) (*sesv2.PutDedicatedIpInPoolOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "PutDedicatedIpInPool cancelled", ctx.Err())
	default:
		return d.PutDedicatedIpInPool(in)
	}
}

func (d *SESV2Double) PutDedicatedIpWarmupAttributes(i0 *sesv2.PutDedicatedIpWarmupAttributesInput) (r0 *sesv2.PutDedicatedIpWarmupAttributesOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("PutDedicatedIpWarmupAttributes", i0)
	r0, _ = returns[0].(*sesv2.PutDedicatedIpWarmupAttributesOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SESV2Double) PutDedicatedIpWarmupAttributesRequest(i0 *sesv2.PutDedicatedIpWarmupAttributesInput) (r0 *request.Request, r1 *sesv2.PutDedicatedIpWarmupAttributesOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("PutDedicatedIpWarmupAttributesRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*sesv2.PutDedicatedIpWarmupAttributesOutput)
	return
}

func (d *SESV2Double) PutDedicatedIpWarmupAttributesWithContext(i0 context.Context, i1 *sesv2.PutDedicatedIpWarmupAttributesInput, i2 ...request.Option) (r0 *sesv2.PutDedicatedIpWarmupAttributesOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("PutDedicatedIpWarmupAttributesWithContext", i0, i1, i2)
	r0, _ = returns[0].(*sesv2.PutDedicatedIpWarmupAttributesOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SESV2Double) fakePutDedicatedIpWarmupAttributesWithContext(ctx context.Context, in *sesv2.PutDedicatedIpWarmupAttributesInput, _ ...request.Option) (*sesv2.PutDedicatedIpWarmupAttributesOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "PutDedicatedIpWarmupAttributes cancelled", ctx.Err())
	default:
		return d.PutDedicatedIpWarmupAttributes(in)
	}
}

func (d *SESV2Double) PutDeliverabilityDashboardOption(i0 *sesv2.PutDeliverabilityDashboardOptionInput) (r0 *sesv2.PutDeliverabilityDashboardOptionOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("PutDeliverabilityDashboardOption", i0)
	r0, _ = returns[0].(*sesv2.PutDeliverabilityDashboardOptionOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SESV2Double) PutDeliverabilityDashboardOptionRequest(i0 *sesv2.PutDeliverabilityDashboardOptionInput) (r0 *request.Request, r1 *sesv2.PutDeliverabilityDashboardOptionOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("PutDeliverabilityDashboardOptionRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*sesv2.PutDeliverabilityDashboardOptionOutput)
	return
}

func (d *SESV2Double) PutDeliverabilityDashboardOptionWithContext(i0 context.Context, i1 *sesv2.PutDeliverabilityDashboardOptionInput, i2 ...request.Option) (r0 *sesv2.PutDeliverabilityDashboardOptionOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("PutDeliverabilityDashboardOptionWithContext", i0, i1, i2)
	r0, _ = returns[0].(*sesv2.PutDeliverabilityDashboardOptionOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SESV2Double) fakePutDeliverabilityDashboardOptionWithContext(ctx context.Context, in *sesv2.PutDeliverabilityDashboardOptionInput, _ ...request.Option) (*sesv2.PutDeliverabilityDashboardOptionOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "PutDeliverabilityDashboardOption cancelled", ctx.Err())
	default:
		return d.PutDeliverabilityDashboardOption(in)
	}
}

func (d *SESV2Double) PutEmailIdentityDkimAttributes(i0 *sesv2.PutEmailIdentityDkimAttributesInput) (r0 *sesv2.PutEmailIdentityDkimAttributesOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("PutEmailIdentityDkimAttributes", i0)
	r0, _ = returns[0].(*sesv2.PutEmailIdentityDkimAttributesOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SESV2Double) PutEmailIdentityDkimAttributesRequest(i0 *sesv2.PutEmailIdentityDkimAttributesInput) (r0 *request.Request, r1 *sesv2.PutEmailIdentityDkimAttributesOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("PutEmailIdentityDkimAttributesRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*sesv2.PutEmailIdentityDkimAttributesOutput)
	return
}

func (d *SESV2Double) PutEmailIdentityDkimAttributesWithContext(i0 context.Context, i1 *sesv2.PutEmailIdentityDkimAttributesInput, i2 ...request.Option) (r0 *sesv2.PutEmailIdentityDkimAttributesOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("PutEmailIdentityDkimAttributesWithContext", i0, i1, i2)
	r0, _ = returns[0].(*sesv2.PutEmailIdentityDkimAttributesOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SESV2Double) fakePutEmailIdentityDkimAttributesWithContext(ctx context.Context, in *sesv2.PutEmailIdentityDkimAttributesInput, _ ...request.Option) (*sesv2.PutEmailIdentityDkimAttributesOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "PutEmailIdentityDkimAttributes cancelled", ctx.Err())
	default:
		return d.PutEmailIdentityDkimAttributes(in)
	}
}

func (d *SESV2Double) PutEmailIdentityDkimSigningAttributes(i0 *sesv2.PutEmailIdentityDkimSigningAttributesInput) (r0 *sesv2.PutEmailIdentityDkimSigningAttributesOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("PutEmailIdentityDkimSigningAttributes", i0)
	r0, _ = returns[0].(*sesv2.PutEmailIdentityDkimSigningAttributesOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SESV2Double) PutEmailIdentityDkimSigningAttributesRequest(i0 *sesv2.PutEmailIdentityDkimSigningAttributesInput) (r0 *request.Request, r1 *sesv2.PutEmailIdentityDkimSigningAttributesOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("PutEmailIdentityDkimSigningAttributesRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*sesv2.PutEmailIdentityDkimSigningAttributesOutput)
	return
}

func (d *SESV2Double) PutEmailIdentityDkimSigningAttributesWithContext(i0 context.Context, i1 *sesv2.PutEmailIdentityDkimSigningAttributesInput, i2 ...request.Option) (r0 *sesv2.PutEmailIdentityDkimSigningAttributesOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("PutEmailIdentityDkimSigningAttributesWithContext", i0, i1, i2)
	r0, _ = returns[0].(*sesv2.PutEmailIdentityDkimSigningAttributesOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SESV2Double) fakePutEmailIdentityDkimSigningAttributesWithContext(ctx context.Context, in *sesv2.PutEmailIdentityDkimSigningAttributesInput, _ ...request.Option) (*sesv2.PutEmailIdentityDkimSigningAttributesOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "PutEmailIdentityDkimSigningAttributes cancelled", ctx.Err())
	default:
		return d.PutEmailIdentityDkimSigningAttributes(in)
	}
}

func (d *SESV2Double) PutEmailIdentityFeedbackAttributes(i0 *sesv2.PutEmailIdentityFeedbackAttributesInput) (r0 *sesv2.PutEmailIdentityFeedbackAttributesOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("PutEmailIdentityFeedbackAttributes", i0)
	r0, _ = returns[0].(*sesv2.PutEmailIdentityFeedbackAttributesOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SESV2Double) PutEmailIdentityFeedbackAttributesRequest(i0 *sesv2.PutEmailIdentityFeedbackAttributesInput) (r0 *request.Request, r1 *sesv2.PutEmailIdentityFeedbackAttributesOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("PutEmailIdentityFeedbackAttributesRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*sesv2.PutEmailIdentityFeedbackAttributesOutput)
	return
}

func (d *SESV2Double) PutEmailIdentityFeedbackAttributesWithContext(i0 context.Context, i1 *sesv2.PutEmailIdentityFeedbackAttributesInput, i2 ...request.Option) (r0 *sesv2.PutEmailIdentityFeedbackAttributesOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("PutEmailIdentityFeedbackAttributesWithContext", i0, i1, i2)
	r0, _ = returns[0].(*sesv2.PutEmailIdentityFeedbackAttributesOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SESV2Double) fakePutEmailIdentityFeedbackAttributesWithContext(ctx context.Context, in *sesv2.PutEmailIdentityFeedbackAttributesInput, _ ...request.Option) (*sesv2.PutEmailIdentityFeedbackAttributesOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "PutEmailIdentityFeedbackAttributes cancelled", ctx.Err())
	default:
		return d.PutEmailIdentityFeedbackAttributes(in)
	}
}

func (d *SESV2Double) PutEmailIdentityMailFromAttributes(i0 *sesv2.PutEmailIdentityMailFromAttributesInput) (r0 *sesv2.PutEmailIdentityMailFromAttributesOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("PutEmailIdentityMailFromAttributes", i0)
	r0, _ = returns[0].(*sesv2.PutEmailIdentityMailFromAttributesOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SESV2Double) PutEmailIdentityMailFromAttributesRequest(i0 *sesv2.PutEmailIdentityMailFromAttributesInput) (r0 *request.Request, r1 *sesv2.PutEmailIdentityMailFromAttributesOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("PutEmailIdentityMailFromAttributesRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*sesv2.PutEmailIdentityMailFromAttributesOutput)
	return
}

func (d *SESV2Double) PutEmailIdentityMailFromAttributesWithContext(i0 context.Context, i1 *sesv2.PutEmailIdentityMailFromAttributesInput, i2 ...request.Option) (r0 *sesv2.PutEmailIdentityMailFromAttributesOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("PutEmailIdentityMailFromAttributesWithContext", i0, i1, i2)
	r0, _ = returns[0].(*sesv2.PutEmailIdentityMailFromAttributesOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SESV2Double) fakePutEmailIdentityMailFromAttributesWithContext(ctx context.Context, in *sesv2.PutEmailIdentityMailFromAttributesInput, _ ...request.Option) (*sesv2.PutEmailIdentityMailFromAttributesOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "PutEmailIdentityMailFromAttributes cancelled", ctx.Err())
	default:
		return d.PutEmailIdentityMailFromAttributes(in)
	}
}

func (d *SESV2Double) PutSuppressedDestination(i0 *sesv2.PutSuppressedDestinationInput) (r0 *sesv2.PutSuppressedDestinationOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("PutSuppressedDestination", i0)
	r0, _ = returns[0].(*sesv2.PutSuppressedDestinationOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SESV2Double) PutSuppressedDestinationRequest(i0 *sesv2.PutSuppressedDestinationInput) (r0 *request.Request, r1 *sesv2.PutSuppressedDestinationOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("PutSuppressedDestinationRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*sesv2.PutSuppressedDestinationOutput)
	return
}

func (d *SESV2Double) PutSuppressedDestinationWithContext(i0 context.Context, i1 *sesv2.PutSuppressedDestinationInput, i2 ...request.Option) (r0 *sesv2.PutSuppressedDestinationOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("PutSuppressedDestinationWithContext", i0, i1, i2)
	r0, _ = returns[0].(*sesv2.PutSuppressedDestinationOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SESV2Double) fakePutSuppressedDestinationWithContext(ctx context.Context, in *sesv2.PutSuppressedDestinationInput, _ ...request.Option) (*sesv2.PutSuppressedDestinationOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "PutSuppressedDestination cancelled", ctx.Err())
	default:
		return d.PutSuppressedDestination(in)
	}
}

func (d *SESV2Double) SendEmail(i0 *sesv2.SendEmailInput) (r0 *sesv2.SendEmailOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("SendEmail", i0)
	r0, _ = returns[0].(*sesv2.SendEmailOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SESV2Double) SendEmailRequest(i0 *sesv2.SendEmailInput) (r0 *request.Request, r1 *sesv2.SendEmailOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("SendEmailRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*sesv2.SendEmailOutput)
	return
}

func (d *SESV2Double) SendEmailWithContext(i0 context.Context, i1 *sesv2.SendEmailInput, i2 ...request.Option) (r0 *sesv2.SendEmailOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("SendEmailWithContext", i0, i1, i2)
	r0, _ = returns[0].(*sesv2.SendEmailOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SESV2Double) fakeSendEmailWithContext(ctx context.Context, in *sesv2.SendEmailInput, _ ...request.Option) (*sesv2.SendEmailOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "SendEmail cancelled", ctx.Err())
	default:
		return d.SendEmail(in)
	}
}

func (d *SESV2Double) TagResource(i0 *sesv2.TagResourceInput) (r0 *sesv2.TagResourceOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("TagResource", i0)
	r0, _ = returns[0].(*sesv2.TagResourceOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SESV2Double) TagResourceRequest(i0 *sesv2.TagResourceInput) (r0 *request.Request, r1 *sesv2.TagResourceOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("TagResourceRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*sesv2.TagResourceOutput)
	return
}

func (d *SESV2Double) TagResourceWithContext(i0 context.Context, i1 *sesv2.TagResourceInput, i2 ...request.Option) (r0 *sesv2.TagResourceOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("TagResourceWithContext", i0, i1, i2)
	r0, _ = returns[0].(*sesv2.TagResourceOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SESV2Double) fakeTagResourceWithContext(ctx context.Context, in *sesv2.TagResourceInput, _ ...request.Option) (*sesv2.TagResourceOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "TagResource cancelled", ctx.Err())
	default:
		return d.TagResource(in)
	}
}

func (d *SESV2Double) UntagResource(i0 *sesv2.UntagResourceInput) (r0 *sesv2.UntagResourceOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UntagResource", i0)
	r0, _ = returns[0].(*sesv2.UntagResourceOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SESV2Double) UntagResourceRequest(i0 *sesv2.UntagResourceInput) (r0 *request.Request, r1 *sesv2.UntagResourceOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UntagResourceRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*sesv2.UntagResourceOutput)
	return
}

func (d *SESV2Double) UntagResourceWithContext(i0 context.Context, i1 *sesv2.UntagResourceInput, i2 ...request.Option) (r0 *sesv2.UntagResourceOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UntagResourceWithContext", i0, i1, i2)
	r0, _ = returns[0].(*sesv2.UntagResourceOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SESV2Double) fakeUntagResourceWithContext(ctx context.Context, in *sesv2.UntagResourceInput, _ ...request.Option) (*sesv2.UntagResourceOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "UntagResource cancelled", ctx.Err())
	default:
		return d.UntagResource(in)
	}
}

func (d *SESV2Double) UpdateConfigurationSetEventDestination(i0 *sesv2.UpdateConfigurationSetEventDestinationInput) (r0 *sesv2.UpdateConfigurationSetEventDestinationOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UpdateConfigurationSetEventDestination", i0)
	r0, _ = returns[0].(*sesv2.UpdateConfigurationSetEventDestinationOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SESV2Double) UpdateConfigurationSetEventDestinationRequest(i0 *sesv2.UpdateConfigurationSetEventDestinationInput) (r0 *request.Request, r1 *sesv2.UpdateConfigurationSetEventDestinationOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UpdateConfigurationSetEventDestinationRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*sesv2.UpdateConfigurationSetEventDestinationOutput)
	return
}

func (d *SESV2Double) UpdateConfigurationSetEventDestinationWithContext(i0 context.Context, i1 *sesv2.UpdateConfigurationSetEventDestinationInput, i2 ...request.Option) (r0 *sesv2.UpdateConfigurationSetEventDestinationOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UpdateConfigurationSetEventDestinationWithContext", i0, i1, i2)
	r0, _ = returns[0].(*sesv2.UpdateConfigurationSetEventDestinationOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *SESV2Double) fakeUpdateConfigurationSetEventDestinationWithContext(ctx context.Context, in *sesv2.UpdateConfigurationSetEventDestinationInput, _ ...request.Option) (*sesv2.UpdateConfigurationSetEventDestinationOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "UpdateConfigurationSetEventDestination cancelled", ctx.Err())
	default:
		return d.UpdateConfigurationSetEventDestination(in)
	}
}
