// Code generated by go doublegen; DO NOT EDIT.
// This file was generated at 2020-02-14T22:14:23+11:00

// Package pinpointemaildouble provides a TestDouble implementation of pinpointemailiface.PinpointEmailAPI
package pinpointemaildouble

import (
	"context"

	"github.com/aws/aws-sdk-go/aws/awserr"
	"github.com/aws/aws-sdk-go/aws/request"
	"github.com/aws/aws-sdk-go/service/pinpointemail"
	"github.com/aws/aws-sdk-go/service/pinpointemail/pinpointemailiface"
	"github.com/lwoggardner/awsdouble"
	"github.com/lwoggardner/godouble/godouble"
)

// PinpointEmailDouble is TestDouble for pinpointemailiface.PinpointEmailAPI
type PinpointEmailDouble struct {
	pinpointemailiface.PinpointEmailAPI
	*awsdouble.AWSTestDouble
}

// Constructor for PinpointEmailDouble
// Default configuration will ensure
//   * API operations not explicitly stubbed will return an empty output struct pointer, and nil error.
//     To simulate long polling, "Poll" operations will return these values after a random delay of up to 100ms.
//   * WithContext methods implement a 'Fake' method that returns a cancellation error if the context is cancelled
//      before the method is called.
//   * Pages and PagesWithContext methods similarly implement a 'Fake' method that paginates over the underlying method.
//
//    This allows tests to only stub the simple api methods and be generally unconcerned whether the SUT is using the
//      Context or Pagination forms of the API.
//
func NewDouble(t godouble.T, configurators ...func(*awsdouble.AWSTestDouble)) *PinpointEmailDouble {
	result := &PinpointEmailDouble{}

	configurators = append([]func(configurator *awsdouble.AWSTestDouble){func(d *awsdouble.AWSTestDouble) {
		d.SetDefaultCall(result.defaultMethodCall)
		d.SetDefaultReturnValues(result.defaultReturnValues)
	}}, configurators...)

	result.AWSTestDouble = awsdouble.NewDouble(t, (*pinpointemailiface.PinpointEmailAPI)(nil), configurators...)
	return result
}

func (d *PinpointEmailDouble) defaultReturnValues(m godouble.Method) godouble.ReturnValues {
	return d.DefaultReturnValues(m)
}

func (d *PinpointEmailDouble) defaultMethodCall(m godouble.Method) godouble.MethodCall {
	switch m.Reflect().Name {

	case "CreateConfigurationSetEventDestinationWithContext":
		return m.Fake(d.fakeCreateConfigurationSetEventDestinationWithContext)

	case "CreateConfigurationSetWithContext":
		return m.Fake(d.fakeCreateConfigurationSetWithContext)

	case "CreateDedicatedIpPoolWithContext":
		return m.Fake(d.fakeCreateDedicatedIpPoolWithContext)

	case "CreateDeliverabilityTestReportWithContext":
		return m.Fake(d.fakeCreateDeliverabilityTestReportWithContext)

	case "CreateEmailIdentityWithContext":
		return m.Fake(d.fakeCreateEmailIdentityWithContext)

	case "DeleteConfigurationSetEventDestinationWithContext":
		return m.Fake(d.fakeDeleteConfigurationSetEventDestinationWithContext)

	case "DeleteConfigurationSetWithContext":
		return m.Fake(d.fakeDeleteConfigurationSetWithContext)

	case "DeleteDedicatedIpPoolWithContext":
		return m.Fake(d.fakeDeleteDedicatedIpPoolWithContext)

	case "DeleteEmailIdentityWithContext":
		return m.Fake(d.fakeDeleteEmailIdentityWithContext)

	case "GetAccountWithContext":
		return m.Fake(d.fakeGetAccountWithContext)

	case "GetBlacklistReportsWithContext":
		return m.Fake(d.fakeGetBlacklistReportsWithContext)

	case "GetConfigurationSetEventDestinationsWithContext":
		return m.Fake(d.fakeGetConfigurationSetEventDestinationsWithContext)

	case "GetConfigurationSetWithContext":
		return m.Fake(d.fakeGetConfigurationSetWithContext)

	case "GetDedicatedIpWithContext":
		return m.Fake(d.fakeGetDedicatedIpWithContext)

	case "GetDedicatedIpsPages":
		return m.Fake(d.fakeGetDedicatedIpsPages)

	case "GetDedicatedIpsPagesWithContext":
		return m.Fake(d.fakeGetDedicatedIpsPagesWithContext)

	case "GetDedicatedIpsWithContext":
		return m.Fake(d.fakeGetDedicatedIpsWithContext)

	case "GetDeliverabilityDashboardOptionsWithContext":
		return m.Fake(d.fakeGetDeliverabilityDashboardOptionsWithContext)

	case "GetDeliverabilityTestReportWithContext":
		return m.Fake(d.fakeGetDeliverabilityTestReportWithContext)

	case "GetDomainDeliverabilityCampaignWithContext":
		return m.Fake(d.fakeGetDomainDeliverabilityCampaignWithContext)

	case "GetDomainStatisticsReportWithContext":
		return m.Fake(d.fakeGetDomainStatisticsReportWithContext)

	case "GetEmailIdentityWithContext":
		return m.Fake(d.fakeGetEmailIdentityWithContext)

	case "ListConfigurationSetsPages":
		return m.Fake(d.fakeListConfigurationSetsPages)

	case "ListConfigurationSetsPagesWithContext":
		return m.Fake(d.fakeListConfigurationSetsPagesWithContext)

	case "ListConfigurationSetsWithContext":
		return m.Fake(d.fakeListConfigurationSetsWithContext)

	case "ListDedicatedIpPoolsPages":
		return m.Fake(d.fakeListDedicatedIpPoolsPages)

	case "ListDedicatedIpPoolsPagesWithContext":
		return m.Fake(d.fakeListDedicatedIpPoolsPagesWithContext)

	case "ListDedicatedIpPoolsWithContext":
		return m.Fake(d.fakeListDedicatedIpPoolsWithContext)

	case "ListDeliverabilityTestReportsPages":
		return m.Fake(d.fakeListDeliverabilityTestReportsPages)

	case "ListDeliverabilityTestReportsPagesWithContext":
		return m.Fake(d.fakeListDeliverabilityTestReportsPagesWithContext)

	case "ListDeliverabilityTestReportsWithContext":
		return m.Fake(d.fakeListDeliverabilityTestReportsWithContext)

	case "ListDomainDeliverabilityCampaignsPages":
		return m.Fake(d.fakeListDomainDeliverabilityCampaignsPages)

	case "ListDomainDeliverabilityCampaignsPagesWithContext":
		return m.Fake(d.fakeListDomainDeliverabilityCampaignsPagesWithContext)

	case "ListDomainDeliverabilityCampaignsWithContext":
		return m.Fake(d.fakeListDomainDeliverabilityCampaignsWithContext)

	case "ListEmailIdentitiesPages":
		return m.Fake(d.fakeListEmailIdentitiesPages)

	case "ListEmailIdentitiesPagesWithContext":
		return m.Fake(d.fakeListEmailIdentitiesPagesWithContext)

	case "ListEmailIdentitiesWithContext":
		return m.Fake(d.fakeListEmailIdentitiesWithContext)

	case "ListTagsForResourceWithContext":
		return m.Fake(d.fakeListTagsForResourceWithContext)

	case "PutAccountDedicatedIpWarmupAttributesWithContext":
		return m.Fake(d.fakePutAccountDedicatedIpWarmupAttributesWithContext)

	case "PutAccountSendingAttributesWithContext":
		return m.Fake(d.fakePutAccountSendingAttributesWithContext)

	case "PutConfigurationSetDeliveryOptionsWithContext":
		return m.Fake(d.fakePutConfigurationSetDeliveryOptionsWithContext)

	case "PutConfigurationSetReputationOptionsWithContext":
		return m.Fake(d.fakePutConfigurationSetReputationOptionsWithContext)

	case "PutConfigurationSetSendingOptionsWithContext":
		return m.Fake(d.fakePutConfigurationSetSendingOptionsWithContext)

	case "PutConfigurationSetTrackingOptionsWithContext":
		return m.Fake(d.fakePutConfigurationSetTrackingOptionsWithContext)

	case "PutDedicatedIpInPoolWithContext":
		return m.Fake(d.fakePutDedicatedIpInPoolWithContext)

	case "PutDedicatedIpWarmupAttributesWithContext":
		return m.Fake(d.fakePutDedicatedIpWarmupAttributesWithContext)

	case "PutDeliverabilityDashboardOptionWithContext":
		return m.Fake(d.fakePutDeliverabilityDashboardOptionWithContext)

	case "PutEmailIdentityDkimAttributesWithContext":
		return m.Fake(d.fakePutEmailIdentityDkimAttributesWithContext)

	case "PutEmailIdentityFeedbackAttributesWithContext":
		return m.Fake(d.fakePutEmailIdentityFeedbackAttributesWithContext)

	case "PutEmailIdentityMailFromAttributesWithContext":
		return m.Fake(d.fakePutEmailIdentityMailFromAttributesWithContext)

	case "SendEmailWithContext":
		return m.Fake(d.fakeSendEmailWithContext)

	case "TagResourceWithContext":
		return m.Fake(d.fakeTagResourceWithContext)

	case "UntagResourceWithContext":
		return m.Fake(d.fakeUntagResourceWithContext)

	case "UpdateConfigurationSetEventDestinationWithContext":
		return m.Fake(d.fakeUpdateConfigurationSetEventDestinationWithContext)

	default:
		return nil
	}
}

func (d *PinpointEmailDouble) CreateConfigurationSet(i0 *pinpointemail.CreateConfigurationSetInput) (r0 *pinpointemail.CreateConfigurationSetOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreateConfigurationSet", i0)
	r0, _ = returns[0].(*pinpointemail.CreateConfigurationSetOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointEmailDouble) CreateConfigurationSetEventDestination(i0 *pinpointemail.CreateConfigurationSetEventDestinationInput) (r0 *pinpointemail.CreateConfigurationSetEventDestinationOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreateConfigurationSetEventDestination", i0)
	r0, _ = returns[0].(*pinpointemail.CreateConfigurationSetEventDestinationOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointEmailDouble) CreateConfigurationSetEventDestinationRequest(i0 *pinpointemail.CreateConfigurationSetEventDestinationInput) (r0 *request.Request, r1 *pinpointemail.CreateConfigurationSetEventDestinationOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreateConfigurationSetEventDestinationRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*pinpointemail.CreateConfigurationSetEventDestinationOutput)
	return
}

func (d *PinpointEmailDouble) CreateConfigurationSetEventDestinationWithContext(i0 context.Context, i1 *pinpointemail.CreateConfigurationSetEventDestinationInput, i2 ...request.Option) (r0 *pinpointemail.CreateConfigurationSetEventDestinationOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreateConfigurationSetEventDestinationWithContext", i0, i1, i2)
	r0, _ = returns[0].(*pinpointemail.CreateConfigurationSetEventDestinationOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointEmailDouble) fakeCreateConfigurationSetEventDestinationWithContext(ctx context.Context, in *pinpointemail.CreateConfigurationSetEventDestinationInput, _ ...request.Option) (*pinpointemail.CreateConfigurationSetEventDestinationOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "CreateConfigurationSetEventDestination cancelled", ctx.Err())
	default:
		return d.CreateConfigurationSetEventDestination(in)
	}
}

func (d *PinpointEmailDouble) CreateConfigurationSetRequest(i0 *pinpointemail.CreateConfigurationSetInput) (r0 *request.Request, r1 *pinpointemail.CreateConfigurationSetOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreateConfigurationSetRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*pinpointemail.CreateConfigurationSetOutput)
	return
}

func (d *PinpointEmailDouble) CreateConfigurationSetWithContext(i0 context.Context, i1 *pinpointemail.CreateConfigurationSetInput, i2 ...request.Option) (r0 *pinpointemail.CreateConfigurationSetOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreateConfigurationSetWithContext", i0, i1, i2)
	r0, _ = returns[0].(*pinpointemail.CreateConfigurationSetOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointEmailDouble) fakeCreateConfigurationSetWithContext(ctx context.Context, in *pinpointemail.CreateConfigurationSetInput, _ ...request.Option) (*pinpointemail.CreateConfigurationSetOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "CreateConfigurationSet cancelled", ctx.Err())
	default:
		return d.CreateConfigurationSet(in)
	}
}

func (d *PinpointEmailDouble) CreateDedicatedIpPool(i0 *pinpointemail.CreateDedicatedIpPoolInput) (r0 *pinpointemail.CreateDedicatedIpPoolOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreateDedicatedIpPool", i0)
	r0, _ = returns[0].(*pinpointemail.CreateDedicatedIpPoolOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointEmailDouble) CreateDedicatedIpPoolRequest(i0 *pinpointemail.CreateDedicatedIpPoolInput) (r0 *request.Request, r1 *pinpointemail.CreateDedicatedIpPoolOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreateDedicatedIpPoolRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*pinpointemail.CreateDedicatedIpPoolOutput)
	return
}

func (d *PinpointEmailDouble) CreateDedicatedIpPoolWithContext(i0 context.Context, i1 *pinpointemail.CreateDedicatedIpPoolInput, i2 ...request.Option) (r0 *pinpointemail.CreateDedicatedIpPoolOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreateDedicatedIpPoolWithContext", i0, i1, i2)
	r0, _ = returns[0].(*pinpointemail.CreateDedicatedIpPoolOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointEmailDouble) fakeCreateDedicatedIpPoolWithContext(ctx context.Context, in *pinpointemail.CreateDedicatedIpPoolInput, _ ...request.Option) (*pinpointemail.CreateDedicatedIpPoolOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "CreateDedicatedIpPool cancelled", ctx.Err())
	default:
		return d.CreateDedicatedIpPool(in)
	}
}

func (d *PinpointEmailDouble) CreateDeliverabilityTestReport(i0 *pinpointemail.CreateDeliverabilityTestReportInput) (r0 *pinpointemail.CreateDeliverabilityTestReportOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreateDeliverabilityTestReport", i0)
	r0, _ = returns[0].(*pinpointemail.CreateDeliverabilityTestReportOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointEmailDouble) CreateDeliverabilityTestReportRequest(i0 *pinpointemail.CreateDeliverabilityTestReportInput) (r0 *request.Request, r1 *pinpointemail.CreateDeliverabilityTestReportOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreateDeliverabilityTestReportRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*pinpointemail.CreateDeliverabilityTestReportOutput)
	return
}

func (d *PinpointEmailDouble) CreateDeliverabilityTestReportWithContext(i0 context.Context, i1 *pinpointemail.CreateDeliverabilityTestReportInput, i2 ...request.Option) (r0 *pinpointemail.CreateDeliverabilityTestReportOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreateDeliverabilityTestReportWithContext", i0, i1, i2)
	r0, _ = returns[0].(*pinpointemail.CreateDeliverabilityTestReportOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointEmailDouble) fakeCreateDeliverabilityTestReportWithContext(ctx context.Context, in *pinpointemail.CreateDeliverabilityTestReportInput, _ ...request.Option) (*pinpointemail.CreateDeliverabilityTestReportOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "CreateDeliverabilityTestReport cancelled", ctx.Err())
	default:
		return d.CreateDeliverabilityTestReport(in)
	}
}

func (d *PinpointEmailDouble) CreateEmailIdentity(i0 *pinpointemail.CreateEmailIdentityInput) (r0 *pinpointemail.CreateEmailIdentityOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreateEmailIdentity", i0)
	r0, _ = returns[0].(*pinpointemail.CreateEmailIdentityOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointEmailDouble) CreateEmailIdentityRequest(i0 *pinpointemail.CreateEmailIdentityInput) (r0 *request.Request, r1 *pinpointemail.CreateEmailIdentityOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreateEmailIdentityRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*pinpointemail.CreateEmailIdentityOutput)
	return
}

func (d *PinpointEmailDouble) CreateEmailIdentityWithContext(i0 context.Context, i1 *pinpointemail.CreateEmailIdentityInput, i2 ...request.Option) (r0 *pinpointemail.CreateEmailIdentityOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreateEmailIdentityWithContext", i0, i1, i2)
	r0, _ = returns[0].(*pinpointemail.CreateEmailIdentityOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointEmailDouble) fakeCreateEmailIdentityWithContext(ctx context.Context, in *pinpointemail.CreateEmailIdentityInput, _ ...request.Option) (*pinpointemail.CreateEmailIdentityOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "CreateEmailIdentity cancelled", ctx.Err())
	default:
		return d.CreateEmailIdentity(in)
	}
}

func (d *PinpointEmailDouble) DeleteConfigurationSet(i0 *pinpointemail.DeleteConfigurationSetInput) (r0 *pinpointemail.DeleteConfigurationSetOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteConfigurationSet", i0)
	r0, _ = returns[0].(*pinpointemail.DeleteConfigurationSetOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointEmailDouble) DeleteConfigurationSetEventDestination(i0 *pinpointemail.DeleteConfigurationSetEventDestinationInput) (r0 *pinpointemail.DeleteConfigurationSetEventDestinationOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteConfigurationSetEventDestination", i0)
	r0, _ = returns[0].(*pinpointemail.DeleteConfigurationSetEventDestinationOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointEmailDouble) DeleteConfigurationSetEventDestinationRequest(i0 *pinpointemail.DeleteConfigurationSetEventDestinationInput) (r0 *request.Request, r1 *pinpointemail.DeleteConfigurationSetEventDestinationOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteConfigurationSetEventDestinationRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*pinpointemail.DeleteConfigurationSetEventDestinationOutput)
	return
}

func (d *PinpointEmailDouble) DeleteConfigurationSetEventDestinationWithContext(i0 context.Context, i1 *pinpointemail.DeleteConfigurationSetEventDestinationInput, i2 ...request.Option) (r0 *pinpointemail.DeleteConfigurationSetEventDestinationOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteConfigurationSetEventDestinationWithContext", i0, i1, i2)
	r0, _ = returns[0].(*pinpointemail.DeleteConfigurationSetEventDestinationOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointEmailDouble) fakeDeleteConfigurationSetEventDestinationWithContext(ctx context.Context, in *pinpointemail.DeleteConfigurationSetEventDestinationInput, _ ...request.Option) (*pinpointemail.DeleteConfigurationSetEventDestinationOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "DeleteConfigurationSetEventDestination cancelled", ctx.Err())
	default:
		return d.DeleteConfigurationSetEventDestination(in)
	}
}

func (d *PinpointEmailDouble) DeleteConfigurationSetRequest(i0 *pinpointemail.DeleteConfigurationSetInput) (r0 *request.Request, r1 *pinpointemail.DeleteConfigurationSetOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteConfigurationSetRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*pinpointemail.DeleteConfigurationSetOutput)
	return
}

func (d *PinpointEmailDouble) DeleteConfigurationSetWithContext(i0 context.Context, i1 *pinpointemail.DeleteConfigurationSetInput, i2 ...request.Option) (r0 *pinpointemail.DeleteConfigurationSetOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteConfigurationSetWithContext", i0, i1, i2)
	r0, _ = returns[0].(*pinpointemail.DeleteConfigurationSetOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointEmailDouble) fakeDeleteConfigurationSetWithContext(ctx context.Context, in *pinpointemail.DeleteConfigurationSetInput, _ ...request.Option) (*pinpointemail.DeleteConfigurationSetOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "DeleteConfigurationSet cancelled", ctx.Err())
	default:
		return d.DeleteConfigurationSet(in)
	}
}

func (d *PinpointEmailDouble) DeleteDedicatedIpPool(i0 *pinpointemail.DeleteDedicatedIpPoolInput) (r0 *pinpointemail.DeleteDedicatedIpPoolOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteDedicatedIpPool", i0)
	r0, _ = returns[0].(*pinpointemail.DeleteDedicatedIpPoolOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointEmailDouble) DeleteDedicatedIpPoolRequest(i0 *pinpointemail.DeleteDedicatedIpPoolInput) (r0 *request.Request, r1 *pinpointemail.DeleteDedicatedIpPoolOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteDedicatedIpPoolRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*pinpointemail.DeleteDedicatedIpPoolOutput)
	return
}

func (d *PinpointEmailDouble) DeleteDedicatedIpPoolWithContext(i0 context.Context, i1 *pinpointemail.DeleteDedicatedIpPoolInput, i2 ...request.Option) (r0 *pinpointemail.DeleteDedicatedIpPoolOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteDedicatedIpPoolWithContext", i0, i1, i2)
	r0, _ = returns[0].(*pinpointemail.DeleteDedicatedIpPoolOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointEmailDouble) fakeDeleteDedicatedIpPoolWithContext(ctx context.Context, in *pinpointemail.DeleteDedicatedIpPoolInput, _ ...request.Option) (*pinpointemail.DeleteDedicatedIpPoolOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "DeleteDedicatedIpPool cancelled", ctx.Err())
	default:
		return d.DeleteDedicatedIpPool(in)
	}
}

func (d *PinpointEmailDouble) DeleteEmailIdentity(i0 *pinpointemail.DeleteEmailIdentityInput) (r0 *pinpointemail.DeleteEmailIdentityOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteEmailIdentity", i0)
	r0, _ = returns[0].(*pinpointemail.DeleteEmailIdentityOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointEmailDouble) DeleteEmailIdentityRequest(i0 *pinpointemail.DeleteEmailIdentityInput) (r0 *request.Request, r1 *pinpointemail.DeleteEmailIdentityOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteEmailIdentityRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*pinpointemail.DeleteEmailIdentityOutput)
	return
}

func (d *PinpointEmailDouble) DeleteEmailIdentityWithContext(i0 context.Context, i1 *pinpointemail.DeleteEmailIdentityInput, i2 ...request.Option) (r0 *pinpointemail.DeleteEmailIdentityOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteEmailIdentityWithContext", i0, i1, i2)
	r0, _ = returns[0].(*pinpointemail.DeleteEmailIdentityOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointEmailDouble) fakeDeleteEmailIdentityWithContext(ctx context.Context, in *pinpointemail.DeleteEmailIdentityInput, _ ...request.Option) (*pinpointemail.DeleteEmailIdentityOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "DeleteEmailIdentity cancelled", ctx.Err())
	default:
		return d.DeleteEmailIdentity(in)
	}
}

func (d *PinpointEmailDouble) GetAccount(i0 *pinpointemail.GetAccountInput) (r0 *pinpointemail.GetAccountOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetAccount", i0)
	r0, _ = returns[0].(*pinpointemail.GetAccountOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointEmailDouble) GetAccountRequest(i0 *pinpointemail.GetAccountInput) (r0 *request.Request, r1 *pinpointemail.GetAccountOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetAccountRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*pinpointemail.GetAccountOutput)
	return
}

func (d *PinpointEmailDouble) GetAccountWithContext(i0 context.Context, i1 *pinpointemail.GetAccountInput, i2 ...request.Option) (r0 *pinpointemail.GetAccountOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetAccountWithContext", i0, i1, i2)
	r0, _ = returns[0].(*pinpointemail.GetAccountOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointEmailDouble) fakeGetAccountWithContext(ctx context.Context, in *pinpointemail.GetAccountInput, _ ...request.Option) (*pinpointemail.GetAccountOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "GetAccount cancelled", ctx.Err())
	default:
		return d.GetAccount(in)
	}
}

func (d *PinpointEmailDouble) GetBlacklistReports(i0 *pinpointemail.GetBlacklistReportsInput) (r0 *pinpointemail.GetBlacklistReportsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetBlacklistReports", i0)
	r0, _ = returns[0].(*pinpointemail.GetBlacklistReportsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointEmailDouble) GetBlacklistReportsRequest(i0 *pinpointemail.GetBlacklistReportsInput) (r0 *request.Request, r1 *pinpointemail.GetBlacklistReportsOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetBlacklistReportsRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*pinpointemail.GetBlacklistReportsOutput)
	return
}

func (d *PinpointEmailDouble) GetBlacklistReportsWithContext(i0 context.Context, i1 *pinpointemail.GetBlacklistReportsInput, i2 ...request.Option) (r0 *pinpointemail.GetBlacklistReportsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetBlacklistReportsWithContext", i0, i1, i2)
	r0, _ = returns[0].(*pinpointemail.GetBlacklistReportsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointEmailDouble) fakeGetBlacklistReportsWithContext(ctx context.Context, in *pinpointemail.GetBlacklistReportsInput, _ ...request.Option) (*pinpointemail.GetBlacklistReportsOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "GetBlacklistReports cancelled", ctx.Err())
	default:
		return d.GetBlacklistReports(in)
	}
}

func (d *PinpointEmailDouble) GetConfigurationSet(i0 *pinpointemail.GetConfigurationSetInput) (r0 *pinpointemail.GetConfigurationSetOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetConfigurationSet", i0)
	r0, _ = returns[0].(*pinpointemail.GetConfigurationSetOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointEmailDouble) GetConfigurationSetEventDestinations(i0 *pinpointemail.GetConfigurationSetEventDestinationsInput) (r0 *pinpointemail.GetConfigurationSetEventDestinationsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetConfigurationSetEventDestinations", i0)
	r0, _ = returns[0].(*pinpointemail.GetConfigurationSetEventDestinationsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointEmailDouble) GetConfigurationSetEventDestinationsRequest(i0 *pinpointemail.GetConfigurationSetEventDestinationsInput) (r0 *request.Request, r1 *pinpointemail.GetConfigurationSetEventDestinationsOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetConfigurationSetEventDestinationsRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*pinpointemail.GetConfigurationSetEventDestinationsOutput)
	return
}

func (d *PinpointEmailDouble) GetConfigurationSetEventDestinationsWithContext(i0 context.Context, i1 *pinpointemail.GetConfigurationSetEventDestinationsInput, i2 ...request.Option) (r0 *pinpointemail.GetConfigurationSetEventDestinationsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetConfigurationSetEventDestinationsWithContext", i0, i1, i2)
	r0, _ = returns[0].(*pinpointemail.GetConfigurationSetEventDestinationsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointEmailDouble) fakeGetConfigurationSetEventDestinationsWithContext(ctx context.Context, in *pinpointemail.GetConfigurationSetEventDestinationsInput, _ ...request.Option) (*pinpointemail.GetConfigurationSetEventDestinationsOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "GetConfigurationSetEventDestinations cancelled", ctx.Err())
	default:
		return d.GetConfigurationSetEventDestinations(in)
	}
}

func (d *PinpointEmailDouble) GetConfigurationSetRequest(i0 *pinpointemail.GetConfigurationSetInput) (r0 *request.Request, r1 *pinpointemail.GetConfigurationSetOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetConfigurationSetRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*pinpointemail.GetConfigurationSetOutput)
	return
}

func (d *PinpointEmailDouble) GetConfigurationSetWithContext(i0 context.Context, i1 *pinpointemail.GetConfigurationSetInput, i2 ...request.Option) (r0 *pinpointemail.GetConfigurationSetOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetConfigurationSetWithContext", i0, i1, i2)
	r0, _ = returns[0].(*pinpointemail.GetConfigurationSetOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointEmailDouble) fakeGetConfigurationSetWithContext(ctx context.Context, in *pinpointemail.GetConfigurationSetInput, _ ...request.Option) (*pinpointemail.GetConfigurationSetOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "GetConfigurationSet cancelled", ctx.Err())
	default:
		return d.GetConfigurationSet(in)
	}
}

func (d *PinpointEmailDouble) GetDedicatedIp(i0 *pinpointemail.GetDedicatedIpInput) (r0 *pinpointemail.GetDedicatedIpOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetDedicatedIp", i0)
	r0, _ = returns[0].(*pinpointemail.GetDedicatedIpOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointEmailDouble) GetDedicatedIpRequest(i0 *pinpointemail.GetDedicatedIpInput) (r0 *request.Request, r1 *pinpointemail.GetDedicatedIpOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetDedicatedIpRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*pinpointemail.GetDedicatedIpOutput)
	return
}

func (d *PinpointEmailDouble) GetDedicatedIpWithContext(i0 context.Context, i1 *pinpointemail.GetDedicatedIpInput, i2 ...request.Option) (r0 *pinpointemail.GetDedicatedIpOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetDedicatedIpWithContext", i0, i1, i2)
	r0, _ = returns[0].(*pinpointemail.GetDedicatedIpOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointEmailDouble) fakeGetDedicatedIpWithContext(ctx context.Context, in *pinpointemail.GetDedicatedIpInput, _ ...request.Option) (*pinpointemail.GetDedicatedIpOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "GetDedicatedIp cancelled", ctx.Err())
	default:
		return d.GetDedicatedIp(in)
	}
}

func (d *PinpointEmailDouble) GetDedicatedIps(i0 *pinpointemail.GetDedicatedIpsInput) (r0 *pinpointemail.GetDedicatedIpsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetDedicatedIps", i0)
	r0, _ = returns[0].(*pinpointemail.GetDedicatedIpsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointEmailDouble) GetDedicatedIpsPages(i0 *pinpointemail.GetDedicatedIpsInput, i1 func(*pinpointemail.GetDedicatedIpsOutput, bool) bool) (r0 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetDedicatedIpsPages", i0, i1)
	r0, _ = returns[0].(error)
	return
}

func (d *PinpointEmailDouble) fakeGetDedicatedIpsPages(in *pinpointemail.GetDedicatedIpsInput, pager func(*pinpointemail.GetDedicatedIpsOutput, bool) (shouldContinue bool)) error {
	return d.Paginate("GetDedicatedIps", paginators, in, pager)
}

func (d *PinpointEmailDouble) GetDedicatedIpsPagesWithContext(i0 context.Context, i1 *pinpointemail.GetDedicatedIpsInput, i2 func(*pinpointemail.GetDedicatedIpsOutput, bool) bool, i3 ...request.Option) (r0 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetDedicatedIpsPagesWithContext", i0, i1, i2, i3)
	r0, _ = returns[0].(error)
	return
}

func (d *PinpointEmailDouble) fakeGetDedicatedIpsPagesWithContext(ctx context.Context, in *pinpointemail.GetDedicatedIpsInput, pager func(*pinpointemail.GetDedicatedIpsOutput, bool) (shouldContinue bool), options ...request.Option) error {
	return d.PaginateWithContext("GetDedicatedIps", paginators, ctx, in, pager, options...)
}

func (d *PinpointEmailDouble) GetDedicatedIpsRequest(i0 *pinpointemail.GetDedicatedIpsInput) (r0 *request.Request, r1 *pinpointemail.GetDedicatedIpsOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetDedicatedIpsRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*pinpointemail.GetDedicatedIpsOutput)
	return
}

func (d *PinpointEmailDouble) GetDedicatedIpsWithContext(i0 context.Context, i1 *pinpointemail.GetDedicatedIpsInput, i2 ...request.Option) (r0 *pinpointemail.GetDedicatedIpsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetDedicatedIpsWithContext", i0, i1, i2)
	r0, _ = returns[0].(*pinpointemail.GetDedicatedIpsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointEmailDouble) fakeGetDedicatedIpsWithContext(ctx context.Context, in *pinpointemail.GetDedicatedIpsInput, _ ...request.Option) (*pinpointemail.GetDedicatedIpsOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "GetDedicatedIps cancelled", ctx.Err())
	default:
		return d.GetDedicatedIps(in)
	}
}

func (d *PinpointEmailDouble) GetDeliverabilityDashboardOptions(i0 *pinpointemail.GetDeliverabilityDashboardOptionsInput) (r0 *pinpointemail.GetDeliverabilityDashboardOptionsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetDeliverabilityDashboardOptions", i0)
	r0, _ = returns[0].(*pinpointemail.GetDeliverabilityDashboardOptionsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointEmailDouble) GetDeliverabilityDashboardOptionsRequest(i0 *pinpointemail.GetDeliverabilityDashboardOptionsInput) (r0 *request.Request, r1 *pinpointemail.GetDeliverabilityDashboardOptionsOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetDeliverabilityDashboardOptionsRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*pinpointemail.GetDeliverabilityDashboardOptionsOutput)
	return
}

func (d *PinpointEmailDouble) GetDeliverabilityDashboardOptionsWithContext(i0 context.Context, i1 *pinpointemail.GetDeliverabilityDashboardOptionsInput, i2 ...request.Option) (r0 *pinpointemail.GetDeliverabilityDashboardOptionsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetDeliverabilityDashboardOptionsWithContext", i0, i1, i2)
	r0, _ = returns[0].(*pinpointemail.GetDeliverabilityDashboardOptionsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointEmailDouble) fakeGetDeliverabilityDashboardOptionsWithContext(ctx context.Context, in *pinpointemail.GetDeliverabilityDashboardOptionsInput, _ ...request.Option) (*pinpointemail.GetDeliverabilityDashboardOptionsOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "GetDeliverabilityDashboardOptions cancelled", ctx.Err())
	default:
		return d.GetDeliverabilityDashboardOptions(in)
	}
}

func (d *PinpointEmailDouble) GetDeliverabilityTestReport(i0 *pinpointemail.GetDeliverabilityTestReportInput) (r0 *pinpointemail.GetDeliverabilityTestReportOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetDeliverabilityTestReport", i0)
	r0, _ = returns[0].(*pinpointemail.GetDeliverabilityTestReportOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointEmailDouble) GetDeliverabilityTestReportRequest(i0 *pinpointemail.GetDeliverabilityTestReportInput) (r0 *request.Request, r1 *pinpointemail.GetDeliverabilityTestReportOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetDeliverabilityTestReportRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*pinpointemail.GetDeliverabilityTestReportOutput)
	return
}

func (d *PinpointEmailDouble) GetDeliverabilityTestReportWithContext(i0 context.Context, i1 *pinpointemail.GetDeliverabilityTestReportInput, i2 ...request.Option) (r0 *pinpointemail.GetDeliverabilityTestReportOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetDeliverabilityTestReportWithContext", i0, i1, i2)
	r0, _ = returns[0].(*pinpointemail.GetDeliverabilityTestReportOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointEmailDouble) fakeGetDeliverabilityTestReportWithContext(ctx context.Context, in *pinpointemail.GetDeliverabilityTestReportInput, _ ...request.Option) (*pinpointemail.GetDeliverabilityTestReportOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "GetDeliverabilityTestReport cancelled", ctx.Err())
	default:
		return d.GetDeliverabilityTestReport(in)
	}
}

func (d *PinpointEmailDouble) GetDomainDeliverabilityCampaign(i0 *pinpointemail.GetDomainDeliverabilityCampaignInput) (r0 *pinpointemail.GetDomainDeliverabilityCampaignOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetDomainDeliverabilityCampaign", i0)
	r0, _ = returns[0].(*pinpointemail.GetDomainDeliverabilityCampaignOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointEmailDouble) GetDomainDeliverabilityCampaignRequest(i0 *pinpointemail.GetDomainDeliverabilityCampaignInput) (r0 *request.Request, r1 *pinpointemail.GetDomainDeliverabilityCampaignOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetDomainDeliverabilityCampaignRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*pinpointemail.GetDomainDeliverabilityCampaignOutput)
	return
}

func (d *PinpointEmailDouble) GetDomainDeliverabilityCampaignWithContext(i0 context.Context, i1 *pinpointemail.GetDomainDeliverabilityCampaignInput, i2 ...request.Option) (r0 *pinpointemail.GetDomainDeliverabilityCampaignOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetDomainDeliverabilityCampaignWithContext", i0, i1, i2)
	r0, _ = returns[0].(*pinpointemail.GetDomainDeliverabilityCampaignOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointEmailDouble) fakeGetDomainDeliverabilityCampaignWithContext(ctx context.Context, in *pinpointemail.GetDomainDeliverabilityCampaignInput, _ ...request.Option) (*pinpointemail.GetDomainDeliverabilityCampaignOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "GetDomainDeliverabilityCampaign cancelled", ctx.Err())
	default:
		return d.GetDomainDeliverabilityCampaign(in)
	}
}

func (d *PinpointEmailDouble) GetDomainStatisticsReport(i0 *pinpointemail.GetDomainStatisticsReportInput) (r0 *pinpointemail.GetDomainStatisticsReportOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetDomainStatisticsReport", i0)
	r0, _ = returns[0].(*pinpointemail.GetDomainStatisticsReportOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointEmailDouble) GetDomainStatisticsReportRequest(i0 *pinpointemail.GetDomainStatisticsReportInput) (r0 *request.Request, r1 *pinpointemail.GetDomainStatisticsReportOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetDomainStatisticsReportRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*pinpointemail.GetDomainStatisticsReportOutput)
	return
}

func (d *PinpointEmailDouble) GetDomainStatisticsReportWithContext(i0 context.Context, i1 *pinpointemail.GetDomainStatisticsReportInput, i2 ...request.Option) (r0 *pinpointemail.GetDomainStatisticsReportOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetDomainStatisticsReportWithContext", i0, i1, i2)
	r0, _ = returns[0].(*pinpointemail.GetDomainStatisticsReportOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointEmailDouble) fakeGetDomainStatisticsReportWithContext(ctx context.Context, in *pinpointemail.GetDomainStatisticsReportInput, _ ...request.Option) (*pinpointemail.GetDomainStatisticsReportOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "GetDomainStatisticsReport cancelled", ctx.Err())
	default:
		return d.GetDomainStatisticsReport(in)
	}
}

func (d *PinpointEmailDouble) GetEmailIdentity(i0 *pinpointemail.GetEmailIdentityInput) (r0 *pinpointemail.GetEmailIdentityOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetEmailIdentity", i0)
	r0, _ = returns[0].(*pinpointemail.GetEmailIdentityOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointEmailDouble) GetEmailIdentityRequest(i0 *pinpointemail.GetEmailIdentityInput) (r0 *request.Request, r1 *pinpointemail.GetEmailIdentityOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetEmailIdentityRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*pinpointemail.GetEmailIdentityOutput)
	return
}

func (d *PinpointEmailDouble) GetEmailIdentityWithContext(i0 context.Context, i1 *pinpointemail.GetEmailIdentityInput, i2 ...request.Option) (r0 *pinpointemail.GetEmailIdentityOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetEmailIdentityWithContext", i0, i1, i2)
	r0, _ = returns[0].(*pinpointemail.GetEmailIdentityOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointEmailDouble) fakeGetEmailIdentityWithContext(ctx context.Context, in *pinpointemail.GetEmailIdentityInput, _ ...request.Option) (*pinpointemail.GetEmailIdentityOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "GetEmailIdentity cancelled", ctx.Err())
	default:
		return d.GetEmailIdentity(in)
	}
}

func (d *PinpointEmailDouble) ListConfigurationSets(i0 *pinpointemail.ListConfigurationSetsInput) (r0 *pinpointemail.ListConfigurationSetsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListConfigurationSets", i0)
	r0, _ = returns[0].(*pinpointemail.ListConfigurationSetsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointEmailDouble) ListConfigurationSetsPages(i0 *pinpointemail.ListConfigurationSetsInput, i1 func(*pinpointemail.ListConfigurationSetsOutput, bool) bool) (r0 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListConfigurationSetsPages", i0, i1)
	r0, _ = returns[0].(error)
	return
}

func (d *PinpointEmailDouble) fakeListConfigurationSetsPages(in *pinpointemail.ListConfigurationSetsInput, pager func(*pinpointemail.ListConfigurationSetsOutput, bool) (shouldContinue bool)) error {
	return d.Paginate("ListConfigurationSets", paginators, in, pager)
}

func (d *PinpointEmailDouble) ListConfigurationSetsPagesWithContext(i0 context.Context, i1 *pinpointemail.ListConfigurationSetsInput, i2 func(*pinpointemail.ListConfigurationSetsOutput, bool) bool, i3 ...request.Option) (r0 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListConfigurationSetsPagesWithContext", i0, i1, i2, i3)
	r0, _ = returns[0].(error)
	return
}

func (d *PinpointEmailDouble) fakeListConfigurationSetsPagesWithContext(ctx context.Context, in *pinpointemail.ListConfigurationSetsInput, pager func(*pinpointemail.ListConfigurationSetsOutput, bool) (shouldContinue bool), options ...request.Option) error {
	return d.PaginateWithContext("ListConfigurationSets", paginators, ctx, in, pager, options...)
}

func (d *PinpointEmailDouble) ListConfigurationSetsRequest(i0 *pinpointemail.ListConfigurationSetsInput) (r0 *request.Request, r1 *pinpointemail.ListConfigurationSetsOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListConfigurationSetsRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*pinpointemail.ListConfigurationSetsOutput)
	return
}

func (d *PinpointEmailDouble) ListConfigurationSetsWithContext(i0 context.Context, i1 *pinpointemail.ListConfigurationSetsInput, i2 ...request.Option) (r0 *pinpointemail.ListConfigurationSetsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListConfigurationSetsWithContext", i0, i1, i2)
	r0, _ = returns[0].(*pinpointemail.ListConfigurationSetsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointEmailDouble) fakeListConfigurationSetsWithContext(ctx context.Context, in *pinpointemail.ListConfigurationSetsInput, _ ...request.Option) (*pinpointemail.ListConfigurationSetsOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "ListConfigurationSets cancelled", ctx.Err())
	default:
		return d.ListConfigurationSets(in)
	}
}

func (d *PinpointEmailDouble) ListDedicatedIpPools(i0 *pinpointemail.ListDedicatedIpPoolsInput) (r0 *pinpointemail.ListDedicatedIpPoolsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListDedicatedIpPools", i0)
	r0, _ = returns[0].(*pinpointemail.ListDedicatedIpPoolsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointEmailDouble) ListDedicatedIpPoolsPages(i0 *pinpointemail.ListDedicatedIpPoolsInput, i1 func(*pinpointemail.ListDedicatedIpPoolsOutput, bool) bool) (r0 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListDedicatedIpPoolsPages", i0, i1)
	r0, _ = returns[0].(error)
	return
}

func (d *PinpointEmailDouble) fakeListDedicatedIpPoolsPages(in *pinpointemail.ListDedicatedIpPoolsInput, pager func(*pinpointemail.ListDedicatedIpPoolsOutput, bool) (shouldContinue bool)) error {
	return d.Paginate("ListDedicatedIpPools", paginators, in, pager)
}

func (d *PinpointEmailDouble) ListDedicatedIpPoolsPagesWithContext(i0 context.Context, i1 *pinpointemail.ListDedicatedIpPoolsInput, i2 func(*pinpointemail.ListDedicatedIpPoolsOutput, bool) bool, i3 ...request.Option) (r0 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListDedicatedIpPoolsPagesWithContext", i0, i1, i2, i3)
	r0, _ = returns[0].(error)
	return
}

func (d *PinpointEmailDouble) fakeListDedicatedIpPoolsPagesWithContext(ctx context.Context, in *pinpointemail.ListDedicatedIpPoolsInput, pager func(*pinpointemail.ListDedicatedIpPoolsOutput, bool) (shouldContinue bool), options ...request.Option) error {
	return d.PaginateWithContext("ListDedicatedIpPools", paginators, ctx, in, pager, options...)
}

func (d *PinpointEmailDouble) ListDedicatedIpPoolsRequest(i0 *pinpointemail.ListDedicatedIpPoolsInput) (r0 *request.Request, r1 *pinpointemail.ListDedicatedIpPoolsOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListDedicatedIpPoolsRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*pinpointemail.ListDedicatedIpPoolsOutput)
	return
}

func (d *PinpointEmailDouble) ListDedicatedIpPoolsWithContext(i0 context.Context, i1 *pinpointemail.ListDedicatedIpPoolsInput, i2 ...request.Option) (r0 *pinpointemail.ListDedicatedIpPoolsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListDedicatedIpPoolsWithContext", i0, i1, i2)
	r0, _ = returns[0].(*pinpointemail.ListDedicatedIpPoolsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointEmailDouble) fakeListDedicatedIpPoolsWithContext(ctx context.Context, in *pinpointemail.ListDedicatedIpPoolsInput, _ ...request.Option) (*pinpointemail.ListDedicatedIpPoolsOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "ListDedicatedIpPools cancelled", ctx.Err())
	default:
		return d.ListDedicatedIpPools(in)
	}
}

func (d *PinpointEmailDouble) ListDeliverabilityTestReports(i0 *pinpointemail.ListDeliverabilityTestReportsInput) (r0 *pinpointemail.ListDeliverabilityTestReportsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListDeliverabilityTestReports", i0)
	r0, _ = returns[0].(*pinpointemail.ListDeliverabilityTestReportsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointEmailDouble) ListDeliverabilityTestReportsPages(i0 *pinpointemail.ListDeliverabilityTestReportsInput, i1 func(*pinpointemail.ListDeliverabilityTestReportsOutput, bool) bool) (r0 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListDeliverabilityTestReportsPages", i0, i1)
	r0, _ = returns[0].(error)
	return
}

func (d *PinpointEmailDouble) fakeListDeliverabilityTestReportsPages(in *pinpointemail.ListDeliverabilityTestReportsInput, pager func(*pinpointemail.ListDeliverabilityTestReportsOutput, bool) (shouldContinue bool)) error {
	return d.Paginate("ListDeliverabilityTestReports", paginators, in, pager)
}

func (d *PinpointEmailDouble) ListDeliverabilityTestReportsPagesWithContext(i0 context.Context, i1 *pinpointemail.ListDeliverabilityTestReportsInput, i2 func(*pinpointemail.ListDeliverabilityTestReportsOutput, bool) bool, i3 ...request.Option) (r0 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListDeliverabilityTestReportsPagesWithContext", i0, i1, i2, i3)
	r0, _ = returns[0].(error)
	return
}

func (d *PinpointEmailDouble) fakeListDeliverabilityTestReportsPagesWithContext(ctx context.Context, in *pinpointemail.ListDeliverabilityTestReportsInput, pager func(*pinpointemail.ListDeliverabilityTestReportsOutput, bool) (shouldContinue bool), options ...request.Option) error {
	return d.PaginateWithContext("ListDeliverabilityTestReports", paginators, ctx, in, pager, options...)
}

func (d *PinpointEmailDouble) ListDeliverabilityTestReportsRequest(i0 *pinpointemail.ListDeliverabilityTestReportsInput) (r0 *request.Request, r1 *pinpointemail.ListDeliverabilityTestReportsOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListDeliverabilityTestReportsRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*pinpointemail.ListDeliverabilityTestReportsOutput)
	return
}

func (d *PinpointEmailDouble) ListDeliverabilityTestReportsWithContext(i0 context.Context, i1 *pinpointemail.ListDeliverabilityTestReportsInput, i2 ...request.Option) (r0 *pinpointemail.ListDeliverabilityTestReportsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListDeliverabilityTestReportsWithContext", i0, i1, i2)
	r0, _ = returns[0].(*pinpointemail.ListDeliverabilityTestReportsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointEmailDouble) fakeListDeliverabilityTestReportsWithContext(ctx context.Context, in *pinpointemail.ListDeliverabilityTestReportsInput, _ ...request.Option) (*pinpointemail.ListDeliverabilityTestReportsOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "ListDeliverabilityTestReports cancelled", ctx.Err())
	default:
		return d.ListDeliverabilityTestReports(in)
	}
}

func (d *PinpointEmailDouble) ListDomainDeliverabilityCampaigns(i0 *pinpointemail.ListDomainDeliverabilityCampaignsInput) (r0 *pinpointemail.ListDomainDeliverabilityCampaignsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListDomainDeliverabilityCampaigns", i0)
	r0, _ = returns[0].(*pinpointemail.ListDomainDeliverabilityCampaignsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointEmailDouble) ListDomainDeliverabilityCampaignsPages(i0 *pinpointemail.ListDomainDeliverabilityCampaignsInput, i1 func(*pinpointemail.ListDomainDeliverabilityCampaignsOutput, bool) bool) (r0 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListDomainDeliverabilityCampaignsPages", i0, i1)
	r0, _ = returns[0].(error)
	return
}

func (d *PinpointEmailDouble) fakeListDomainDeliverabilityCampaignsPages(in *pinpointemail.ListDomainDeliverabilityCampaignsInput, pager func(*pinpointemail.ListDomainDeliverabilityCampaignsOutput, bool) (shouldContinue bool)) error {
	return d.Paginate("ListDomainDeliverabilityCampaigns", paginators, in, pager)
}

func (d *PinpointEmailDouble) ListDomainDeliverabilityCampaignsPagesWithContext(i0 context.Context, i1 *pinpointemail.ListDomainDeliverabilityCampaignsInput, i2 func(*pinpointemail.ListDomainDeliverabilityCampaignsOutput, bool) bool, i3 ...request.Option) (r0 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListDomainDeliverabilityCampaignsPagesWithContext", i0, i1, i2, i3)
	r0, _ = returns[0].(error)
	return
}

func (d *PinpointEmailDouble) fakeListDomainDeliverabilityCampaignsPagesWithContext(ctx context.Context, in *pinpointemail.ListDomainDeliverabilityCampaignsInput, pager func(*pinpointemail.ListDomainDeliverabilityCampaignsOutput, bool) (shouldContinue bool), options ...request.Option) error {
	return d.PaginateWithContext("ListDomainDeliverabilityCampaigns", paginators, ctx, in, pager, options...)
}

func (d *PinpointEmailDouble) ListDomainDeliverabilityCampaignsRequest(i0 *pinpointemail.ListDomainDeliverabilityCampaignsInput) (r0 *request.Request, r1 *pinpointemail.ListDomainDeliverabilityCampaignsOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListDomainDeliverabilityCampaignsRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*pinpointemail.ListDomainDeliverabilityCampaignsOutput)
	return
}

func (d *PinpointEmailDouble) ListDomainDeliverabilityCampaignsWithContext(i0 context.Context, i1 *pinpointemail.ListDomainDeliverabilityCampaignsInput, i2 ...request.Option) (r0 *pinpointemail.ListDomainDeliverabilityCampaignsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListDomainDeliverabilityCampaignsWithContext", i0, i1, i2)
	r0, _ = returns[0].(*pinpointemail.ListDomainDeliverabilityCampaignsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointEmailDouble) fakeListDomainDeliverabilityCampaignsWithContext(ctx context.Context, in *pinpointemail.ListDomainDeliverabilityCampaignsInput, _ ...request.Option) (*pinpointemail.ListDomainDeliverabilityCampaignsOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "ListDomainDeliverabilityCampaigns cancelled", ctx.Err())
	default:
		return d.ListDomainDeliverabilityCampaigns(in)
	}
}

func (d *PinpointEmailDouble) ListEmailIdentities(i0 *pinpointemail.ListEmailIdentitiesInput) (r0 *pinpointemail.ListEmailIdentitiesOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListEmailIdentities", i0)
	r0, _ = returns[0].(*pinpointemail.ListEmailIdentitiesOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointEmailDouble) ListEmailIdentitiesPages(i0 *pinpointemail.ListEmailIdentitiesInput, i1 func(*pinpointemail.ListEmailIdentitiesOutput, bool) bool) (r0 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListEmailIdentitiesPages", i0, i1)
	r0, _ = returns[0].(error)
	return
}

func (d *PinpointEmailDouble) fakeListEmailIdentitiesPages(in *pinpointemail.ListEmailIdentitiesInput, pager func(*pinpointemail.ListEmailIdentitiesOutput, bool) (shouldContinue bool)) error {
	return d.Paginate("ListEmailIdentities", paginators, in, pager)
}

func (d *PinpointEmailDouble) ListEmailIdentitiesPagesWithContext(i0 context.Context, i1 *pinpointemail.ListEmailIdentitiesInput, i2 func(*pinpointemail.ListEmailIdentitiesOutput, bool) bool, i3 ...request.Option) (r0 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListEmailIdentitiesPagesWithContext", i0, i1, i2, i3)
	r0, _ = returns[0].(error)
	return
}

func (d *PinpointEmailDouble) fakeListEmailIdentitiesPagesWithContext(ctx context.Context, in *pinpointemail.ListEmailIdentitiesInput, pager func(*pinpointemail.ListEmailIdentitiesOutput, bool) (shouldContinue bool), options ...request.Option) error {
	return d.PaginateWithContext("ListEmailIdentities", paginators, ctx, in, pager, options...)
}

func (d *PinpointEmailDouble) ListEmailIdentitiesRequest(i0 *pinpointemail.ListEmailIdentitiesInput) (r0 *request.Request, r1 *pinpointemail.ListEmailIdentitiesOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListEmailIdentitiesRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*pinpointemail.ListEmailIdentitiesOutput)
	return
}

func (d *PinpointEmailDouble) ListEmailIdentitiesWithContext(i0 context.Context, i1 *pinpointemail.ListEmailIdentitiesInput, i2 ...request.Option) (r0 *pinpointemail.ListEmailIdentitiesOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListEmailIdentitiesWithContext", i0, i1, i2)
	r0, _ = returns[0].(*pinpointemail.ListEmailIdentitiesOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointEmailDouble) fakeListEmailIdentitiesWithContext(ctx context.Context, in *pinpointemail.ListEmailIdentitiesInput, _ ...request.Option) (*pinpointemail.ListEmailIdentitiesOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "ListEmailIdentities cancelled", ctx.Err())
	default:
		return d.ListEmailIdentities(in)
	}
}

func (d *PinpointEmailDouble) ListTagsForResource(i0 *pinpointemail.ListTagsForResourceInput) (r0 *pinpointemail.ListTagsForResourceOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListTagsForResource", i0)
	r0, _ = returns[0].(*pinpointemail.ListTagsForResourceOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointEmailDouble) ListTagsForResourceRequest(i0 *pinpointemail.ListTagsForResourceInput) (r0 *request.Request, r1 *pinpointemail.ListTagsForResourceOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListTagsForResourceRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*pinpointemail.ListTagsForResourceOutput)
	return
}

func (d *PinpointEmailDouble) ListTagsForResourceWithContext(i0 context.Context, i1 *pinpointemail.ListTagsForResourceInput, i2 ...request.Option) (r0 *pinpointemail.ListTagsForResourceOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListTagsForResourceWithContext", i0, i1, i2)
	r0, _ = returns[0].(*pinpointemail.ListTagsForResourceOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointEmailDouble) fakeListTagsForResourceWithContext(ctx context.Context, in *pinpointemail.ListTagsForResourceInput, _ ...request.Option) (*pinpointemail.ListTagsForResourceOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "ListTagsForResource cancelled", ctx.Err())
	default:
		return d.ListTagsForResource(in)
	}
}

func (d *PinpointEmailDouble) PutAccountDedicatedIpWarmupAttributes(i0 *pinpointemail.PutAccountDedicatedIpWarmupAttributesInput) (r0 *pinpointemail.PutAccountDedicatedIpWarmupAttributesOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("PutAccountDedicatedIpWarmupAttributes", i0)
	r0, _ = returns[0].(*pinpointemail.PutAccountDedicatedIpWarmupAttributesOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointEmailDouble) PutAccountDedicatedIpWarmupAttributesRequest(i0 *pinpointemail.PutAccountDedicatedIpWarmupAttributesInput) (r0 *request.Request, r1 *pinpointemail.PutAccountDedicatedIpWarmupAttributesOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("PutAccountDedicatedIpWarmupAttributesRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*pinpointemail.PutAccountDedicatedIpWarmupAttributesOutput)
	return
}

func (d *PinpointEmailDouble) PutAccountDedicatedIpWarmupAttributesWithContext(i0 context.Context, i1 *pinpointemail.PutAccountDedicatedIpWarmupAttributesInput, i2 ...request.Option) (r0 *pinpointemail.PutAccountDedicatedIpWarmupAttributesOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("PutAccountDedicatedIpWarmupAttributesWithContext", i0, i1, i2)
	r0, _ = returns[0].(*pinpointemail.PutAccountDedicatedIpWarmupAttributesOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointEmailDouble) fakePutAccountDedicatedIpWarmupAttributesWithContext(ctx context.Context, in *pinpointemail.PutAccountDedicatedIpWarmupAttributesInput, _ ...request.Option) (*pinpointemail.PutAccountDedicatedIpWarmupAttributesOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "PutAccountDedicatedIpWarmupAttributes cancelled", ctx.Err())
	default:
		return d.PutAccountDedicatedIpWarmupAttributes(in)
	}
}

func (d *PinpointEmailDouble) PutAccountSendingAttributes(i0 *pinpointemail.PutAccountSendingAttributesInput) (r0 *pinpointemail.PutAccountSendingAttributesOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("PutAccountSendingAttributes", i0)
	r0, _ = returns[0].(*pinpointemail.PutAccountSendingAttributesOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointEmailDouble) PutAccountSendingAttributesRequest(i0 *pinpointemail.PutAccountSendingAttributesInput) (r0 *request.Request, r1 *pinpointemail.PutAccountSendingAttributesOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("PutAccountSendingAttributesRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*pinpointemail.PutAccountSendingAttributesOutput)
	return
}

func (d *PinpointEmailDouble) PutAccountSendingAttributesWithContext(i0 context.Context, i1 *pinpointemail.PutAccountSendingAttributesInput, i2 ...request.Option) (r0 *pinpointemail.PutAccountSendingAttributesOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("PutAccountSendingAttributesWithContext", i0, i1, i2)
	r0, _ = returns[0].(*pinpointemail.PutAccountSendingAttributesOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointEmailDouble) fakePutAccountSendingAttributesWithContext(ctx context.Context, in *pinpointemail.PutAccountSendingAttributesInput, _ ...request.Option) (*pinpointemail.PutAccountSendingAttributesOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "PutAccountSendingAttributes cancelled", ctx.Err())
	default:
		return d.PutAccountSendingAttributes(in)
	}
}

func (d *PinpointEmailDouble) PutConfigurationSetDeliveryOptions(i0 *pinpointemail.PutConfigurationSetDeliveryOptionsInput) (r0 *pinpointemail.PutConfigurationSetDeliveryOptionsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("PutConfigurationSetDeliveryOptions", i0)
	r0, _ = returns[0].(*pinpointemail.PutConfigurationSetDeliveryOptionsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointEmailDouble) PutConfigurationSetDeliveryOptionsRequest(i0 *pinpointemail.PutConfigurationSetDeliveryOptionsInput) (r0 *request.Request, r1 *pinpointemail.PutConfigurationSetDeliveryOptionsOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("PutConfigurationSetDeliveryOptionsRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*pinpointemail.PutConfigurationSetDeliveryOptionsOutput)
	return
}

func (d *PinpointEmailDouble) PutConfigurationSetDeliveryOptionsWithContext(i0 context.Context, i1 *pinpointemail.PutConfigurationSetDeliveryOptionsInput, i2 ...request.Option) (r0 *pinpointemail.PutConfigurationSetDeliveryOptionsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("PutConfigurationSetDeliveryOptionsWithContext", i0, i1, i2)
	r0, _ = returns[0].(*pinpointemail.PutConfigurationSetDeliveryOptionsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointEmailDouble) fakePutConfigurationSetDeliveryOptionsWithContext(ctx context.Context, in *pinpointemail.PutConfigurationSetDeliveryOptionsInput, _ ...request.Option) (*pinpointemail.PutConfigurationSetDeliveryOptionsOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "PutConfigurationSetDeliveryOptions cancelled", ctx.Err())
	default:
		return d.PutConfigurationSetDeliveryOptions(in)
	}
}

func (d *PinpointEmailDouble) PutConfigurationSetReputationOptions(i0 *pinpointemail.PutConfigurationSetReputationOptionsInput) (r0 *pinpointemail.PutConfigurationSetReputationOptionsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("PutConfigurationSetReputationOptions", i0)
	r0, _ = returns[0].(*pinpointemail.PutConfigurationSetReputationOptionsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointEmailDouble) PutConfigurationSetReputationOptionsRequest(i0 *pinpointemail.PutConfigurationSetReputationOptionsInput) (r0 *request.Request, r1 *pinpointemail.PutConfigurationSetReputationOptionsOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("PutConfigurationSetReputationOptionsRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*pinpointemail.PutConfigurationSetReputationOptionsOutput)
	return
}

func (d *PinpointEmailDouble) PutConfigurationSetReputationOptionsWithContext(i0 context.Context, i1 *pinpointemail.PutConfigurationSetReputationOptionsInput, i2 ...request.Option) (r0 *pinpointemail.PutConfigurationSetReputationOptionsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("PutConfigurationSetReputationOptionsWithContext", i0, i1, i2)
	r0, _ = returns[0].(*pinpointemail.PutConfigurationSetReputationOptionsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointEmailDouble) fakePutConfigurationSetReputationOptionsWithContext(ctx context.Context, in *pinpointemail.PutConfigurationSetReputationOptionsInput, _ ...request.Option) (*pinpointemail.PutConfigurationSetReputationOptionsOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "PutConfigurationSetReputationOptions cancelled", ctx.Err())
	default:
		return d.PutConfigurationSetReputationOptions(in)
	}
}

func (d *PinpointEmailDouble) PutConfigurationSetSendingOptions(i0 *pinpointemail.PutConfigurationSetSendingOptionsInput) (r0 *pinpointemail.PutConfigurationSetSendingOptionsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("PutConfigurationSetSendingOptions", i0)
	r0, _ = returns[0].(*pinpointemail.PutConfigurationSetSendingOptionsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointEmailDouble) PutConfigurationSetSendingOptionsRequest(i0 *pinpointemail.PutConfigurationSetSendingOptionsInput) (r0 *request.Request, r1 *pinpointemail.PutConfigurationSetSendingOptionsOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("PutConfigurationSetSendingOptionsRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*pinpointemail.PutConfigurationSetSendingOptionsOutput)
	return
}

func (d *PinpointEmailDouble) PutConfigurationSetSendingOptionsWithContext(i0 context.Context, i1 *pinpointemail.PutConfigurationSetSendingOptionsInput, i2 ...request.Option) (r0 *pinpointemail.PutConfigurationSetSendingOptionsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("PutConfigurationSetSendingOptionsWithContext", i0, i1, i2)
	r0, _ = returns[0].(*pinpointemail.PutConfigurationSetSendingOptionsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointEmailDouble) fakePutConfigurationSetSendingOptionsWithContext(ctx context.Context, in *pinpointemail.PutConfigurationSetSendingOptionsInput, _ ...request.Option) (*pinpointemail.PutConfigurationSetSendingOptionsOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "PutConfigurationSetSendingOptions cancelled", ctx.Err())
	default:
		return d.PutConfigurationSetSendingOptions(in)
	}
}

func (d *PinpointEmailDouble) PutConfigurationSetTrackingOptions(i0 *pinpointemail.PutConfigurationSetTrackingOptionsInput) (r0 *pinpointemail.PutConfigurationSetTrackingOptionsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("PutConfigurationSetTrackingOptions", i0)
	r0, _ = returns[0].(*pinpointemail.PutConfigurationSetTrackingOptionsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointEmailDouble) PutConfigurationSetTrackingOptionsRequest(i0 *pinpointemail.PutConfigurationSetTrackingOptionsInput) (r0 *request.Request, r1 *pinpointemail.PutConfigurationSetTrackingOptionsOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("PutConfigurationSetTrackingOptionsRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*pinpointemail.PutConfigurationSetTrackingOptionsOutput)
	return
}

func (d *PinpointEmailDouble) PutConfigurationSetTrackingOptionsWithContext(i0 context.Context, i1 *pinpointemail.PutConfigurationSetTrackingOptionsInput, i2 ...request.Option) (r0 *pinpointemail.PutConfigurationSetTrackingOptionsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("PutConfigurationSetTrackingOptionsWithContext", i0, i1, i2)
	r0, _ = returns[0].(*pinpointemail.PutConfigurationSetTrackingOptionsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointEmailDouble) fakePutConfigurationSetTrackingOptionsWithContext(ctx context.Context, in *pinpointemail.PutConfigurationSetTrackingOptionsInput, _ ...request.Option) (*pinpointemail.PutConfigurationSetTrackingOptionsOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "PutConfigurationSetTrackingOptions cancelled", ctx.Err())
	default:
		return d.PutConfigurationSetTrackingOptions(in)
	}
}

func (d *PinpointEmailDouble) PutDedicatedIpInPool(i0 *pinpointemail.PutDedicatedIpInPoolInput) (r0 *pinpointemail.PutDedicatedIpInPoolOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("PutDedicatedIpInPool", i0)
	r0, _ = returns[0].(*pinpointemail.PutDedicatedIpInPoolOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointEmailDouble) PutDedicatedIpInPoolRequest(i0 *pinpointemail.PutDedicatedIpInPoolInput) (r0 *request.Request, r1 *pinpointemail.PutDedicatedIpInPoolOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("PutDedicatedIpInPoolRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*pinpointemail.PutDedicatedIpInPoolOutput)
	return
}

func (d *PinpointEmailDouble) PutDedicatedIpInPoolWithContext(i0 context.Context, i1 *pinpointemail.PutDedicatedIpInPoolInput, i2 ...request.Option) (r0 *pinpointemail.PutDedicatedIpInPoolOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("PutDedicatedIpInPoolWithContext", i0, i1, i2)
	r0, _ = returns[0].(*pinpointemail.PutDedicatedIpInPoolOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointEmailDouble) fakePutDedicatedIpInPoolWithContext(ctx context.Context, in *pinpointemail.PutDedicatedIpInPoolInput, _ ...request.Option) (*pinpointemail.PutDedicatedIpInPoolOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "PutDedicatedIpInPool cancelled", ctx.Err())
	default:
		return d.PutDedicatedIpInPool(in)
	}
}

func (d *PinpointEmailDouble) PutDedicatedIpWarmupAttributes(i0 *pinpointemail.PutDedicatedIpWarmupAttributesInput) (r0 *pinpointemail.PutDedicatedIpWarmupAttributesOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("PutDedicatedIpWarmupAttributes", i0)
	r0, _ = returns[0].(*pinpointemail.PutDedicatedIpWarmupAttributesOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointEmailDouble) PutDedicatedIpWarmupAttributesRequest(i0 *pinpointemail.PutDedicatedIpWarmupAttributesInput) (r0 *request.Request, r1 *pinpointemail.PutDedicatedIpWarmupAttributesOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("PutDedicatedIpWarmupAttributesRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*pinpointemail.PutDedicatedIpWarmupAttributesOutput)
	return
}

func (d *PinpointEmailDouble) PutDedicatedIpWarmupAttributesWithContext(i0 context.Context, i1 *pinpointemail.PutDedicatedIpWarmupAttributesInput, i2 ...request.Option) (r0 *pinpointemail.PutDedicatedIpWarmupAttributesOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("PutDedicatedIpWarmupAttributesWithContext", i0, i1, i2)
	r0, _ = returns[0].(*pinpointemail.PutDedicatedIpWarmupAttributesOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointEmailDouble) fakePutDedicatedIpWarmupAttributesWithContext(ctx context.Context, in *pinpointemail.PutDedicatedIpWarmupAttributesInput, _ ...request.Option) (*pinpointemail.PutDedicatedIpWarmupAttributesOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "PutDedicatedIpWarmupAttributes cancelled", ctx.Err())
	default:
		return d.PutDedicatedIpWarmupAttributes(in)
	}
}

func (d *PinpointEmailDouble) PutDeliverabilityDashboardOption(i0 *pinpointemail.PutDeliverabilityDashboardOptionInput) (r0 *pinpointemail.PutDeliverabilityDashboardOptionOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("PutDeliverabilityDashboardOption", i0)
	r0, _ = returns[0].(*pinpointemail.PutDeliverabilityDashboardOptionOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointEmailDouble) PutDeliverabilityDashboardOptionRequest(i0 *pinpointemail.PutDeliverabilityDashboardOptionInput) (r0 *request.Request, r1 *pinpointemail.PutDeliverabilityDashboardOptionOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("PutDeliverabilityDashboardOptionRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*pinpointemail.PutDeliverabilityDashboardOptionOutput)
	return
}

func (d *PinpointEmailDouble) PutDeliverabilityDashboardOptionWithContext(i0 context.Context, i1 *pinpointemail.PutDeliverabilityDashboardOptionInput, i2 ...request.Option) (r0 *pinpointemail.PutDeliverabilityDashboardOptionOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("PutDeliverabilityDashboardOptionWithContext", i0, i1, i2)
	r0, _ = returns[0].(*pinpointemail.PutDeliverabilityDashboardOptionOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointEmailDouble) fakePutDeliverabilityDashboardOptionWithContext(ctx context.Context, in *pinpointemail.PutDeliverabilityDashboardOptionInput, _ ...request.Option) (*pinpointemail.PutDeliverabilityDashboardOptionOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "PutDeliverabilityDashboardOption cancelled", ctx.Err())
	default:
		return d.PutDeliverabilityDashboardOption(in)
	}
}

func (d *PinpointEmailDouble) PutEmailIdentityDkimAttributes(i0 *pinpointemail.PutEmailIdentityDkimAttributesInput) (r0 *pinpointemail.PutEmailIdentityDkimAttributesOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("PutEmailIdentityDkimAttributes", i0)
	r0, _ = returns[0].(*pinpointemail.PutEmailIdentityDkimAttributesOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointEmailDouble) PutEmailIdentityDkimAttributesRequest(i0 *pinpointemail.PutEmailIdentityDkimAttributesInput) (r0 *request.Request, r1 *pinpointemail.PutEmailIdentityDkimAttributesOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("PutEmailIdentityDkimAttributesRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*pinpointemail.PutEmailIdentityDkimAttributesOutput)
	return
}

func (d *PinpointEmailDouble) PutEmailIdentityDkimAttributesWithContext(i0 context.Context, i1 *pinpointemail.PutEmailIdentityDkimAttributesInput, i2 ...request.Option) (r0 *pinpointemail.PutEmailIdentityDkimAttributesOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("PutEmailIdentityDkimAttributesWithContext", i0, i1, i2)
	r0, _ = returns[0].(*pinpointemail.PutEmailIdentityDkimAttributesOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointEmailDouble) fakePutEmailIdentityDkimAttributesWithContext(ctx context.Context, in *pinpointemail.PutEmailIdentityDkimAttributesInput, _ ...request.Option) (*pinpointemail.PutEmailIdentityDkimAttributesOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "PutEmailIdentityDkimAttributes cancelled", ctx.Err())
	default:
		return d.PutEmailIdentityDkimAttributes(in)
	}
}

func (d *PinpointEmailDouble) PutEmailIdentityFeedbackAttributes(i0 *pinpointemail.PutEmailIdentityFeedbackAttributesInput) (r0 *pinpointemail.PutEmailIdentityFeedbackAttributesOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("PutEmailIdentityFeedbackAttributes", i0)
	r0, _ = returns[0].(*pinpointemail.PutEmailIdentityFeedbackAttributesOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointEmailDouble) PutEmailIdentityFeedbackAttributesRequest(i0 *pinpointemail.PutEmailIdentityFeedbackAttributesInput) (r0 *request.Request, r1 *pinpointemail.PutEmailIdentityFeedbackAttributesOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("PutEmailIdentityFeedbackAttributesRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*pinpointemail.PutEmailIdentityFeedbackAttributesOutput)
	return
}

func (d *PinpointEmailDouble) PutEmailIdentityFeedbackAttributesWithContext(i0 context.Context, i1 *pinpointemail.PutEmailIdentityFeedbackAttributesInput, i2 ...request.Option) (r0 *pinpointemail.PutEmailIdentityFeedbackAttributesOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("PutEmailIdentityFeedbackAttributesWithContext", i0, i1, i2)
	r0, _ = returns[0].(*pinpointemail.PutEmailIdentityFeedbackAttributesOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointEmailDouble) fakePutEmailIdentityFeedbackAttributesWithContext(ctx context.Context, in *pinpointemail.PutEmailIdentityFeedbackAttributesInput, _ ...request.Option) (*pinpointemail.PutEmailIdentityFeedbackAttributesOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "PutEmailIdentityFeedbackAttributes cancelled", ctx.Err())
	default:
		return d.PutEmailIdentityFeedbackAttributes(in)
	}
}

func (d *PinpointEmailDouble) PutEmailIdentityMailFromAttributes(i0 *pinpointemail.PutEmailIdentityMailFromAttributesInput) (r0 *pinpointemail.PutEmailIdentityMailFromAttributesOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("PutEmailIdentityMailFromAttributes", i0)
	r0, _ = returns[0].(*pinpointemail.PutEmailIdentityMailFromAttributesOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointEmailDouble) PutEmailIdentityMailFromAttributesRequest(i0 *pinpointemail.PutEmailIdentityMailFromAttributesInput) (r0 *request.Request, r1 *pinpointemail.PutEmailIdentityMailFromAttributesOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("PutEmailIdentityMailFromAttributesRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*pinpointemail.PutEmailIdentityMailFromAttributesOutput)
	return
}

func (d *PinpointEmailDouble) PutEmailIdentityMailFromAttributesWithContext(i0 context.Context, i1 *pinpointemail.PutEmailIdentityMailFromAttributesInput, i2 ...request.Option) (r0 *pinpointemail.PutEmailIdentityMailFromAttributesOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("PutEmailIdentityMailFromAttributesWithContext", i0, i1, i2)
	r0, _ = returns[0].(*pinpointemail.PutEmailIdentityMailFromAttributesOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointEmailDouble) fakePutEmailIdentityMailFromAttributesWithContext(ctx context.Context, in *pinpointemail.PutEmailIdentityMailFromAttributesInput, _ ...request.Option) (*pinpointemail.PutEmailIdentityMailFromAttributesOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "PutEmailIdentityMailFromAttributes cancelled", ctx.Err())
	default:
		return d.PutEmailIdentityMailFromAttributes(in)
	}
}

func (d *PinpointEmailDouble) SendEmail(i0 *pinpointemail.SendEmailInput) (r0 *pinpointemail.SendEmailOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("SendEmail", i0)
	r0, _ = returns[0].(*pinpointemail.SendEmailOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointEmailDouble) SendEmailRequest(i0 *pinpointemail.SendEmailInput) (r0 *request.Request, r1 *pinpointemail.SendEmailOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("SendEmailRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*pinpointemail.SendEmailOutput)
	return
}

func (d *PinpointEmailDouble) SendEmailWithContext(i0 context.Context, i1 *pinpointemail.SendEmailInput, i2 ...request.Option) (r0 *pinpointemail.SendEmailOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("SendEmailWithContext", i0, i1, i2)
	r0, _ = returns[0].(*pinpointemail.SendEmailOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointEmailDouble) fakeSendEmailWithContext(ctx context.Context, in *pinpointemail.SendEmailInput, _ ...request.Option) (*pinpointemail.SendEmailOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "SendEmail cancelled", ctx.Err())
	default:
		return d.SendEmail(in)
	}
}

func (d *PinpointEmailDouble) TagResource(i0 *pinpointemail.TagResourceInput) (r0 *pinpointemail.TagResourceOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("TagResource", i0)
	r0, _ = returns[0].(*pinpointemail.TagResourceOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointEmailDouble) TagResourceRequest(i0 *pinpointemail.TagResourceInput) (r0 *request.Request, r1 *pinpointemail.TagResourceOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("TagResourceRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*pinpointemail.TagResourceOutput)
	return
}

func (d *PinpointEmailDouble) TagResourceWithContext(i0 context.Context, i1 *pinpointemail.TagResourceInput, i2 ...request.Option) (r0 *pinpointemail.TagResourceOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("TagResourceWithContext", i0, i1, i2)
	r0, _ = returns[0].(*pinpointemail.TagResourceOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointEmailDouble) fakeTagResourceWithContext(ctx context.Context, in *pinpointemail.TagResourceInput, _ ...request.Option) (*pinpointemail.TagResourceOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "TagResource cancelled", ctx.Err())
	default:
		return d.TagResource(in)
	}
}

func (d *PinpointEmailDouble) UntagResource(i0 *pinpointemail.UntagResourceInput) (r0 *pinpointemail.UntagResourceOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UntagResource", i0)
	r0, _ = returns[0].(*pinpointemail.UntagResourceOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointEmailDouble) UntagResourceRequest(i0 *pinpointemail.UntagResourceInput) (r0 *request.Request, r1 *pinpointemail.UntagResourceOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UntagResourceRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*pinpointemail.UntagResourceOutput)
	return
}

func (d *PinpointEmailDouble) UntagResourceWithContext(i0 context.Context, i1 *pinpointemail.UntagResourceInput, i2 ...request.Option) (r0 *pinpointemail.UntagResourceOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UntagResourceWithContext", i0, i1, i2)
	r0, _ = returns[0].(*pinpointemail.UntagResourceOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointEmailDouble) fakeUntagResourceWithContext(ctx context.Context, in *pinpointemail.UntagResourceInput, _ ...request.Option) (*pinpointemail.UntagResourceOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "UntagResource cancelled", ctx.Err())
	default:
		return d.UntagResource(in)
	}
}

func (d *PinpointEmailDouble) UpdateConfigurationSetEventDestination(i0 *pinpointemail.UpdateConfigurationSetEventDestinationInput) (r0 *pinpointemail.UpdateConfigurationSetEventDestinationOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UpdateConfigurationSetEventDestination", i0)
	r0, _ = returns[0].(*pinpointemail.UpdateConfigurationSetEventDestinationOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointEmailDouble) UpdateConfigurationSetEventDestinationRequest(i0 *pinpointemail.UpdateConfigurationSetEventDestinationInput) (r0 *request.Request, r1 *pinpointemail.UpdateConfigurationSetEventDestinationOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UpdateConfigurationSetEventDestinationRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*pinpointemail.UpdateConfigurationSetEventDestinationOutput)
	return
}

func (d *PinpointEmailDouble) UpdateConfigurationSetEventDestinationWithContext(i0 context.Context, i1 *pinpointemail.UpdateConfigurationSetEventDestinationInput, i2 ...request.Option) (r0 *pinpointemail.UpdateConfigurationSetEventDestinationOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UpdateConfigurationSetEventDestinationWithContext", i0, i1, i2)
	r0, _ = returns[0].(*pinpointemail.UpdateConfigurationSetEventDestinationOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PinpointEmailDouble) fakeUpdateConfigurationSetEventDestinationWithContext(ctx context.Context, in *pinpointemail.UpdateConfigurationSetEventDestinationInput, _ ...request.Option) (*pinpointemail.UpdateConfigurationSetEventDestinationOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "UpdateConfigurationSetEventDestination cancelled", ctx.Err())
	default:
		return d.UpdateConfigurationSetEventDestination(in)
	}
}
