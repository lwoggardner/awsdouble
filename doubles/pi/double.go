// Code generated by go doublegen; DO NOT EDIT.
// This file was generated at 2020-02-14T22:14:20+11:00

// Package pidouble provides a TestDouble implementation of piiface.PIAPI
package pidouble

import (
	"context"

	"github.com/aws/aws-sdk-go/aws/awserr"
	"github.com/aws/aws-sdk-go/aws/request"
	"github.com/aws/aws-sdk-go/service/pi"
	"github.com/aws/aws-sdk-go/service/pi/piiface"
	"github.com/lwoggardner/awsdouble"
	"github.com/lwoggardner/godouble/godouble"
)

// PIDouble is TestDouble for piiface.PIAPI
type PIDouble struct {
	piiface.PIAPI
	*awsdouble.AWSTestDouble
}

// Constructor for PIDouble
// Default configuration will ensure
//   * API operations not explicitly stubbed will return an empty output struct pointer, and nil error.
//     To simulate long polling, "Poll" operations will return these values after a random delay of up to 100ms.
//   * WithContext methods implement a 'Fake' method that returns a cancellation error if the context is cancelled
//      before the method is called.
//   * Pages and PagesWithContext methods similarly implement a 'Fake' method that paginates over the underlying method.
//
//    This allows tests to only stub the simple api methods and be generally unconcerned whether the SUT is using the
//      Context or Pagination forms of the API.
//
func NewDouble(t godouble.T, configurators ...func(*awsdouble.AWSTestDouble)) *PIDouble {
	result := &PIDouble{}

	configurators = append([]func(configurator *awsdouble.AWSTestDouble){func(d *awsdouble.AWSTestDouble) {
		d.SetDefaultCall(result.defaultMethodCall)
		d.SetDefaultReturnValues(result.defaultReturnValues)
	}}, configurators...)

	result.AWSTestDouble = awsdouble.NewDouble(t, (*piiface.PIAPI)(nil), configurators...)
	return result
}

func (d *PIDouble) defaultReturnValues(m godouble.Method) godouble.ReturnValues {
	return d.DefaultReturnValues(m)
}

func (d *PIDouble) defaultMethodCall(m godouble.Method) godouble.MethodCall {
	switch m.Reflect().Name {

	case "DescribeDimensionKeysWithContext":
		return m.Fake(d.fakeDescribeDimensionKeysWithContext)

	case "GetResourceMetricsWithContext":
		return m.Fake(d.fakeGetResourceMetricsWithContext)

	default:
		return nil
	}
}

func (d *PIDouble) DescribeDimensionKeys(i0 *pi.DescribeDimensionKeysInput) (r0 *pi.DescribeDimensionKeysOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DescribeDimensionKeys", i0)
	r0, _ = returns[0].(*pi.DescribeDimensionKeysOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PIDouble) DescribeDimensionKeysRequest(i0 *pi.DescribeDimensionKeysInput) (r0 *request.Request, r1 *pi.DescribeDimensionKeysOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DescribeDimensionKeysRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*pi.DescribeDimensionKeysOutput)
	return
}

func (d *PIDouble) DescribeDimensionKeysWithContext(i0 context.Context, i1 *pi.DescribeDimensionKeysInput, i2 ...request.Option) (r0 *pi.DescribeDimensionKeysOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DescribeDimensionKeysWithContext", i0, i1, i2)
	r0, _ = returns[0].(*pi.DescribeDimensionKeysOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PIDouble) fakeDescribeDimensionKeysWithContext(ctx context.Context, in *pi.DescribeDimensionKeysInput, _ ...request.Option) (*pi.DescribeDimensionKeysOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "DescribeDimensionKeys cancelled", ctx.Err())
	default:
		return d.DescribeDimensionKeys(in)
	}
}

func (d *PIDouble) GetResourceMetrics(i0 *pi.GetResourceMetricsInput) (r0 *pi.GetResourceMetricsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetResourceMetrics", i0)
	r0, _ = returns[0].(*pi.GetResourceMetricsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PIDouble) GetResourceMetricsRequest(i0 *pi.GetResourceMetricsInput) (r0 *request.Request, r1 *pi.GetResourceMetricsOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetResourceMetricsRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*pi.GetResourceMetricsOutput)
	return
}

func (d *PIDouble) GetResourceMetricsWithContext(i0 context.Context, i1 *pi.GetResourceMetricsInput, i2 ...request.Option) (r0 *pi.GetResourceMetricsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetResourceMetricsWithContext", i0, i1, i2)
	r0, _ = returns[0].(*pi.GetResourceMetricsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *PIDouble) fakeGetResourceMetricsWithContext(ctx context.Context, in *pi.GetResourceMetricsInput, _ ...request.Option) (*pi.GetResourceMetricsOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "GetResourceMetrics cancelled", ctx.Err())
	default:
		return d.GetResourceMetrics(in)
	}
}
