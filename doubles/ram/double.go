// Code generated by go doublegen; DO NOT EDIT.
// This file was generated at 2020-02-14T22:14:31+11:00

// Package ramdouble provides a TestDouble implementation of ramiface.RAMAPI
package ramdouble

import (
	"context"

	"github.com/aws/aws-sdk-go/aws/awserr"
	"github.com/aws/aws-sdk-go/aws/request"
	"github.com/aws/aws-sdk-go/service/ram"
	"github.com/aws/aws-sdk-go/service/ram/ramiface"
	"github.com/lwoggardner/awsdouble"
	"github.com/lwoggardner/godouble/godouble"
)

// RAMDouble is TestDouble for ramiface.RAMAPI
type RAMDouble struct {
	ramiface.RAMAPI
	*awsdouble.AWSTestDouble
}

// Constructor for RAMDouble
// Default configuration will ensure
//   * API operations not explicitly stubbed will return an empty output struct pointer, and nil error.
//     To simulate long polling, "Poll" operations will return these values after a random delay of up to 100ms.
//   * WithContext methods implement a 'Fake' method that returns a cancellation error if the context is cancelled
//      before the method is called.
//   * Pages and PagesWithContext methods similarly implement a 'Fake' method that paginates over the underlying method.
//
//    This allows tests to only stub the simple api methods and be generally unconcerned whether the SUT is using the
//      Context or Pagination forms of the API.
//
func NewDouble(t godouble.T, configurators ...func(*awsdouble.AWSTestDouble)) *RAMDouble {
	result := &RAMDouble{}

	configurators = append([]func(configurator *awsdouble.AWSTestDouble){func(d *awsdouble.AWSTestDouble) {
		d.SetDefaultCall(result.defaultMethodCall)
		d.SetDefaultReturnValues(result.defaultReturnValues)
	}}, configurators...)

	result.AWSTestDouble = awsdouble.NewDouble(t, (*ramiface.RAMAPI)(nil), configurators...)
	return result
}

func (d *RAMDouble) defaultReturnValues(m godouble.Method) godouble.ReturnValues {
	return d.DefaultReturnValues(m)
}

func (d *RAMDouble) defaultMethodCall(m godouble.Method) godouble.MethodCall {
	switch m.Reflect().Name {

	case "AcceptResourceShareInvitationWithContext":
		return m.Fake(d.fakeAcceptResourceShareInvitationWithContext)

	case "AssociateResourceSharePermissionWithContext":
		return m.Fake(d.fakeAssociateResourceSharePermissionWithContext)

	case "AssociateResourceShareWithContext":
		return m.Fake(d.fakeAssociateResourceShareWithContext)

	case "CreateResourceShareWithContext":
		return m.Fake(d.fakeCreateResourceShareWithContext)

	case "DeleteResourceShareWithContext":
		return m.Fake(d.fakeDeleteResourceShareWithContext)

	case "DisassociateResourceSharePermissionWithContext":
		return m.Fake(d.fakeDisassociateResourceSharePermissionWithContext)

	case "DisassociateResourceShareWithContext":
		return m.Fake(d.fakeDisassociateResourceShareWithContext)

	case "EnableSharingWithAwsOrganizationWithContext":
		return m.Fake(d.fakeEnableSharingWithAwsOrganizationWithContext)

	case "GetPermissionWithContext":
		return m.Fake(d.fakeGetPermissionWithContext)

	case "GetResourcePoliciesPages":
		return m.Fake(d.fakeGetResourcePoliciesPages)

	case "GetResourcePoliciesPagesWithContext":
		return m.Fake(d.fakeGetResourcePoliciesPagesWithContext)

	case "GetResourcePoliciesWithContext":
		return m.Fake(d.fakeGetResourcePoliciesWithContext)

	case "GetResourceShareAssociationsPages":
		return m.Fake(d.fakeGetResourceShareAssociationsPages)

	case "GetResourceShareAssociationsPagesWithContext":
		return m.Fake(d.fakeGetResourceShareAssociationsPagesWithContext)

	case "GetResourceShareAssociationsWithContext":
		return m.Fake(d.fakeGetResourceShareAssociationsWithContext)

	case "GetResourceShareInvitationsPages":
		return m.Fake(d.fakeGetResourceShareInvitationsPages)

	case "GetResourceShareInvitationsPagesWithContext":
		return m.Fake(d.fakeGetResourceShareInvitationsPagesWithContext)

	case "GetResourceShareInvitationsWithContext":
		return m.Fake(d.fakeGetResourceShareInvitationsWithContext)

	case "GetResourceSharesPages":
		return m.Fake(d.fakeGetResourceSharesPages)

	case "GetResourceSharesPagesWithContext":
		return m.Fake(d.fakeGetResourceSharesPagesWithContext)

	case "GetResourceSharesWithContext":
		return m.Fake(d.fakeGetResourceSharesWithContext)

	case "ListPendingInvitationResourcesPages":
		return m.Fake(d.fakeListPendingInvitationResourcesPages)

	case "ListPendingInvitationResourcesPagesWithContext":
		return m.Fake(d.fakeListPendingInvitationResourcesPagesWithContext)

	case "ListPendingInvitationResourcesWithContext":
		return m.Fake(d.fakeListPendingInvitationResourcesWithContext)

	case "ListPermissionsWithContext":
		return m.Fake(d.fakeListPermissionsWithContext)

	case "ListPrincipalsPages":
		return m.Fake(d.fakeListPrincipalsPages)

	case "ListPrincipalsPagesWithContext":
		return m.Fake(d.fakeListPrincipalsPagesWithContext)

	case "ListPrincipalsWithContext":
		return m.Fake(d.fakeListPrincipalsWithContext)

	case "ListResourceSharePermissionsWithContext":
		return m.Fake(d.fakeListResourceSharePermissionsWithContext)

	case "ListResourcesPages":
		return m.Fake(d.fakeListResourcesPages)

	case "ListResourcesPagesWithContext":
		return m.Fake(d.fakeListResourcesPagesWithContext)

	case "ListResourcesWithContext":
		return m.Fake(d.fakeListResourcesWithContext)

	case "PromoteResourceShareCreatedFromPolicyWithContext":
		return m.Fake(d.fakePromoteResourceShareCreatedFromPolicyWithContext)

	case "RejectResourceShareInvitationWithContext":
		return m.Fake(d.fakeRejectResourceShareInvitationWithContext)

	case "TagResourceWithContext":
		return m.Fake(d.fakeTagResourceWithContext)

	case "UntagResourceWithContext":
		return m.Fake(d.fakeUntagResourceWithContext)

	case "UpdateResourceShareWithContext":
		return m.Fake(d.fakeUpdateResourceShareWithContext)

	default:
		return nil
	}
}

func (d *RAMDouble) AcceptResourceShareInvitation(i0 *ram.AcceptResourceShareInvitationInput) (r0 *ram.AcceptResourceShareInvitationOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("AcceptResourceShareInvitation", i0)
	r0, _ = returns[0].(*ram.AcceptResourceShareInvitationOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *RAMDouble) AcceptResourceShareInvitationRequest(i0 *ram.AcceptResourceShareInvitationInput) (r0 *request.Request, r1 *ram.AcceptResourceShareInvitationOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("AcceptResourceShareInvitationRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*ram.AcceptResourceShareInvitationOutput)
	return
}

func (d *RAMDouble) AcceptResourceShareInvitationWithContext(i0 context.Context, i1 *ram.AcceptResourceShareInvitationInput, i2 ...request.Option) (r0 *ram.AcceptResourceShareInvitationOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("AcceptResourceShareInvitationWithContext", i0, i1, i2)
	r0, _ = returns[0].(*ram.AcceptResourceShareInvitationOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *RAMDouble) fakeAcceptResourceShareInvitationWithContext(ctx context.Context, in *ram.AcceptResourceShareInvitationInput, _ ...request.Option) (*ram.AcceptResourceShareInvitationOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "AcceptResourceShareInvitation cancelled", ctx.Err())
	default:
		return d.AcceptResourceShareInvitation(in)
	}
}

func (d *RAMDouble) AssociateResourceShare(i0 *ram.AssociateResourceShareInput) (r0 *ram.AssociateResourceShareOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("AssociateResourceShare", i0)
	r0, _ = returns[0].(*ram.AssociateResourceShareOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *RAMDouble) AssociateResourceSharePermission(i0 *ram.AssociateResourceSharePermissionInput) (r0 *ram.AssociateResourceSharePermissionOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("AssociateResourceSharePermission", i0)
	r0, _ = returns[0].(*ram.AssociateResourceSharePermissionOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *RAMDouble) AssociateResourceSharePermissionRequest(i0 *ram.AssociateResourceSharePermissionInput) (r0 *request.Request, r1 *ram.AssociateResourceSharePermissionOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("AssociateResourceSharePermissionRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*ram.AssociateResourceSharePermissionOutput)
	return
}

func (d *RAMDouble) AssociateResourceSharePermissionWithContext(i0 context.Context, i1 *ram.AssociateResourceSharePermissionInput, i2 ...request.Option) (r0 *ram.AssociateResourceSharePermissionOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("AssociateResourceSharePermissionWithContext", i0, i1, i2)
	r0, _ = returns[0].(*ram.AssociateResourceSharePermissionOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *RAMDouble) fakeAssociateResourceSharePermissionWithContext(ctx context.Context, in *ram.AssociateResourceSharePermissionInput, _ ...request.Option) (*ram.AssociateResourceSharePermissionOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "AssociateResourceSharePermission cancelled", ctx.Err())
	default:
		return d.AssociateResourceSharePermission(in)
	}
}

func (d *RAMDouble) AssociateResourceShareRequest(i0 *ram.AssociateResourceShareInput) (r0 *request.Request, r1 *ram.AssociateResourceShareOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("AssociateResourceShareRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*ram.AssociateResourceShareOutput)
	return
}

func (d *RAMDouble) AssociateResourceShareWithContext(i0 context.Context, i1 *ram.AssociateResourceShareInput, i2 ...request.Option) (r0 *ram.AssociateResourceShareOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("AssociateResourceShareWithContext", i0, i1, i2)
	r0, _ = returns[0].(*ram.AssociateResourceShareOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *RAMDouble) fakeAssociateResourceShareWithContext(ctx context.Context, in *ram.AssociateResourceShareInput, _ ...request.Option) (*ram.AssociateResourceShareOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "AssociateResourceShare cancelled", ctx.Err())
	default:
		return d.AssociateResourceShare(in)
	}
}

func (d *RAMDouble) CreateResourceShare(i0 *ram.CreateResourceShareInput) (r0 *ram.CreateResourceShareOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreateResourceShare", i0)
	r0, _ = returns[0].(*ram.CreateResourceShareOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *RAMDouble) CreateResourceShareRequest(i0 *ram.CreateResourceShareInput) (r0 *request.Request, r1 *ram.CreateResourceShareOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreateResourceShareRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*ram.CreateResourceShareOutput)
	return
}

func (d *RAMDouble) CreateResourceShareWithContext(i0 context.Context, i1 *ram.CreateResourceShareInput, i2 ...request.Option) (r0 *ram.CreateResourceShareOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("CreateResourceShareWithContext", i0, i1, i2)
	r0, _ = returns[0].(*ram.CreateResourceShareOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *RAMDouble) fakeCreateResourceShareWithContext(ctx context.Context, in *ram.CreateResourceShareInput, _ ...request.Option) (*ram.CreateResourceShareOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "CreateResourceShare cancelled", ctx.Err())
	default:
		return d.CreateResourceShare(in)
	}
}

func (d *RAMDouble) DeleteResourceShare(i0 *ram.DeleteResourceShareInput) (r0 *ram.DeleteResourceShareOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteResourceShare", i0)
	r0, _ = returns[0].(*ram.DeleteResourceShareOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *RAMDouble) DeleteResourceShareRequest(i0 *ram.DeleteResourceShareInput) (r0 *request.Request, r1 *ram.DeleteResourceShareOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteResourceShareRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*ram.DeleteResourceShareOutput)
	return
}

func (d *RAMDouble) DeleteResourceShareWithContext(i0 context.Context, i1 *ram.DeleteResourceShareInput, i2 ...request.Option) (r0 *ram.DeleteResourceShareOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DeleteResourceShareWithContext", i0, i1, i2)
	r0, _ = returns[0].(*ram.DeleteResourceShareOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *RAMDouble) fakeDeleteResourceShareWithContext(ctx context.Context, in *ram.DeleteResourceShareInput, _ ...request.Option) (*ram.DeleteResourceShareOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "DeleteResourceShare cancelled", ctx.Err())
	default:
		return d.DeleteResourceShare(in)
	}
}

func (d *RAMDouble) DisassociateResourceShare(i0 *ram.DisassociateResourceShareInput) (r0 *ram.DisassociateResourceShareOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DisassociateResourceShare", i0)
	r0, _ = returns[0].(*ram.DisassociateResourceShareOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *RAMDouble) DisassociateResourceSharePermission(i0 *ram.DisassociateResourceSharePermissionInput) (r0 *ram.DisassociateResourceSharePermissionOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DisassociateResourceSharePermission", i0)
	r0, _ = returns[0].(*ram.DisassociateResourceSharePermissionOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *RAMDouble) DisassociateResourceSharePermissionRequest(i0 *ram.DisassociateResourceSharePermissionInput) (r0 *request.Request, r1 *ram.DisassociateResourceSharePermissionOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DisassociateResourceSharePermissionRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*ram.DisassociateResourceSharePermissionOutput)
	return
}

func (d *RAMDouble) DisassociateResourceSharePermissionWithContext(i0 context.Context, i1 *ram.DisassociateResourceSharePermissionInput, i2 ...request.Option) (r0 *ram.DisassociateResourceSharePermissionOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DisassociateResourceSharePermissionWithContext", i0, i1, i2)
	r0, _ = returns[0].(*ram.DisassociateResourceSharePermissionOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *RAMDouble) fakeDisassociateResourceSharePermissionWithContext(ctx context.Context, in *ram.DisassociateResourceSharePermissionInput, _ ...request.Option) (*ram.DisassociateResourceSharePermissionOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "DisassociateResourceSharePermission cancelled", ctx.Err())
	default:
		return d.DisassociateResourceSharePermission(in)
	}
}

func (d *RAMDouble) DisassociateResourceShareRequest(i0 *ram.DisassociateResourceShareInput) (r0 *request.Request, r1 *ram.DisassociateResourceShareOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DisassociateResourceShareRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*ram.DisassociateResourceShareOutput)
	return
}

func (d *RAMDouble) DisassociateResourceShareWithContext(i0 context.Context, i1 *ram.DisassociateResourceShareInput, i2 ...request.Option) (r0 *ram.DisassociateResourceShareOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("DisassociateResourceShareWithContext", i0, i1, i2)
	r0, _ = returns[0].(*ram.DisassociateResourceShareOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *RAMDouble) fakeDisassociateResourceShareWithContext(ctx context.Context, in *ram.DisassociateResourceShareInput, _ ...request.Option) (*ram.DisassociateResourceShareOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "DisassociateResourceShare cancelled", ctx.Err())
	default:
		return d.DisassociateResourceShare(in)
	}
}

func (d *RAMDouble) EnableSharingWithAwsOrganization(i0 *ram.EnableSharingWithAwsOrganizationInput) (r0 *ram.EnableSharingWithAwsOrganizationOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("EnableSharingWithAwsOrganization", i0)
	r0, _ = returns[0].(*ram.EnableSharingWithAwsOrganizationOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *RAMDouble) EnableSharingWithAwsOrganizationRequest(i0 *ram.EnableSharingWithAwsOrganizationInput) (r0 *request.Request, r1 *ram.EnableSharingWithAwsOrganizationOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("EnableSharingWithAwsOrganizationRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*ram.EnableSharingWithAwsOrganizationOutput)
	return
}

func (d *RAMDouble) EnableSharingWithAwsOrganizationWithContext(i0 context.Context, i1 *ram.EnableSharingWithAwsOrganizationInput, i2 ...request.Option) (r0 *ram.EnableSharingWithAwsOrganizationOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("EnableSharingWithAwsOrganizationWithContext", i0, i1, i2)
	r0, _ = returns[0].(*ram.EnableSharingWithAwsOrganizationOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *RAMDouble) fakeEnableSharingWithAwsOrganizationWithContext(ctx context.Context, in *ram.EnableSharingWithAwsOrganizationInput, _ ...request.Option) (*ram.EnableSharingWithAwsOrganizationOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "EnableSharingWithAwsOrganization cancelled", ctx.Err())
	default:
		return d.EnableSharingWithAwsOrganization(in)
	}
}

func (d *RAMDouble) GetPermission(i0 *ram.GetPermissionInput) (r0 *ram.GetPermissionOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetPermission", i0)
	r0, _ = returns[0].(*ram.GetPermissionOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *RAMDouble) GetPermissionRequest(i0 *ram.GetPermissionInput) (r0 *request.Request, r1 *ram.GetPermissionOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetPermissionRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*ram.GetPermissionOutput)
	return
}

func (d *RAMDouble) GetPermissionWithContext(i0 context.Context, i1 *ram.GetPermissionInput, i2 ...request.Option) (r0 *ram.GetPermissionOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetPermissionWithContext", i0, i1, i2)
	r0, _ = returns[0].(*ram.GetPermissionOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *RAMDouble) fakeGetPermissionWithContext(ctx context.Context, in *ram.GetPermissionInput, _ ...request.Option) (*ram.GetPermissionOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "GetPermission cancelled", ctx.Err())
	default:
		return d.GetPermission(in)
	}
}

func (d *RAMDouble) GetResourcePolicies(i0 *ram.GetResourcePoliciesInput) (r0 *ram.GetResourcePoliciesOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetResourcePolicies", i0)
	r0, _ = returns[0].(*ram.GetResourcePoliciesOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *RAMDouble) GetResourcePoliciesPages(i0 *ram.GetResourcePoliciesInput, i1 func(*ram.GetResourcePoliciesOutput, bool) bool) (r0 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetResourcePoliciesPages", i0, i1)
	r0, _ = returns[0].(error)
	return
}

func (d *RAMDouble) fakeGetResourcePoliciesPages(in *ram.GetResourcePoliciesInput, pager func(*ram.GetResourcePoliciesOutput, bool) (shouldContinue bool)) error {
	return d.Paginate("GetResourcePolicies", paginators, in, pager)
}

func (d *RAMDouble) GetResourcePoliciesPagesWithContext(i0 context.Context, i1 *ram.GetResourcePoliciesInput, i2 func(*ram.GetResourcePoliciesOutput, bool) bool, i3 ...request.Option) (r0 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetResourcePoliciesPagesWithContext", i0, i1, i2, i3)
	r0, _ = returns[0].(error)
	return
}

func (d *RAMDouble) fakeGetResourcePoliciesPagesWithContext(ctx context.Context, in *ram.GetResourcePoliciesInput, pager func(*ram.GetResourcePoliciesOutput, bool) (shouldContinue bool), options ...request.Option) error {
	return d.PaginateWithContext("GetResourcePolicies", paginators, ctx, in, pager, options...)
}

func (d *RAMDouble) GetResourcePoliciesRequest(i0 *ram.GetResourcePoliciesInput) (r0 *request.Request, r1 *ram.GetResourcePoliciesOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetResourcePoliciesRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*ram.GetResourcePoliciesOutput)
	return
}

func (d *RAMDouble) GetResourcePoliciesWithContext(i0 context.Context, i1 *ram.GetResourcePoliciesInput, i2 ...request.Option) (r0 *ram.GetResourcePoliciesOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetResourcePoliciesWithContext", i0, i1, i2)
	r0, _ = returns[0].(*ram.GetResourcePoliciesOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *RAMDouble) fakeGetResourcePoliciesWithContext(ctx context.Context, in *ram.GetResourcePoliciesInput, _ ...request.Option) (*ram.GetResourcePoliciesOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "GetResourcePolicies cancelled", ctx.Err())
	default:
		return d.GetResourcePolicies(in)
	}
}

func (d *RAMDouble) GetResourceShareAssociations(i0 *ram.GetResourceShareAssociationsInput) (r0 *ram.GetResourceShareAssociationsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetResourceShareAssociations", i0)
	r0, _ = returns[0].(*ram.GetResourceShareAssociationsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *RAMDouble) GetResourceShareAssociationsPages(i0 *ram.GetResourceShareAssociationsInput, i1 func(*ram.GetResourceShareAssociationsOutput, bool) bool) (r0 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetResourceShareAssociationsPages", i0, i1)
	r0, _ = returns[0].(error)
	return
}

func (d *RAMDouble) fakeGetResourceShareAssociationsPages(in *ram.GetResourceShareAssociationsInput, pager func(*ram.GetResourceShareAssociationsOutput, bool) (shouldContinue bool)) error {
	return d.Paginate("GetResourceShareAssociations", paginators, in, pager)
}

func (d *RAMDouble) GetResourceShareAssociationsPagesWithContext(i0 context.Context, i1 *ram.GetResourceShareAssociationsInput, i2 func(*ram.GetResourceShareAssociationsOutput, bool) bool, i3 ...request.Option) (r0 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetResourceShareAssociationsPagesWithContext", i0, i1, i2, i3)
	r0, _ = returns[0].(error)
	return
}

func (d *RAMDouble) fakeGetResourceShareAssociationsPagesWithContext(ctx context.Context, in *ram.GetResourceShareAssociationsInput, pager func(*ram.GetResourceShareAssociationsOutput, bool) (shouldContinue bool), options ...request.Option) error {
	return d.PaginateWithContext("GetResourceShareAssociations", paginators, ctx, in, pager, options...)
}

func (d *RAMDouble) GetResourceShareAssociationsRequest(i0 *ram.GetResourceShareAssociationsInput) (r0 *request.Request, r1 *ram.GetResourceShareAssociationsOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetResourceShareAssociationsRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*ram.GetResourceShareAssociationsOutput)
	return
}

func (d *RAMDouble) GetResourceShareAssociationsWithContext(i0 context.Context, i1 *ram.GetResourceShareAssociationsInput, i2 ...request.Option) (r0 *ram.GetResourceShareAssociationsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetResourceShareAssociationsWithContext", i0, i1, i2)
	r0, _ = returns[0].(*ram.GetResourceShareAssociationsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *RAMDouble) fakeGetResourceShareAssociationsWithContext(ctx context.Context, in *ram.GetResourceShareAssociationsInput, _ ...request.Option) (*ram.GetResourceShareAssociationsOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "GetResourceShareAssociations cancelled", ctx.Err())
	default:
		return d.GetResourceShareAssociations(in)
	}
}

func (d *RAMDouble) GetResourceShareInvitations(i0 *ram.GetResourceShareInvitationsInput) (r0 *ram.GetResourceShareInvitationsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetResourceShareInvitations", i0)
	r0, _ = returns[0].(*ram.GetResourceShareInvitationsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *RAMDouble) GetResourceShareInvitationsPages(i0 *ram.GetResourceShareInvitationsInput, i1 func(*ram.GetResourceShareInvitationsOutput, bool) bool) (r0 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetResourceShareInvitationsPages", i0, i1)
	r0, _ = returns[0].(error)
	return
}

func (d *RAMDouble) fakeGetResourceShareInvitationsPages(in *ram.GetResourceShareInvitationsInput, pager func(*ram.GetResourceShareInvitationsOutput, bool) (shouldContinue bool)) error {
	return d.Paginate("GetResourceShareInvitations", paginators, in, pager)
}

func (d *RAMDouble) GetResourceShareInvitationsPagesWithContext(i0 context.Context, i1 *ram.GetResourceShareInvitationsInput, i2 func(*ram.GetResourceShareInvitationsOutput, bool) bool, i3 ...request.Option) (r0 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetResourceShareInvitationsPagesWithContext", i0, i1, i2, i3)
	r0, _ = returns[0].(error)
	return
}

func (d *RAMDouble) fakeGetResourceShareInvitationsPagesWithContext(ctx context.Context, in *ram.GetResourceShareInvitationsInput, pager func(*ram.GetResourceShareInvitationsOutput, bool) (shouldContinue bool), options ...request.Option) error {
	return d.PaginateWithContext("GetResourceShareInvitations", paginators, ctx, in, pager, options...)
}

func (d *RAMDouble) GetResourceShareInvitationsRequest(i0 *ram.GetResourceShareInvitationsInput) (r0 *request.Request, r1 *ram.GetResourceShareInvitationsOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetResourceShareInvitationsRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*ram.GetResourceShareInvitationsOutput)
	return
}

func (d *RAMDouble) GetResourceShareInvitationsWithContext(i0 context.Context, i1 *ram.GetResourceShareInvitationsInput, i2 ...request.Option) (r0 *ram.GetResourceShareInvitationsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetResourceShareInvitationsWithContext", i0, i1, i2)
	r0, _ = returns[0].(*ram.GetResourceShareInvitationsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *RAMDouble) fakeGetResourceShareInvitationsWithContext(ctx context.Context, in *ram.GetResourceShareInvitationsInput, _ ...request.Option) (*ram.GetResourceShareInvitationsOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "GetResourceShareInvitations cancelled", ctx.Err())
	default:
		return d.GetResourceShareInvitations(in)
	}
}

func (d *RAMDouble) GetResourceShares(i0 *ram.GetResourceSharesInput) (r0 *ram.GetResourceSharesOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetResourceShares", i0)
	r0, _ = returns[0].(*ram.GetResourceSharesOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *RAMDouble) GetResourceSharesPages(i0 *ram.GetResourceSharesInput, i1 func(*ram.GetResourceSharesOutput, bool) bool) (r0 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetResourceSharesPages", i0, i1)
	r0, _ = returns[0].(error)
	return
}

func (d *RAMDouble) fakeGetResourceSharesPages(in *ram.GetResourceSharesInput, pager func(*ram.GetResourceSharesOutput, bool) (shouldContinue bool)) error {
	return d.Paginate("GetResourceShares", paginators, in, pager)
}

func (d *RAMDouble) GetResourceSharesPagesWithContext(i0 context.Context, i1 *ram.GetResourceSharesInput, i2 func(*ram.GetResourceSharesOutput, bool) bool, i3 ...request.Option) (r0 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetResourceSharesPagesWithContext", i0, i1, i2, i3)
	r0, _ = returns[0].(error)
	return
}

func (d *RAMDouble) fakeGetResourceSharesPagesWithContext(ctx context.Context, in *ram.GetResourceSharesInput, pager func(*ram.GetResourceSharesOutput, bool) (shouldContinue bool), options ...request.Option) error {
	return d.PaginateWithContext("GetResourceShares", paginators, ctx, in, pager, options...)
}

func (d *RAMDouble) GetResourceSharesRequest(i0 *ram.GetResourceSharesInput) (r0 *request.Request, r1 *ram.GetResourceSharesOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetResourceSharesRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*ram.GetResourceSharesOutput)
	return
}

func (d *RAMDouble) GetResourceSharesWithContext(i0 context.Context, i1 *ram.GetResourceSharesInput, i2 ...request.Option) (r0 *ram.GetResourceSharesOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("GetResourceSharesWithContext", i0, i1, i2)
	r0, _ = returns[0].(*ram.GetResourceSharesOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *RAMDouble) fakeGetResourceSharesWithContext(ctx context.Context, in *ram.GetResourceSharesInput, _ ...request.Option) (*ram.GetResourceSharesOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "GetResourceShares cancelled", ctx.Err())
	default:
		return d.GetResourceShares(in)
	}
}

func (d *RAMDouble) ListPendingInvitationResources(i0 *ram.ListPendingInvitationResourcesInput) (r0 *ram.ListPendingInvitationResourcesOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListPendingInvitationResources", i0)
	r0, _ = returns[0].(*ram.ListPendingInvitationResourcesOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *RAMDouble) ListPendingInvitationResourcesPages(i0 *ram.ListPendingInvitationResourcesInput, i1 func(*ram.ListPendingInvitationResourcesOutput, bool) bool) (r0 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListPendingInvitationResourcesPages", i0, i1)
	r0, _ = returns[0].(error)
	return
}

func (d *RAMDouble) fakeListPendingInvitationResourcesPages(in *ram.ListPendingInvitationResourcesInput, pager func(*ram.ListPendingInvitationResourcesOutput, bool) (shouldContinue bool)) error {
	return d.Paginate("ListPendingInvitationResources", paginators, in, pager)
}

func (d *RAMDouble) ListPendingInvitationResourcesPagesWithContext(i0 context.Context, i1 *ram.ListPendingInvitationResourcesInput, i2 func(*ram.ListPendingInvitationResourcesOutput, bool) bool, i3 ...request.Option) (r0 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListPendingInvitationResourcesPagesWithContext", i0, i1, i2, i3)
	r0, _ = returns[0].(error)
	return
}

func (d *RAMDouble) fakeListPendingInvitationResourcesPagesWithContext(ctx context.Context, in *ram.ListPendingInvitationResourcesInput, pager func(*ram.ListPendingInvitationResourcesOutput, bool) (shouldContinue bool), options ...request.Option) error {
	return d.PaginateWithContext("ListPendingInvitationResources", paginators, ctx, in, pager, options...)
}

func (d *RAMDouble) ListPendingInvitationResourcesRequest(i0 *ram.ListPendingInvitationResourcesInput) (r0 *request.Request, r1 *ram.ListPendingInvitationResourcesOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListPendingInvitationResourcesRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*ram.ListPendingInvitationResourcesOutput)
	return
}

func (d *RAMDouble) ListPendingInvitationResourcesWithContext(i0 context.Context, i1 *ram.ListPendingInvitationResourcesInput, i2 ...request.Option) (r0 *ram.ListPendingInvitationResourcesOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListPendingInvitationResourcesWithContext", i0, i1, i2)
	r0, _ = returns[0].(*ram.ListPendingInvitationResourcesOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *RAMDouble) fakeListPendingInvitationResourcesWithContext(ctx context.Context, in *ram.ListPendingInvitationResourcesInput, _ ...request.Option) (*ram.ListPendingInvitationResourcesOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "ListPendingInvitationResources cancelled", ctx.Err())
	default:
		return d.ListPendingInvitationResources(in)
	}
}

func (d *RAMDouble) ListPermissions(i0 *ram.ListPermissionsInput) (r0 *ram.ListPermissionsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListPermissions", i0)
	r0, _ = returns[0].(*ram.ListPermissionsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *RAMDouble) ListPermissionsRequest(i0 *ram.ListPermissionsInput) (r0 *request.Request, r1 *ram.ListPermissionsOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListPermissionsRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*ram.ListPermissionsOutput)
	return
}

func (d *RAMDouble) ListPermissionsWithContext(i0 context.Context, i1 *ram.ListPermissionsInput, i2 ...request.Option) (r0 *ram.ListPermissionsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListPermissionsWithContext", i0, i1, i2)
	r0, _ = returns[0].(*ram.ListPermissionsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *RAMDouble) fakeListPermissionsWithContext(ctx context.Context, in *ram.ListPermissionsInput, _ ...request.Option) (*ram.ListPermissionsOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "ListPermissions cancelled", ctx.Err())
	default:
		return d.ListPermissions(in)
	}
}

func (d *RAMDouble) ListPrincipals(i0 *ram.ListPrincipalsInput) (r0 *ram.ListPrincipalsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListPrincipals", i0)
	r0, _ = returns[0].(*ram.ListPrincipalsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *RAMDouble) ListPrincipalsPages(i0 *ram.ListPrincipalsInput, i1 func(*ram.ListPrincipalsOutput, bool) bool) (r0 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListPrincipalsPages", i0, i1)
	r0, _ = returns[0].(error)
	return
}

func (d *RAMDouble) fakeListPrincipalsPages(in *ram.ListPrincipalsInput, pager func(*ram.ListPrincipalsOutput, bool) (shouldContinue bool)) error {
	return d.Paginate("ListPrincipals", paginators, in, pager)
}

func (d *RAMDouble) ListPrincipalsPagesWithContext(i0 context.Context, i1 *ram.ListPrincipalsInput, i2 func(*ram.ListPrincipalsOutput, bool) bool, i3 ...request.Option) (r0 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListPrincipalsPagesWithContext", i0, i1, i2, i3)
	r0, _ = returns[0].(error)
	return
}

func (d *RAMDouble) fakeListPrincipalsPagesWithContext(ctx context.Context, in *ram.ListPrincipalsInput, pager func(*ram.ListPrincipalsOutput, bool) (shouldContinue bool), options ...request.Option) error {
	return d.PaginateWithContext("ListPrincipals", paginators, ctx, in, pager, options...)
}

func (d *RAMDouble) ListPrincipalsRequest(i0 *ram.ListPrincipalsInput) (r0 *request.Request, r1 *ram.ListPrincipalsOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListPrincipalsRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*ram.ListPrincipalsOutput)
	return
}

func (d *RAMDouble) ListPrincipalsWithContext(i0 context.Context, i1 *ram.ListPrincipalsInput, i2 ...request.Option) (r0 *ram.ListPrincipalsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListPrincipalsWithContext", i0, i1, i2)
	r0, _ = returns[0].(*ram.ListPrincipalsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *RAMDouble) fakeListPrincipalsWithContext(ctx context.Context, in *ram.ListPrincipalsInput, _ ...request.Option) (*ram.ListPrincipalsOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "ListPrincipals cancelled", ctx.Err())
	default:
		return d.ListPrincipals(in)
	}
}

func (d *RAMDouble) ListResourceSharePermissions(i0 *ram.ListResourceSharePermissionsInput) (r0 *ram.ListResourceSharePermissionsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListResourceSharePermissions", i0)
	r0, _ = returns[0].(*ram.ListResourceSharePermissionsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *RAMDouble) ListResourceSharePermissionsRequest(i0 *ram.ListResourceSharePermissionsInput) (r0 *request.Request, r1 *ram.ListResourceSharePermissionsOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListResourceSharePermissionsRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*ram.ListResourceSharePermissionsOutput)
	return
}

func (d *RAMDouble) ListResourceSharePermissionsWithContext(i0 context.Context, i1 *ram.ListResourceSharePermissionsInput, i2 ...request.Option) (r0 *ram.ListResourceSharePermissionsOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListResourceSharePermissionsWithContext", i0, i1, i2)
	r0, _ = returns[0].(*ram.ListResourceSharePermissionsOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *RAMDouble) fakeListResourceSharePermissionsWithContext(ctx context.Context, in *ram.ListResourceSharePermissionsInput, _ ...request.Option) (*ram.ListResourceSharePermissionsOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "ListResourceSharePermissions cancelled", ctx.Err())
	default:
		return d.ListResourceSharePermissions(in)
	}
}

func (d *RAMDouble) ListResources(i0 *ram.ListResourcesInput) (r0 *ram.ListResourcesOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListResources", i0)
	r0, _ = returns[0].(*ram.ListResourcesOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *RAMDouble) ListResourcesPages(i0 *ram.ListResourcesInput, i1 func(*ram.ListResourcesOutput, bool) bool) (r0 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListResourcesPages", i0, i1)
	r0, _ = returns[0].(error)
	return
}

func (d *RAMDouble) fakeListResourcesPages(in *ram.ListResourcesInput, pager func(*ram.ListResourcesOutput, bool) (shouldContinue bool)) error {
	return d.Paginate("ListResources", paginators, in, pager)
}

func (d *RAMDouble) ListResourcesPagesWithContext(i0 context.Context, i1 *ram.ListResourcesInput, i2 func(*ram.ListResourcesOutput, bool) bool, i3 ...request.Option) (r0 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListResourcesPagesWithContext", i0, i1, i2, i3)
	r0, _ = returns[0].(error)
	return
}

func (d *RAMDouble) fakeListResourcesPagesWithContext(ctx context.Context, in *ram.ListResourcesInput, pager func(*ram.ListResourcesOutput, bool) (shouldContinue bool), options ...request.Option) error {
	return d.PaginateWithContext("ListResources", paginators, ctx, in, pager, options...)
}

func (d *RAMDouble) ListResourcesRequest(i0 *ram.ListResourcesInput) (r0 *request.Request, r1 *ram.ListResourcesOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListResourcesRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*ram.ListResourcesOutput)
	return
}

func (d *RAMDouble) ListResourcesWithContext(i0 context.Context, i1 *ram.ListResourcesInput, i2 ...request.Option) (r0 *ram.ListResourcesOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("ListResourcesWithContext", i0, i1, i2)
	r0, _ = returns[0].(*ram.ListResourcesOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *RAMDouble) fakeListResourcesWithContext(ctx context.Context, in *ram.ListResourcesInput, _ ...request.Option) (*ram.ListResourcesOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "ListResources cancelled", ctx.Err())
	default:
		return d.ListResources(in)
	}
}

func (d *RAMDouble) PromoteResourceShareCreatedFromPolicy(i0 *ram.PromoteResourceShareCreatedFromPolicyInput) (r0 *ram.PromoteResourceShareCreatedFromPolicyOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("PromoteResourceShareCreatedFromPolicy", i0)
	r0, _ = returns[0].(*ram.PromoteResourceShareCreatedFromPolicyOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *RAMDouble) PromoteResourceShareCreatedFromPolicyRequest(i0 *ram.PromoteResourceShareCreatedFromPolicyInput) (r0 *request.Request, r1 *ram.PromoteResourceShareCreatedFromPolicyOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("PromoteResourceShareCreatedFromPolicyRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*ram.PromoteResourceShareCreatedFromPolicyOutput)
	return
}

func (d *RAMDouble) PromoteResourceShareCreatedFromPolicyWithContext(i0 context.Context, i1 *ram.PromoteResourceShareCreatedFromPolicyInput, i2 ...request.Option) (r0 *ram.PromoteResourceShareCreatedFromPolicyOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("PromoteResourceShareCreatedFromPolicyWithContext", i0, i1, i2)
	r0, _ = returns[0].(*ram.PromoteResourceShareCreatedFromPolicyOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *RAMDouble) fakePromoteResourceShareCreatedFromPolicyWithContext(ctx context.Context, in *ram.PromoteResourceShareCreatedFromPolicyInput, _ ...request.Option) (*ram.PromoteResourceShareCreatedFromPolicyOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "PromoteResourceShareCreatedFromPolicy cancelled", ctx.Err())
	default:
		return d.PromoteResourceShareCreatedFromPolicy(in)
	}
}

func (d *RAMDouble) RejectResourceShareInvitation(i0 *ram.RejectResourceShareInvitationInput) (r0 *ram.RejectResourceShareInvitationOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("RejectResourceShareInvitation", i0)
	r0, _ = returns[0].(*ram.RejectResourceShareInvitationOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *RAMDouble) RejectResourceShareInvitationRequest(i0 *ram.RejectResourceShareInvitationInput) (r0 *request.Request, r1 *ram.RejectResourceShareInvitationOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("RejectResourceShareInvitationRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*ram.RejectResourceShareInvitationOutput)
	return
}

func (d *RAMDouble) RejectResourceShareInvitationWithContext(i0 context.Context, i1 *ram.RejectResourceShareInvitationInput, i2 ...request.Option) (r0 *ram.RejectResourceShareInvitationOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("RejectResourceShareInvitationWithContext", i0, i1, i2)
	r0, _ = returns[0].(*ram.RejectResourceShareInvitationOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *RAMDouble) fakeRejectResourceShareInvitationWithContext(ctx context.Context, in *ram.RejectResourceShareInvitationInput, _ ...request.Option) (*ram.RejectResourceShareInvitationOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "RejectResourceShareInvitation cancelled", ctx.Err())
	default:
		return d.RejectResourceShareInvitation(in)
	}
}

func (d *RAMDouble) TagResource(i0 *ram.TagResourceInput) (r0 *ram.TagResourceOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("TagResource", i0)
	r0, _ = returns[0].(*ram.TagResourceOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *RAMDouble) TagResourceRequest(i0 *ram.TagResourceInput) (r0 *request.Request, r1 *ram.TagResourceOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("TagResourceRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*ram.TagResourceOutput)
	return
}

func (d *RAMDouble) TagResourceWithContext(i0 context.Context, i1 *ram.TagResourceInput, i2 ...request.Option) (r0 *ram.TagResourceOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("TagResourceWithContext", i0, i1, i2)
	r0, _ = returns[0].(*ram.TagResourceOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *RAMDouble) fakeTagResourceWithContext(ctx context.Context, in *ram.TagResourceInput, _ ...request.Option) (*ram.TagResourceOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "TagResource cancelled", ctx.Err())
	default:
		return d.TagResource(in)
	}
}

func (d *RAMDouble) UntagResource(i0 *ram.UntagResourceInput) (r0 *ram.UntagResourceOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UntagResource", i0)
	r0, _ = returns[0].(*ram.UntagResourceOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *RAMDouble) UntagResourceRequest(i0 *ram.UntagResourceInput) (r0 *request.Request, r1 *ram.UntagResourceOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UntagResourceRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*ram.UntagResourceOutput)
	return
}

func (d *RAMDouble) UntagResourceWithContext(i0 context.Context, i1 *ram.UntagResourceInput, i2 ...request.Option) (r0 *ram.UntagResourceOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UntagResourceWithContext", i0, i1, i2)
	r0, _ = returns[0].(*ram.UntagResourceOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *RAMDouble) fakeUntagResourceWithContext(ctx context.Context, in *ram.UntagResourceInput, _ ...request.Option) (*ram.UntagResourceOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "UntagResource cancelled", ctx.Err())
	default:
		return d.UntagResource(in)
	}
}

func (d *RAMDouble) UpdateResourceShare(i0 *ram.UpdateResourceShareInput) (r0 *ram.UpdateResourceShareOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UpdateResourceShare", i0)
	r0, _ = returns[0].(*ram.UpdateResourceShareOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *RAMDouble) UpdateResourceShareRequest(i0 *ram.UpdateResourceShareInput) (r0 *request.Request, r1 *ram.UpdateResourceShareOutput) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UpdateResourceShareRequest", i0)
	r0, _ = returns[0].(*request.Request)
	r1, _ = returns[1].(*ram.UpdateResourceShareOutput)
	return
}

func (d *RAMDouble) UpdateResourceShareWithContext(i0 context.Context, i1 *ram.UpdateResourceShareInput, i2 ...request.Option) (r0 *ram.UpdateResourceShareOutput, r1 error) {
	d.TestDouble.T().Helper()
	returns := d.TestDouble.Invoke("UpdateResourceShareWithContext", i0, i1, i2)
	r0, _ = returns[0].(*ram.UpdateResourceShareOutput)
	r1, _ = returns[1].(error)
	return
}

func (d *RAMDouble) fakeUpdateResourceShareWithContext(ctx context.Context, in *ram.UpdateResourceShareInput, _ ...request.Option) (*ram.UpdateResourceShareOutput, error) {

	select {
	case <-ctx.Done():
		return nil, awserr.New(request.CanceledErrorCode, "UpdateResourceShare cancelled", ctx.Err())
	default:
		return d.UpdateResourceShare(in)
	}
}
